{"version":3,"sources":["hooks/ui.js","ui/Select.jsx","utils/fetch.js","components/feature/VanillaFeatures.js","components/surface/SurfaceBuilderDefaults.js","components/noise/NoiseDefaults.js","components/dimension/DimensionDefaults.js","components/carver/CarverDefaults.js","context/Paths.js","context/DataContext.jsx","utils/data.js","hooks/context.js","ui/Button.jsx","components/NamespacedKey.jsx","components/biome/BiomeDefaults.js","utils/color.js","utils/math.js","ui/Input.jsx","components/state/Tags.js","components/state/BlockPredicate.jsx","hooks/form.js","components/state/BlockState.jsx","components/biome/BiomeEffects.jsx","components/biome/BiomeSpawners.jsx","components/biome/BiomeStarts.jsx","components/biome/Features.jsx","ui/Modal.jsx","ui/JsonViewer.jsx","hooks/select.js","components/carver/ConfiguredCarver.jsx","components/biome/Biome.jsx","ui/Toggle.jsx","ui/DarkModeToggle.jsx","ui/Menu.jsx","components/dimension/DimensionType.jsx","ui/NumberList.jsx","viewers/biome_multi_noise/PerlinSamplers.js","utils/hash.js","viewers/biome_multi_noise/MultiNoiseDimension.js","components/dimension/MultiNoiseBiomeSource.jsx","components/dimension/BiomeSource.jsx","components/noise/Structures.jsx","components/dimension/FlatChunkSettings.jsx","components/noise/NoiseSettings.jsx","components/dimension/DimensionGenerator.jsx","components/dimension/Dimension.jsx","components/feature/config/FeatureConfigDefaults.js","components/feature/DecoratedFeatureDefaults.js","components/state/BlockStateProvider.jsx","components/feature/decorator/DecoratorDefaults.js","components/utils/UniformInt.jsx","components/feature/decorator/Decorator.jsx","components/feature/config/DiskFeature.jsx","components/feature/config/ProbabilityFeature.jsx","components/feature/config/SingleStateFeature.jsx","components/feature/config/TreeFeature.jsx","components/feature/ConfiguredFeature.jsx","components/feature/config/BlockPileFeature.jsx","components/feature/config/DeltaFeature.jsx","components/feature/config/HugeFungusFeature.jsx","components/feature/config/NetherrackReplaceBlobsFeature.jsx","components/feature/config/OreFeature.jsx","components/feature/config/SimpleBlockFeature.jsx","components/feature/config/SpringFeature.jsx","components/feature/config/RandomPatchFeature.jsx","utils/zip.js","components/surface/SurfaceBuilder.jsx","components/Datapack.jsx","components/DatapackForm.jsx","App.js","serviceWorker.js","index.js"],"names":["useToggle","initial","useState","status","setState","toggle","e","target","checked","preventDefault","current","React","memo","props","styles","control","backgroundColor","borderColor","boxShadow","transition","singleValue","color","menuList","input","menu","option","isFocused","isSelected","cursor","multiValue","multiValueLabel","multiValueRemove","jsonFetch","url","options","a","headers","Accept","fetch","response","json","responseData","ok","VANILLA_FEATURES","VANILLA_SURFACE_BUILDERS","value","label","map","SURFACE_TYPES_OPTIONS","SURFACE_BUILDER","config","top_material","Properties","snowy","Name","under_material","underwater_material","type","VANILLA_NOISES","STRUCTURES","tag","OVERWORLD_NOISE","bedrock_roof_position","bedrock_floor_position","sea_level","disable_mob_generation","structures","stronghold","distance","spread","count","spacing","separation","salt","noise","height","sampling","xz_scale","y_scale","xz_factor","y_factor","top_slide","size","offset","bottom_slide","size_horizontal","size_vertical","density_factor","density_offset","simplex_surface_noise","random_density_offset","island_noise_override","amplified","default_block","default_fluid","level","DIMENSION","generator","seed","biome_source","biome","settings","CHUNK_GENERATOR_TYPES","VANILLA_DIMENSION_TYPES","NOISES_NAMES","MULTI_NOISE_BIOME_SOURCE","temperature_noise","firstOctave","amplitudes","humidity_noise","altitude_noise","weirdness_noise","biomes","DIMENSION_TYPE_EFFECTS","DIMENSION_TYPE_INFINIBURN","OVERWORLD_DIMENSION_TYPE","has_raids","logical_height","infiniburn","effects","ambient_light","piglin_safe","bed_works","respawn_anchor_works","ultrawarm","natural","coordinate_scale","has_skylight","has_ceiling","OVERWORLD_CAVES_DIMENSION_TYPE","THE_NETHER_DIMENSION_TYPE","fixed_time","THE_END_DIMENSION_TYPE","VANILLA_CARVERS","probability","PATHS","dimensions","dimension_types","carvers","features","surfaces","noises","processors","getAbsolutePath","namespace","identifier","replace","DataContext","createContext","vanilla","blocks","entities","sounds","getVanillaResource","key","custom","updateBiomes","updateCarvers","carver","updateDimensions","dimension","updateDimensionTypes","dimension_type","updateFeatures","feature","updateNoises","updateProcessors","processor","updateSurfacesBuilders","surface_builder","DataContextProvider","children","setBiomes","setBlocks","setEntities","setSounds","useData","customBiomes","vanillaZip","setVanillaZip","useEffect","then","entity","name","displayName","values","sound","substr","useCallback","zip","blob","JSZip","loadAsync","Promise","reject","Error","message","relative","file","JSON","async","parse","resolve","Provider","filter","o","includes","objectsEqual","b","Object","keys","length","every","p","capitalize","str","toUpperCase","displayNamespacedKey","defaultNamespace","startsWith","split","findDecorators","decorators","f","find","obj","unshift","buildDecorated","decorated","forEach","decorator","i","dataUpper","group","data","hasOwnProperty","sky_color","refitKeys","build","destKey","source","some","n","shrunk","setData","updateData","object","stored","existing","findIndex","index","push","useKeyedListOptions","category","includeCustom","empty","context","useContext","keyed","struct","useIndexableState","state","next","Button","loading","cat","buttonProps","className","tabIndex","NamespacedKey","example","expectBreakage","mayReplaceVanilla","defaultReplace","onChange","onSelect","onSelectLoad","hidden","useRef","setKey","handleKeyChange","toLowerCase","handleReplaceTargetChange","selected","catch","console","error","handleKeyDown","form","dispatchEvent","Event","cancelable","handleToggle","inputValue","useMemo","hiddenInputValue","style","width","Math","max","apply","isFinite","dummyOnChange","log","htmlFor","inputId","id","required","pattern","placeholder","autoCapitalize","spellCheck","autoComplete","onKeyPress","ref","opacity","position","onClick","FEATURES","STARTS","SPAWNERS_DEFAULTS","ambient","weight","minCount","maxCount","creature","misc","monster","water_ambient","water_creature","BIOME_DEFAULTS","mood_sound","tick_delay","block_search_extent","fog_color","water_color","water_fog_color","air","starts","spawners","precipitation","scale","downfall","depth","temperature","player_spawn_friendly","spawn_costs","PARTICLES","particle","PARTICLE_DEFAULTS","hexColorToInteger","parseInt","integerColorToHex","toString","padStart","maintainPrecision","parseFloat","toFixed","perlinFade","t","lerp","delta","start","end","lerp2","deltaX","deltaY","n00","n10","n01","n11","grad","hash","x","y","z","h","u","v","ConfInput","attr","defaultChecked","defaultValue","min","step","uId","random","isNaN","data-name","NumberInput","upChange","title","val","setValue","prevVal","setPrevValue","click","setClick","handleChange","endsWith","stepUpDown","addition","handleMouseDown","classList","contains","window","setInterval","handleClick","handleMouseUp","clearInterval","numeric","decimals","countDecimals","ceil","smooth","getNumberSize","onMouseDown","onMouseOut","onMouseUp","ColorInput","TAGS_OPTIONS","BlockPredicate","predicate","setPredicate","handleTypeChange","predicate_type","handleBlockChange","block","handleBlockStateChange","block_state","handleTagChange","content","BlockSelect","BlockState","RandomBlockMatch","flexGrow","crudReducer","action","ADD","payload","UPDATE","arrayMove","element","REMOVE","REPLACE","useCrud","useReducer","useCrudPreset","dispatch","add","CRUD","update","previous","oldIndex","newIndex","remove","useBlocksOptions","mapped","useJsonEffect","stringify","states","properties","actual","getStateValue","handlePropertiesChange","BlockStateProperties","BlocksList","list","handleAdd","handleRemove","handleStateChange","filteredOptions","d","BlocksNamesList","handlePropertyChange","handleCheckboxChange","dataset","handleNumberChange","selects","possible","num_values","BiomeEffects","blockColor","setBlockColor","setParticle","handleColorChange","handleBlockColorChange","handleAmbientSoundChange","ambient_sound","handleMoodSoundChange","handleParticleChange","handleBlockColorToggle","foliage_color","grass_color","handleParticleToggle","blockColorChecked","particleChecked","ParticleEffect","flexShrink","isClearable","MoodSound","handleSoundChange","marginTop","handleScaleChange","handleProbabilityChange","op","DustColor","r","g","undefined","BiomeSpawners","groupSpawners","SpawnGroup","visibility","text","setPrevious","s","insert","spawner","SpawnDefinition","onDelete","handleValueChange","handleCountChange","handleDelete","selectedOption","BiomeStarts","selectedOptions","isMulti","GenFeatures","handleLevelChange","priority","GenFeaturesLevel","Modal","open","onClose","modal","useModal","el","document","createElement","body","appendChild","removeChild","createPortal","JsonViewer","toggleModal","xmlns","viewBox","useInlineResources","resources","mutable","inline","getInline","resource","res","ConfiguredCarver","handleAirChange","handleLiquidChange","liquid","handleNewClick","handleCarverCreated","optionsAir","selectedAir","optionsLiquid","selectedLiquid","ConfiguredCarverForm","onSave","setCarver","handleSelectChange","handleSubmit","stopPropagation","c","fromEntries","FormData","onSubmit","Biome","handleCarversChange","handleStartsChange","handleEffectsChange","handleFeaturesChange","handleSpawnersChange","handleSurfaceBuilderChange","handlePrecipitationChange","handleCategoryChange","handleSpawnFriendlyChange","formData","BiomeCategory","BiomePrecipitation","SurfaceBuilder","creature_spawn_probability","Toggle","ariaLabel","aria-label","DarkModeToggle","darkMode","useDarkMode","disable","enable","MenuItem","active","href","role","aria-current","NavBar","rel","DimensionType","handleTypeCreated","DimensionTypeForm","setConfig","handleVanillaSelect","handleFixedTimeToggle","InfiniburnIdentifier","marginBottom","textAlign","NumberList","numbers","pos","DoublePerlinSampler","this","firstSampler","OctaveSimplexNoise","secondSampler","amplitude","createAmplitude","sample","sampler","PerlinNoiseSampler","j","k","octaveSamplers","Array","l","consumeRandom","m","random2","Random","lacunarity","pow","persistence","bl","originY","originX","nextDouble","originZ","permutations","buildPermutationsTable","Uint8Array","nextInt","rx","ry","rz","fx","floor","fy","fz","dx","dy","dz","fadeX","fadeY","fadeZ","_sample","sectionX","sectionY","sectionZ","localX","localY","localZ","fadeLocalX","fadeLocalY","fadeLocalZ","n001","n101","n011","n111","getGradient","q","hashCode","imul","charCodeAt","MultiNoiseDimension","temperatureNoise","humidityNoise","altitudeNoise","weirdnessNoise","biomeX","biomeY","biomeZ","humidity","altitude","weirdness","minDistance","Number","MAX_SAFE_INTEGER","getDistanceToBiome","parameters","image","offsetX","offsetY","buffer","ArrayBuffer","buf8","Uint8ClampedArray","data32","Uint32Array","endX","endY","biomesColors","getBiomesColors","getBiomeAt","set","MultiNoiseRepresentation","auto","setScale","reference","render","canvas","ctx","getContext","alpha","img","createImageData","putImageData","display","alignItems","moz-opaque","justifyContent","entries","marginLeft","marginRight","verticalAlign","BiomeSource","handleSeedChange","handleFixedSourceChange","SeedField","CheckerboardBiomeSource","FixedBiomeSource","MultiNoiseBiomeSource","VanillaLayeredBiomeSource","handleBiomesChange","selection","isArray","advanced","toggleAdvanced","handleNoiseChange","handleAddClick","handleDeleteClick","entry","BiomeSelection","biomesOptions","PerlinNoiseParameters","objects","hasDuplicatedObjects","handleLegacyBiomeToggle","legacy_biome_init_layer","handleLargeBiomesToggle","large_biomes","handleFirstOctaveChange","handleAmplitudesChange","margin","handleBiomeChange","rainfall","handleParameterChange","Structures","handleStrongholdChange","handleStructuresChange","Stronghold","StructuresList","enabled","setStronghold","original","structure","def","Structure","handleSpacingChange","handleSaltChange","FlatChunkSettings","layers","handleLayersChange","handleLakesToggle","lakes","GeneratorLayers","shouldCancelStart","parentNode","handleReversedSort","SortableLayersList","onRemove","onSortEnd","SortableContainer","layer","Layer","reverse","SortableElement","handleHeightChange","NoiseGenerator","NoiseSettings","NoiseConfig","changeCallback","handleSamplingChange","handleTopSlideChange","handleBottomSlideChange","NoiseSamplingConfig","SlideConfig","DimensionGenerator","previousGenerator","setPreviousGenerator","handleChunkGeneratorChange","handleSettingsChange","handleBiomeSourceChange","fontWeight","fontSize","setText","Dimension","handleGeneratorChange","TREE_DECORATORS_OPTIONS","default","BLOCK_PILE_FEATURE_CONFIG","state_provider","axis","HUGE_FUNGUS_FEATURE_CONFIG","hat_state","decor_state","planted","valid_base_block","stem_state","ORE_FEATURE_CONFIG","TREE_FEATURE_CONFIG","heightmap","minimum_size","limit","lower_size","upper_size","trunk_provider","leaves_provider","persistent","foliage_placer","radius","trunk_placer","base_height","height_rand_a","height_rand_b","RANDOM_PATCH_FEATURE_CONFIG","can_replace","project","need_water","xspread","yspread","zspread","whitelist","blacklist","tries","block_placer","DECORATED_BLOCK_PILE_CONFIG","chance","DECORATED_HUGE_FUNGUS_CONFIG","DECORATED_ORE_FEATURE_CONFIG","bottom_offset","top_offset","maximum","DECORATED_RANDOM_PATCH_CONFIG","outer","inner","DECORATED_SPRING_FEATURE_CONFIG","rock_count","hole_count","valid_blocks","falling","requires_block_below","DECORATED_TREE_CONFIG","extra_chance","extra_count","BlockStateProvider","provider","setProvider","similarities","handleSimpleStateChange","handleWeighestStateChange","filteredBlocks","WeightedStateProvider","handleWeightChange","DECORATORS_OPTIONS","CARVERS_OPTIONS","DECORATOR_CARVING_MASK_DEFAULTS","DECORATOR_EXTRA_COUNT_DEFAULTS","DECORATOR_DECORATED_DEFAULTS","DECORATOR_RANGE_DEFAULTS","UniformInt","minBase","maxBase","maxSpread","base","DecoratorsList","SortableDecoratorsList","Decorator","setDecorator","handleConfigChange","CarvingMaskDecorator","ChanceDecorator","CountDecorator","ExtraCountDecorator","NoiseCountDecorator","NoiseBiasedCountDecorator","DecoratedDecorator","RangeDecorator","handleStepChange","noise_level","below_noise","above_noise","noise_to_count_ratio","noise_factor","noise_offset","DiskFeature","configuration","handleTargetsChange","targets","half_height","ProbabilityFeature","SingleStateFeature","FoliagePlacer","placer","crown_height","trunk_height","TrunkPlacer","TreeDecorators","TreeDecorator","handleAlterGroundChange","CustomTag","indexOf","contents","rim","rim_size","handleContentsChange","handleRimChange","handleDecorStateChange","handleHatStateChange","handlePlantedChange","handleStemStateChange","handleValidBaseBlockChange","handleTargetChange","handlePredicateChange","to_place","place_on","place_in","place_under","handleToPlaceChange","handlePlaceOnChange","handlePlaceInChange","handlePlaceUnderChange","handlRequiresBlockBelowChange","handleValidBlocksChange","handleStateProviderChange","handleWhitelistChange","handleBlacklistChange","handleTrunkProviderChange","handleLeavesProviderChange","handleFoliagePlacerChange","handleTrunkPlacerChange","handleDecoratorsChange","OPTIONS","RawConfiguredFeature","decorators_","feature_","setFeature","setDecorators","handleFeatureChange","get","FeatureConfig","DIMENSIONS_PATH","WORLDGEN_PATH","LEGACY_DIMENSIONS_PATH","LEGACY_WORLDGEN_PATH","buildZip","modified","elements","pack","pack_format","description","path","w","filename","folder","writeFile","generateAsync","saveAs","readZip","extractDatapack","legacy","mcmeta","promises","dir","regex","match","parseFile","all","getFolderType","pathRegex","contentPromise","exec","success","handleTopMaterialChange","handleUnderMaterialChange","handleUnderwaterMaterialChange","Datapack","page","setPage","useMenu","setMenu","handleSave","method","scrollTo","surface","Stats","mayGenerate","StatsTitle","invisible","DatapackForm","onCreate","setError","handleFile","dataTransfer","files","handleDrag","onDragStart","onDragEnter","onDragOver","onDrop","aria-describedby","accept","App","Boolean","location","hostname","addEventListener","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4PAMO,SAASA,IAA4B,IAAlBC,EAAiB,0DACZC,mBAASD,GADG,mBAChCE,EADgC,KACxBC,EADwB,KAEjCC,EAAS,WAAqB,IAAXC,EAAU,uDAAN,KACf,OAANA,GAA4B,mBAANA,GAA+C,mBAArBA,EAAEC,OAAOC,SAKnD,OAANF,GAA0C,oBAArBA,EAAEG,gBACvBH,EAAEG,iBAENL,GAAS,SAAAM,GAAO,OAAKA,MAPjBN,EAAsB,mBAANE,EAAkBA,EAAIA,EAAEC,OAAOC,UASvD,MAAO,CAACL,EAAQE,G,YC+DLM,MAAMC,MA/EN,SAAAC,GACX,OACI,kBAAC,IAAD,eACIC,OAAQ,CACJC,QAAS,SAAAD,GAAM,kCACRA,GADQ,IAEXE,gBAAiB,wBACjBC,YAAa,sBACb,SAAS,2BACFH,EAAO,WADd,IAEIE,gBAAiB,8BACjBC,YAAa,wBAEjB,SAAS,2BACFH,EAAO,WADd,IAEII,UAAW,iCAEfC,WAAY,SAEhBC,YAAa,SAAAN,GAAM,kCACZA,GADY,IAEfO,MAAO,0BAEXC,SAAU,SAAAR,GAAM,kCACTA,GADS,IAEZO,MAAO,uBACPL,gBAAiB,0BACjB,SAAS,2BACFF,EAAO,WADd,IAEIO,MAAO,mCAGfE,MAAO,SAAAT,GAAM,kCACNA,GADM,IAETO,MAAO,0BAEXG,KAAM,SAAAV,GAAM,kCACLA,GADK,IAERE,gBAAiB,6BAErBS,OAAQ,SAACX,EAAD,OAAWY,EAAX,EAAWA,UAAWC,EAAtB,EAAsBA,WAAtB,mBAAC,eACFb,GADC,IAEJO,MAAO,uBACPO,OAAQ,UACRZ,gBAAiBW,EACX,+BACAD,EACI,8BACA,KACV,UAAU,2BACHZ,EAAO,YADd,IAEIE,gBAAiBW,EACX,+BACA,mCAGdE,WAAY,SAAAf,GAAM,kCACXA,GADW,IAEdO,MAAO,uBACPL,gBAAiB,yBAErBc,gBAAiB,SAAAhB,GAAM,kCAChBA,GADgB,IAEnBO,MAAO,uBACPL,gBAAiB,yBAErBe,iBAAkB,SAAAjB,GAAM,kCACjBA,GADiB,IAEpB,SAAS,2BACFA,EAAO,WADd,IAEIE,gBAAiB,6BAIzBH,O,wBCvET,SAAemB,EAAtB,oC,4CAAO,WAAyBC,EAAKC,GAA9B,+BAAAC,EAAA,6DAAuCC,EAAvC,+BAAiD,CACpDC,OAAQ,mBACR,eAAgB,oBAFb,SAIoBC,MAAML,EAAD,aACxBG,WACGF,IANJ,cAIGK,EAJH,gBASwBA,EAASC,OATjC,UASGC,EATH,QAUCF,EAASG,GAVV,yCAWQD,GAXR,aAaGA,EAbH,6C,sBCNA,IAAME,EAAmB,CAC5B,YACA,cACA,sBACA,eACA,aACA,uBACA,QACA,uBACA,uBACA,eACA,mBACA,kBACA,YACA,4BACA,2BACA,iBACA,iBACA,gBACA,gBACA,gBACA,qBACA,kBACA,iBACA,gBACA,iBACA,gBACA,qBACA,aACA,YACA,YACA,cACA,kBACA,iBACA,eACA,YACA,YACA,WACA,eACA,SACA,QACA,aACA,YACA,YACA,cACA,YACA,mBACA,cACA,sBACA,eACA,cACA,SACA,qBACA,cACA,eACA,gBACA,uBACA,cACA,eACA,WACA,aACA,YACA,WACA,eACA,aACA,kBACA,uBACA,qBACA,sBACA,kBACA,gBACA,oBACA,mBACA,oBACA,qBACA,uBACA,sBACA,qBACA,sBACA,oBACA,qBACA,oBACA,kBACA,2BACA,cACA,qBACA,wBACA,mBACA,qBACA,mBACA,mBACA,eACA,sBACA,yBACA,yBACA,0BACA,4BACA,mBACA,wBACA,sBACA,wBACA,sBACA,uBACA,qBACA,uBACA,qBACA,uBACA,qBACA,YACA,gBACA,kBACA,oBACA,kBACA,oBACA,oBACA,iBACA,WACA,aACA,cACA,cACA,eACA,WACA,WACA,iBACA,WACA,eACA,cACA,YACA,eACA,cACA,mBACA,mBACA,gBACA,wBACA,eACA,uBACA,sBACA,oBACA,MACA,WACA,QACA,SACA,SACA,OACA,cACA,YACA,sBACA,mBACA,cACA,YACA,wBACA,aACA,cACA,gBACA,eACA,eACA,kBACA,iBACA,iBACA,sBACA,qBACA,qBACA,eACA,eACA,cACA,iBACA,gBACA,eACA,eACA,yBACA,kCACA,2BACA,+BACA,6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","file":"static/js/main.c57c0501.chunk.js","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\n\n/**\n * @param {boolean} initial \n * @returns {[boolean, function(): void]}\n */\nexport function useToggle(initial = false) {\n    const [status, setState] = useState(initial);\n    const toggle = function (e = null) {\n        if (e !== null && (typeof e === 'boolean' || typeof e.target.checked === 'boolean')) {\n            setState(typeof e === 'boolean' ? e : e.target.checked);\n            return;\n        }\n        \n        if (e !== null && typeof e.preventDefault === 'function') {\n            e.preventDefault();\n        }\n        setState(current => !current);\n    }\n    return [status, toggle];\n}\n\n/**\n * \n * @param {string} [page] \n * @param {number} [index] \n * @returns {[string, number, function (SyntheticEvent, string, number): void]}\n */\nexport function useMenu(page = 'stats', index = -1) {\n    const [state, setState] = useState({ page, index });\n\n    const setPage = function (e, page = 'stats', index = -1) {\n        if (e !== null) {\n            e.preventDefault();\n        }\n        if (index < 0) {\n            setState({ page });\n        } else {\n            setState({ page, index });\n        }\n    }\n\n    return [\n        state.page,\n        state.index,\n        setPage\n    ];\n}\n\n/**\n * @param {function(HTMLCanvasElement, CanvasRenderingContext2D): void} callback\n * @returns {React.MutableRefObject}\n */\nexport function useCanvas(callback) {\n    const reference = useRef(null);\n\n    useEffect(function() {\n        const canvas = reference.current;\n        const ctx = canvas.getContext('2d');\n        callback(canvas, ctx);\n    }, [callback]);\n\n    return reference;\n}","import React from 'react';\nimport ReactSelect from 'react-select';\n\nconst Select = props => {\n    return (\n        <ReactSelect\n            styles={{\n                control: styles => ({\n                    ...styles,\n                    backgroundColor: 'var(--bg-color-input)',\n                    borderColor: 'var(--border-color)',\n                    ':hover': {\n                        ...styles[':hover'],\n                        backgroundColor: 'var(--bg-color-input-hover)',\n                        borderColor: 'var(--border-color)'\n                    },\n                    ':focus': {\n                        ...styles[':focus'],\n                        boxShadow: '0 0 0 1px var(--focus-color)'\n                    },\n                    transition: '.1s',\n                }),\n                singleValue: styles => ({\n                    ...styles,\n                    color: 'var(--primary-color)',\n                }),\n                menuList: styles => ({\n                    ...styles,\n                    color: 'var(--primary-color)',\n                    backgroundColor: 'var(--bg-color-section)',\n                    ':hover': {\n                        ...styles[':hover'],\n                        color: 'var(--bg-color-input-hover)',\n                    },\n                }),\n                input: styles => ({\n                    ...styles,\n                    color: 'var(--primary-color)',\n                }),\n                menu: styles => ({\n                    ...styles,\n                    backgroundColor: 'var(--bg-color-section)',\n                }),\n                option: (styles, { isFocused, isSelected }) => ({\n                    ...styles,\n                    color: 'var(--primary-color)',\n                    cursor: 'pointer',\n                    backgroundColor: isSelected\n                        ? 'var(--bg-color-select-focus)'\n                        : isFocused\n                            ? 'var(--bg-color-input-hover)'\n                            : null,\n                    ':active': {\n                        ...styles[':active'],\n                        backgroundColor: isSelected\n                            ? 'var(--bg-color-select-focus)'\n                            : 'var(--bg-color-input-hover)',\n                    },\n                }),\n                multiValue: styles => ({\n                    ...styles,\n                    color: 'var(--primary-color)',\n                    backgroundColor: 'var(--select-label)'\n                }),\n                multiValueLabel: styles => ({\n                    ...styles,\n                    color: 'var(--primary-color)',\n                    backgroundColor: 'var(--select-label)'\n                }),\n                multiValueRemove: styles => ({\n                    ...styles,\n                    ':hover': {\n                        ...styles[':hover'],\n                        backgroundColor: 'var(--select-label)',\n                    },\n                }),\n            }}\n            {...props}\n        />\n    );\n};\n\nexport default React.memo(Select);\n","/**\n * @param {string} url\n * @param {object} options\n * @param {object} [headers]\n * @returns {Promise<object>}\n */\nexport async function jsonFetch(url, options, headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json'\n}) {\n    const response = await fetch(url, {\n        headers,\n        ...options\n    });\n\n    const responseData = await response.json();\n    if (response.ok) {\n        return responseData;\n    }\n    throw responseData;\n}\n","export const VANILLA_FEATURES = [\n    \"end_spike\",\n    \"end_gateway\",\n    \"end_gateway_delayed\",\n    \"chorus_plant\",\n    \"end_island\",\n    \"end_island_decorated\",\n    \"delta\",\n    \"small_basalt_columns\",\n    \"large_basalt_columns\",\n    \"basalt_blobs\",\n    \"blackstone_blobs\",\n    \"glowstone_extra\",\n    \"glowstone\",\n    \"crimson_forest_vegetation\",\n    \"warped_forest_vegetation\",\n    \"nether_sprouts\",\n    \"twisting_vines\",\n    \"weeping_vines\",\n    \"basalt_pillar\",\n    \"seagrass_cold\",\n    \"seagrass_deep_cold\",\n    \"seagrass_normal\",\n    \"seagrass_river\",\n    \"seagrass_deep\",\n    \"seagrass_swamp\",\n    \"seagrass_warm\",\n    \"seagrass_deep_warm\",\n    \"sea_pickle\",\n    \"ice_spike\",\n    \"ice_patch\",\n    \"forest_rock\",\n    \"seagrass_simple\",\n    \"iceberg_packed\",\n    \"iceberg_blue\",\n    \"kelp_cold\",\n    \"kelp_warm\",\n    \"blue_ice\",\n    \"bamboo_light\",\n    \"bamboo\",\n    \"vines\",\n    \"lake_water\",\n    \"lake_lava\",\n    \"disk_clay\",\n    \"disk_gravel\",\n    \"disk_sand\",\n    \"freeze_top_layer\",\n    \"bonus_chest\",\n    \"void_start_platform\",\n    \"monster_room\",\n    \"desert_well\",\n    \"fossil\",\n    \"spring_lava_double\",\n    \"spring_lava\",\n    \"spring_delta\",\n    \"spring_closed\",\n    \"spring_closed_double\",\n    \"spring_open\",\n    \"spring_water\",\n    \"pile_hay\",\n    \"pile_melon\",\n    \"pile_snow\",\n    \"pile_ice\",\n    \"pile_pumpkin\",\n    \"patch_fire\",\n    \"patch_soul_fire\",\n    \"patch_brown_mushroom\",\n    \"patch_red_mushroom\",\n    \"patch_crimson_roots\",\n    \"patch_sunflower\",\n    \"patch_pumpkin\",\n    \"patch_taiga_grass\",\n    \"patch_berry_bush\",\n    \"patch_grass_plain\",\n    \"patch_grass_forest\",\n    \"patch_grass_badlands\",\n    \"patch_grass_savanna\",\n    \"patch_grass_normal\",\n    \"patch_grass_taiga_2\",\n    \"patch_grass_taiga\",\n    \"patch_grass_jungle\",\n    \"patch_dead_bush_2\",\n    \"patch_dead_bush\",\n    \"patch_dead_bush_badlands\",\n    \"patch_melon\",\n    \"patch_berry_sparse\",\n    \"patch_berry_decorated\",\n    \"patch_waterlilly\",\n    \"patch_tall_grass_2\",\n    \"patch_tall_grass\",\n    \"patch_large_fern\",\n    \"patch_cactus\",\n    \"patch_cactus_desert\",\n    \"patch_cactus_decorated\",\n    \"patch_sugar_cane_swamp\",\n    \"patch_sugar_cane_desert\",\n    \"patch_sugar_cane_badlands\",\n    \"patch_sugar_cane\",\n    \"brown_mushroom_nether\",\n    \"red_mushroom_nether\",\n    \"brown_mushroom_normal\",\n    \"red_mushroom_normal\",\n    \"brown_mushroom_taiga\",\n    \"red_mushroom_taiga\",\n    \"brown_mushroom_giant\",\n    \"red_mushroom_giant\",\n    \"brown_mushroom_swamp\",\n    \"red_mushroom_swamp\",\n    \"ore_magma\",\n    \"ore_soul_sand\",\n    \"ore_gold_deltas\",\n    \"ore_quartz_deltas\",\n    \"ore_gold_nether\",\n    \"ore_quartz_nether\",\n    \"ore_gravel_nether\",\n    \"ore_blackstone\",\n    \"ore_dirt\",\n    \"ore_gravel\",\n    \"ore_granite\",\n    \"ore_diorite\",\n    \"ore_andesite\",\n    \"ore_coal\",\n    \"ore_iron\",\n    \"ore_gold_extra\",\n    \"ore_gold\",\n    \"ore_redstone\",\n    \"ore_diamond\",\n    \"ore_lapis\",\n    \"ore_infested\",\n    \"ore_emerald\",\n    \"ore_debris_large\",\n    \"ore_debris_small\",\n    \"crimson_fungi\",\n    \"crimson_fungi_planted\",\n    \"warped_fungi\",\n    \"warped_fungi_planted\",\n    \"huge_brown_mushroom\",\n    \"huge_red_mushroom\",\n    \"oak\",\n    \"dark_oak\",\n    \"birch\",\n    \"acacia\",\n    \"spruce\",\n    \"pine\",\n    \"jungle_tree\",\n    \"fancy_oak\",\n    \"jungle_tree_no_vine\",\n    \"mega_jungle_tree\",\n    \"mega_spruce\",\n    \"mega_pine\",\n    \"super_birch_bees_0002\",\n    \"swamp_tree\",\n    \"jungle_bush\",\n    \"oak_bees_0002\",\n    \"oak_bees_002\",\n    \"oak_bees_005\",\n    \"birch_bees_0002\",\n    \"birch_bees_002\",\n    \"birch_bees_005\",\n    \"fancy_oak_bees_0002\",\n    \"fancy_oak_bees_002\",\n    \"fancy_oak_bees_005\",\n    \"oak_badlands\",\n    \"spruce_snowy\",\n    \"flower_warm\",\n    \"flower_default\",\n    \"flower_forest\",\n    \"flower_swamp\",\n    \"flower_plain\",\n    \"flower_plain_decorated\",\n    \"forest_flower_vegetation_common\",\n    \"forest_flower_vegetation\",\n    \"dark_forest_vegetation_brown\",\n    \"dark_forest_vegetation_red\",\n    \"warm_ocean_vegetation\",\n    \"forest_flower_trees\",\n    \"taiga_vegetation\",\n    \"trees_shattered_savanna\",\n    \"trees_savanna\",\n    \"birch_tall\",\n    \"trees_birch\",\n    \"trees_mountain_edge\",\n    \"trees_mountain\",\n    \"trees_water\",\n    \"birch_other\",\n    \"plain_vegetation\",\n    \"trees_jungle_edge\",\n    \"trees_giant_spruce\",\n    \"trees_giant\",\n    \"trees_jungle\",\n    \"bamboo_vegetation\",\n    \"mushroom_field_vegetation\"\n];\n","export const VANILLA_SURFACE_BUILDERS = [\n    { value: 'badlands', label: 'Badlands' },\n    { value: 'basalt_deltas', label: 'Basalt Deltas' },\n    { value: 'crimson_forest', label: 'Crimson forest' },\n    { value: 'desert', label: 'Desert' },\n    { value: 'end', label: 'End' },\n    { value: 'eroded_badlands', label: 'Eroded Badlands' },\n    { value: 'frozen_ocean', label: 'Frozen ocean' },\n    { value: 'full_sand', label: 'Full sand' },\n    { value: 'giant_tree_taiga', label: 'Giant tree taiga' },\n    { value: 'grass', label: 'Grass' },\n    { value: 'gravelly_mountain', label: 'Gravelly mountain' },\n    { value: 'ice_spikes', label: 'Ice spikes' },\n    { value: 'mountain', label: 'Mountain' },\n    { value: 'mycelium', label: 'Mycelium' },\n    { value: 'nether', label: 'Nether' },\n    { value: 'nope', label: 'Nope' },\n    { value: 'ocean_sand', label: 'Ocean sand' },\n    { value: 'shattered_savanna', label: 'Shattered savanna' },\n    { value: 'soul_sand_valley', label: 'Soul sand valley' },\n    { value: 'stone', label: 'Stone' },\n    { value: 'swamp', label: 'Swamp' },\n    { value: 'warped_forest', label: 'Warped forest' },\n    { value: 'wooded_badlands', label: 'Wooded badlands' },\n].map(option => {\n    option.value = 'minecraft:' + option.value;\n    return option;\n});\n\nexport const SURFACE_TYPES_OPTIONS = [\n    { value: 'default', label: 'Default' },\n    { value: 'mountain', label: 'Mountain' },\n    { value: 'shattered_savanna', label: 'Shattered savanna' },\n    { value: 'gravelly_mountain', label: 'Gravelly mountain' },\n    { value: 'giant_tree_taiga', label: 'Giant tree taiga' },\n    { value: 'swamp', label: 'Swamp' },\n    { value: 'badlands', label: 'Badlands' },\n    { value: 'wooded_badlands', label: 'Wooded badlands' },\n    { value: 'eroded_badlands', label: 'Eroded badlands' },\n    { value: 'frozen_ocean', label: 'Frozen ocean' },\n    { value: 'nether', label: 'Nether' },\n    { value: 'nether_forest', label: 'Nether forest' },\n    { value: 'soul_sand_valley', label: 'Soul sand valley' },\n    { value: 'basalt_deltas', label: 'Basalt deltas' },\n    { value: 'nope', label: 'Nope' }\n].map(option => {\n    option.value = 'minecraft:' + option.value;\n    return option;\n});\n\nexport const SURFACE_BUILDER = {\n    config: {\n        top_material: {\n            Properties: {\n                snowy: \"false\"\n            },\n            Name: \"minecraft:grass_block\"\n        },\n        under_material: {\n            Name: \"minecraft:dirt\"\n        },\n        underwater_material: {\n            Name: \"minecraft:gravel\"\n        }\n    },\n    type: \"minecraft:default\"\n}","export const VANILLA_NOISES = [\n    { value: 'minecraft:overworld', label: 'Overworld' },\n    { value: 'minecraft:nether', label: 'Nether' },\n    { value: 'minecraft:end', label: 'End' },\n    { value: 'minecraft:amplified', label: 'Amplified' },\n    { value: 'minecraft:caves', label: 'Caves' },\n    { value: 'minecraft:floating_islands', label: 'Floating islands' }\n];\n\nexport const STRUCTURES = [\n    \"ocean_ruin\",\n    \"bastion_remnant\",\n    \"fortress\",\n    \"nether_fossil\",\n    \"igloo\",\n    \"shipwreck\",\n    \"swamp_hut\",\n    \"jungle_pyramid\",\n    \"village\",\n    \"ruined_portal\",\n    \"endcity\",\n    \"buried_treasure\",\n    \"mansion\",\n    \"monument\",\n    \"stronghold\",\n    \"pillager_outpost\",\n    \"desert_pyramid\",\n    \"mineshaft\"\n].map(tag => ({ value: 'minecraft:' + tag, label: tag }));;\n\nexport const OVERWORLD_NOISE = {\n    bedrock_roof_position: -10,\n    bedrock_floor_position: 0,\n    sea_level: 63,\n    disable_mob_generation: false,\n    structures: {\n        stronghold: {\n            distance: 32,\n            spread: 3,\n            count: 128\n        },\n        structures: {\n            \"minecraft:ocean_ruin\": {\n                spacing: 20,\n                separation: 8,\n                salt: 14357621\n            },\n            \"minecraft:bastion_remnant\": {\n                spacing: 27,\n                separation: 4,\n                salt: 30084232\n            },\n            \"minecraft:fortress\": {\n                spacing: 27,\n                separation: 4,\n                salt: 30084232\n            },\n            \"minecraft:nether_fossil\": {\n                spacing: 2,\n                separation: 1,\n                salt: 14357921\n            },\n            \"minecraft:igloo\": {\n                spacing: 32,\n                separation: 8,\n                salt: 14357618\n            },\n            \"minecraft:shipwreck\": {\n                spacing: 24,\n                separation: 4,\n                salt: 165745295\n            },\n            \"minecraft:swamp_hut\": {\n                spacing: 32,\n                separation: 8,\n                salt: 14357620\n            },\n            \"minecraft:jungle_pyramid\": {\n                spacing: 32,\n                separation: 8,\n                salt: 14357619\n            },\n            \"minecraft:village\": {\n                spacing: 32,\n                separation: 8,\n                salt: 10387312\n            },\n            \"minecraft:ruined_portal\": {\n                spacing: 40,\n                separation: 15,\n                salt: 34222645\n            },\n            \"minecraft:endcity\": {\n                spacing: 20,\n                separation: 11,\n                salt: 10387313\n            },\n            \"minecraft:buried_treasure\": {\n                spacing: 1,\n                separation: 0,\n                salt: 0\n            },\n            \"minecraft:mansion\": {\n                spacing: 80,\n                separation: 20,\n                salt: 10387319\n            },\n            \"minecraft:monument\": {\n                spacing: 32,\n                separation: 5,\n                salt: 10387313\n            },\n            \"minecraft:stronghold\": {\n                spacing: 1,\n                separation: 0,\n                salt: 0\n            },\n            \"minecraft:pillager_outpost\": {\n                spacing: 32,\n                separation: 8,\n                salt: 165745296\n            },\n            \"minecraft:desert_pyramid\": {\n                spacing: 32,\n                separation: 8,\n                salt: 14357617\n            },\n            \"minecraft:mineshaft\": {\n                spacing: 1,\n                separation: 0,\n                salt: 0\n            }\n        }\n    },\n    noise: {\n        height: 256,\n        sampling: {\n            xz_scale: 1,\n            y_scale: 1,\n            xz_factor: 80.0,\n            y_factor: 160.0\n        },\n        top_slide: {\n            target: -10,\n            size: 3,\n            offset: 0\n        },\n        bottom_slide: {\n            target: -30,\n            size: 0,\n            offset: 0\n        },\n        size_horizontal: 1,\n        size_vertical: 2,\n        density_factor: 1.0,\n        density_offset: -0.47,\n        simplex_surface_noise: true,\n        random_density_offset: true,\n        island_noise_override: false,\n        amplified: false\n        \n    },\n    default_block: {\n        Name: \"minecraft:stone\"\n    },\n    default_fluid: {\n        Properties: {\n            level: \"0\"\n        },\n        Name: \"minecraft:water\"\n    }\n}\n","export const DIMENSION = {\n    generator: {\n        type: \"minecraft:noise\",\n        seed: 286956243,\n        biome_source: {\n            type: \"minecraft:fixed\",\n            seed: 286956243,\n            biome: \"minecraft:plains\"\n        },\n        settings: \"minecraft:overworld\"\n    },\n    type: \"minecraft:overworld\"\n};\n\nexport const CHUNK_GENERATOR_TYPES = [\n    { value: 'minecraft:flat', label: 'Flat chunk generator' },\n    { value: 'minecraft:debug', label: 'Debug chunk generator' },\n    { value: 'minecraft:noise', label: 'Noise chunk generator' }\n];\n\nexport const VANILLA_DIMENSION_TYPES = [\n    { value: 'minecraft:overworld', label: 'Overworld' },\n    { value: 'minecraft:overworld_caves', label: 'Overworld caves' },\n    { value: 'minecraft:the_nether', label: 'The Nether' },\n    { value: 'minecraft:the_end', label: 'The End' }\n];\n\nexport const NOISES_NAMES = [\n    'temperature_noise',\n    'humidity_noise',\n    'altitude_noise',\n    'weirdness_noise'\n];\n\nexport const MULTI_NOISE_BIOME_SOURCE = {\n    type: 'minecraft:multi_noise',\n    seed: 286956243,\n    temperature_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    humidity_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    altitude_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    weirdness_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    biomes: []\n};\n\nexport const DIMENSION_TYPE_EFFECTS = [\n    { value: 'minecraft:overworld', label: 'Overworld' },\n    { value: 'minecraft:the_nether', label: 'The Nether' },\n    { value: 'minecraft:the_end', label: 'The End' }\n];\n\nexport const DIMENSION_TYPE_INFINIBURN = [\n    { value: 'minecraft:infiniburn_overworld', label: 'Overworld' },\n    { value: 'minecraft:infiniburn_nether', label: 'The Nether' },\n    { value: 'minecraft:infiniburn_end', label: 'The End' }\n];\n\nexport const OVERWORLD_DIMENSION_TYPE = {\n    has_raids: true,\n    logical_height: 256,\n    infiniburn: \"minecraft:infiniburn_overworld\",\n    effects: \"minecraft:overworld\",\n    ambient_light: 0.0,\n    piglin_safe: false,\n    bed_works: true,\n    respawn_anchor_works: false,\n    ultrawarm: false,\n    natural: true,\n    coordinate_scale: 1,\n    has_skylight: true,\n    has_ceiling: false\n}\n\nexport const OVERWORLD_CAVES_DIMENSION_TYPE = { ...OVERWORLD_DIMENSION_TYPE, has_ceiling: true };\n\nexport const THE_NETHER_DIMENSION_TYPE = {\n    has_raids: false,\n    logical_height: 128,\n    infiniburn: \"minecraft:infiniburn_nether\",\n    effects: \"minecraft:the_nether\",\n    ambient_light: 0.1,\n    piglin_safe: true,\n    bed_works: false,\n    respawn_anchor_works: true,\n    ultrawarm: true,\n    natural: false,\n    coordinate_scale: 8,\n    fixed_time: 18000,\n    has_skylight: false,\n    has_ceiling: true\n}\n\nexport const THE_END_DIMENSION_TYPE = {\n    has_raids: true,\n    logical_height: 256,\n    infiniburn: \"minecraft:infiniburn_end\",\n    effects: \"minecraft:the_end\",\n    ambient_light: 0.0,\n    piglin_safe: false,\n    bed_works: false,\n    respawn_anchor_works: false,\n    ultrawarm: false,\n    natural: false,\n    coordinate_scale: 1,\n    fixed_time: 6000,\n    has_skylight: false,\n    has_ceiling: false\n}\n","export const VANILLA_CARVERS = [\n    { value: 'canyon', label: 'Canyon', probability: 0.02 },\n    { value: 'cave', label: 'Cave', probability: 0.143 },\n    { value: 'nether_cave', label: 'Nether cave', probability: 0.2 },\n    { value: 'underwater_canyon', label: 'Underwater canyon', probability: 0.02  },\n    { value: 'underwater_cave', label: 'Underwater cave', probability: 0.067 }\n].map(option => {\n    option.value = 'minecraft:' + option.value;\n    return option;\n});\n","const namespace = '%namespace%';\nexport const PATHS = {\n    dimensions: `data/${namespace}/dimension`,\n    dimension_types: `data/${namespace}/dimension_type`,\n    biomes: `data/${namespace}/worldgen/biome`,\n    carvers: `data/${namespace}/worldgen/configured_carver`,\n    features: `data/${namespace}/worldgen/configured_feature`,\n    surfaces: `data/${namespace}/worldgen/configured_surface_builder`,\n    noises: `data/${namespace}/worldgen/noise_settings`,\n    processors: `data/${namespace}/worldgen/processor_list`\n};\n\n/**\n * @param {('dimensions'|'dimension_types'|'biomes'|'carvers'|'features'|'surfaces'|'noises'|'processors')} type \n * @param {string} namespace \n * @param {string} identifier \n * @returns {string}\n */\nexport function getAbsolutePath(type, namespace, identifier) {\n    return PATHS[type].replace('%namespace%', namespace) + '/' + identifier + '.json';\n}\n","import React, { useCallback, useState, useEffect } from 'react';\nimport { jsonFetch } from '../utils/fetch';\nimport { VANILLA_FEATURES } from '../components/feature/VanillaFeatures';\nimport { useData } from '../hooks/context';\nimport { VANILLA_SURFACE_BUILDERS } from '../components/surface/SurfaceBuilderDefaults';\nimport { VANILLA_NOISES } from '../components/noise/NoiseDefaults';\nimport { VANILLA_DIMENSION_TYPES } from '../components/dimension/DimensionDefaults';\nimport { VANILLA_CARVERS } from '../components/carver/CarverDefaults';\nimport JSZip from 'jszip';\nimport { getAbsolutePath } from './Paths';\n\nexport const DataContext = React.createContext({\n    vanilla: {\n        biomes: [],\n        blocks: [],\n        carvers: [],\n        dimensions: [],\n        dimension_types: [],\n        entities: [],\n        features: [],\n        noises: [],\n        sounds: [],\n        surfaces: [],\n        /**\n         * @param {string} type \n         * @param {string} key \n         * @returns {Promise<object>}  \n         */\n        getVanillaResource: (type, key) => {}\n    },\n    custom: {\n        biomes: [],\n        carvers: [],\n        dimensions: [],\n        dimension_types: [],\n        features: [],\n        noises: [],\n        processors: [],\n        surfaces: [],\n        updateBiomes: (biome) => {},\n        updateCarvers: (carver) => {},\n        updateDimensions: (dimension) => {},\n        updateDimensionTypes: (dimension_type) => {},\n        updateFeatures: (feature) => {},\n        updateNoises: (noise) => {},\n        updateProcessors: (processor) => {},\n        updateSurfacesBuilders: (surface_builder) => {}\n    },\n    namespace: ''\n});\n\nexport function DataContextProvider({children, namespace, initial = {}}) {\n    const [biomes, setBiomes] = useState([]);\n    const [blocks, setBlocks] = useState([]);\n    const [entities, setEntities] = useState([]);\n    const [sounds, setSounds] = useState([]);\n\n    const [customBiomes, updateBiomes] = useData(initial.biomes);\n    const [carvers, updateCarvers] = useData(initial.carvers);\n    const [dimensions, updateDimensions] = useData(initial.dimensions);\n    const [dimension_types, updateDimensionTypes] = useData(initial.dimension_types);\n    const [features, updateFeatures] = useData(initial.features);\n    const [noises, updateNoises] = useData(initial.noises);\n    const [processors, updateProcessors] = useData(initial.processors);\n    const [surfaces, updateSurfacesBuilders] = useData(initial.surfaces);\n\n    const [vanillaZip, setVanillaZip] = useState(null);\n\n    useEffect(() => {\n        (async function () {\n            jsonFetch('https://unpkg.com/minecraft-data@2.65.0/minecraft-data/data/pc/1.16.1/biomes.json')\n                .then(biomes => setBiomes(biomes));\n            jsonFetch('https://unpkg.com/minecraft-data@2.65.0/minecraft-data/data/pc/1.16.1/blocks.json')\n                .then(blocks => setBlocks(blocks));\n            jsonFetch('https://unpkg.com/minecraft-data@2.65.0/minecraft-data/data/pc/1.16.1/entities.json')\n                .then(entities => setEntities(entities.map(entity => ({ value: 'minecraft:' + entity.name, label: entity.displayName }))));\n            jsonFetch('https://raw.githubusercontent.com/Arcensoth/mcdata/master/processed/reports/registries/sound_event/data.min.json', {}, {})\n                .then(sounds => setSounds(sounds.values.map(sound => ({ value: sound, label: sound.substr(10) }))));\n        })();\n    }, []);\n\n    const getVanillaResource = useCallback(async function (type, key) {\n        let zip = vanillaZip;\n        if (zip === null) {\n            const blob = (await fetch('https://raw.githubusercontent.com/slicedlime/examples/master/vanilla_worldgen.zip')).blob();\n            try {\n                zip = await JSZip.loadAsync(blob);\n            } catch (e) {\n                setVanillaZip(e);\n                return Promise.reject(new Error(`Unable to download the vanilla resource archive for reference.\\n${e.message}`));\n            }\n            setVanillaZip(zip);\n        } else if (zip instanceof Error) {\n            return Promise.reject(zip);\n        }\n        const relative = getAbsolutePath(type, 'minecraft', key).substr(15).replace('minecraft:', '');\n        const file = zip.file(relative);\n        if (file === null) {\n            return Promise.reject(new Error('Unable to find the associated vanilla file.'));\n        }\n        return Promise.resolve(JSON.parse(await file.async('text')));\n    }, [vanillaZip]);\n\n    return <DataContext.Provider value={{\n        vanilla: {\n            biomes,\n            blocks,\n            carvers: VANILLA_CARVERS,\n            dimensions: VANILLA_DIMENSION_TYPES.filter(o => !o.value.includes('cave')),\n            dimension_types: VANILLA_DIMENSION_TYPES,\n            entities,\n            features: VANILLA_FEATURES,\n            noises: VANILLA_NOISES,\n            sounds,\n            surfaces: VANILLA_SURFACE_BUILDERS,\n            getVanillaResource\n        },\n        custom: {\n            biomes: customBiomes, carvers, dimensions, dimension_types, features, noises, processors, surfaces,\n            updateBiomes, updateCarvers, updateDimensions, updateDimensionTypes, updateFeatures, updateNoises, updateProcessors, updateSurfacesBuilders\n        },\n        namespace\n    }}>{children}</DataContext.Provider>\n}","import { MULTI_NOISE_BIOME_SOURCE, NOISES_NAMES } from './../components/dimension/DimensionDefaults';\n\n/**\n * @param {object} a \n * @param {object} b \n * @returns {boolean}\n */\nexport function objectsEqual(a, b) {\n    return Object.keys(a).length === Object.keys(b).length\n        && Object.keys(a).every(p => a[p] === b[p]);\n}\n\n/**\n * @param {string} str \n * @returns {string}\n */\nexport function capitalize(str) {\n    return str[0].toUpperCase() + str.substr(1);\n}\n\n/**\n * @param {string} key \n * @param {string} [defaultNamespace]\n * @returns {string}\n */\nexport function displayNamespacedKey(key = 'undefined', defaultNamespace) {\n    return key.startsWith(defaultNamespace + ':') ? key.split(':')[1] : key;\n}\n\nexport function getStateValue(state, properties = {}) {\n    const actual = properties[state.name];\n    switch (state.type) {\n        case 'bool':\n            return actual === 'true' ? 'true' : 'false';\n        case 'int':\n            return typeof actual === 'string' ? actual : '0';\n        default:\n            return actual || state.values[0];\n    }\n}\n\nexport function hasDuplicatedObjects(objects) {\n    for (const a of objects) {\n        for (const b of objects) {\n            if (a !== b && objectsEqual(a, b)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n/**\n * @param {object} feature Unserialized feature\n * @returns {{type: string, config: object}[]} Decorators list\n */\nexport function findDecorators(feature) {\n    const decorators = [];\n\n    let f = feature;\n    (function find(obj) {\n        for (const key of Object.keys(obj)) {\n            if (key === 'decorator') {\n                decorators.unshift(obj[key]);\n                if ((obj.feature.type || obj.feature.name) !== 'minecraft:decorated') {\n                    f = obj.feature;\n                }\n            } else if (typeof obj[key] === 'object') {\n                find(obj[key]);\n            }\n        }\n    }(feature));\n\n    if (f === null) {\n        f = {};\n    }\n    return [decorators, f];\n}\n\n/**\n * @param {object} feature \n * @param {{type: string, config: object}[]} decorators \n * @param {string} name\n * @returns {object} Decorated feature\n */\nexport function buildDecorated(feature, decorators, name) {\n    if (decorators.length < 1) {\n        feature.key = name;\n        return feature;\n    }\n\n    const decorated = { type: 'minecraft:decorated', key: name };\n    let current = decorated;\n    decorators.forEach((decorator, i) => {\n        const f = i === (decorators.length - 1) ? feature : { type: 'minecraft:decorated' };\n        current.config = {\n            feature: f,\n            decorator\n        };\n        current = f;\n        if (i < 1) {\n            f.name = name;\n        }\n    });\n    return decorated;\n}\n\n/**\n * Rename object keys.\n * \n * @param {object} obj \n * @param {object} map \n * @returns {object}\n */\nfunction refitKeys(obj, map) {\n    const build = {};\n    for (const key in obj) {\n        const destKey = map[key] || key;\n\n        let value = obj[key];\n        if (typeof value === 'object') {\n            value = refitKeys(value, map);\n        }\n        build[destKey] = value;\n    }\n    return build;\n}\n\n/**\n * @param {string} group \n * @param {object} data \n * @returns {object}\n */\nexport function dataUpper(group, data) {\n    switch (group) {\n        case 'biomes':\n            // 20w30a: sky_color into effects\n            if (data.hasOwnProperty('sky_color')) {\n                data.effects.sky_color = data.sky_color;\n            }\n            return data;\n        case 'features':\n            // 20w30a: name -> type\n            const [decorators, feature] = findDecorators(data);\n            if (!feature.hasOwnProperty('type')) {\n                feature.type = feature.name;\n                delete feature.name;\n                return buildDecorated(\n                    feature,\n                    decorators.map(decorator => refitKeys(decorator, { name: 'type' })),\n                    data.key\n                );\n            }\n            return data;\n        case 'dimensions':\n            // 20w30a: multi_noise: firstOctave and amplitudes parameters\n            const source = data.generator.biome_source;\n            if (source.type === 'minecraft:multi_noise' && NOISES_NAMES.some(n => !source.hasOwnProperty(n))) {\n                data.generator.biome_source = { ...MULTI_NOISE_BIOME_SOURCE, ...source };\n            }\n            return data;\n        case 'dimension_types':\n            // 1.16.2-pre-2 : shrunk -> coordinate_scale\n            if (data.hasOwnProperty('shrunk')) {\n                data.coordinate_scale = data.shrunk ? 8 : 1;\n                delete data.shrunk;\n            }\n            return data;\n        default:\n            // 20w30a: name -> type\n            if (data.hasOwnProperty('name') && !data.hasOwnProperty('type')) {\n                data.type = data.name;\n            }\n            return data;\n    }\n}\n","import { useCallback, useContext, useState } from \"react\";\nimport { DataContext } from \"../context/DataContext\";\nimport { displayNamespacedKey } from \"../utils/data\";\n\n/**\n * @param {object[]} initial\n * @returns {[object[], function(object): void]} \n */\nexport function useData(initial = []) {\n    const [data, setData] = useState(initial);\n    const updateData = function(object) {\n        setData(stored => {\n            const existing = stored.findIndex(({key}) => object.key === key);\n            if (existing > -1 && existing !== object.index) {\n                object.index = stored.length;\n                object.key = object.key + '2';\n                stored.push(object);\n                return stored;\n            }\n\n            if (typeof object.index === 'undefined') {\n                object.index = stored.length;\n                stored.push(object);\n            } else {\n                stored[object.index] = object;\n            }\n            return stored;\n        });\n    }\n    return [data, updateData];\n}\n\n/**\n * @param {('biomes'|'carvers|'dimensions'|'dimension_types'|'features'|'noises'|'surfaces')} category Data category\n * @param {boolean} [includeCustom]\n * @param {boolean} [empty]\n * @returns {{ value: string, label: string }[]} Options list for react-select\n */\nexport function useKeyedListOptions(category, includeCustom = true, empty = false) {\n    const context = useContext(DataContext);\n    if (empty) {\n        return [];\n    }\n\n    const options = includeCustom ? context.custom[category]\n        .map(keyed => {\n            const name = displayNamespacedKey(keyed.key, context.namespace);\n            return { value: keyed.key, label: '(Custom) ' + name };\n        }) : [];\n\n    let struct = null;\n    context.vanilla[category].forEach(keyed => {\n        if (struct === null) {\n            struct = keyed.hasOwnProperty('displayName') ? 1 : (keyed.hasOwnProperty('label') ? 2 : 3);\n        }\n        switch(struct) {\n            case 1: // displayName\n                options.push({ value: 'minecraft:' + keyed.name, label: keyed.displayName });\n                return;\n            case 2: // already option\n                options.push(keyed);\n                return;\n            default:\n                options.push({ value: 'minecraft:' + keyed, label: keyed });\n        }\n    });\n    return options;\n}\n\n/**\n * useState hook variant ensuring that the index is kept.\n * \n * @param {object} initial \n * @returns {[object, function (object): void]}\n */\nexport function useIndexableState(initial) {\n    const [state, setState] = useState(initial);\n    const setIndexableState = useCallback(function (next) {\n        if (typeof initial === 'object' && typeof initial.index === 'number') {\n            next.index = initial.index;\n        }\n        setState(next);\n    }, [initial]);\n    return [state, setIndexableState];\n}\n","import React from 'react';\n\nexport function Button ({loading, cat = 'primary', ...buttonProps}) {\n    return <button className={`btn btn--${cat}`} {...buttonProps} tabIndex=\"0\"></button>\n}\n","import React, { useState, useCallback, useRef, useMemo, useContext, useEffect } from 'react';\nimport { useToggle } from '../hooks/ui';\nimport Select from '../ui/Select';\nimport { useKeyedListOptions } from '../hooks/context';\nimport { DataContext } from '../context/DataContext';\nimport { Button } from '../ui/Button';\n\nexport function NamespacedKey({ children, example = 'daily_resource', type, value = '', expectBreakage = false, mayReplaceVanilla = false, defaultReplace = false, onChange, onSelect, onSelectLoad }) {\n    // To trigger form submit\n    const hidden = useRef(null);\n\n    // Final namespaced key\n    const [key, setKey] = useState(value);\n\n    const options = useKeyedListOptions(type, false, !mayReplaceVanilla);\n\n    const context = useContext(DataContext);\n    const defaultNamespace = context.namespace;\n    const [replace, toggle] = useToggle(value === '' ? defaultReplace : options.some(o => key === o.value));\n\n    // Adjust value with default namespace if needed\n    const handleKeyChange = useCallback(function (e) {\n        const value = e.target.value.toLowerCase();\n        if (value.includes(':')) {\n            setKey(value);\n        } else {\n            setKey(defaultNamespace + ':' + value);\n        }\n    }, [defaultNamespace, setKey]);\n\n    const handleReplaceTargetChange = useCallback((selected) => {\n        const key = selected.value;\n        setKey(key);\n        if (typeof onSelect === 'function') {\n            onSelect(key);\n        }\n        if (typeof onSelectLoad === 'function') {\n            context.vanilla.getVanillaResource(type, key)\n                .then(onSelectLoad)\n                .catch(console.error);\n        }\n    }, [context.vanilla, onSelect, onSelectLoad, setKey, type]);\n\n    // Fire onChange\n    useEffect(function() {\n        if (typeof onChange === 'function' && key !== value) {\n            onChange(key);\n        }\n    }, [key, onChange, value]);\n\n    // Allow form submit by pressing enter\n    const handleKeyDown = useCallback(function (e) {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            const form = hidden.current.form;\n            if (form !== null) {\n                form.dispatchEvent(new Event('submit', { cancelable: true }));\n            }\n        }\n    }, []);\n\n    // Remove the \"minecraft:\" part when changing mode\n    const handleToggle = useCallback(function (e) {\n        if (replace && key.startsWith('minecraft:')) {\n            setKey(key => defaultNamespace + ':' + key.split(':')[1]);\n        }\n        toggle(e);\n    }, [defaultNamespace, key, setKey, replace, toggle]);\n\n    // Displayed input value - trim namespace if default\n    const inputValue = useMemo(function () {\n        if (key.startsWith(defaultNamespace + ':')) {\n            return key.split(':')[1];\n        }\n        return key;\n    }, [defaultNamespace, key]);\n\n    // Hidden input value - set to empty when nothing is selected (keeps the key from text mode)\n    const hiddenInputValue = useMemo(function () {\n        if (replace && !options.some(o => o.value === key)) {\n            return '';\n        }\n        return key;\n    }, [key, options, replace]);\n\n    // Adapt select width to its content\n    const style = useMemo(function () {\n        let width = 8 * Math.max.apply(Math, options.map(o => o.label.length)) + 60;\n        if (!isFinite(width)) {\n            width = '250px';\n        }\n        return { width };\n    }, [options]);\n\n    const dummyOnChange = useCallback(console.log, []);\n\n    return <>\n        {typeof children !== 'undefined' && <h3>{(typeof value === 'undefined' || value === '') ? 'Create new ' : 'Edit '}{children}</h3>}\n        <div className=\"form-group\">\n            <label htmlFor=\"key\">{replace ? 'Replace' : 'Key'}</label> :&nbsp;\n            {replace && <div className=\"inbl\" style={style}>\n                <Select options={options} value={options.find(o => key === o.value)} onChange={handleReplaceTargetChange} inputId=\"key\" />\n            </div>}\n            {!replace &&\n                <input type=\"text\" id=\"key\" required pattern=\"^([\\w.-]+:[\\w/.-]+)$|^[\\w/.-]+$\" placeholder={`Example: ${example}`}\n                    autoCapitalize=\"none\" spellCheck=\"false\" autoComplete=\"off\" value={inputValue}\n                    onChange={handleKeyChange} onKeyPress={handleKeyDown} />\n            }\n            <input type={replace ? 'text' : 'hidden'} name=\"key\" value={hiddenInputValue} onChange={dummyOnChange} ref={hidden}\n                required tabIndex=\"-1\" style={{ opacity: 0, height: 0, position: 'absolute' }} />\n            {mayReplaceVanilla && <Button cat=\"info mlm\" onClick={handleToggle}>{replace ? 'Create a new one' : 'Replace vanilla'}</Button>}\n        \n            {expectBreakage && value !== key &&\n                <p className=\"alert--warning\">Warning: changing the name of a resource may break other resources that depend on it.</p>\n            }\n            {!mayReplaceVanilla && !replace && key.startsWith('minecraft:') &&\n                <p className=\"alert--warning\">Warning: datapacks cannot currently replace vanilla {type}.</p>\n            }\n        </div>\n    </>;\n}","export const EFFECTS = {\n    mood_sound: {\n        sound: \"minecraft:ambient.cave\",\n        tick_delay: 6000,\n        block_search_extent: 8,\n        offset: 2.0\n    },\n    sky_color: 7907327,\n    fog_color: 12638463,\n    water_color: 4159204,\n    water_fog_color: 329011\n}\n\nexport const FEATURES = [\n    [],\n    [\n        \"minecraft:lake_water\",\n        \"minecraft:lake_lava\"\n    ],\n    [],\n    [\n        \"minecraft:monster_room\"\n    ],\n    [],\n    [],\n    [\n        \"minecraft:ore_dirt\",\n        \"minecraft:ore_gravel\",\n        \"minecraft:ore_granite\",\n        \"minecraft:ore_diorite\",\n        \"minecraft:ore_andesite\",\n        \"minecraft:ore_coal\",\n        \"minecraft:ore_iron\",\n        \"minecraft:ore_gold\",\n        \"minecraft:ore_redstone\",\n        \"minecraft:ore_diamond\",\n        \"minecraft:ore_lapis\",\n        \"minecraft:disk_sand\",\n        \"minecraft:disk_clay\",\n        \"minecraft:disk_gravel\"\n    ],\n    [],\n    [\n        \"minecraft:patch_tall_grass_2\",\n        \"minecraft:plain_vegetation\",\n        \"minecraft:flower_plain_decorated\",\n        \"minecraft:patch_grass_plain\",\n        \"minecraft:brown_mushroom_normal\",\n        \"minecraft:red_mushroom_normal\",\n        \"minecraft:patch_sugar_cane\",\n        \"minecraft:patch_pumpkin\",\n        \"minecraft:spring_water\",\n        \"minecraft:spring_lava\"\n    ],\n    [\n        \"minecraft:freeze_top_layer\"\n    ]\n]\n\nexport const STARTS = [\n    \"minecraft:village_plains\",\n    \"minecraft:pillager_outpost\",\n    \"minecraft:mineshaft\",\n    \"minecraft:stronghold\",\n    \"minecraft:ruined_portal\"\n]\n\nconst SPAWNERS_AMBIENT = [\n    {\n        type: \"minecraft:bat\",\n        weight: 10,\n        minCount: 8,\n        maxCount: 8\n    }\n];\n\nconst SPAWNERS_CREATURE = [\n    {\n        type: \"minecraft:sheep\",\n        weight: 12,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:pig\",\n        weight: 10,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:chicken\",\n        weight: 10,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:cow\",\n        weight: 8,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:horse\",\n        weight: 5,\n        minCount: 2,\n        maxCount: 6\n    },\n    {\n        type: \"minecraft:donkey\",\n        weight: 1,\n        minCount: 1,\n        maxCount: 3\n    }\n];\n\nconst SPAWNERS_MONSTER = [\n    {\n        type: \"minecraft:spider\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:zombie\",\n        weight: 95,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:zombie_villager\",\n        weight: 5,\n        minCount: 1,\n        maxCount: 1\n    },\n    {\n        type: \"minecraft:skeleton\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:creeper\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:slime\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:enderman\",\n        weight: 10,\n        minCount: 1,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:witch\",\n        weight: 5,\n        minCount: 1,\n        maxCount: 1\n    },\n];\n\nexport const SPAWNERS_DEFAULTS = {\n    ambient: SPAWNERS_AMBIENT,\n    creature: SPAWNERS_CREATURE,\n    misc: [],\n    monster: SPAWNERS_MONSTER,\n    water_ambient: [],\n    water_creature: []\n};\n\nexport const BIOME_DEFAULTS = {\n    effects: EFFECTS,\n    carvers: {\n        air: [\n            \"minecraft:cave\",\n            \"minecraft:canyon\"\n        ]\n    },\n    starts: STARTS,\n    features: FEATURES,\n    spawners: SPAWNERS_DEFAULTS,\n    category: \"plains\",\n    precipitation: \"rain\",\n    surface_builder: \"minecraft:grass\",\n    scale: 0.05,\n    downfall: 0.4,\n    depth: 0.12,\n    temperature: 0.8,\n    player_spawn_friendly: true,\n    spawn_costs: {}\n}\n\nexport const PARTICLES = [\n    'ambient_entity_effect',\n    'angry_villager',\n    'ash',\n    'barrier',\n    'block',\n    'bubble',\n    'bubble_column_up',\n    'bubble_pop',\n    'campfire_cosy_smoke',\n    'campfire_signal_smoke',\n    'cloud',\n    'composter',\n    'crimson_spore',\n    'crit',\n    'current_down',\n    'damage_indicator',\n    'dolphin',\n    'dragon_breath',\n    'dripping_honey',\n    'dripping_lava',\n    'dripping_obsidian_tear',\n    'dripping_water',\n    'dust',\n    'effect',\n    'elder_guardian',\n    'enchant',\n    'enchanted_hit',\n    'end_rod',\n    'entity_effect',\n    'explosion',\n    'explosion_emitter',\n    'falling_dust',\n    'falling_honey',\n    'falling_lava',\n    'falling_nectar',\n    'falling_obsidian_tear',\n    'falling_water',\n    'firework',\n    'fishing',\n    'flame',\n    'flash',\n    'happy_villager',\n    'heart',\n    'instant_effect',\n    'item',\n    'item_slime',\n    'item_snowball',\n    'landing_honey',\n    'landing_lava',\n    'landing_obsidian_tear',\n    'large_smoke',\n    'lava',\n    'mycelium',\n    'nautilus',\n    'note',\n    'poof',\n    'portal',\n    'rain',\n    'reverse_portal',\n    'smoke',\n    'sneeze',\n    'soul',\n    'soul_fire_flame',\n    'spit',\n    'splash',\n    'squid_ink',\n    'sweep_attack',\n    'totem_of_undying',\n    'underwater',\n    'warped_spore',\n    'white_ash',\n    'witch'\n].map(particle => ({ value: 'minecraft:' + particle, label: particle }));\n\nexport const PARTICLE_DEFAULTS = {\n    options: {\n        type: \"minecraft:crimson_spore\"\n    },\n    probability: 0.015\n}\n","export function hexColorToInteger(color) {\n    return parseInt(color.replace(/^#/, ''), 16);\n}\n\nexport function integerColorToHex(color) {\n    return '#' + (color & 0xFFFFFF).toString(16).padStart(6, '0');\n}","export const INT_MIN_VALUE = 0x80000000 & 0x80000000;\nexport const INT_MAX_VALUE = 0x7FFFFFFF;\n\n/**\n * @param {number} n \n * @returns {number}\n */\nexport function maintainPrecision(n) {\n    return parseFloat(n.toFixed(12));\n}\n\n/**\n * @param {number} t \n * @returns {number}\n */\nexport function perlinFade(t) {\n    return t * t * t * (t * (t * 6 - 15) + 10);\n}\n\nexport function lerp(delta, start, end) {\n    return start + delta * (end - start);\n}\n\nexport function lerp2(deltaX, deltaY, n00, n10, n01, n11) {\n    return lerp(deltaY, lerp(deltaX, n00, n10), lerp(deltaX, n01, n11));\n}\n\nexport function lerp3(deltaX, deltaY, deltaZ, n000, n100, n010, n110, n001, n101, n011, n111) {\n    return lerp(deltaZ, lerp2(deltaX, deltaY, n000, n100, n010, n110), lerp2(deltaX, deltaY, n001, n101, n011, n111));\n}\n\nexport function grad(hash, x, y, z) {\n    const h = hash & 15;\n    const u = h < 8 ? x : y;\n    const v = h < 4 ? y : h === 12 || h === 14 ? x : z;\n    return ((h & 1) === 0 ? u : -u) + ((h & 2) === 0 ? v : -v);\n}\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { hexColorToInteger, integerColorToHex } from '../utils/color';\nimport { INT_MAX_VALUE, maintainPrecision } from '../utils/math';\n\nexport const ConfInput = React.memo(function ({\n    attr, type,\n    checked, defaultChecked,\n    children,\n    name, id,\n    onChange,\n    value, defaultValue,\n    min, max, step,\n    className, style\n}) {\n\n    const uId = name || Math.random().toString(36).substr(2, 5) + '-' + id;\n\n    if (typeof type !== 'string') {\n        if (typeof checked !== 'undefined' || typeof defaultChecked !== 'undefined') {\n            type = 'checkbox';\n        } else if (typeof step === 'number' || typeof max === 'number' || !isNaN(typeof value === 'undefined' ? defaultValue : value)) {\n            type = 'number';\n        } else {\n            type = 'text';\n        }\n    }\n\n    if (type === 'checkbox') {\n        return <div className={className}>\n            <label htmlFor={uId}>{children}</label>&nbsp;:&nbsp;<input type={type || 'checkbox'} data-name={name || id} name={name} id={uId} className=\"checkbox\" {...{ ...attr, checked, defaultChecked, onChange, value, style }} />\n        </div>\n    }\n    return <div className={className}>\n        {typeof children === 'undefined' || <><label htmlFor={uId}>{children}</label> : </>}\n        <input\n            type={type} data-name={name || id} name={name} id={uId}\n            {...{ ...attr, value, onChange, defaultValue, min, max, step, style }} />\n    </div>\n});\n\nexport const NumberInput = React.memo(function ({\n    className, style = {}, children, defaultValue = 0,\n    id, name, onChange, upChange,\n    required = true, title, value,\n    type = 'number', step = 1, min = 0, max = INT_MAX_VALUE\n}) {\n\n    const uId = name || Math.random().toString(36).substr(2, 5) + '-' + id;\n    const n = parseFloat(typeof value === 'number' || typeof value === 'string' ? value : defaultValue);\n    const [val, setValue] = useState(n);\n    const [prevVal, setPrevValue] = useState(n);\n    const [click, setClick] = useState(null);\n\n    value = parseFloat(value);\n    min = parseFloat(min);\n    step = parseFloat(step);\n    max = parseFloat(max);\n\n    if (n !== prevVal && n !== val && !isNaN(val) && val !== '') {\n        setValue(n);\n        setPrevValue(n);\n    }\n\n    const handleChange = useCallback(function (e) {\n        const value = e.target.value;\n        const n = parseFloat(value);\n        if (value === '') {\n            setValue(value);\n        } else if (value.length <= INT_MAX_VALUE.toString().length) {\n            if (value.endsWith('.00001')) {\n                // Fix browser step\n                setValue(val => maintainPrecision(val + (n > val ? step : -step)));\n            } else {\n                setValue(n);\n            }\n        }\n    }, [step]);\n\n    const stepUpDown = useCallback(function (addition) {\n        setValue(val => {\n            if (!isNaN(val)) {\n                const n = maintainPrecision(val + (addition ? step : -step));\n                if (n >= min && n <= max) {\n                    return n;\n                }\n                return val;\n            }\n            return val;\n        });\n    }, [max, min, step]);\n\n    const handleMouseDown = useCallback(function (e) {\n        e.preventDefault();\n        const addition = e.target.classList.contains('btn-plus');\n        if (val === '') {\n            return;\n        }\n        stepUpDown(addition);\n        setClick(window.setInterval(() => stepUpDown(addition), 150));\n    }, [stepUpDown, val]);\n\n    const handleClick = useCallback(function (e) {\n        e.preventDefault();\n    }, []);\n\n    const handleMouseUp = useCallback(function (e) {\n        e.preventDefault();\n        window.clearInterval(click);\n        setClick(null);\n    }, [click]);\n\n    useEffect(function () {\n        let n = val;\n        if (typeof n === 'string') {\n            const value = val.replace(',', '.');\n            const parse = typeof step === 'undefined' ? parseInt : parseFloat;\n            n = parse(value);\n        }\n\n        if (isNaN(value) && n === defaultValue && !required) {\n            return;\n        }\n\n        if (!isNaN(n) && val !== value && n >= min && n < max && click === null) {\n            if (typeof upChange === 'function') {\n                upChange({ [id || name]: n });\n            } else if (typeof onChange === 'function') {\n                onChange(n);\n            }\n        }\n    }, [click, defaultValue, id, min, max, name, onChange, required, step, type, upChange, val, value]);\n\n    style.width = getNumberSize(val, max, step);\n    className = (className || '') + ' number-wrapper';\n\n    return <div className={className} title={title}>\n        {typeof children === 'undefined' || <div className=\"label\"><label htmlFor={uId}>{children}</label> :&nbsp;</div>}\n            <div className=\"number-input-wrapper\"><input\n                type={type} name={name} id={uId} style={style}\n                min={min} max={max}\n                value={val} data-name={name || id} required={required}\n                step={step < 1 ? 'any' : 1} onChange={handleChange}\n            />\n            {type === 'number' &&\n                <div className=\"number-controls\">\n                    <button className=\"btn-plus\" tabIndex=\"-1\" onMouseDown={handleMouseDown} onClick={handleClick} onMouseOut={handleMouseUp} onMouseUp={handleMouseUp}></button>\n                    <button className=\"btn-minus\" tabIndex=\"-1\" onMouseDown={handleMouseDown} onClick={handleClick} onMouseOut={handleMouseUp} onMouseUp={handleMouseUp}></button>\n                </div>\n            }</div>\n    </div>\n});\n\nexport const ColorInput = React.memo(function({ children, defaultValue = 0, id, onChange, upChange, value }) {\n    const uId = Math.random().toString(36).substr(2, 5) + '-' + id;\n\n    const handleChange = useCallback(function(e) {\n        const value = e.target.value;\n\n        if (typeof upChange === 'function') {\n            upChange({ [id]: hexColorToInteger(value) });\n        } else if (typeof onChange === 'function') {\n            onChange(hexColorToInteger(value));\n        }\n    }, [id, onChange, upChange]);\n\n    \n    useEffect(() => {\n        if (typeof value !== 'number' && defaultValue !== 0) {\n            if (typeof upChange === 'function') {\n                upChange({ [id]: parseFloat(defaultValue) });\n            } else if (typeof onChange === 'function') {\n                onChange(parseFloat(defaultValue));\n            }\n        }\n    }, [defaultValue, id, onChange, upChange, value]);\n\n    return <div>\n        {typeof children === 'undefined' || <><label htmlFor={uId}>{children}</label> : </>}\n        <input type=\"color\" id={uId} data-name={id} onChange={handleChange} value={integerColorToHex(value || defaultValue)} />\n    </div>\n});\n\nfunction getNumberSize(numeric, max = 10, step = 1) {\n    if (numeric === '') {\n        return 12 + 'ch';\n    }\n    const decimals = countDecimals(step);\n\n    let n, str;\n    if (typeof numeric === 'number') {\n        n = numeric;\n        str = numeric.toString();\n    } else {\n        n = parseFloat(numeric);\n        str = numeric;\n    }\n\n    let length = str.length;\n    if (!isNaN(n)) {\n        length = Math.max(length, n.toFixed(decimals).toString().length);\n    }\n    const ceil = max > 9 && n < 10;\n    const smooth = step === 1 ? 4 : 2;\n    return length + smooth + (ceil ? 1 : 0) + 'ch';\n}\nfunction countDecimals(n) {\n    if (typeof n !== 'number') {\n        return 0;\n    }\n    if ((n % 1) !== 0)\n        return n.toString().split(\".\")[1].length;\n    return 0;\n}\n","export const TAGS_OPTIONS = [\n    'acacia_logs',\n    'anvil',\n    'bamboo_plantable_on',\n    'banners',\n    'base_stone_nether',\n    'base_stone_overworld',\n    'beacon_base_blocks',\n    'beds',\n    'bee_growables',\n    'beehives',\n    'birch_logs',\n    'buttons',\n    'campfires',\n    'carpets',\n    'climbable',\n    'coral_blocks',\n    'coral_plants',\n    'corals',\n    'crimson_stems',\n    'crops',\n    'dark_oak_logs',\n    'doors',\n    'dragon_immune',\n    'enderman_holdable',\n    'fence_gates',\n    'fences',\n    'fire',\n    'flower_pots',\n    'flowers',\n    'gold_ores',\n    'guarded_by_piglins',\n    'hoglin_repellents',\n    'ice',\n    'impermeable',\n    'infiniburn_end',\n    'infiniburn_nether',\n    'infiniburn_overworld',\n    'jungle_logs',\n    'leaves',\n    'logs',\n    'logs_that_burn',\n    'mushroom_grow_block',\n    'non_flammable_wood',\n    'nylium',\n    'oak_logs',\n    'piglin_repellents',\n    'planks',\n    'portals',\n    'pressure_plates',\n    'prevent_mob_spawning_inside',\n    'rails',\n    'sand',\n    'saplings',\n    'shulker_boxes',\n    'signs',\n    'slabs',\n    'small_flowers',\n    'soul_fire_base_blocks',\n    'soul_speed_blocks',\n    'spruce_logs',\n    'stairs',\n    'standing_signs',\n    'stone_bricks',\n    'stone_pressure_plates',\n    'strider_warm_blocks',\n    'tall_flowers',\n    'trapdoors',\n    'underwater_bonemeals',\n    'unstable_bottom_center',\n    'valid_spawn',\n    'wall_corals',\n    'wall_post_override',\n    'wall_signs',\n    'walls',\n    'warped_stems',\n    'wart_blocks',\n    'wither_immune',\n    'wither_summon_base_blocks',\n    'wooden_buttons',\n    'wooden_doors',\n    'wooden_fences',\n    'wooden_pressure_plates',\n    'wooden_slabs',\n    'wooden_stairs',\n    'wooden_trapdoors',\n    'wool'\n].map(tag => ({ value: 'minecraft:' + tag, label: tag }));\n","import React, { useState, useCallback, useMemo, useEffect, useContext } from \"react\";\nimport Select from \"../../ui/Select\";\nimport { TAGS_OPTIONS } from \"./Tags\";\nimport { BlockState } from \"./BlockState\";\nimport { NumberInput } from \"../../ui/Input\";\nimport { DataContext } from \"../../context/DataContext\";\n\nexport const BlockPredicate = React.memo(function({target, onChange}) {\n    const [predicate, setPredicate] = useState(target);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:always_true', label: 'Always true' },\n            { value: 'minecraft:block_match', label: 'Block match' },\n            { value: 'minecraft:blockstate_match', label: 'Block state match' },\n            { value: 'minecraft:random_block_match', label: 'Random block match' },\n            { value: 'minecraft:random_blockstate_match', label: 'Random block state match' },\n            { value: 'minecraft:tag_match', label: 'Tag match' }\n        ];\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        setPredicate({ predicate_type: option.value });\n    }, []);\n    const handleBlockChange = useCallback(function(option) {\n        setPredicate(predicate => ({ ...predicate, block: option.value }));\n    }, []);\n    const handleBlockStateChange = useCallback(function(block_state) {\n        setPredicate(predicate => ({ ...predicate, block_state }));\n    }, []);\n    const handleTagChange = useCallback(function(option) {\n        setPredicate(predicate => ({ ...predicate, tag: option.value }));\n    }, []);\n    const handleChange = useCallback(function(content) {\n        setPredicate(predicate => ({ ...predicate, ...content }));\n    }, []);\n    useEffect(() => {\n        if (predicate !== target) {\n            onChange(predicate, target);\n        }\n    }, [onChange, predicate, target]);\n\n    const type = predicate.predicate_type;\n\n    return <div>\n        <label>Predicate type</label>\n        <Select options={options} value={options.find(o => o.value === predicate.predicate_type)} onChange={handleTypeChange} />\n        {type === 'minecraft:block_match' && <BlockSelect block={predicate.block} onChange={handleBlockChange} />}\n        {type === 'minecraft:blockstate_match' && <BlockState block={predicate.block_state} onChange={handleBlockStateChange} />}\n        {(type === 'minecraft:random_block_match' || type === 'minecraft:random_blockstate_match') &&\n            <RandomBlockMatch block={predicate.block} probability={predicate.probability} onChange={handleChange} type={type} />\n        }\n        {type === 'minecraft:tag_match' && <Select options={TAGS_OPTIONS} value={TAGS_OPTIONS.find(t => t.value === predicate.tag)} onChange={handleTagChange} />}\n    </div>;\n});\n\nconst RandomBlockMatch = React.memo(function({block, onChange, type, probability}) {\n    const handleBlockChange = useCallback(function(option) {\n        onChange({ block: option.value });\n    }, [onChange]);\n    const handleBlockStateChange = useCallback(function(block_state) {\n        onChange({ block_state });\n    }, [onChange]);\n\n    return <div className=\"form-group form-row\">\n        <div style={{ flexGrow: 1 }}>\n        {type === 'minecraft:random_block_match' && <BlockSelect block={block} onChange={handleBlockChange} />}\n        {type === 'minecraft:random_blockstate_match' && <BlockState block={block} onChange={handleBlockStateChange} />}\n        </div>\n        <NumberInput id=\"probability\" value={probability} defaultValue=\"0.1\"\n            step=\"0.01\" min=\"0\" max=\"1\" className=\"mlm\" upChange={onChange}>\n                Probability\n        </NumberInput>\n    </div>\n});\n\nexport const BlockSelect = React.memo(function({block, inputId, onChange, options}) {\n    const context = useContext(DataContext);\n    const blocks = useMemo(function () {\n        if (typeof options === 'undefined') {\n            return context.vanilla.blocks.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n        }\n        return options;\n    }, [context.vanilla.blocks, options]);\n    return <Select options={blocks} value={blocks.find(b => b.value === block)} onChange={onChange} inputId={inputId} />;\n});\n","import { useReducer, useState, useCallback, useEffect, useContext, useMemo } from \"react\";\nimport { useKeyedListOptions } from \"./context\";\nimport { DataContext } from \"../context/DataContext\";\nimport arrayMove from \"array-move\";\n\nfunction crudReducer(state, action) {\n    switch (action.type) {\n        case ADD:\n            if (action.unshift) {\n                return [action.payload, ...state];\n            }\n            return [...state, action.payload];\n        case UPDATE:\n            if (typeof action.target === 'number' && typeof action.payload === 'number') {\n                return arrayMove(state, action.target, action.payload);\n            }\n            if (typeof action.target === 'undefined') {\n                throw new Error('Cannot update an element without its previous state.');\n            }\n            return state.map(element => element === action.target ? action.payload : element);\n        case REMOVE:\n            return state.filter(element => element !== action.payload);\n        case REPLACE:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport function useCrud(data = []) {\n    return useReducer(crudReducer, data);\n}\n\n/**\n * @param {object[]} [data] \n * @param {object|function (object[]): object} [initial] \n * @returns {[object[], function (SyntheticEvent): void, function (number|object, number|object): void, function (SyntheticEvent, number): void, function (object[]): void}\n */\nexport function useCrudPreset(data = [], initial = {}, unshift = false) {\n    const [entities, dispatch] = useCrud(data);\n\n    const add = useCallback(function(e) {\n        e.preventDefault();\n        const n = typeof initial === 'function' ? initial(entities) : { ...initial };\n        dispatch({ type: CRUD.ADD, payload: n, unshift });\n    }, [dispatch, entities, initial, unshift]);\n    const update = useCallback(function(state, previous) {\n        if (state.hasOwnProperty('oldIndex') && state.hasOwnProperty('newIndex')) {\n            dispatch({ type: CRUD.UPDATE, target: state.oldIndex, payload: state.newIndex });\n            return;\n        }\n        dispatch({ type: CRUD.UPDATE, target: previous, payload: state });\n    }, [dispatch]);\n    const remove = useCallback(function(e, index) {\n        e.preventDefault();\n        dispatch({ type: CRUD.REMOVE, payload: entities[index] });\n    }, [dispatch, entities]);\n    const replace = useCallback(function(entities) {\n        dispatch({ type: CRUD.REPLACE, payload: entities });\n    }, [dispatch]);\n\n    return [entities, add, update, remove, replace];\n}\n\nexport function useBlocksOptions(mapped = true) {\n    const blocks = useContext(DataContext).vanilla.blocks;\n    return useMemo(function() {\n        return mapped ? blocks.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName })): blocks;\n    }, [blocks, mapped]);\n}\n\n/**\n * @param {number} [initial] \n * @returns {function(SyntheticEvent|string|number): void} \n */\nexport function useNumber(initial = 0) {\n    const [n, setState] = useState(initial);\n    const setNumber = function(n) {\n        if (typeof n === 'object') {\n            n = n.target.value;\n        }\n        if (typeof n === 'string') {\n            n = isNaN(n) ? initial : parseInt(n);\n        }\n        setState(n);\n    }\n    return [n, setNumber];\n}\n\nexport function useValueChange(changeCallback, obj) {\n    return useCallback(function(e) {\n        if (e.target.type === 'checkbox') {\n            changeCallback({ ...obj, [e.target.dataset.name || e.target.id || e.target.name]: e.target.checked });\n            return;\n        }\n        const value = isNaN(e.target.value) ? e.target.value : parseFloat(e.target.value);\n        changeCallback({ ...obj, [e.target.dataset.name || e.target.id || e.target.name]: value });\n    }, [changeCallback, obj]);\n}\n\nexport function useJsonEffect(state, props, onChange) {\n    useEffect(() => {\n        if (state === props) {\n            return;\n        }\n        if (JSON.stringify(state) !== JSON.stringify(props)) {\n            onChange(state, props);\n        }\n    }, [state, props, onChange]);\n    return state;\n}\n\n/**\n * Fast way to provide a list of options for react-select\n * and store selection as string (list).\n * \n * @param {('biomes'|'dimensions'|'dimension_types'|'features'|'noises'|'surfaces')} category Data category\n * @param {string|string[]} initial Initial selection\n * @param {boolean} [multiple]\n * @returns {[{ value: string, label: string }[], string|string[], function({ value: string }): void]} Options list, currently selected list and his updater\n */\nexport function useKeyedOptionsState(category, initial, multiple) {\n    const options = useKeyedListOptions(category); // Get options\n\n    // Default value for 'multiple' argument\n    if (typeof multiple === 'undefined') {\n        multiple = Array.isArray(initial);\n    }\n\n    // Enhanced use state - usage of options for default value if needed\n    const [selection, setSelection] = useState(initial || function() {\n        if (multiple) {\n            return options.length > 0 ? [options[0].value] : [];\n        }\n        return options.length > 0 ? options[0].value : '';\n    }());\n\n    // End chain react-select change handler\n    const setSelectionFromOptions = useCallback(function(selected) {\n        if (multiple) {\n            setSelection(selected === null ? [] : selected.map(o => o.value));\n        } else {\n            setSelection(selected.value);\n        }\n    }, [multiple]);\n\n    return [options, selection, setSelectionFromOptions];\n}\n\nconst ADD = 'ADD';\nconst UPDATE = 'UPDATE';\nconst REMOVE = 'REMOVE';\nconst REPLACE = 'REPLACE';\nexport const CRUD = { ADD, UPDATE, REMOVE, REPLACE };","import React, { useCallback, useContext, useEffect, useMemo } from \"react\";\nimport Select from \"../../ui/Select\";\nimport { BlockSelect } from \"./BlockPredicate\";\nimport { DataContext } from \"../../context/DataContext\";\nimport { Button } from '../../ui/Button';\nimport { getStateValue } from \"../../utils/data\";\nimport { useCrudPreset, useBlocksOptions } from \"../../hooks/form\";\nimport { ConfInput, NumberInput } from \"../../ui/Input\";\n\nexport const BlockState = React.memo(function ({ block = {}, children, className = 'form-group', inputId, name, onChange, options }) {\n    const context = useContext(DataContext);\n\n    const handleTypeChange = useCallback(function (option) {\n        const Name = option.value;\n        const Properties = {};\n        (context.vanilla.blocks.find(b => 'minecraft:' + b.name === Name) || { states: [] }).states.forEach(state => {\n            Properties[state.name] = getStateValue(state, block.Properties);\n        })\n        delete block.Properties;\n        if (Object.keys(Properties).length > 0) {\n            onChange({ ...block, Name, Properties }, block);\n        } else {\n            onChange({ ...block, Name }, block);\n        }\n    }, [block, context.vanilla.blocks, onChange]);\n    const handlePropertiesChange = useCallback(function (properties) {\n        onChange({ ...block, Properties: { ...block.Properties, ...properties } }, block);\n    }, [block, onChange]);\n\n    const blocks = useMemo(function () {\n        if (typeof options === 'undefined') {\n            return context.vanilla.blocks.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n        }\n        return options;\n    }, [context.vanilla.blocks, options]);\n\n    const selected = useMemo(function () {\n        return blocks.find(o => o.value === block.Name);\n    }, [blocks, block.Name]);\n\n    return <div className={className}>\n        <div className=\"form-row\">\n            <div style={{ flexGrow: 1 }}><Select options={blocks} value={selected} name={name} onChange={handleTypeChange} inputId={inputId} /></div>\n            {children}\n        </div>\n        <BlockStateProperties block={block.Name} properties={block.Properties} onChange={handlePropertiesChange} />\n    </div>;\n});\n\nexport const BlocksList = React.memo(function ({ list, onChange }) {\n    const options = useBlocksOptions();\n\n    const [blocks, handleAdd, handleChange, handleRemove] = useCrudPreset(list, function (blocks) {\n        // Get the first non taken block name\n        return { Name: (options.find(o => !blocks.some(b => b.Name === o.value)) || { value: 'minecraft:stone' }).value };\n    });\n\n    const handleStateChange = useCallback(function (state, i) {\n        handleChange(state, blocks[i]);\n    }, [blocks, handleChange]);\n\n    useEffect(() => {\n        if (blocks !== list) {\n            onChange(blocks);\n        }\n    }, [blocks, list, onChange]);\n\n    return <div className=\"form-group\">\n        {blocks.map((block, i) => {\n            const filteredOptions = options.filter(o => o.value === block.Name || !blocks.some(d => d.Name === o.value));\n            return <BlockState block={block} options={filteredOptions} key={block.Name} onChange={state => handleStateChange(state, i)}>\n                <Button cat=\"danger mlm\" onClick={(e) => handleRemove(e, i)}>Remove</Button>\n            </BlockState>\n        })}\n        <Button onClick={handleAdd}>Add block</Button>\n    </div>;\n});\n\nexport const BlocksNamesList = React.memo(function ({ list, onChange }) {\n    const options = useBlocksOptions();\n\n    const [blocks, handleAdd, handleChange, handleRemove] = useCrudPreset(list, function (blocks) {\n        // Get the first non taken block name\n        return (options.find(o => !blocks.some(b => b === o.value)) || { value: 'minecraft:stone' }).value;\n    });\n\n    useEffect(() => {\n        if (blocks !== list) {\n            onChange(blocks);\n        }\n    }, [blocks, list, onChange]);\n\n    return <div className=\"form-group\">\n        {blocks.map((block, i) => {\n            const filteredOptions = options.filter(o => o.value === block || !blocks.some(d => d === o.value));\n            return <div className=\"form-group form-row\" key={block}>\n                <div style={{ flexGrow: 1 }}><BlockSelect block={block} options={filteredOptions} onChange={o => handleChange(o.value, block)} /></div>\n                <Button cat=\"danger mlm\" onClick={(e) => handleRemove(e, i)}>Remove</Button>\n            </div>\n        })}\n        <Button cat=\"primary mts\" onClick={handleAdd}>Add block</Button>\n    </div>;\n});\n\nfunction BlockStateProperties({ block, children, onChange, properties = {} }) {\n    const states = (useContext(DataContext).vanilla.blocks.find(b => 'minecraft:' + b.name === block) || { states: [] }).states;\n\n    const handlePropertyChange = useCallback(function (option) {\n        onChange({ ...properties, [option.name]: option.value });\n    }, [onChange, properties]);\n    const handleCheckboxChange = useCallback(function (e) {\n        const value = e.target.checked.toString();\n        onChange({ ...properties, [e.target.dataset.name]: value });\n    }, [onChange, properties]);\n    const handleNumberChange = useCallback(function (value) {\n        const key = Object.keys(value)[0];\n        onChange({ ...properties, [key]: value[key].toString() });\n    }, [onChange, properties]);\n\n    const selects = [];\n    states.forEach(possible => {\n        switch (possible.type) {\n            case 'bool':\n                selects.push(\n                    <ConfInput key={possible.name} id={possible.name}\n                        checked={properties[possible.name] === 'true'}\n                        onChange={handleCheckboxChange}>\n                        {possible.name}\n                    </ConfInput>\n                );\n                break;\n            case 'int':\n                selects.push(\n                    <NumberInput key={possible.name} id={possible.name}\n                        value={properties[possible.name] || 0} upChange={handleNumberChange}\n                        min=\"0\" max={possible.num_values - 1}>\n                        {possible.name}\n                    </NumberInput>\n                );\n                break;\n            default:\n                const options = possible.values.map(value => ({ value, name: possible.name, label: value }));\n                const defaultValue = options.find(o => o.value === properties[possible.name]) || options[0];\n                selects.push(<div key={possible.name}>\n                    <label>{possible.name}</label> : <div className=\"inbl\">\n                        <Select options={options} value={defaultValue} onChange={handlePropertyChange} />\n                    </div>\n                </div>);\n        }\n    });\n    return <div className=\"form-group form-row\">\n        {selects}{children}\n    </div>;\n}","import React, { useCallback, useState, useContext } from 'react';\nimport { PARTICLES, PARTICLE_DEFAULTS } from './BiomeDefaults';\nimport { NumberInput, ConfInput, ColorInput } from '../../ui/Input';\nimport Select from '../../ui/Select';\nimport { BlockState } from '../state/BlockState';\nimport { useJsonEffect } from '../../hooks/form';\nimport { DataContext } from '../../context/DataContext';\n\nexport const BiomeEffects = React.memo(function ({ effects, onChange }) {\n\n    const [blockColor, setBlockColor] = useState(effects);\n    const [particle, setParticle] = useState(effects.particle);\n\n    const sounds = useContext(DataContext).vanilla.sounds;\n\n    const handleColorChange = useCallback(function (color) {\n        onChange({ ...effects, ...color });\n    }, [effects, onChange]);\n\n    const handleBlockColorChange = useCallback(function (color) {\n        onChange({ ...effects, ...color });\n        setBlockColor({ ...blockColor, ...color });\n    }, [blockColor, effects, onChange]);\n    const handleAmbientSoundChange = useCallback(function (option) {\n        if (option === null) {\n            onChange((({ ambient_sound, ...effects }) => effects)(effects));\n        } else {\n            onChange({ ...effects, ambient_sound: option.value });\n        }\n    }, [effects, onChange]);\n    const handleMoodSoundChange = useCallback(function (mood_sound) {\n        if (mood_sound === null) {\n            onChange((({ mood_sound, ...effects }) => effects)(effects));\n        } else {\n            if (typeof effects.mood_sound === 'undefined') {\n                onChange({\n                    ...effects, mood_sound: {\n                        tick_delay: 6000,\n                        block_search_extent: 8,\n                        offset: 2.0, ...mood_sound\n                    }\n                });\n            } else {\n                onChange({ ...effects, mood_sound: { ...effects.mood_sound, ...mood_sound } });\n            }\n        }\n    }, [effects, onChange]);\n    const handleParticleChange = useCallback(function (particle) {\n        onChange({ ...effects, particle });\n        setParticle(particle);\n    }, [effects, onChange]);\n\n    const handleBlockColorToggle = useCallback(function (e) {\n        if (e.target.checked) {\n            onChange({ ...effects, foliage_color: blockColor.foliage_color || 10387789, grass_color: blockColor.grass_color || 9470285 });\n        } else {\n            onChange((({ foliage_color, grass_color, ...effects }) => effects)(effects));\n        }\n    }, [blockColor, effects, onChange]);\n    const handleParticleToggle = useCallback(function (e) {\n        if (e.target.checked) {\n            onChange({ ...effects, particle: particle || PARTICLE_DEFAULTS });\n        } else {\n            onChange((({ particle, ...effects }) => effects)(effects));\n        }\n    }, [onChange, effects, particle]);\n\n    const blockColorChecked = effects.hasOwnProperty('foliage_color') || effects.hasOwnProperty('grass_color');\n    const particleChecked = effects.hasOwnProperty('particle');\n\n    return <>\n        <fieldset>\n            <legend>Biome effects</legend>\n            <div className=\"form-group form-row\">\n                <ColorInput id=\"sky_color\" value={effects.sky_color} upChange={handleColorChange}>Sky color</ColorInput>\n                <ColorInput id=\"fog_color\" value={effects.fog_color} upChange={handleColorChange}>Fog color</ColorInput>\n                <ColorInput id=\"water_color\" value={effects.water_color} upChange={handleColorChange}>Water color</ColorInput>\n                <ColorInput id=\"water_fog_color\" value={effects.water_fog_color} upChange={handleColorChange}>Water fog color</ColorInput>\n                {blockColorChecked && <>\n                    <ColorInput id=\"foliage_color\" value={effects.foliage_color || 10387789} upChange={handleBlockColorChange}>Foliage color</ColorInput>\n                    <ColorInput id=\"grass_color\" value={effects.grass_color || 9470285} upChange={handleBlockColorChange}>Grass color</ColorInput>\n                </>}\n                <ConfInput id=\"block-toggle\" checked={blockColorChecked} onChange={handleBlockColorToggle}>Optionals</ConfInput>\n                <ConfInput id=\"particle\" checked={particleChecked} onChange={handleParticleToggle}>Particle</ConfInput>\n            </div>\n            {particleChecked && <ParticleEffect particle={effects.particle} onChange={handleParticleChange} />}\n        </fieldset>\n        <fieldset>\n            <legend>Optionals sounds</legend>\n            <div className=\"form-group form-row\">\n                Ambient :\n            <div style={{ flexGrow: 0.95, flexShrink: 1 }}><Select options={sounds} value={sounds.find(o => effects.ambient_sound === o.value)} onChange={handleAmbientSoundChange} isClearable={true} /></div>\n            </div>\n            <MoodSound options={sounds} sound={effects.mood_sound} onChange={handleMoodSoundChange} />\n        </fieldset>\n    </>\n});\n\nconst MoodSound = React.memo(function ({ onChange, options, sound }) {\n    const handleSoundChange = useCallback(function (option) {\n        onChange(option === null ? null : { sound: option.value });\n    }, [onChange]);\n\n    return <>\n        <div className=\"form-group form-row\">\n            Mood :\n            <div style={{ flexGrow: 0.95, flexShrink: 1 }}><Select options={options} value={options.find(o => (sound || {}).sound === o.value)} onChange={handleSoundChange} isClearable={true} /></div>\n        </div>\n        {typeof sound === 'object' && <div className=\"form-row\" style={{ marginTop: '0.5rem' }}>\n            <NumberInput id=\"tick_delay\" value={sound.tick_delay} upChange={onChange} className=\"mls\">Tick delay</NumberInput>\n            <NumberInput id=\"block_search_extent\" value={sound.block_search_extent} upChange={onChange} className=\"mls\">Block search extent</NumberInput>\n            <NumberInput id=\"offset\" value={sound.offset} upChange={onChange} step={0.1} className=\"mls\">Offset</NumberInput>\n        </div>}\n    </>\n});\n\nconst ParticleEffect = React.memo(function ({ onChange, particle }) {\n\n    particle = useJsonEffect(particle || PARTICLE_DEFAULTS, particle, onChange);\n    const handleTypeChange = useCallback(function (option) {\n        onChange({ ...particle, options: { type: option.value } });\n    }, [particle, onChange]);\n    const handleBlockChange = useCallback(function (block) {\n        onChange({ ...particle, options: { ...particle.options, ...block } });\n    }, [particle, onChange]);\n    const handleColorChange = useCallback(function (color) {\n        onChange({ ...particle, options: { ...particle.options, ...color } });\n    }, [particle, onChange]);\n    const handleScaleChange = useCallback(function (scale) {\n        onChange({ ...particle, options: { ...particle.options, scale } });\n    }, [particle, onChange]);\n    const handleProbabilityChange = useCallback(function (probability) {\n        onChange({ ...particle, probability });\n    }, [particle, onChange]);\n\n    const o = particle.options;\n    return <div className=\"form-group form-row\">\n        <div style={{ flexGrow: 0.95, flexShrink: 1 }}><Select options={PARTICLES} value={PARTICLES.find(op => o.type === op.value)} onChange={handleTypeChange} /></div>\n        {(o.type === 'minecraft:block' || o.type === 'minecraft:falling_dust') && <div style={{ flexGrow: 1 }}><BlockState block={o} onChange={handleBlockChange} /></div>}\n        {o.type === 'minecraft:dust' && <>\n            <DustColor r={o.r} g={o.g} b={o.b} onChange={handleColorChange} />\n            <NumberInput id=\"scale\" value={o.scale} onChange={handleScaleChange} defaultValue=\"1\" step=\"0.1\" className=\"mls\">Scale</NumberInput>\n        </>}\n        <NumberInput id=\"probability\" value={particle.probability} onChange={handleProbabilityChange} step=\"0.005\" className=\"mlm\">Probability</NumberInput>\n    </div>\n});\n\nconst DustColor = React.memo(function ({ r, g, b, onChange }) {\n    const handleColorChange = useCallback(function (color) {\n        const r = ((color >> 16) & 0xFF) / 0xFF;\n        const g = ((color >> 8) & 0xFF) / 0xFF;\n        const b = (color & 0xFF) / 0xFF;\n        onChange({ r, g, b });\n    }, [onChange]);\n\n    let value = undefined;\n    if (typeof r === 'number' && typeof g === 'number' && typeof b === 'number') {\n        r = (r * 0xFF) & 0xFF;\n        g = (g * 0xFF) & 0xFF;\n        b = (b * 0xFF) & 0xFF;\n        value = ((r << 16) | (g << 8) | b);\n    }\n\n    return <ColorInput value={value} defaultValue={0x38470} onChange={handleColorChange} className=\"mls\">Color</ColorInput>\n});\n","import React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport Select from '../../ui/Select';\nimport { useCrudPreset, useJsonEffect } from \"../../hooks/form\";\nimport { useToggle } from '../../hooks/ui';\nimport { Button } from '../../ui/Button';\nimport { DataContext } from '../../context/DataContext';\nimport { SPAWNERS_DEFAULTS } from './BiomeDefaults';\nimport { NumberInput } from '../../ui/Input';\n\nexport const BiomeSpawners = React.memo(function({onChange, data}) {\n\n    const spawners = useJsonEffect(data || SPAWNERS_DEFAULTS, data, onChange);\n    const entities = useContext(DataContext).vanilla.entities;\n\n    const handleChange = useCallback(function(group, groupSpawners) {\n        onChange({ ...spawners, [group]: groupSpawners });\n    }, [spawners, onChange]);\n\n    return <div>\n        <SpawnGroup group=\"ambient\" data={spawners.ambient} onChange={handleChange} entities={entities}>Ambient</SpawnGroup>\n        <SpawnGroup group=\"creature\" data={spawners.creature} onChange={handleChange} entities={entities}>Creature</SpawnGroup>\n        <SpawnGroup group=\"misc\" data={spawners.misc} onChange={handleChange} entities={entities}>Miscellaneous</SpawnGroup>\n        <SpawnGroup group=\"monster\" data={spawners.monster} onChange={handleChange} entities={entities}>Monster</SpawnGroup>\n        <SpawnGroup group=\"water_ambient\" data={spawners.water_ambient} onChange={handleChange} entities={entities}>Water ambient</SpawnGroup>\n        <SpawnGroup group=\"water_creature\" data={spawners.water_creature} onChange={handleChange} entities={entities}>Water creature</SpawnGroup>\n    </div>;\n});\n\nconst SpawnGroup = React.memo(function({children, entities, data = [], group, onChange}) {\n    const [visibility, toggle] = useToggle();\n    const text = visibility ? 'Less...' : 'More...';\n\n    const [previous, setPrevious] = useState(data);\n    const [spawners, insert, handleChange, handleRemove, replace] = useCrudPreset(data, function(spawners) {\n        // Get the first non taken entity\n        return { type: (entities.filter(o => !spawners.some(s => s.type === o.value))[0] || { value: 'minecraft:cow' }).value, minCount: 1, maxCount: 1, weight: 1 };\n    }, true);\n    if (data !== previous) {\n        replace(data);\n        setPrevious(data);\n    }\n\n    const handleAdd = useCallback(function(e) {\n        insert(e);\n        if (!visibility) {\n            toggle();\n        }\n    }, [insert, toggle, visibility]);\n\n    useEffect(function() {\n        if (spawners !== data && previous === data) {\n            onChange(group, spawners);\n        }\n    }, [data, group, onChange, previous, spawners]);\n\n    if (visibility) {\n        return <div>\n            <div className=\"toggle-label\">\n                {children}\n                <div className=\"btn-group\">\n                    {entities.length > spawners.length && <Button onClick={handleAdd}>Add</Button>}\n                    {spawners.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{text}</Button>} \n                </div>\n            </div>\n            {spawners.map((spawner, index) => {\n                const options = entities.filter(o => spawner.type === o.value || !spawners.some(s => s.type === o.value));\n                return <SpawnDefinition data={spawner} key={spawner.type} onChange={handleChange} onDelete={handleRemove} index={index} options={options} />;\n            })}\n        </div>;\n    }\n    \n    return <div className=\"toggle-label\">\n        {children}\n        <div className=\"btn-group\">\n            {spawners.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{text}</Button>}\n            {(spawners.length < 1) && <Button onClick={handleAdd}>Add</Button>}\n        </div>\n    </div>;\n});\n\nconst SpawnDefinition = React.memo(function({data, index, options, onChange, onDelete}) {\n\n    const handleTypeChange = useCallback(function(option) {\n        onChange({ ...data, type: option.value }, data);\n    }, [data, onChange]);\n    const handleValueChange = useCallback(function(value) {\n        onChange({ ...data, ...value }, data);\n    }, [data, onChange]);\n    const handleCountChange = function(count) {\n        const name = Object.keys(count)[0];\n        const value = count[name];\n        if ((name === 'minCount' && value <= data.maxCount)\n            || (name === 'maxCount' && value >= data.minCount)) {\n                onChange({ ...data, [name]: value }, data);\n        } \n    };\n    const handleDelete = useCallback(function(e) {\n        onDelete(e, index);\n    }, [index, onDelete]);\n\n    const selectedOption = useMemo(function() {\n        return options.find(o => o.value === data.type);\n    }, [data.type, options]);\n\n    return <div>\n        <div className=\"form-group\">\n            <label>Mob type</label> : <Select options={options} value={selectedOption} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"weight\" value={data.weight} upChange={handleValueChange}>Weight</NumberInput>\n            <NumberInput id=\"minCount\" value={data.minCount} max={data.maxCount} upChange={handleCountChange}>Min count</NumberInput>\n            <NumberInput id=\"maxCount\" value={data.maxCount} min={data.minCount} upChange={handleCountChange}>Max count</NumberInput>\n            <div className=\"form-inline\"><Button cat=\"danger\" onClick={handleDelete}>Delete</Button></div>\n        </div>\n        <hr /> \n    </div>\n});\n","import React, { useCallback, useMemo } from 'react';\nimport Select from '../../ui/Select';\nimport { STARTS } from './BiomeDefaults';\nimport { useJsonEffect } from '../../hooks/form';\n\nexport const BiomeStarts = React.memo(function({onChange, starts}) {\n    starts = useJsonEffect(starts || STARTS, starts, onChange);\n\n    const handleChange = useCallback(function(selectedOptions) {\n        onChange(selectedOptions === null ? [] : selectedOptions.map(option => option.value));\n    }, [onChange]);\n\n    const options = useMemo(function() {\n        return [\n            \"pillager_outpost\",\n            \"mineshaft\",\n            \"mineshaft_mesa\",\n            \"mansion\",\n            \"jungle_pyramid\",\n            \"desert_pyramid\",\n            \"igloo\",\n            \"shipwreck\",\n            \"shipwreck_beached\",\n            \"swamp_hut\",\n            \"stronghold\",\n            \"monument\",\n            \"ocean_ruin_cold\",\n            \"ocean_ruin_warm\",\n            \"fortress\",\n            \"nether_fossil\",\n            \"end_city\",\n            \"buried_treasure\",\n            \"bastion_remnant\",\n            \"village_plains\",\n            \"village_desert\",\n            \"village_savanna\",\n            \"village_snovy\",\n            \"village_taiga\",\n            \"ruined_portal\",\n            \"ruined_portal_desert\",\n            \"ruined_portal_jungle\",\n            \"ruined_portal_swamp\",\n            \"ruined_portal_mountain\",\n            \"ruined_portal_ocean\",\n            \"ruined_portal_nether\"\n        ].map(option => ({ value: 'minecraft:' + option, label: 'minecraft:' + option }));\n    }, []);\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"starts\">Structures</label>\n        <Select isMulti id=\"starts\" options={options} onChange={handleChange} value={options.filter(o => starts.includes(o.value))} />\n    </div>;\n});\n","import React, { useCallback } from 'react';\nimport Select from '../../ui/Select';\nimport { FEATURES } from './BiomeDefaults';\nimport { useKeyedListOptions } from '../../hooks/context';\nimport { useJsonEffect } from '../../hooks/form';\n\nexport const GenFeatures = React.memo(function({ onChange, features }) {\n\n    const handleLevelChange = useCallback(function(priority, list) {\n        onChange(features.map((level, p) => priority === p ? list : level));\n    }, [features, onChange]);\n    useJsonEffect(features || FEATURES, features, onChange);\n\n    return <div className=\"form-group\">\n        <label>Features</label>\n        <p className=\"help\"><small className=\"text-muted\">Each generation feature is associated with a priority. The higher the priority, the later the feature will be applied.</small></p>\n        <ol>\n            {features.map((level, i) =>\n                <li key={i}><GenFeaturesLevel value={level} onChange={handleLevelChange} priority={i} /></li>\n            )}\n        </ol>\n    </div>;\n});\n\nexport const GenFeaturesLevel = React.memo(function({ onChange, priority, value }) {\n    const options = useKeyedListOptions('features');\n\n    const handleChange = useCallback(function(selectedOptions) {\n        onChange(priority, selectedOptions === null ? [] : selectedOptions.map(option => option.value));\n    }, [onChange, priority]);\n\n    return <Select isMulti options={options} onChange={handleChange} defaultValue={options.filter(o => value.includes(o.value))} />;\n});\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport useModal from '@delangle/use-modal';\nimport { Button } from './Button';\n\nexport const Modal = ({ children, open, onClose }) => {\n    const modal = useModal({ open, onClose: () => onClose(false) });\n\n    const el = document.createElement('div');\n    el.classList.add('modal-wrapper');\n\n    useEffect(() => {\n        document.body.appendChild(el);\n        return () => document.body.removeChild(el);\n    }, [el]);\n\n    return createPortal(\n        <dialog open={modal.state === 'opened'}>\n            <Button cat=\"close\" onClick={onClose}></Button>\n            {children}\n        </dialog>\n    , el);\n}\n","import React, { useCallback } from 'react';\nimport { Modal } from './Modal';\nimport { useToggle } from '../hooks/ui';\nimport { JsonView } from 'json-view-for-react'\n\nexport function JsonViewer({ data }) {\n    const [open, toggleModal] = useToggle();\n\n    const obj = useCallback(function () {\n        const obj = typeof data === 'object' ? { ...data } : data();\n        delete obj.key;\n        delete obj.index;\n        return obj;\n    }, [data]);\n\n    return <>\n        <i className=\"code mls\" onClick={toggleModal}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M.7 9.3l4.8-4.8 1.4 1.4-4 4.1 4 4-1.4 1.5L0 10l.7-.7zm18.6 1.4l.7-.7-5.5-5.5L13.1 6l4 4.1-4 4 1.4 1.5 4.8-4.8z\"/></svg></i>\n        {open &&\n            <Modal open={open} onClose={toggleModal}><JsonView obj={obj()} /></Modal>\n        }\n    </>\n}\n","import { useMemo } from \"react\";\n\n/**\n * @typedef RESOURCE_OPTION\n * @type {object}\n * @property {string} value Unique option value \n * @property {string} label Text label \n * @property {string|object} resource\n */\n\n/**\n * \n * @param {{ value: string, label: string }[]} options \n * @param {string|object[]} [resources] \n * @param {boolean} [mutable] \n * @returns {[RESOURCE_OPTION[], RESOURCE_OPTION[]]} Options and selected options\n */\nexport function useInlineResources(options, resources = [], mutable = true) {\n    const inline = getInline(resources);\n\n    let values = options.map(option => {\n        if (mutable) {\n            option.resource = option.value;\n            return option;\n        }\n        return { ...option, resource: option.value };\n    });\n    if (inline.length > 0) {\n        if (mutable) {\n            values.push(...inline);\n        } else {\n            values = [ ...options, ...inline ];\n        }\n    }\n    return [\n        values,\n        useMemo(() => values.filter(o => resources.includes(o.resource)), [resources, values])\n    ];\n}\n\n/**\n * @param {string|object[]} resources \n * @returns {RESOURCE_OPTION[]}\n */\nfunction getInline(resources) {\n    return resources\n        .filter(res => typeof res === 'object')\n        .map((res, i) => {\n            const inline = 'inline' + (i+1);\n            return {\n                value: inline,\n                label: inline,\n                resource: res\n            }\n        });\n}\n","import React, { useCallback, useContext } from 'react';\nimport { NamespacedKey } from \"../NamespacedKey\";\nimport { VANILLA_CARVERS } from './CarverDefaults';\nimport { useIndexableState, useKeyedListOptions } from '../../hooks/context';\nimport { DataContext } from '../../context/DataContext';\nimport { useJsonEffect } from '../../hooks/form';\nimport { Button } from '../../ui/Button';\nimport { NumberInput } from '../../ui/Input';\nimport { JsonViewer } from '../../ui/JsonViewer';\nimport Select from '../../ui/Select';\nimport { Modal } from '../../ui/Modal';\nimport { useToggle } from '../../hooks/ui';\nimport { useInlineResources } from '../../hooks/select';\n\nexport const ConfiguredCarver = React.memo(function({ carvers, onChange }) {\n\n    carvers = useJsonEffect(carvers || { air: [ 'minecraft:cave', 'minecraft:canyon' ] }, carvers, onChange);\n    const [open, toggleModal] = useToggle();\n\n    const options = useKeyedListOptions('carvers');\n\n    const handleAirChange = useCallback(function (options) {\n        onChange({ ...carvers, air: options === null ? [] : options.map(option => option.resource) });\n    }, [carvers, onChange]);\n    const handleLiquidChange = useCallback(function (options) {\n        onChange({ ...carvers, liquid: options === null ? [] : options.map(option => option.resource) });\n    }, [carvers, onChange]);\n    const handleNewClick = useCallback(function (e) {\n        e.preventDefault();\n        toggleModal(true);\n    }, [toggleModal]);\n    const handleCarverCreated = useCallback(function(carver) {\n        onChange({ ...carvers, air: [ ...(carvers.air || []), carver.key ] });\n        toggleModal(false);\n    }, [carvers, onChange, toggleModal]);\n\n    const [optionsAir, selectedAir] = useInlineResources(options, carvers.air);\n    const [optionsLiquid, selectedLiquid] = useInlineResources(options, carvers.liquid);\n\n    return <fieldset>\n        <legend>Carvers <Button onClick={handleNewClick}>Create new</Button></legend>\n\n        <label htmlFor=\"air\">Air</label>\n        <Select isMulti options={optionsAir} onChange={handleAirChange} value={selectedAir} inputId=\"air\" />\n        <div className=\"form-group\">\n            <label htmlFor=\"liquid\">Liquid</label>\n            <Select isMulti options={optionsLiquid} onChange={handleLiquidChange} value={selectedLiquid} inputId=\"liquid\" />\n        </div>\n        {open && <Modal open={open} onClose={toggleModal}>\n            <ConfiguredCarverForm onSave={handleCarverCreated} />\n        </Modal>}\n    </fieldset>\n});\n\nexport function ConfiguredCarverForm({ data = { type: 'minecraft:cave', config: { probability: 0.143 } }, onSave }) {\n\n    const [carver, setCarver] = useIndexableState(data);\n\n    const handleSelectChange = useCallback(function (option) {\n        setCarver({\n            config: {\n                probability: option.probability\n            },\n            type: option.value\n        });\n    }, [setCarver]);\n    const handleProbabilityChange = useCallback(function (probability) {\n        setCarver(carver => ({ ...carver, config: { probability } }));\n    }, [setCarver]);\n\n    const updateCarvers = useContext(DataContext).custom.updateCarvers;\n    const handleSubmit = useCallback(function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const c = ({\n            ...carver,\n            ...Object.fromEntries(new FormData(e.target))\n        });\n        updateCarvers(c);\n        if (typeof onSave === 'function') {\n            onSave(c);\n        }\n    }, [carver, onSave, updateCarvers]);\n\n    return <form onSubmit={handleSubmit}>\n        <NamespacedKey example=\"pit\" type=\"carvers\" value={data.key} expectBreakage={typeof data.key !== 'undefined'}>\n            configured carver\n            <JsonViewer data={carver} />\n        </NamespacedKey>\n        <div className=\"form-group\">\n            <label htmlFor=\"type\">Type</label>\n            <Select options={VANILLA_CARVERS} value={VANILLA_CARVERS.find(o => o.value === carver.type)} onChange={handleSelectChange} inputId=\"type\" />\n        </div>\n        <div className=\"form-group\">\n            <NumberInput value={carver.config.probability} max=\"1\" step=\"0.001\" onChange={handleProbabilityChange}>Probability</NumberInput>\n        </div>\n        <Button type=\"submit\">Save</Button>\n    </form>\n}\n","import React, { useCallback } from 'react';\nimport { NamespacedKey } from '../NamespacedKey';\nimport { BiomeEffects } from './BiomeEffects';\nimport { BiomeSpawners } from './BiomeSpawners';\nimport { BiomeStarts } from './BiomeStarts';\nimport { GenFeatures } from './Features';\nimport { useIndexableState, useKeyedListOptions } from '../../hooks/context';\nimport { BIOME_DEFAULTS } from './BiomeDefaults';\nimport { ConfiguredCarver } from '../carver/ConfiguredCarver';\nimport { Button } from '../../ui/Button';\nimport { ConfInput, NumberInput } from '../../ui/Input';\nimport { JsonViewer } from '../../ui/JsonViewer';\nimport Select from '../../ui/Select';\nimport { INT_MIN_VALUE } from '../../utils/math';\n\nexport function Biome({data = BIOME_DEFAULTS, onSave}) {\n\n    const [state, setState] = useIndexableState(data);\n\n    const handleCarversChange = useCallback(function(carvers) {\n        setState(state => ({ ...state, carvers }));\n    }, [setState]);\n    const handleStartsChange = useCallback(function(starts) {\n        setState(state => ({ ...state, starts }));\n    }, [setState]);\n    const handleEffectsChange = useCallback(function(effects) {\n        setState(state => ({ ...state, effects }));\n    }, [setState]);\n    const handleFeaturesChange = useCallback(function(features) {\n        setState(state => ({ ...state, features }));\n    }, [setState]);\n    const handleSpawnersChange = useCallback(function(spawners) {\n        setState(state => ({ ...state, spawners }));\n    }, [setState]);\n    const handleSurfaceBuilderChange = useCallback(function(option) {\n        setState(state => ({ ...state, surface_builder: option.value }));\n    }, [setState]);\n    const handlePrecipitationChange = useCallback(function(option) {\n        setState(state => ({ ...state, precipitation: option.value }));\n    }, [setState]);\n    const handleCategoryChange = useCallback(function(option) {\n        setState(state => ({ ...state, category: option.value }));\n    }, [setState]);\n    const handleChange = useCallback(function(value) {\n        setState(state => ({ ...state, ...value }));\n    }, [setState]);\n    const handleSpawnFriendlyChange = useCallback(function(e) {\n        const player_spawn_friendly = e.target.checked;\n        setState(state => ({ ...state, player_spawn_friendly }));\n    }, [setState]);\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        const formData = Object.fromEntries(new FormData(e.target));\n        onSave({ ...state, ...formData });\n    }, [onSave, state]);\n\n    return <form onSubmit={handleSubmit}>\n        <NamespacedKey example=\"arctic\" type=\"biomes\" value={state.key} mayReplaceVanilla={true} expectBreakage={typeof data.key !== 'undefined'} onSelectLoad={setState}>\n            biome\n            <JsonViewer data={state} />\n        </NamespacedKey>\n\n        <BiomeEffects effects={state.effects} onChange={handleEffectsChange} />\n\n        <fieldset>\n            <BiomeCategory category={state.category} onChange={handleCategoryChange} />\n            <BiomePrecipitation value={state.precipitation} onChange={handlePrecipitationChange} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Generation</legend>\n            <SurfaceBuilder value={state.surface_builder} onChange={handleSurfaceBuilderChange} />\n            <BiomeStarts starts={state.starts} onChange={handleStartsChange} />\n            <GenFeatures features={state.features} onChange={handleFeaturesChange} />\n        </fieldset>\n\n        <ConfiguredCarver carvers={state.carvers} onChange={handleCarversChange} />\n\n        <fieldset>\n            <legend>Creatures</legend>\n            <BiomeSpawners data={state.spawners} onChange={handleSpawnersChange} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Settings</legend>\n            <div className=\"form-group form-row\">\n                <ConfInput id=\"player_spawn_friendly\" checked={typeof state.player_spawn_friendly === 'boolean' ? state.player_spawn_friendly : true} onChange={handleSpawnFriendlyChange}>Player spawn friendly</ConfInput>\n                <NumberInput id=\"creature_spawn_probability\" value={state.creature_spawn_probability} defaultValue={0.1} step={0.1} required={false} upChange={handleChange}>Creature spawn probability</NumberInput>\n            </div>\n            <div className=\"form-group form-row\">\n                <NumberInput id=\"scale\" value={state.scale || 0.05} min={INT_MIN_VALUE} step={0.05} upChange={handleChange}>Scale</NumberInput>\n                <NumberInput id=\"downfall\" value={state.downfall || 0.4} min={INT_MIN_VALUE} step={0.1} upChange={handleChange}>Downfall</NumberInput>\n                <NumberInput id=\"depth\" value={state.depth || 0.12} min={INT_MIN_VALUE} step={0.01} upChange={handleChange}>Depth</NumberInput>\n                <NumberInput id=\"temperature\" value={state.temperature || 0.8} min={INT_MIN_VALUE} step={0.1} upChange={handleChange}>Temperature</NumberInput>\n                <p className=\"mts\"><small className=\"text-muted\">The <em>scale</em> parameter defines terrain amplitude, <em>downfall</em> controls grass and foliage color, <em>depth</em> is the difference from sea level, <em>temperature</em> controls some gameplay features like whether snow golems take damage. The default values are those of the plains biome.</small></p>\n            </div>\n        </fieldset>\n        <Button type=\"submit\">Save</Button>\n    </form>;\n}\n\nconst BiomeCategory = React.memo(function({ category = 'plains', onChange }) {\n\n    const options = [\n        { value: 'beach', label: 'Beach' },\n        { value: 'desert', label: 'Desert' },\n        { value: 'extreme_hills', label: 'Extreme hills' },\n        { value: 'forest', label: 'Forest' },\n        { value: 'icy', label: 'Icy' },\n        { value: 'jungle', label: 'Jungle' },\n        { value: 'mesa', label: 'Mesa' },\n        { value: 'nether', label: 'Nether' },\n        { value: 'none', label: 'None' },\n        { value: 'ocean', label: 'Ocean' },\n        { value: 'plains', label: 'Plains' },\n        { value: 'river', label: 'River' },\n        { value: 'savanna', label: 'Savanna' },\n        { value: 'swamp', label: 'Swamp' },\n        { value: 'taiga', label: 'Taiga' },\n        { value: 'the_end', label: 'The end' },\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"category\">Category</label>\n        <Select options={options} value={options.find(o => o.value === category)} onChange={onChange} />\n    </div>;\n});\n\nconst BiomePrecipitation = React.memo(function({ onChange, value = 'rain' }) {\n\n    const options = [\n        { value: 'none', label: 'None' },\n        { value: 'rain', label: 'Rain' },\n        { value: 'snow', label: 'Snow' }\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"precipitation\">Precipitation</label>\n        <Select options={options} value={options.find(o => o.value === value)} onChange={onChange} />\n    </div>;\n});\n\nconst SurfaceBuilder = React.memo(function({ onChange, value = 'minecraft:grass' }) {\n    const options = useKeyedListOptions('surfaces');\n    return <div className=\"form-group\">\n        <label htmlFor=\"surface_builder\">Surface builder</label>\n        <Select options={options} value={options.find(o => o.value === value)} onChange={onChange} />\n    </div>;\n});\n","import React from 'react';\n\nexport const Toggle = ({ ariaLabel, checked, id, onChange }) => (\n    <span className=\"toggle-control\">\n        <input\n            aria-label={ariaLabel}\n            className=\"dmcheck\"\n            type=\"checkbox\"\n            checked={checked}\n            onChange={onChange}\n            id={id}\n        />\n        <label htmlFor={id} />\n    </span>\n);\n","import React from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport { Toggle } from './Toggle';\n\nexport function DarkModeToggle() {\n    const darkMode = useDarkMode(true);\n\n    return <div className=\"dark-mode-toggle\" title=\"Dark mode toggle\">\n        <button type=\"button\" onClick={darkMode.disable} tabIndex=\"-1\">☀</button>\n        <Toggle ariaLabel=\"Dark mode toggle\" checked={darkMode.value} onChange={darkMode.toggle} />\n        <button type=\"button\" onClick={darkMode.enable} tabIndex=\"-1\">☾</button>\n    </div>\n}","import React from 'react';\nimport { DarkModeToggle } from './DarkModeToggle';\n\nexport function MenuItem({active, children, onClick}) {\n    return <li><a href=\"#_\" role=\"menuitem\" aria-current={active} onClick={onClick}>{children}</a></li>\n}\n\nexport function NavBar({ children }) {\n    return <div className=\"navbar\">\n        {children}\n        <p className=\"github\"><a href=\"https://github.com/syldium/worldgen\" target=\"_blank\" rel=\"noopener noreferrer\">View on GitHub</a></p>\n        <DarkModeToggle />\n    </div>\n}\n","import React, { useCallback, useContext } from 'react';\nimport { DataContext } from '../../context/DataContext';\nimport { OVERWORLD_DIMENSION_TYPE, THE_NETHER_DIMENSION_TYPE, THE_END_DIMENSION_TYPE, OVERWORLD_CAVES_DIMENSION_TYPE, DIMENSION_TYPE_INFINIBURN, DIMENSION_TYPE_EFFECTS } from './DimensionDefaults';\nimport { useIndexableState, useKeyedListOptions } from '../../hooks/context';\nimport { useToggle } from '../../hooks/ui';\nimport { ConfInput, NumberInput } from '../../ui/Input';\nimport { JsonViewer } from '../../ui/JsonViewer';\nimport { Modal } from '../../ui/Modal';\nimport Select from '../../ui/Select';\nimport { Button } from '../../ui/Button';\nimport { NamespacedKey } from '../NamespacedKey';\n\nexport function DimensionType({ type = 'minecraft:overworld', onChange }) {\n    const [open, toggleModal] = useToggle();\n    const options = useKeyedListOptions('dimension_types').map(option => {\n        option.resource = option.value;\n        return option;\n    });\n\n    if (typeof type === 'object') {\n        options.push({ value: 'inline', label: 'inline', resource: type });\n    }\n\n    const handleTypeChange = useCallback(function (option) {\n        onChange(option.resource);\n    }, [onChange]);\n    const handleNewClick = useCallback(function (e) {\n        e.preventDefault();\n        toggleModal(true);\n    }, [toggleModal]);\n    const handleTypeCreated = useCallback(function (type) {\n        onChange(type.key);\n        toggleModal(false);\n    }, [onChange, toggleModal]);\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"dimension-type\">Dimension type <Button onClick={handleNewClick}>Create new</Button></label>\n        <Select inputId=\"dimension-type\" options={options} value={options.find(o => o.resource === type)} onChange={handleTypeChange} />\n        {open && <Modal open={open} onClose={toggleModal}>\n            <DimensionTypeForm onSave={handleTypeCreated} />\n        </Modal>}\n    </div>;\n}\n\nexport function DimensionTypeForm({ data = OVERWORLD_DIMENSION_TYPE, onSave }) {\n    const [config, setConfig] = useIndexableState(data);\n\n    const handleVanillaSelect = useCallback(function (value) {\n        setConfig({\n            ...{\n                'minecraft:overworld': OVERWORLD_DIMENSION_TYPE,\n                'minecraft:overworld_caves': OVERWORLD_CAVES_DIMENSION_TYPE,\n                'minecraft:the_nether': THE_NETHER_DIMENSION_TYPE,\n                'minecraft:the_end': THE_END_DIMENSION_TYPE\n            }[value]\n        });\n    }, [setConfig]);\n    const handleNumberChange = useCallback(function (value) {\n        setConfig(config => ({ ...config, ...value }))\n    }, [setConfig]);\n    const handleSelectChange = useCallback(function (name, option) {\n        setConfig(config => ({ ...config, [name]: option.value }))\n    }, [setConfig]);\n    const handleCheckboxChange = useCallback(function (e) {\n        const name = e.target.dataset.name;\n        const checked = e.target.checked;\n        setConfig(config => ({ ...config, [name]: checked }))\n    }, [setConfig]);\n    const handleFixedTimeToggle = useCallback(function (e) {\n        if (e.target.checked) {\n            setConfig(config => ({ ...config, fixed_time: 18000 }));\n        } else {\n            setConfig((({ fixed_time, ...config }) => config));\n        }\n    }, [setConfig]);\n\n    const updateDimensionTypes = useContext(DataContext).custom.updateDimensionTypes;\n    const handleSubmit = useCallback(function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const d = ({\n            ...config,\n            ...Object.fromEntries(new FormData(e.target))\n        });\n        updateDimensionTypes(d);\n        if (typeof onSave === 'function') {\n            onSave(d);\n        }\n    }, [config, onSave, updateDimensionTypes]);\n\n    return <form onSubmit={handleSubmit}>\n        <NamespacedKey example=\"typed\" type=\"dimension_types\" value={data.key} mayReplaceVanilla={true} onSelect={handleVanillaSelect} expectBreakage={typeof data.key !== 'undefined'}>\n            dimension type\n            <JsonViewer data={config} />\n        </NamespacedKey>\n        <fieldset>\n            <legend>Light</legend>\n            <div className=\"form-row\">\n                <NumberInput id=\"ambient_light\" value={config.ambient_light} upChange={handleNumberChange} step=\"0.1\">Ambient light</NumberInput>\n                <ConfInput id=\"has_skylight\" checked={config.has_skylight} onChange={handleCheckboxChange}>Has skylight</ConfInput>\n            </div>\n        </fieldset>\n        <fieldset>\n            <legend>Apparence</legend>\n            <div className=\"form-row\">\n                <InfiniburnIdentifier value={config.infiniburn} onChange={handleSelectChange} inputId=\"infiniburn\" />\n                <div>\n                    <label htmlFor=\"effects\">Sky effects : </label>\n                    <div className=\"inbl\" style={{ width: '16ch' }}>\n                        <Select options={DIMENSION_TYPE_EFFECTS} value={DIMENSION_TYPE_EFFECTS.find(o => config.effects === o.value) || DIMENSION_TYPE_EFFECTS[0]} onChange={o => handleSelectChange('effects', o)} inputId=\"effects\" />\n                    </div>\n                </div>\n            </div>\n            <div className=\"form-group form-row\">\n                <NumberInput id=\"logical_height\" value={config.logical_height} upChange={handleNumberChange} max={256} title=\"Logical height from vanilla dimensions cannot be replaced due to MC-197338.\">Logical height</NumberInput>\n                <div className=\"form-row\">\n                    {typeof config.fixed_time !== 'number' && <label htmlFor=\"fixed_time-toggle\">Fixed time : </label>}\n                    {typeof config.fixed_time === 'number' && <NumberInput id=\"fixed_time\" value={config.fixed_time} upChange={handleNumberChange} step={1200}>Fixed time</NumberInput>}\n                    <input type=\"checkbox\" checked={typeof config.fixed_time === 'number'} onChange={handleFixedTimeToggle} className=\"checkbox\" id=\"fixed_time-toggle\" />\n                </div>\n            </div>\n            <p style={{ marginBottom: 0, textAlign: 'center' }}><small className=\"text-muted\">These settings are only used for appearance and some game mechanics<br />such as chorus fruits tp. To modify the world generation, change the noise parameters.</small></p>\n        </fieldset>\n        <fieldset>\n            <legend>Overworld related behavior</legend>\n            <div className=\"form-row\">\n                <ConfInput id=\"bed_works\" checked={config.bed_works} onChange={handleCheckboxChange}>Bed works</ConfInput>\n                <ConfInput id=\"has_raids\" checked={config.has_raids} onChange={handleCheckboxChange}>Has raids</ConfInput>\n                <ConfInput id=\"natural\" checked={config.natural} onChange={handleCheckboxChange}>Natural</ConfInput>\n            </div>\n        </fieldset>\n        <fieldset>\n            <legend>Nether related behavior</legend>\n            <div className=\"form-row\">\n                <ConfInput id=\"has_ceiling\" checked={config.has_ceiling} onChange={handleCheckboxChange}>Has ceiling</ConfInput>\n                <NumberInput id=\"coordinate_scale\" value={config.coordinate_scale} upChange={handleNumberChange} min={10 ** -5} max={10 ** 7} step={0.1}>Coordinate scale</NumberInput>\n            </div>\n            <div className=\"form-group form-row\">\n                <ConfInput id=\"respawn_anchor_works\" checked={config.respawn_anchor_works} onChange={handleCheckboxChange}>Respawn anchor works</ConfInput>\n                <ConfInput id=\"piglin_safe\" checked={config.piglin_safe} onChange={handleCheckboxChange}>Piglin safe</ConfInput>\n                <ConfInput id=\"ultrawarm\" checked={config.ultrawarm} onChange={handleCheckboxChange}>Ultrawarm</ConfInput>\n            </div>\n        </fieldset>\n        <Button type=\"submit\">Save</Button>\n    </form>;\n}\n\nfunction InfiniburnIdentifier({ inputId, onChange, value }) {\n    return <div>\n        <label htmlFor={inputId}>Infiniburn : </label>\n        <div className=\"inbl\" style={{ width: '16ch' }}>\n            <Select options={DIMENSION_TYPE_INFINIBURN} value={DIMENSION_TYPE_INFINIBURN.find(o => value === o.value) || DIMENSION_TYPE_INFINIBURN[0]} onChange={o => onChange('infiniburn', o)} inputId={inputId} />\n        </div>\n    </div>\n}\n","import React from 'react';\nimport { NumberInput } from './Input';\n\nexport const NumberList = React.memo(function ({ children, numbers = [], onChange }) {\n\n    const handleChange = function(val, pos) {\n        onChange(numbers.map((n, i) => i === pos ? val : n));\n    };\n\n    return <div className=\"form-row\">\n        <label>{children}</label>&nbsp;:&nbsp;{numbers.map((n, i) => <NumberInput key={i} value={n} onChange={(n) => handleChange(n, i)} />)}\n    </div>\n});\n","import { grad, INT_MAX_VALUE, INT_MIN_VALUE, lerp3, perlinFade } from '../../utils/math';\nimport Random from 'java-random';\n\nexport class DoublePerlinSampler {\n    /**\n     * @param {JavaRandom} random \n     * @param {{ firstOctave: number, amplitudes: number[] }} settings \n     */\n    constructor(random, settings) {\n        this.firstSampler = new OctaveSimplexNoise(random, settings);\n        this.secondSampler = new OctaveSimplexNoise(random, settings);\n        this.amplitude = this.createAmplitude(settings.amplitudes);\n    }\n\n    /**\n     * @param {number[]} amplitudes \n     * @returns {number}\n     */\n    createAmplitude(amplitudes) {\n        let a = INT_MAX_VALUE;\n        let b = INT_MIN_VALUE;\n        amplitudes.forEach((n, index) => {\n            if (n !== 0) {\n                a = Math.min(a, index);\n                b = Math.max(b, index);\n            }\n        });\n        return (1/6) / (0.1 * (1.0 + 1.0 / (b - a + 1)));\n    }\n\n    /**\n     * @param {number} x \n     * @param {number} y \n     * @param {number} z \n     */\n    sample(x, y, z) {\n        const d = x * 1.0181268882175227;\n        const e = y * 1.0181268882175227;\n        const f = z * 1.0181268882175227;\n        return (this.firstSampler.sample(x, y, z) + this.secondSampler.sample(d, e, f)) * this.amplitude;\n    }\n}\n\nclass OctaveSimplexNoise {\n\n    /**\n     * @param {Random} random \n     * @param {number[]} octaves \n     */\n    constructor(random, { firstOctave, amplitudes }) {\n        this.amplitudes = amplitudes;\n        const sampler = new PerlinNoiseSampler(random);\n        const j = amplitudes.length;\n        const k = -firstOctave;\n        this.octaveSamplers = new Array(j);\n\n        if (k >= 0 && k < j) {\n            const d = amplitudes[k];\n            if (d !== 0.0) {\n                this.octaveSamplers[k] = sampler;\n            }\n        }\n\n        for (let l = k - 1; l >= 0; --l) {\n            if (l < j) {\n                if (this.amplitudes[l] !== 0.0) {\n                    this.octaveSamplers[l] = new PerlinNoiseSampler(random);\n                } else {\n                    consumeRandom(random, 262);\n                }\n            } else {\n                consumeRandom(random, 262);\n            }\n        }\n\n        if (k < j - 1) {\n            const m = sampler.sample(0.0, 0.0, 0.0, 0.0, 0.0) * 9.223372036854776E18;\n            const random2 = new Random(m);\n\n            for (let n = k + 1; n < j; ++n) {\n                if (n >= 0) {\n                    if (this.amplitudes[n] !== 0.0) {\n                        this.octaveSamplers[n] = new PerlinNoiseSampler(random2);\n                    } else {\n                        consumeRandom(random, 262);\n                    }\n                } else {\n                    consumeRandom(random, 262);\n                }\n            }\n        }\n\n        this.lacunarity = Math.pow(2.0, -k);\n        this.persistence = Math.pow(2.0, j - 1) / (Math.pow(2.0, j) - 1.0);\n    }\n\n    /**\n     * @param {number} x \n     * @param {number} y \n     * @param {number} z \n     * @param {number} d \n     * @param {number} e \n     * @param {boolean} bl \n     */\n    sample(x, y, z, d = 0.0, e = 0.0, bl = false) {\n        let noise = 0.0;\n        let lacunarity = this.lacunarity;\n        let persistence = this.persistence;\n\n        this.octaveSamplers.forEach((sampler, i) => {\n            if (typeof sampler === 'object') {\n                noise += this.amplitudes[i] * sampler.sample(\n                    x * lacunarity, bl ? -sampler.originY : y * lacunarity,\n                    z * lacunarity,\n                    d * lacunarity, e * lacunarity) * persistence;\n                lacunarity *= 2.0;\n                persistence /= 2.0;\n            }\n        });\n        return noise;\n    }\n}\n\nclass PerlinNoiseSampler {\n\n    /**\n     * @param {Random} random \n     */\n    constructor(random) {\n        this.originX = random.nextDouble() * 256;\n        this.originY = random.nextDouble() * 256;\n        this.originZ = random.nextDouble() * 256;\n        this.permutations = this.buildPermutationsTable(random);\n    }\n\n    /**\n     * @param {Random} random \n     */\n    buildPermutationsTable(random) {\n        const permutations = new Uint8Array(256);\n        for (let j = 0; j < 256; ++j) {\n            permutations[j] = j;\n        }\n        for (let j = 0; j < 256; ++j) {\n            const k = random.nextInt(256 - j);\n            const b = permutations[j];\n            permutations[j] = permutations[j + k];\n            permutations[j + k] = b;\n        }\n        return permutations;\n    }\n\n    /**\n     * @param {number} x \n     * @param {number} y \n     * @param {number} z \n     * @param {number} d \n     * @param {number} e \n     * @returns {number}\n     */\n    sample(x, y, z, d, e) {\n        const rx = x + this.originX;\n        const ry = y + this.originY;\n        const rz = z + this.originZ;\n        const fx = Math.floor(rx);\n        const fy = Math.floor(ry);\n        const fz = Math.floor(rz);\n\n        const dx = rx - fx;\n        const dy = ry - fy;\n        const dz = rz - fz;\n        const fadeX = perlinFade(dx);\n        const fadeY = perlinFade(dy);\n        const fadeZ = perlinFade(dz);\n\n        const t = d === 0 ? 0 : Math.floor(Math.min(e, dy) / d) * d;\n        return this._sample(fx, fy, fz, dx, dy - t, dz, fadeX, fadeY, fadeZ);\n    }\n\n    /**\n     * @param {number} sectionX \n     * @param {number} sectionY \n     * @param {number} sectionZ \n     * @param {number} localX \n     * @param {number} localY \n     * @param {number} localZ \n     * @param {number} fadeLocalX \n     * @param {number} fadeLocalY \n     * @param {number} fadeLocalZ \n     * @returns {number}\n     */\n    _sample(sectionX, sectionY, sectionZ, localX, localY, localZ, fadeLocalX, fadeLocalY, fadeLocalZ) {\n        const i = this.getGradient(sectionX) + sectionY;\n        const j = this.getGradient(i) + sectionZ;\n        const k = this.getGradient(i + 1) + sectionZ;\n        const l = this.getGradient(sectionX + 1) + sectionY;\n        const m = this.getGradient(l) + sectionZ;\n        const n = this.getGradient(l + 1) + sectionZ;\n        const d = grad(this.getGradient(j), localX, localY, localZ);\n        const e = grad(this.getGradient(m), localX - 1.0, localY, localZ);\n        const f = grad(this.getGradient(k), localX, localY - 1.0, localZ);\n        const g = grad(this.getGradient(n), localX - 1.0, localY - 1.0, localZ);\n        const h = grad(this.getGradient(j + 1), localX, localY, localZ - 1.0);\n        const o = grad(this.getGradient(m + 1), localX - 1.0, localY, localZ - 1.0);\n        const p = grad(this.getGradient(k + 1), localX, localY - 1.0, localZ - 1.0);\n        const q = grad(this.getGradient(n + 1), localX - 1.0, localY - 1.0, localZ - 1.0);\n        return lerp3(fadeLocalX, fadeLocalY, fadeLocalZ, d, e, f, g, h, o, p, q);\n    }\n\n    getGradient(hash) {\n        return this.permutations[hash & 255];\n    }\n}\n\n/**\n * @param {Random} random \n * @param {number} count\n */\nfunction consumeRandom(random, count) {\n    for (let c = 0; c < count; c++) {\n        random.nextInt();\n    }\n}\n","export function hashCode(s) {\n    let hash;\n    for (let i = 0; i < s.length; i++) { \n        hash = Math.imul(31, hash) + s.charCodeAt(i) | 0;\n    }\n    return hash;\n}","import { DoublePerlinSampler } from './PerlinSamplers';\nimport Random from 'java-random';\nimport { hashCode } from '../../utils/hash';\n\n/**\n * @typedef Biome\n * @type {object}\n * @property {string} biome Biome name \n * @property {{\n        temperature: number,\n        humidity: number,\n        altitude: number,\n        weirdness: number,\n        offset: number\n    }} parameters Noise point parameters\n */\n\nexport class MultiNoiseDimension {\n\n    /**\n     * @param {{\n            temperature_noise: { firstOctave: number, amplitudes: number[] },\n            humidity_noise: { firstOctave: number, amplitudes: number[] },\n            altitude_noise: { firstOctave: number, amplitudes: number[] },\n            weirdness_noise: { firstOctave: number, amplitudes: number[] },\n            seed: number,\n            biomes: Biome[]\n        }} source\n    */\n    constructor(source) {\n        this.biomes = source.biomes;\n\n        this.temperatureNoise = new DoublePerlinSampler(new Random(source.seed), source.temperature_noise);\n        this.humidityNoise = new DoublePerlinSampler(new Random(source.seed + 1), source.humidity_noise);\n        this.altitudeNoise = new DoublePerlinSampler(new Random(source.seed + 2), source.altitude_noise);\n        this.weirdnessNoise = new DoublePerlinSampler(new Random(source.seed + 3), source.weirdness_noise);\n    }\n\n    /**\n     * Get biome for the given block position.\n     * \n     * @param {number} x \n     * @param {number} y \n     * @param {number} z \n     * @returns {Biome}\n     */\n    getBiomeAt(x, y, z) {\n        const biomeX = x >> 2;\n        const biomeY = y >> 2;\n        const biomeZ = z >> 2;\n\n        // Calculate a noise point using perlin noise samplers\n        const temperature = this.temperatureNoise.sample(biomeX, biomeY, biomeZ);\n        const humidity = this.humidityNoise.sample(biomeX, biomeY, biomeZ);\n        const altitude = this.altitudeNoise.sample(biomeX, biomeY, biomeZ);\n        const weirdness = this.weirdnessNoise.sample(biomeX, biomeY, biomeZ);\n\n        // Determine the biome with the parameters closest to the current noise point\n        let current = null;\n        let minDistance = Number.MAX_SAFE_INTEGER;\n        for (const biome of this.biomes) {\n            const distance = this.getDistanceToBiome(temperature, humidity, altitude, weirdness, biome.parameters);\n            if (distance < minDistance) {\n                current = biome;\n                minDistance = distance;\n            }\n        }\n        \n        return current;\n    }\n\n    /**\n     * Fill the image data with biome positions\n     * \n     * @param {ImageData} image \n     * @param {number} [scale] exponential\n     * @param {number} [every] x % every === 0 ? compute : use previous data\n     * @param {number} [offsetX] \n     * @param {number} [offsetY] \n     */\n    createImageData(image, scale = 4, every = 2, offsetX = 0, offsetY = 0) {\n        const width = image.width;\n        const height = image.height;\n        const buffer = new ArrayBuffer(image.data.length);\n        const buf8 = new Uint8ClampedArray(buffer);\n        const data32 = new Uint32Array(buffer);\n\n        const endX = offsetX + width;\n        const endY = offsetY + height;\n\n        const biomesColors = MultiNoiseDimension.getBiomesColors(this.biomes);\n\n        let color = null;\n        for (let x = offsetX; x < endX; x += 1) {\n            for (let y = offsetY; y < endY; y += 1) {\n                if (x % every === 0) {\n                    if (y % every === 0) {\n                        const biome = this.getBiomeAt(x << scale, 0, y << scale);\n                        color = biomesColors[biome.biome];\n                    }\n                    data32[y * width + x] = (255 << 24) | color;\n                } else {\n                    data32[y * width + x] = data32[y * width + x - 1];\n                }\n            }\n        }\n        image.data.set(buf8);\n    }\n\n    /**\n     * Calculates the distance from this noise point to another one.\n     * \n     * @param {number} temperature \n     * @param {number} humidity \n     * @param {number} altitude \n     * @param {number} weirdness \n     * @param {{ temperature: number, humidity: number, altitude: number, weirdness: number, offset: number }} parameters \n     */\n    getDistanceToBiome(temperature, humidity, altitude, weirdness, parameters) {\n        return (temperature - parameters.temperature) ** 2\n            + (humidity - parameters.humidity) ** 2\n            + (altitude - parameters.altitude) ** 2\n            + (weirdness - parameters.weirdness) ** 2\n            + (0 - parameters.offset) ** 2;\n    }\n\n    /**\n     * @param {Biome[]} biomes \n     * @returns {object}\n     */\n    static getBiomesColors(biomes = []) {\n        const biomesColors = {};\n        for (const biome of biomes) {\n            biomesColors[biome.biome] = hashCode(biome.biome);\n        }\n        return biomesColors;\n    }\n}\n","import React, { useCallback, useRef, useState, useEffect } from 'react';\nimport { useToggle } from '../../hooks/ui';\nimport { Button } from '../../ui/Button';\nimport { MultiNoiseDimension } from '../../viewers/biome_multi_noise/MultiNoiseDimension';\nimport { integerColorToHex } from '../../utils/color';\n\nexport const MultiNoiseRepresentation = React.memo(function ({ source }) {\n\n    const [auto, toggle] = useToggle();\n    const [scale, setScale] = useState(4);\n    const reference = useRef(null);\n\n    const render = useCallback(function () {\n        if ((source.biomes || []).length < 1) {\n            return;\n        }\n        const canvas = reference.current;\n        const ctx = canvas.getContext('2d', { alpha: false });\n        const img = ctx.createImageData(canvas.width, canvas.height);\n        const dimension = new MultiNoiseDimension(source);\n        dimension.createImageData(img, scale);\n        ctx.putImageData(img, 0, 0);\n    }, [scale, source]);\n\n    const handleClick = useCallback(function (e) {\n        e.preventDefault();\n        render();\n    }, [render]);\n\n    const handleScaleChange = useCallback(function (e) {\n        setScale(parseInt(e.target.value));\n    }, []);\n\n    useEffect(function () {\n        if (auto) {\n            render();\n        }\n    }, [auto, render]);\n\n    return <fieldset>\n        <legend>Preview</legend>\n        <div className=\"form-row\">\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <canvas height=\"128\" width=\"384\" ref={reference} moz-opaque=\"true\"></canvas>\n            </div>\n            <div>\n                <label htmlFor=\"scale\">Scale</label> : <input type=\"range\" id=\"scale\" min=\"1\" max=\"8\" value={scale} onChange={handleScaleChange} /> ({1 << scale} block/px)<br />\n                <label htmlFor=\"auto-update\">Auto update (affects performance)</label> : <input type=\"checkbox\" className=\"checkbox\" checked={auto} onChange={toggle} id=\"auto-update\" /><br />\n                {(source.biomes || []).length > 0 && !auto && <Button onClick={handleClick}>Render</Button>}\n            </div>\n        </div>\n        <ul className=\"form-group form-row\" style={{ justifyContent: 'start' }}>\n            {Object.entries(MultiNoiseDimension.getBiomesColors(source.biomes)).map(([biome, color]) => {\n                const b = (color >> 16) & 0xFF;\n                const g = (color >> 8) & 0xFF;\n                const r = color & 0xFF;\n                return <li key={biome} style={{ display: 'inline', marginLeft: '8px', marginRight: '4px' }}>\n                    <div style={{\n                        backgroundColor: integerColorToHex(((r << 16) | (g << 8) | b)),\n                        width: '32px', height: '16px',\n                        display: 'inline-block',\n                        marginRight: '0.5rem',\n                        verticalAlign: 'middle'\n                    }}></div>\n                    {biome}\n                </li>\n            })}\n        </ul>\n    </fieldset>\n});\n","import React, { useCallback, useContext, useEffect } from 'react';\nimport Select from '../../ui/Select';\nimport { SeedField } from './DimensionGenerator';\nimport { useKeyedListOptions } from '../../hooks/context';\nimport { useMemo } from 'react';\nimport { useCrud, CRUD } from '../../hooks/form';\nimport { useToggle } from '../../hooks/ui';\nimport { DataContext } from '../../context/DataContext';\nimport { Button } from '../../ui/Button';\nimport { capitalize, hasDuplicatedObjects } from '../../utils/data';\nimport { NumberList } from '../../ui/NumberList';\nimport { MULTI_NOISE_BIOME_SOURCE, NOISES_NAMES } from './DimensionDefaults';\nimport { NumberInput, ConfInput } from '../../ui/Input';\nimport { MultiNoiseRepresentation } from './MultiNoiseBiomeSource';\n\nexport const BiomeSource = React.memo(function({source = { type: 'minecraft:fixed' }, onChange}) {\n\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:checkerboard', label: 'Checkerboard' },\n            { value: 'minecraft:fixed', label: 'Fixed' },\n            { value: 'minecraft:multi_noise', label: 'Multi noise' },\n            { value: 'minecraft:the_end', label: 'The end' },\n            { value: 'minecraft:vanilla_layered', label: 'Vanilla layered' }\n        ];\n    }, []);\n\n    const handleChange = useCallback(function(settings) {\n        onChange(({ ...source, ...settings }));\n    }, [onChange, source]);\n    const handleSeedChange = useCallback(function(seed) {\n        onChange(({ ...source, seed }));\n    }, [onChange, source]);\n    const handleTypeChange = useCallback(function(option) {\n        onChange(({ seed: source.seed, type: option.value }));\n    }, [onChange, source.seed]);\n    const handleFixedSourceChange = useCallback(function(biome) {\n        onChange(({ ...source, biome }));\n    }, [onChange, source]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === source.type);\n    }, [options, source.type]);\n\n    return <fieldset>\n        <legend>Biome source</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"biome-source-type\">Type</label><Select inputId=\"biome-source-type\" options={options} value={selected} onChange={handleTypeChange} />\n        </div>\n        <SeedField value={source.seed} onChange={handleSeedChange} />\n        <hr />\n        {source.type === 'minecraft:checkerboard' && <CheckerboardBiomeSource source={source} onChange={handleChange} />}\n        {source.type === 'minecraft:fixed' && <FixedBiomeSource biome={source.biome} onChange={handleFixedSourceChange} />}\n        {source.type === 'minecraft:multi_noise' && <MultiNoiseBiomeSource source={source} onChange={handleChange} />}\n        {source.type === 'minecraft:vanilla_layered' && <VanillaLayeredBiomeSource source={source} onChange={handleChange} />}\n    </fieldset>\n});\n\nconst CheckerboardBiomeSource = React.memo(function({source, onChange}) {\n    const options = useKeyedListOptions('biomes');\n    const handleBiomesChange = useCallback(function(selection) {\n        onChange({ ...source, biomes: selection === null ? [] : selection.map(o => o.value) });\n    }, [onChange, source]);\n    const handleScaleChange = useCallback(function(scale) {\n        onChange({ ...source, scale });\n    }, [onChange, source]);\n\n    const biomes = source.biomes || (options.length > 0 ? [options[0].value] : []);\n    useEffect(() => {\n        if (!Array.isArray(source.biomes)) {\n            onChange({ biomes, scale: source.scale || 2 });\n        }\n    }, [biomes, source.biomes, source.scale, onChange]);\n\n    return <div className=\"form-group\">\n        <div className=\"form-group\">\n            <label htmlFor=\"biomes\">Biomes</label><Select options={options} isMulti isClearable={false} value={options.filter(o => biomes.includes(o.value))} onChange={handleBiomesChange} id=\"biomes\" />\n        </div>\n        <div className=\"form-group\">\n            <NumberInput id=\"scale\" value={source.scale} onChange={handleScaleChange} max={62} required={false} defaultValue={2}>Scale (squares of 2<sup>scale</sup> chunks)</NumberInput>\n        </div>\n        {biomes.length < 1 && <p className=\"alert--warning\">Warning: a dimension must contain at least one biome!</p>}\n    </div>;\n});\n\nexport const FixedBiomeSource = React.memo(function({biome = 'minecraft:plains', inline = false, onChange}) {\n    const options = useKeyedListOptions('biomes');\n    const handleBiomesChange = useCallback(function(option) {\n        onChange(option.value);\n    }, [onChange]);\n\n    return <div className={inline ? 'form-row flex-grow' : 'form-group'}>\n        <label htmlFor=\"fixed-biome\">Biome{inline && ' :'}&nbsp;</label><div className={inline ? 'flex-grow' : undefined}><Select options={options} value={options.find(o => o.value === biome)} onChange={handleBiomesChange} /></div>\n    </div>;\n});\n\nconst MultiNoiseBiomeSource = React.memo(function({source = MULTI_NOISE_BIOME_SOURCE, onChange}) {\n    const options = useKeyedListOptions('biomes');\n    const [biomes, dispatch] = useCrud(source.biomes);\n\n    const [advanced, toggleAdvanced] = useToggle();\n    const handleNoiseChange = useCallback(function(type, noise) {\n        onChange(({ ...source, [type]: noise }));\n    }, [source, onChange]);\n\n    const handleAddClick = useCallback(function(e) {\n        e.preventDefault();\n        dispatch({ type: CRUD.ADD, payload: { biome: 'minecraft:plains', parameters: {\n            altitude: 0,\n            weirdness: 0,\n            offset: 0,\n            temperature: 0.8,\n            humidity: 0.4\n        } } });\n    }, [dispatch]);\n    const handleChange = useCallback(function(state, previous) {\n        dispatch({ type: CRUD.UPDATE, target: previous, payload: state });\n    }, [dispatch]);\n    const handleDeleteClick = useCallback(function(e, index) {\n        e.preventDefault();\n        dispatch({ type: CRUD.REMOVE, payload: biomes[index] });\n    }, [biomes, dispatch]);\n\n    const vanilla = useContext(DataContext).vanilla.biomes;\n    const custom = useContext(DataContext).custom.biomes;\n    const namespace = useContext(DataContext).namespace;\n    useEffect(function() {\n        for (const noise of NOISES_NAMES) {\n            if (typeof source[noise] === 'undefined') {\n                onChange({ ...MULTI_NOISE_BIOME_SOURCE, ...source, biomes });\n                return;\n            }\n        }\n        if (biomes !== source.biomes) {\n            onChange({ ...source, biomes });\n        }\n    }, [biomes, onChange, source]);\n\n    const values = [];\n    biomes.forEach((entry, i) => {\n        const key = i;\n        values.push(<BiomeSelection namespace={namespace} vanilla={vanilla} custom={custom} biomesOptions={options} entry={entry} key={key} onChange={handleChange}><Button cat=\"danger\" onClick={(e) => handleDeleteClick(e, i)}>Delete</Button></BiomeSelection>);\n    });\n    return <>\n        <div className=\"flex-container\" style={{ alignItems: 'baseline' }}>\n            <h4>\n                Biomes list\n                <Button onClick={handleAddClick} cat=\"primary mls\">Add biome</Button>\n                <Button onClick={toggleAdvanced} cat=\"secondary\">Advanced</Button>\n            </h4>\n        </div>\n        {advanced && <div className=\"grid-2-small-1 has-gutter mbm\">\n            {NOISES_NAMES\n                .map(noise => <PerlinNoiseParameters\n                    key={noise}\n                    noise={source[noise] || MULTI_NOISE_BIOME_SOURCE[noise]}\n                    onChange={(n) => handleNoiseChange(noise, n)}>{capitalize(noise.replace('_', ' '))}</PerlinNoiseParameters>)}\n        </div>}\n        {values}\n        {hasDuplicatedObjects(biomes.map(biome => biome.parameters)) && <p className=\"alert--warning\">Warning: every biome must have a unique combination of parameters!</p>}\n        <MultiNoiseRepresentation source={source} />\n    </>;\n});\n\nconst VanillaLayeredBiomeSource = React.memo(function({source, onChange}) {\n    const handleLegacyBiomeToggle = useCallback(function(e) {\n        onChange({ ...source, legacy_biome_init_layer: e.target.checked });\n    }, [onChange, source]);\n    const handleLargeBiomesToggle = useCallback(function(e) {\n        onChange({ ...source, large_biomes: e.target.checked });\n    }, [onChange, source]);\n\n    return <div className=\"form-row\">\n        <ConfInput checked={source.legacy_biome_init_layer || false} onChange={handleLegacyBiomeToggle}>Legacy biome init layer</ConfInput>\n        <ConfInput checked={source.large_biomes || false} onChange={handleLargeBiomesToggle}>Large biomes</ConfInput>\n    </div>;\n});\n\nconst PerlinNoiseParameters = React.memo(function({children, noise = { firstOctave: -7, amplitudes: [1, 1] }, onChange}) {\n\n    const handleFirstOctaveChange = useCallback(function(firstOctave) {\n        onChange({ ...noise, firstOctave });\n    }, [noise, onChange]);\n    const handleAmplitudesChange = useCallback(function(amplitudes) {\n        onChange({ ...noise, amplitudes });\n    }, [noise, onChange]);\n\n    return <fieldset style={{ margin: 0 }}>\n        <legend>{children}</legend>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"firstOctave\" value={noise.firstOctave} onChange={handleFirstOctaveChange} min={-1000}>First octave</NumberInput>\n            <NumberList numbers={noise.amplitudes} onChange={handleAmplitudesChange}>Amplitudes</NumberList>\n        </div>\n    </fieldset>;\n});\n\nconst BiomeSelection = React.memo(function({namespace, vanilla, custom, biomesOptions, entry, onChange, children}) {\n    const handleBiomeChange = useCallback(function(option) {\n        const biome = option.value;\n        const data = (vanilla.find(b => 'minecraft:' + b.name === biome) || custom.find(b => namespace + ':' + b.key === biome) || { rainfall: 0, temperature: 0 });\n        const parameters = {\n            altitude: entry.parameters.altitude || 0,\n            weirdness: entry.parameters.weirdness || 0,\n            offset: entry.parameters.offset || 0,\n            temperature: data.temperature || 0.8,\n            humidity: data.rainfall || 0.4\n        };\n        onChange({ biome, parameters }, entry);\n    }, [entry, custom, namespace, onChange, vanilla]);\n\n    const handleParameterChange = useCallback(function(value) {\n        onChange({ biome: entry.biome, parameters: { ...entry.parameters, ...value } }, entry);\n    }, [entry, onChange]);\n\n    const selected = useMemo(function() {\n        return biomesOptions.find(o => o.value === entry.biome);\n    }, [biomesOptions, entry.biome]);\n    return <div className=\"form-group\">\n        <Select options={biomesOptions} value={selected} onChange={handleBiomeChange} />\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"altitude\" value={entry.parameters.altitude} upChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\">Altitude</NumberInput>\n            <NumberInput id=\"weirdness\" value={entry.parameters.weirdness} upChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\">Weirdness</NumberInput>\n            <NumberInput id=\"offset\" value={entry.parameters.offset} upChange={handleParameterChange} step=\"0.1\" max=\"1\">Offset</NumberInput>\n            <NumberInput id=\"temperature\" value={entry.parameters.temperature} upChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\">Temperature</NumberInput>\n            <NumberInput id=\"humidity\" value={entry.parameters.humidity} upChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\">Humidity</NumberInput>\n            {children}\n        </div>\n    </div>\n});\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { NumberInput } from '../../ui/Input';\nimport { useToggle } from '../../hooks/ui';\nimport { useCrud, CRUD } from '../../hooks/form';\nimport Select from '../../ui/Select';\nimport { STRUCTURES } from './NoiseDefaults';\nimport { Button } from '../../ui/Button';\n\nexport const Structures = React.memo(function ({ data, onChange }) {\n\n    const handleStrongholdChange = useCallback(function(stronghold) {\n        if (stronghold === false) {\n            onChange({ structures: data.structures });\n        } else {\n            onChange({ structures: data.structures, stronghold });\n        }\n    }, [data.structures, onChange]);\n    const handleStructuresChange = useCallback(function(structures) {\n        onChange({ ...data, structures });\n    }, [data, onChange]);\n\n    return <fieldset>\n        <legend>Structures</legend>\n        <Stronghold data={data.stronghold} onChange={handleStrongholdChange} />\n        <StructuresList data={data.structures} onChange={handleStructuresChange} />\n    </fieldset>\n});\n\nconst Stronghold = React.memo(function ({ data, onChange }) {\n\n    const [enabled, toggle] = useToggle(typeof data === 'object');\n    const [stronghold, setStronghold] = useState(data || { distance: 32, spread: 3, count: 128 });\n\n    const handleChange = useCallback(function(value) {\n        setStronghold(stronghold => ({ ...stronghold, ...value }));\n    }, [setStronghold]);\n\n    useEffect(function() {\n        if ((data !== stronghold && enabled)\n            || (enabled && typeof data === 'undefined')\n            || (!enabled && typeof data === 'object')) {\n                onChange(enabled ? stronghold : false);\n        }\n    }, [data, enabled, onChange, stronghold]);\n\n    return <div>\n        <div className=\"toggle-label\">Stronghold<Button cat=\"secondary\" onClick={toggle}>{enabled ? 'Disable' : 'Enable'}</Button></div>\n        {enabled && <div className=\"form-group form-row\">\n            <NumberInput id=\"distance\" defaultValue={stronghold.distance} upChange={handleChange} max=\"1023\">Distance</NumberInput>\n            <NumberInput id=\"spread\" defaultValue={stronghold.spread} upChange={handleChange} max=\"1023\">Spread</NumberInput>\n            <NumberInput id=\"count\" defaultValue={stronghold.count} upChange={handleChange} min=\"1\" max=\"4095\">Count</NumberInput>\n        </div>}\n    </div>\n});\n\nconst StructuresList = React.memo(function({ data, onChange }) {\n    const [visibility, toggle] = useToggle();\n    const [structures, dispatch] = useCrud(Object.entries(data).map(([type, d]) => ({ ...d, type })));\n\n    const handleAdd = useCallback(function(e) {\n        e.preventDefault();\n        dispatch({ type: CRUD.ADD, payload: {\n            type: 'minecraft:village',\n            spacing: 32,\n            separation: 8,\n            salt: 10387312\n        }, unshift: true });\n        if (!visibility) {\n            toggle();\n        }\n    }, [dispatch, toggle, visibility]);\n    const handleChange = useCallback(function(original, structure) {\n        dispatch({ type: CRUD.UPDATE, target: original, payload: structure });\n    }, [dispatch]);\n    const handleRemove = useCallback(function(structure) {\n        dispatch({ type: CRUD.REMOVE, payload: structure });\n    }, [dispatch]);\n\n    useEffect(function() {\n        const obj = {};\n        for (const structure of structures) {\n            obj[structure.type] = {\n                spacing: structure.spacing,\n                separation: structure.separation,\n                salt: structure.salt\n            };\n        }\n        if (JSON.stringify(obj) !== JSON.stringify(data)) {\n            onChange(obj);\n        }\n    }, [data, onChange, structures]);\n\n    return <div>\n        <div className=\"toggle-label\">\n            Structures\n            <div className=\"btn-group\">\n                <Button onClick={handleAdd}>Add structure</Button>\n                {structures.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{visibility ? 'Less...' : 'More...'}</Button>}\n            </div>\n        </div>\n        {visibility && structures.map((def, i) => \n            <Structure data={def} key={i} onChange={handleChange} onDelete={handleRemove} />\n        )}\n    </div>\n});\n\nconst Structure = React.memo(function ({ data, onChange, onDelete }) {\n\n    const handleTypeChange = useCallback(function(option) {\n        onChange(data, { ...data, type: option.value });\n    }, [data,  onChange]);\n    const handleSpacingChange = useCallback(function(value) {\n        const name = Object.keys(value)[0];\n        value = value[name];\n        if ((name === 'spacing' && value > data.separation)\n            || (name === 'separation' && value < data.spacing)) {\n            onChange(data, {...data, [name]: value});\n        } \n    }, [data,  onChange]);\n    const handleSaltChange = useCallback(function(salt) {\n        onChange(data, { ...data, salt });\n    }, [data,  onChange]);\n    const handleDelete = useCallback(function (e) {\n        e.preventDefault();\n        onDelete(data);\n    }, [data, onDelete]);\n\n    return <div>\n        <div className=\"form-group\">\n            <label>Type</label> : <Select options={STRUCTURES} value={STRUCTURES.find(s => s.value === data.type)} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"spacing\" value={data.spacing} min={data.separation + 1} upChange={handleSpacingChange} max=\"4096\">Spacing</NumberInput>\n            <NumberInput id=\"separation\" value={data.separation} upChange={handleSpacingChange} max={Math.min(data.spacing - 1, 4096)}>Separation</NumberInput>\n            <NumberInput id=\"salt\" value={data.salt} onChange={handleSaltChange} max={0x7FFFFFFF} style={{ width: '150px' }}>Salt</NumberInput>\n            <div className=\"form-inline\"><Button cat=\"danger\" onClick={handleDelete}>Delete</Button></div>\n        </div>\n        <hr /> \n    </div>\n});\n","import React, { useCallback, useEffect } from 'react';\nimport { FixedBiomeSource } from './BiomeSource';\nimport { useCrudPreset, useJsonEffect } from '../../hooks/form';\nimport { NumberInput, ConfInput } from '../../ui/Input';\nimport { Button } from '../../ui/Button';\nimport { Structures } from '../noise/Structures';\nimport { BlockSelect } from '../state/BlockPredicate';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\n\nexport const FlatChunkSettings = React.memo(function ({ settings, onChange }) {\n\n    settings = useJsonEffect(settings || {\n        structures: {\n            structures: []\n        },\n        layers: [\n            { block: 'minecraft:bedrock', height: 1 },\n            { block: 'minecraft:sandstone', height: 70 }\n        ],\n        biome: 'minecraft:plains'\n    }, settings, onChange);\n\n    const handleBiomeChange = useCallback(function (biome) {\n        onChange({ ...settings, biome });\n    }, [settings, onChange]);\n    const handleLayersChange = useCallback(function (layers) {\n        onChange({ ...settings, layers });\n    }, [settings, onChange]);\n    const handleStructuresChange = useCallback(function (structures) {\n        onChange({ ...settings, structures });\n    }, [settings, onChange]);\n    const handleLakesToggle = useCallback(function (e) {\n        onChange({ ...settings, lakes: e.target.checked });\n    }, [settings, onChange]);\n\n    return <div className=\"form-group\">\n        <div className=\"form-group form-row\">\n            <FixedBiomeSource biome={settings.biome} inline={true} onChange={handleBiomeChange} />\n            <ConfInput className=\"mls\" checked={settings.lakes || false} onChange={handleLakesToggle}>Lakes</ConfInput>\n        </div>\n        <GeneratorLayers config={settings.layers} onChange={handleLayersChange} />\n        <Structures data={settings.structures} onChange={handleStructuresChange} />\n    </div>\n});\n\nconst GeneratorLayers = React.memo(function ({ config, onChange }) {\n    const [layers, handleAdd, handleChange, handleRemove] = useCrudPreset(config, { block: 'minecraft:grass_block', height: 1 });\n\n    const shouldCancelStart = useCallback(function (e) {\n        return !e.target.parentNode.classList.contains('sortable-item');\n    }, []);\n\n    const handleReversedSort = useCallback(function ({ oldIndex, newIndex }) {\n        handleChange(layers.length - 1 - oldIndex, layers.length - 1 - newIndex);\n    }, [layers, handleChange]);\n\n    useEffect(() => {\n        if (layers !== config) {\n            onChange(layers);\n        }\n    }, [config, layers, onChange]);\n\n    return <fieldset>\n        <legend>Layers <Button onClick={handleAdd}>Add layer</Button></legend>\n        <SortableLayersList layers={layers} onChange={handleChange} onRemove={handleRemove} onSortEnd={handleReversedSort} shouldCancelStart={shouldCancelStart} />\n    </fieldset>\n});\n\nconst SortableLayersList = SortableContainer(React.memo(function ({ layers, onChange, onRemove }) {\n    let key = 0;\n    return <ol className=\"sortable-container\">\n        {layers.map((layer, index) => {\n            key += layer.height + 1;\n            return <Layer i={index} index={layers.length - 1 - index} key={key} layer={layer} onChange={onChange} onRemove={onRemove} />\n        }).reverse()}\n    </ol>\n}));\n\nconst Layer = SortableElement(React.memo(function ({ i, layer, onChange, onRemove }) {\n    const handleHeightChange = useCallback(function (height, layer) {\n        onChange({ ...layer, height }, layer);\n    }, [onChange]);\n    const handleBlockChange = useCallback(function (block, layer) {\n        onChange({ ...layer, block }, layer);\n    }, [onChange]);\n\n    return <div className=\"sortable-item\"><div className=\"form-group form-row\">\n        <div className=\"flex-grow\"><BlockSelect block={layer.block} onChange={option => handleBlockChange(option.value, layer)} /></div>\n        <NumberInput id=\"height\" className=\"mls\" value={layer.height} max={256} onChange={height => handleHeightChange(height, layer)}>Height</NumberInput>\n        <Button cat=\"danger mlm\" onClick={e => onRemove(e, i)}>Remove</Button>\n    </div></div>\n}));\n","import React, { useCallback, useState } from 'react';\nimport { BlockState } from '../state/BlockState';\nimport { Button } from '../../ui/Button';\nimport { JsonViewer } from '../../ui/JsonViewer';\nimport { ConfInput, NumberInput } from '../../ui/Input';\nimport Select from '../../ui/Select';\nimport { useValueChange } from '../../hooks/form';\nimport { OVERWORLD_NOISE } from './NoiseDefaults';\nimport { Structures } from './Structures';\nimport { NamespacedKey } from '../NamespacedKey';\nimport { INT_MIN_VALUE } from '../../utils/math';\nimport { useKeyedListOptions } from '../../hooks/context';\n\nexport const NoiseGenerator = React.memo(function({onChange, settings = 'minecraft:overworld'}) {\n    const options = useKeyedListOptions('noises').map(option => {\n        option.resource = option.value;\n        return option;\n    });\n\n    const handleChange = useCallback(function(option) {\n        onChange(option.resource);\n    }, [onChange]);\n\n    if (typeof settings === 'object') {\n        options.push({ value: 'inline', label: 'inline', resource: settings });\n    }\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"settings\">Noise settings</label><Select options={options} value={options.find(o => o.resource === settings)} onChange={handleChange} inputId=\"settings\" />\n    </div>;\n});\n\nexport const NoiseSettings = React.memo(function ({ data = OVERWORLD_NOISE, onSave }) {\n\n    const [state, setState] = useState(data);\n\n    const handleSubmit = useCallback(function (e) {\n        e.preventDefault();\n        const formData = Object.fromEntries(new FormData(e.target));\n        const data = { ...state, ...formData };\n        Object.keys(formData).forEach(function (key) {\n            if (!isNaN(formData[key])) {\n                data[key] = parseFloat(formData[key]);\n            }\n        });\n        data.disable_mob_generation = formData.hasOwnProperty('disable_mob_generation');\n        onSave(data);\n    }, [onSave, state]);\n\n    const handleBlockChange = useCallback(function (name, s) {\n        setState(state => ({ ...state, [name]: s }));\n    }, []);\n    const handleStructuresChange = useCallback(function (structures) {\n        setState(state => ({ ...state, structures }));\n    }, []);\n    const handleNoiseChange = useCallback(function (noise) {\n        setState(state => ({ ...state, noise: { ...state.noise, ...noise } }));\n    }, []);\n\n    return <form onSubmit={handleSubmit}>\n        <NamespacedKey example=\"epic\" type=\"noises\" value={data.key} expectBreakage={typeof data.key !== 'undefined'}>\n            noise\n            <JsonViewer data={state} />\n        </NamespacedKey>\n\n        <Structures data={data.structures} onChange={handleStructuresChange} />\n\n        <fieldset>\n            <legend>Defaults</legend>\n            <div className=\"form-group\">\n                <label>Block</label> : <BlockState block={state.default_block} onChange={state => handleBlockChange('default_block', state)} />\n            </div>\n            <div className=\"form-group\">\n                <label>Fluid</label> : <BlockState block={state.default_fluid} onChange={state => handleBlockChange('default_fluid', state)} />\n            </div>\n        </fieldset>\n\n        <fieldset>\n            <legend>Main</legend>\n            <div className=\"form-group form-row\">\n                <NumberInput name=\"bedrock_roof_position\" defaultValue={data.bedrock_roof_position} min={-20} max={276}>Bedrock roof position</NumberInput>\n                <NumberInput name=\"bedrock_floor_position\" defaultValue={data.bedrock_floor_position} min={-20} max={276}>Bedrock floor position</NumberInput>\n                <NumberInput name=\"sea_level\" defaultValue={data.sea_level} max={256}>Sea level</NumberInput>\n                <ConfInput name=\"disable_mob_generation\" defaultChecked={data.disable_mob_generation}>Disable mob generation</ConfInput>\n            </div>\n        </fieldset>\n\n        <NoiseConfig data={state.noise} onChange={handleNoiseChange} />\n\n        <Button type=\"submit\">Save</Button>\n    </form>;\n});\n\nconst NoiseConfig = React.memo(function ({ data, onChange }) {\n\n    const handleChange = useValueChange(onChange, data);\n    const handleSamplingChange = useCallback(function (sampling) {\n        onChange({ ...data, sampling: { ...data.sampling, ...sampling } });\n    }, [data, onChange]);\n    const handleTopSlideChange = useCallback(function (top_slide) {\n        onChange({ ...data, top_slide: { ...data.top_slide, ...top_slide } });\n    }, [data, onChange]);\n    const handleBottomSlideChange = useCallback(function (bottom_slide) {\n        onChange({ ...data, bottom_slide: { ...data.bottom_slide, ...bottom_slide } });\n    }, [data, onChange]);\n\n    return <fieldset>\n        <legend>Noise config (advanced)</legend>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"height\" value={data.height} upChange={onChange} min=\"0\" max=\"256\">Height</NumberInput>\n            <NumberInput id=\"size_horizontal\" value={data.size_horizontal} upChange={onChange} min=\"1\" max=\"4\">Size horizontal</NumberInput>\n            <NumberInput id=\"size_vertical\" value={data.size_vertical} upChange={onChange} min=\"1\" max=\"4\">Size vertical</NumberInput>\n            <NumberInput id=\"density_factor\" value={data.density_factor} upChange={onChange} step=\"0.01\">Density factor</NumberInput>\n            <NumberInput id=\"density_offset\" value={data.density_offset} upChange={onChange} min=\"-10000\" step=\"0.01\">Density offset</NumberInput>\n        </div>\n        <div className=\"form-group form-row\">\n            <ConfInput id=\"simplex_surface_noise\" checked={data.simplex_surface_noise} onChange={handleChange}>Simplex surface noise</ConfInput>\n            <ConfInput id=\"random_density_offset\" checked={data.random_density_offset} onChange={handleChange}>Random density offset</ConfInput>\n            <ConfInput id=\"island_noise_override\" checked={data.island_noise_override} onChange={handleChange}>Island noise override</ConfInput>\n            <ConfInput id=\"amplified\" checked={data.amplified} onChange={handleChange}>Amplified</ConfInput>\n        </div>\n\n        <NoiseSamplingConfig data={data.sampling} onChange={handleSamplingChange}>Sampling</NoiseSamplingConfig>\n        <SlideConfig data={data.top_slide} onChange={handleTopSlideChange}>Top slide</SlideConfig>\n        <SlideConfig data={data.bottom_slide} onChange={handleBottomSlideChange}>Bottom slide</SlideConfig>\n    </fieldset>\n});\n\nconst NoiseSamplingConfig = React.memo(function ({ children, data, onChange }) {\n\n    return <fieldset>\n        <legend>{children}</legend>\n        <div className=\"form-group form-row\">\n            <NumberInput name=\"xz_scale\" value={data.xz_scale} upChange={onChange}>XY scale</NumberInput>\n            <NumberInput name=\"y_scale\" value={data.y_scale} upChange={onChange}>Y scale</NumberInput>\n            <NumberInput name=\"xz_factor\" value={data.xz_factor} upChange={onChange}>XZ factor</NumberInput>\n            <NumberInput name=\"y_factor\" value={data.y_factor} upChange={onChange}>Y factor</NumberInput>\n        </div>\n    </fieldset>\n});\n\nconst SlideConfig = React.memo(function ({ children, data, onChange }) {\n\n    return <fieldset>\n        <legend>{children}</legend>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"target\" value={data.target} upChange={onChange} min={INT_MIN_VALUE}>Target</NumberInput>\n            <NumberInput id=\"size\" value={data.size} upChange={onChange} max={256}>Size</NumberInput>\n            <NumberInput id=\"offset\" value={data.offset} upChange={onChange} min={INT_MIN_VALUE}>Offset</NumberInput>\n        </div>\n    </fieldset>\n});\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { BiomeSource } from './BiomeSource';\nimport { hashCode } from './../../utils/hash';\nimport Select from '../../ui/Select';\nimport { ConfInput } from '../../ui/Input';\nimport { CHUNK_GENERATOR_TYPES, DIMENSION } from './DimensionDefaults';\nimport { FlatChunkSettings } from './FlatChunkSettings';\nimport { NoiseGenerator } from '../noise/NoiseSettings';\n\nexport function DimensionGenerator({generator, onChange}) {\n\n    const [previousGenerator, setPreviousGenerator] = useState({ type: null });\n\n    const handleChunkGeneratorChange = useCallback(function(option) {\n        if (option.value === previousGenerator.type) {\n            onChange(previousGenerator);\n        } else if (option.value === 'minecraft:noise') {\n            onChange(DIMENSION.generator);\n        } else {\n            onChange({ type: option.value });\n        }\n        setPreviousGenerator(generator);\n    }, [generator, previousGenerator, onChange]);\n\n    const handleSeedChange = useCallback(function(seed) {\n        onChange({ ...generator, seed });\n    }, [generator, onChange]);\n    const handleSettingsChange = useCallback(function(settings) {\n        onChange({ ...generator, settings });\n    }, [generator, onChange]);\n    const handleBiomeSourceChange = useCallback(function(biome_source) {\n        onChange({ ...generator, biome_source });\n    }, [generator, onChange]);\n\n    return <fieldset>\n        <legend style={{ fontWeight: 'normal', width: '28ch', fontSize: '1.05rem' }}><Select options={CHUNK_GENERATOR_TYPES} value={CHUNK_GENERATOR_TYPES.find(o => generator.type === o.value)} onChange={handleChunkGeneratorChange} /></legend>\n        <div className=\"form-group\">\n            {generator.type === 'minecraft:noise' && <>\n                <SeedField value={generator.seed} onChange={handleSeedChange} />\n                <NoiseGenerator settings={generator.settings} onChange={handleSettingsChange} />\n                <BiomeSource source={generator.biome_source} onChange={handleBiomeSourceChange} />\n            </>}\n            {generator.type === 'minecraft:flat' &&\n                <FlatChunkSettings settings={generator.settings} onChange={handleSettingsChange} />\n            }\n        </div>\n    </fieldset>;\n}\n\nexport const SeedField = React.memo(function({onChange, value}) {\n    const [text, setText] = useState(value || 286956243);\n\n    const handleChange = useCallback(function(e) {\n        const value = e.target.value;\n        setText(value);\n        onChange(isNaN(value) ? hashCode(value) : parseInt(value));\n    }, [onChange]);\n\n    useEffect(() => {\n        if (typeof value !== 'number') {\n            onChange(286956243);\n        }\n    }, [onChange, value]);\n\n    return <div className=\"form-group\">\n        <ConfInput type=\"text\" id=\"seed\" value={text} onChange={handleChange}>Seed</ConfInput>\n    </div>\n});\n","import React, { useCallback } from 'react';\nimport { DimensionType } from './DimensionType';\nimport { DimensionGenerator } from './DimensionGenerator';\nimport { Button } from '../../ui/Button';\nimport { DIMENSION } from './DimensionDefaults';\nimport { NamespacedKey } from '../NamespacedKey';\nimport { JsonViewer } from '../../ui/JsonViewer';\nimport { useIndexableState } from '../../hooks/context';\n\nexport function Dimension({data = DIMENSION, onSave}) {\n\n    const [state, setState] = useIndexableState(data);\n\n    const handleTypeChange = useCallback(function(type) {\n        setState(state => ({ ...state, type }));\n    }, [setState]);\n    const handleGeneratorChange = useCallback(function(generator) {\n        setState(state => ({ ...state, generator }));\n    }, [setState]);\n\n    const handleVanillaSelect = useCallback(function(dimension) {\n        dimension.generator.seed = state.generator.seed;\n        dimension.generator.biome_source.seed = state.generator.biome_source.seed;\n        setState(dimension);\n    }, [setState, state.generator.seed, state.generator.biome_source.seed]);\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        onSave({\n            ...state,\n            ...Object.fromEntries(new FormData(e.target))\n        });\n    }, [onSave, state])\n\n    return <form onSubmit={handleSubmit}>\n        <NamespacedKey example=\"blue_dimension\" type=\"dimensions\" value={data.key} mayReplaceVanilla={true} onSelectLoad={handleVanillaSelect}>\n            dimension\n            <JsonViewer data={state} />\n        </NamespacedKey>\n        <DimensionType type={state.type} onChange={handleTypeChange} />\n        <DimensionGenerator generator={state.generator} onChange={handleGeneratorChange} />\n        <Button type=\"submit\">Save</Button>\n    </form>\n}","export const TREE_DECORATORS_OPTIONS = [\n    { value: 'alter_ground', label: 'Alter ground' },\n    { value: 'beehive', label: 'Beehive', default: { probability: 0.02 } },\n    { value: 'cocoa', label: 'Cocoa beans', default: { probability: 0.2 } },\n    { value: 'leave_vine', label: 'Leave vine' },\n    { value: 'trunk_vine', label: 'Trunk vine' }\n].map(o => {\n    o.value = 'minecraft:' + o.value;\n    return o;\n});\n\nexport const BLOCK_PILE_FEATURE_CONFIG = {\n    state_provider: {\n        state: {\n            Properties: {\n                axis: \"y\"\n            },\n            Name: \"minecraft:hay_block\"\n        },\n        type: \"minecraft:rotated_block_provider\"\n    }\n};\n\nexport const HUGE_FUNGUS_FEATURE_CONFIG = {\n    hat_state: {\n        Name: \"minecraft:nether_wart_block\"\n    },\n    decor_state: {\n        Name: \"minecraft:shroomlight\"\n    },\n    planted: false,\n    valid_base_block: {\n        Name: \"minecraft:crimson_nylium\"\n    },\n    stem_state: {\n        Properties: {\n            axis: \"y\"\n        },\n        Name: \"minecraft:crimson_stem\"\n    }\n};\n\nexport const ORE_FEATURE_CONFIG = {\n    target: {\n        tag: \"minecraft:base_stone_overworld\",\n        predicate_type: \"minecraft:tag_match\"\n    },\n    state: {\n        Name: \"minecraft:gold_ore\"\n    },\n    size: 30\n};\n\nexport const SPRING_FEATURE_CONFIG = {\n    rock_count: 4,\n    hole_count: 1,\n    valid_blocks: [\n        \"minecraft:stone\",\n        \"minecraft:granite\",\n        \"minecraft:diorite\",\n        \"minecraft:andesite\"\n    ],\n    state: {\n        Properties: {\n            falling: \"true\"\n        },\n        Name: \"minecraft:water\"\n    },\n    requires_block_below: true\n};\n\nexport const TREE_FEATURE_CONFIG = {\n    heightmap: \"OCEAN_FLOOR\",\n    minimum_size: {\n        limit: 1,\n        lower_size: 0,\n        upper_size: 1,\n        type: \"minecraft:two_layers_feature_size\"\n    },\n    decorators: [],\n    trunk_provider: {\n        state: {\n            Properties: {\n                axis: \"y\"\n            },\n            Name: \"minecraft:birch_log\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    leaves_provider: {\n        state: {\n            Properties: {\n                persistent: \"false\",\n                distance: \"7\"\n            },\n            Name: \"minecraft:birch_leaves\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    foliage_placer: {\n        radius: 2,\n        offset: 0,\n        height: 3,\n        type: \"minecraft:blob_foliage_placer\"\n    },\n    trunk_placer: {\n        base_height: 5,\n        height_rand_a: 2,\n        height_rand_b: 0,\n        type: \"minecraft:straight_trunk_placer\"\n    }\n};\n\nexport const RANDOM_PATCH_FEATURE_CONFIG = {\n    can_replace: false,\n    project: true,\n    need_water: false,\n    xspread: 7,\n    yspread: 3,\n    zspread: 7,\n    whitelist: [\n        {\n            Properties: {\n                snowy: \"false\"\n            },\n            Name: \"minecraft:grass_block\"\n        }\n    ],\n    blacklist: [],\n    tries: 64,\n    state_provider: {\n        state: {\n            Name: \"minecraft:pumpkin\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    block_placer: {\n        type: \"minecraft:simple_block_placer\"\n    }\n};\n","import { TREE_FEATURE_CONFIG, RANDOM_PATCH_FEATURE_CONFIG, HUGE_FUNGUS_FEATURE_CONFIG, BLOCK_PILE_FEATURE_CONFIG, SPRING_FEATURE_CONFIG, ORE_FEATURE_CONFIG } from \"./config/FeatureConfigDefaults\";\n\nexport const DECORATED_BAMBOO_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        feature: {\n                            config: {\n                                probability: 0.2\n                            },\n                            type: \"minecraft:bamboo\"\n                        },\n                        decorator: {\n                            config: {},\n                            type: \"minecraft:heightmap_world_surface\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                },\n                decorator: {\n                    config: {},\n                    type: \"minecraft:square\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                noise_to_count_ratio: 160,\n                noise_factor: 80.0,\n                noise_offset: 0.3\n            },\n            type: \"minecraft:count_noise_biased\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_BLOCK_PILE_CONFIG = {\n    config: {\n        feature: {\n            type: \"minecraft:decorated\",\n            config: {\n                decorator: {\n                    type: \"minecraft:count_multilayer\",\n                    config: {\n                        \"count\": 2\n                    }\n                },\n                feature: {\n                    config: BLOCK_PILE_FEATURE_CONFIG,\n                    type: \"minecraft:block_pile\"\n                }\n            }\n        },\n        decorator: {\n            type: \"minecraft:chance\",\n            config: {\n                chance: 12\n            }\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_CHORUS_PLANT_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {},\n                    type: \"minecraft:chorus_plant\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:heightmap\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: {\n                    base: 0,\n                    spread: 4\n                }\n            },\n            type: \"minecraft:count\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_DELTA_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                contents: {\n                    Properties: {\n                        level: \"0\"\n                    },\n                    Name: \"minecraft:lava\"\n                },\n                rim: {\n                    Name: \"minecraft:magma_block\"\n                },\n                size: {\n                    base: 3,\n                    spread: 4\n                },\n                rim_size: {\n                    base: 0,\n                    spread: 2\n                }\n            },\n            type: \"minecraft:delta_feature\"\n        },\n        decorator: {\n            config: {\n                count: 40\n            },\n            type: \"minecraft:count_multilayer\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_DESERT_WELL_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {},\n                    type: \"minecraft:desert_well\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:heightmap\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                chance: 1000\n            },\n            type: \"minecraft:chance\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_DISK_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        state: {\n                            Name: \"minecraft:sand\"\n                        },\n                        radius: {\n                            base: 2,\n                            spread: 4\n                        },\n                        half_height: 2,\n                        targets: [\n                            {\n                                Name: \"minecraft:dirt\"\n                            },\n                            {\n                                Properties: {\n                                    snowy: \"false\"\n                                },\n                                Name: \"minecraft:grass_block\"\n                            }\n                        ]\n                    },\n                    type: \"minecraft:disk\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:top_solid_heightmap\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 3\n            },\n            type: \"minecraft:count\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_FOREST_ROCK_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        state: {\n                            Name: \"minecraft:mossy_cobblestone\"\n                        }\n                    },\n                    type: \"minecraft:forest_rock\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:heightmap\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: {\n                    base: 0,\n                    spread: 2\n                }\n            },\n            type: \"minecraft:count\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\n\nexport const DECORATED_FOSSIL_CONFIG = {\n    config: {\n        feature: {\n            config: {},\n            type: \"minecraft:fossil\"\n        },\n        decorator: {\n            config: {\n                chance: 64\n            },\n            type: \"minecraft:chance\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_GLOWSTONE_BLOB_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        feature: {\n                            config: {},\n                            type: \"minecraft:glowstone_blob\"\n                        },\n                        decorator: {\n                            config: {\n                                bottom_offset: 0,\n                                top_offset: 0,\n                                maximum: 128\n                            },\n                            type: \"minecraft:range\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                },\n                decorator: {\n                    config: {},\n                    type: \"minecraft:square\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 10\n            },\n            type: \"minecraft:count\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_HUGE_FUNGUS_CONFIG = {\n    config: {\n        feature: {\n            config: HUGE_FUNGUS_FEATURE_CONFIG,\n            type: \"minecraft:huge_fungus\"\n        },\n        decorator: {\n            config: {\n                count: 8\n            },\n            type: \"minecraft:count_multilayer\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_ICEBERG_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        state: {\n                            Name: \"minecraft:packed_ice\"\n                        }\n                    },\n                    type: \"minecraft:iceberg\"\n                },\n                decorator: {\n                    config: {},\n                    type: \"minecraft:iceberg\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                chance: 16\n            },\n            type: \"minecraft:chance\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_ICE_PATCH_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        state: {\n                            Name: \"minecraft:packed_ice\"\n                        },\n                        radius: {\n                            base: 2,\n                            spread: 1\n                        },\n                        half_height: 1,\n                        targets: [\n                            {\n                                Name: \"minecraft:dirt\"\n                            },\n                            {\n                                Properties: {\n                                    snowy: \"false\"\n                                },\n                                Name: \"minecraft:grass_block\"\n                            },\n                            {\n                                Properties: {\n                                    snowy: \"false\"\n                                },\n                                Name: \"minecraft:podzol\"\n                            },\n                            {\n                                Name: \"minecraft:coarse_dirt\"\n                            },\n                            {\n                                Properties: {\n                                    snowy: \"false\"\n                                },\n                                Name: \"minecraft:mycelium\"\n                            },\n                            {\n                                Name: \"minecraft:snow_block\"\n                            },\n                            {\n                                Name: \"minecraft:ice\"\n                            }\n                        ]\n                    },\n                    type: \"minecraft:ice_patch\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:heightmap\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 2\n            },\n            type: \"minecraft:count\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_ICE_SPIKE_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {},\n                    type: \"minecraft:ice_spike\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:heightmap\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 3\n            },\n            type: \"minecraft:count\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_LAKE_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                state: {\n                    Properties: {\n                        level: \"0\"\n                    },\n                    Name: \"minecraft:water\"\n                }\n            },\n            type: \"minecraft:lake\"\n        },\n        decorator: {\n            config: {\n                chance: 4\n            },\n            type: \"minecraft:water_lake\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_NETHERRACK_REPLACE_BLOBS_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        feature: {\n                            config: {\n                                target: {\n                                    Name: \"minecraft:netherrack\"\n                                },\n                                state: {\n                                    Properties: {\n                                        axis: \"y\"\n                                    },\n                                    Name: \"minecraft:basalt\"\n                                },\n                                radius: {\n                                    base: 3,\n                                    spread: 4\n                                }\n                            },\n                            type: \"minecraft:netherrack_replace_blobs\"\n                        },\n                        decorator: {\n                            config: {\n                                bottom_offset: 0,\n                                top_offset: 0,\n                                maximum: 128\n                            },\n                            type: \"minecraft:range\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                },\n                decorator: {\n                    config: {},\n                    type: \"minecraft:square\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 75\n            },\n            type: \"minecraft:count\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_ORE_FEATURE_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        feature: {\n                            config: ORE_FEATURE_CONFIG,\n                            type: \"minecraft:ore\"\n                        },\n                        decorator: {\n                            config: {\n                                bottom_offset: 0,\n                                top_offset: 0,\n                                maximum: 32\n                            },\n                            type: \"minecraft:range\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                },\n                decorator: {\n                    config: {},\n                    type: \"minecraft:square\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 2\n            },\n            type: \"minecraft:count\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_RANDOM_PATCH_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: RANDOM_PATCH_FEATURE_CONFIG,\n                    type: \"minecraft:random_patch\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:heightmap_spread_double\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                chance: 32\n            },\n            type: \"minecraft:chance\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_SEAGRASS_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        probability: 0.3\n                    },\n                    type: \"minecraft:seagrass\"\n                },\n                decorator: {\n                    config: {\n                        count: 48\n                    },\n                    type: \"minecraft:count\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                outer: {\n                    config: {},\n                    type: \"minecraft:square\"\n                },\n                inner: {\n                    config: {},\n                    type: \"minecraft:top_solid_heightmap\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_SIMPLE_BLOCK_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                to_place: {\n                    Name: \"minecraft:seagrass\"\n                },\n                place_on: [\n                    {\n                        Name: \"minecraft:stone\"\n                    }\n                ],\n                place_in: [\n                    {\n                        Properties: {\n                            level: \"0\"\n                        },\n                        Name: \"minecraft:water\"\n                    }\n                ],\n                place_under: [\n                    {\n                        Properties: {\n                            level: \"0\"\n                        },\n                        Name: \"minecraft:water\"\n                    }\n                ]\n            },\n            type: \"minecraft:simple_block\"\n        },\n        decorator: {\n            config: {\n                step: \"liquid\",\n                probability: 0.1\n            },\n            type: \"minecraft:carving_mask\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_SPRING_FEATURE_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        feature: {\n                            config: SPRING_FEATURE_CONFIG,\n                            type: \"minecraft:spring_feature\"\n                        },\n                        decorator: {\n                            config: {\n                                bottom_offset: 8,\n                                top_offset: 8,\n                                maximum: 256\n                            },\n                            type: \"minecraft:range_biased\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                },\n                decorator: {\n                    config: {},\n                    type: \"minecraft:square\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 50\n            },\n            type: \"minecraft:count\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_TREE_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: TREE_FEATURE_CONFIG,\n                    type: \"minecraft:tree\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:heightmap\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 10,\n                extra_chance: 0.1,\n                extra_count: 1\n            },\n            type: \"minecraft:count_extra\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_VOID_START_PLATFORM_CONFIG = {\n    config: {},\n    type: \"minecraft:void_start_platform\"\n};\n","import React, { useState, useCallback, useMemo } from \"react\";\nimport Select from \"../../ui/Select\";\nimport { Button } from '../../ui/Button';\nimport { NumberInput } from '../../ui/Input';\nimport { useEffect } from \"react\";\nimport { useJsonEffect, useCrudPreset, useBlocksOptions } from \"../../hooks/form\";\nimport { BlockState } from \"./BlockState\";\n\nexport const BlockStateProvider = React.memo(function({block = { type: 'minecraft:simple_state_provider' }, onChange}) {\n    const [provider, setProvider] = useState(block);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:forest_flower_provider', label: 'Forest flower provider' },\n            { value: 'minecraft:plain_flower_provider', label: 'Plain flower provider' },\n            { value: 'minecraft:simple_state_provider', label: 'Simple state provider' },\n            { value: 'minecraft:rotated_block_provider', label: 'Rotated block provider' },\n            { value: 'minecraft:weighted_state_provider', label: 'Weighted state provider' }\n        ];\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        const similarities = ['minecraft:simple_state_provider', 'minecraft:rotated_block_provider'];\n        if (similarities.includes(provider.type) && similarities.includes(option.value)) {\n            setProvider({ ...provider, type: option.value });\n        } else {\n            setProvider({ type: option.value });\n        }\n    }, [provider]);\n\n    const handleSimpleStateChange = useCallback(function(state) {\n        setProvider(provider => ({ ...provider, state }));\n    }, []);\n\n    const handleWeighestStateChange = useCallback(function(entries) {\n        setProvider(provider => ({ ...provider, entries }));\n    }, []);\n\n    useJsonEffect(provider, block, onChange);\n\n    const blocks = useBlocksOptions(false);\n    const filteredBlocks = useMemo(function () {\n        const filtered = provider.type === 'minecraft:rotated_block_provider' ?\n            blocks.filter(b => b.states.some(state => state.name === 'axis')) : blocks;\n        return filtered.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n    }, [blocks, provider.type]);\n\n    return <div>\n        <label>Provider type</label>\n        <Select options={options} value={options.find(o => o.value === provider.type)} onChange={handleTypeChange} />\n        {(provider.type === 'minecraft:simple_state_provider' || provider.type === 'minecraft:rotated_block_provider') && <BlockState block={provider.state} options={filteredBlocks} onChange={handleSimpleStateChange} />}\n        {provider.type === 'minecraft:weighted_state_provider' && <WeightedStateProvider entries={provider.entries} onChange={handleWeighestStateChange} />}\n    </div>\n});\n\n\nconst WeightedStateProvider = React.memo(function({entries = [], onChange}) {\n    const options = useBlocksOptions();\n\n    const [blocks, handleAdd, handleChange, handleRemove] = useCrudPreset(entries, function(blocks) {\n        // Get the first non taken block name\n        return { data: { Name: (options.find(o => !blocks.some(b => b.data.Name === o.value)) || { value: 'minecraft:stone' }).value } };\n    });\n\n    const handleStateChange = useCallback(function(state, i) {\n        handleChange({ ...blocks[i], data: state }, blocks[i]);\n    }, [blocks, handleChange]);\n    const handleWeightChange = useCallback(function(weight, i) {\n        if (weight === 1) {\n            handleChange({ data: blocks[i].data }, blocks[i]);\n        } else {\n            handleChange({ weight, data: blocks[i].data }, blocks[i]);\n        }\n    }, [blocks, handleChange]);\n\n    useEffect(() => {\n        if (blocks !== entries) {\n            onChange(blocks);\n        }\n    }, [blocks, entries, onChange]);\n\n    return <div className=\"form-group\">\n        {blocks.map((block, i) => {\n            const filteredOptions = options.filter(o => o.value === block.data.Name || !blocks.some(d => d.data.Name === o.value));\n            return <BlockState block={block.data} options={filteredOptions} key={JSON.stringify(block)} onChange={state => handleStateChange(state, i)}>\n                <NumberInput id=\"weight\" value={block.weight || 1} min=\"1\" onChange={weight => handleWeightChange(weight, i)} className=\"mlm\">Weight</NumberInput>\n                <Button cat=\"danger mlm\" onClick={(e) => handleRemove(e, i)}>Remove</Button>\n            </BlockState>\n        })}\n        <Button onClick={handleAdd}>Add block</Button>\n    </div>;\n});","export const DECORATORS_OPTIONS = [\n    { value: 'carving_mask', label: 'Carving mask' },\n    { value: 'chance', label: 'Chance' },\n    { value: 'count', label: 'Count' },\n    { value: 'count_extra', label: 'Count extra' },\n    { value: 'count_multilayer', label: 'Count multi layer' },\n    { value: 'count_noise', label: 'Count noise' },\n    { value: 'count_noise_biased', label: 'Count noise biased' },\n    { value: 'decorated', label: 'Decorated' },\n    { value: 'fire', label: 'Fire' },\n    { value: 'heightmap_world_surface', label: 'Heightmap world surface' },\n    { value: 'iceberg', label: 'Iceberg' },\n    { value: 'lava_lake', label: 'Lava lake' },\n    { value: 'range', label: 'Range' },\n    { value: 'range_biased', label: 'Range biased' },\n    { value: 'range_very_biased', label: 'Range very biased' },\n    { value: 'square', label: 'Square' },\n    { value: 'water_lake', label: 'Water lake' }\n].map(o => {\n    o.value = 'minecraft:' + o.value;\n    return o;\n});\n\nexport const CARVERS_OPTIONS = [\n    { value: 'air', label: 'Air' },\n    { value: 'liquid', label: 'Liquid' }\n];\n\nexport const DECORATOR_CARVING_MASK_DEFAULTS = {\n    step: \"liquid\",\n    probability: 0.1\n};\n\nexport const DECORATOR_EXTRA_COUNT_DEFAULTS = {\n    count: 10,\n    extra_chance: 0.1,\n    extra_count: 1\n};\n\nexport const DECORATOR_DECORATED_DEFAULTS = {\n    outer: {\n        config: {},\n        type: \"minecraft:square\"\n    },\n    inner: {\n        config: {},\n        type: \"minecraft:heightmap\"\n    }\n};\n\nexport const DECORATOR_RANGE_DEFAULTS = {\n    bottom_offset: 4,\n    top_offset: 0,\n    maximum: 64\n};\n","import React, { useCallback } from 'react';\nimport { NumberInput } from '../../ui/Input';\n\nexport const UniformInt = React.memo(function ({ children, id, minBase = 0, maxBase = 4, maxSpread = 4, upChange, value, defaultValue = 4 }) {\n    const handleChange = useCallback(function (val) {\n        upChange({ [id]: { ...value, ...val } })\n    }, [id, upChange, value]);\n\n    if (typeof value === 'number' || typeof value === 'undefined') {\n        return <NumberInput id={id} value={value} defaultValue={defaultValue} max={maxBase} upChange={upChange}>{children}</NumberInput>\n    }\n\n    if (typeof value !== 'object') {\n        value = { base: 4, spread: 1 };\n    }\n    return <>\n        <NumberInput id=\"base\" value={value.base} upChange={handleChange} min={minBase} max={maxBase}>{children} base</NumberInput>\n        <NumberInput id=\"spread\" value={value.spread} upChange={handleChange} max={maxSpread}>{children} spread</NumberInput>\n    </>\n});\n","import React, { useCallback, useState, useMemo, useEffect } from 'react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport { useCrudPreset, useJsonEffect } from '../../../hooks/form';\nimport { Button } from '../../../ui/Button';\nimport Select from '../../../ui/Select';\nimport { DECORATORS_OPTIONS, DECORATOR_EXTRA_COUNT_DEFAULTS, DECORATOR_DECORATED_DEFAULTS, DECORATOR_RANGE_DEFAULTS, DECORATOR_CARVING_MASK_DEFAULTS, CARVERS_OPTIONS } from './DecoratorDefaults';\nimport { NumberInput } from '../../../ui/Input';\nimport { UniformInt } from '../../utils/UniformInt';\n\nexport const DecoratorsList = React.memo(function({data, onChange}) {\n    const [decorators, handleAdd, handleChange, handleRemove] = useCrudPreset(data, function(decorators) {\n        // Get the first non taken decorator\n        return { type: (DECORATORS_OPTIONS.filter(o => !decorators.some(d => d.type === o.value))[0] || { value: 'minecraft:count' }).value };\n    });\n    useJsonEffect(decorators, data, onChange);\n\n    const shouldCancelStart = useCallback(function(e) {\n        return !e.target.parentNode.classList.contains('sortable-item');\n    }, []);\n    \n    return <fieldset>\n        <legend>Decorators wrappers {DECORATORS_OPTIONS.length > decorators.length && <Button onClick={handleAdd}>Add decorator</Button>}</legend>\n        <SortableDecoratorsList decorators={decorators} handleChange={handleChange} handleRemove={handleRemove}\n            onSortEnd={handleChange} shouldCancelStart={shouldCancelStart} />\n    </fieldset>\n});\n\nconst SortableDecoratorsList = SortableContainer(function({decorators, handleChange, handleRemove}) {\n    return <ol className=\"sortable-container\">\n        {decorators.map((decorator, index) => {\n            const options = DECORATORS_OPTIONS.filter(o => decorator.type === o.value || !decorators.some(d => d.type === o.value));\n            return <Decorator key={decorator.type} data={decorator} index={index} onChange={handleChange} options={options}>\n                <Button cat=\"danger mlm\" onClick={(e) => handleRemove(e, index)}>Remove</Button>\n            </Decorator>\n        })}\n    </ol>\n});\n\nconst Decorator = React.memo(SortableElement(function({children, data = { type: 'minecraft:count' }, onChange, options}) {\n    const [decorator, setDecorator] = useState(data);\n\n    const handleSelectChange = useCallback(function(option) {\n        setDecorator({ type: option.value });\n    }, []);\n    const handleConfigChange = useCallback(function(config) {\n        setDecorator(decorator => ({ type: decorator.type, config: { ...decorator.config, ...config }}));\n    }, []);\n    useJsonEffect(decorator, data, onChange);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === decorator.type);\n    }, [decorator.type, options]);\n    return <li className=\"sortable-item\">\n        <div className=\"form-group form-row\">\n            <div style={{ flexGrow: 1 }}><Select options={options} value={selected} onChange={handleSelectChange} /></div>\n            {children}\n        </div>\n        <div className=\"form-group form-row\">\n            {decorator.type === 'minecraft:carving_mask' && <CarvingMaskDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.type === 'minecraft:chance' || decorator.type === 'minecraft:lava_lake' || decorator.type === 'minecraft:water_lake') && <ChanceDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.type === 'minecraft:count' || decorator.type === 'minecraft:fire' || decorator.type === 'minecraft:count_multilayer') && <CountDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {decorator.type === 'minecraft:count_extra' && <ExtraCountDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {decorator.type === 'minecraft:count_noise' && <NoiseCountDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {decorator.type === 'minecraft:count_noise_biased' && <NoiseBiasedCountDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.type === 'minecraft:decorated' || decorator.type === 'minecraft:square') && <DecoratedDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.type === 'minecraft:range' || decorator.type === 'minecraft:range_biased' || decorator.type === 'minecraft:range_very_biased') && <RangeDecorator config={decorator.config} onChange={handleConfigChange} />}\n        </div>\n    </li>;\n}));\n\nconst CarvingMaskDecorator = React.memo(function({config, onChange}) {\n    config = useJsonEffect(config || DECORATOR_CARVING_MASK_DEFAULTS, config, onChange);\n\n    const handleStepChange = useCallback(function (option) {\n        onChange({ probability: config.probability, step: option.value });\n    }, [config.probability, onChange]);\n\n    return <>\n        <div className=\"inbl\"><Select options={CARVERS_OPTIONS} value={CARVERS_OPTIONS.find(o => o.value === config.step)} onChange={handleStepChange} /></div>\n        <NumberInput id=\"probability\" value={config.probability} upChange={onChange} step=\"0.05\">Probability</NumberInput>\n    </>\n});\n\nconst ChanceDecorator = React.memo(function({config = {}, onChange}) {\n    return <NumberInput id=\"chance\" value={config.chance} defaultValue={32} upChange={onChange}>Chance</NumberInput>\n});\n\nconst CountDecorator = React.memo(function({config = {}, onChange}) {\n    return <UniformInt id=\"count\" value={config.count} minBase={-10} maxBase={128} maxSpread={128} defaultValue={25} upChange={onChange}>Count</UniformInt>\n});\n\nconst ExtraCountDecorator = React.memo(function({config, onChange}) {\n    config = useJsonEffect(config || DECORATOR_EXTRA_COUNT_DEFAULTS, config, onChange);\n\n    return <>\n        <NumberInput id=\"count\" value={config.count} upChange={onChange}>Count</NumberInput>\n        <NumberInput id=\"extra_chance\" value={config.extra_chance} upChange={onChange} step=\"0.05\">Extra chance</NumberInput>\n        <NumberInput id=\"extra_count\" value={config.extra_count} upChange={onChange}>Extra count</NumberInput>\n    </>\n});\n\nconst NoiseCountDecorator = React.memo(function({config, onChange}) {\n    config = useJsonEffect(config || {\n        noise_level: -0.8,\n        below_noise: 15,\n        above_noise: 4\n    }, config, onChange);\n\n    return <>\n        <NumberInput id=\"noise_level\" value={config.noise_level} upChange={onChange}>Noise level</NumberInput>\n        <NumberInput id=\"below_noise\" value={config.below_noise} upChange={onChange}>Below noise</NumberInput>\n        <NumberInput id=\"above_noise\" value={config.above_noise} upChange={onChange}>Above noise</NumberInput>\n    </>\n});\n\nconst NoiseBiasedCountDecorator = React.memo(function({config, onChange}) {\n    config = useJsonEffect(config || {\n        noise_to_count_ratio: 160,\n        noise_factor: 80.0,\n        noise_offset: 0.3\n    }, config, onChange);\n\n    return <>\n        <NumberInput id=\"noise_to_count_ratio\" value={config.noise_to_count_ratio} upChange={onChange}>Noise to count ratio</NumberInput>\n        <NumberInput id=\"noise_factor\" value={config.noise_factor} upChange={onChange} step=\"0.05\">Noise factor</NumberInput>\n        <NumberInput id=\"noise_offset\" value={config.noise_offset} upChange={onChange} step=\"0.05\">Noise factor</NumberInput>\n    </>\n});\n\nconst DecoratedDecorator = React.memo(function({config, onChange}) {\n    useEffect(() => {\n        if (typeof config === 'undefined') {\n            onChange(DECORATOR_DECORATED_DEFAULTS);\n        }\n    }, [config, onChange]);\n    return <div></div>;\n});\n\nconst RangeDecorator = React.memo(function({config, onChange}) {\n    config = useJsonEffect(config || DECORATOR_RANGE_DEFAULTS, config, onChange);\n\n    return <>\n        <NumberInput id=\"bottom_offset\" value={config.bottom_offset} upChange={onChange}>Bottom offset</NumberInput>\n        <NumberInput id=\"top_offset\" value={config.top_offset} upChange={onChange}>Top offset</NumberInput>\n        <NumberInput id=\"maximum\" value={config.maximum} upChange={onChange}>Y maximum</NumberInput>\n    </>\n});","import React, { useCallback } from 'react';\nimport { BlockState, BlocksList } from '../../state/BlockState';\nimport { NumberInput } from '../../../ui/Input';\nimport { UniformInt } from '../../utils/UniformInt';\n\nexport function DiskFeature({ configuration, onChange }) {\n\n    const handleChange = useCallback(function (value) {\n        onChange({ ...configuration, ...value });\n    }, [configuration, onChange]);\n    const handleStateChange = useCallback(function (state) {\n        onChange({ ...configuration, state });\n    }, [configuration, onChange]);\n    const handleTargetsChange = useCallback(function (targets) {\n        onChange({ ...configuration, targets });\n    }, [configuration, onChange]);\n\n    return <fieldset>\n        <legend>Config</legend>\n        <BlockState block={configuration.state} onChange={handleStateChange} />\n        <div className=\"form-group form-row\">\n            <UniformInt id=\"radius\" value={configuration.radius} upChange={handleChange}>Radius</UniformInt>\n            <NumberInput id=\"half_height\" value={configuration.half_height} upChange={handleChange}>Half height</NumberInput>\n        </div>\n        <fieldset>\n            <legend>Targets</legend>\n            <BlocksList list={configuration.targets} onChange={handleTargetsChange} />\n        </fieldset>\n    </fieldset>\n}\n","import React from 'react';\nimport { NumberInput } from '../../../ui/Input';\n\nexport function ProbabilityFeature({ configuration, onChange }) {\n\n    return <fieldset>\n        <legend>Config</legend>\n        <div className=\"form-group\">\n            <NumberInput id=\"probability\" value={configuration.probability} max={1} step={0.01} upChange={onChange}>Probability</NumberInput>\n        </div>\n    </fieldset>\n}\n","import React, { useCallback } from 'react';\nimport { BlockState } from '../../state/BlockState';\n\nexport function SingleStateFeature({ configuration, onChange }) {\n\n    const handleChange = useCallback(function (state) {\n        onChange({ state });\n    }, [onChange]);\n\n    return <fieldset>\n        <legend>Block state</legend>\n        <BlockState block={configuration.state} onChange={handleChange} />\n    </fieldset>\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { CRUD, useCrud, useJsonEffect } from '../../../hooks/form';\nimport { TREE_DECORATORS_OPTIONS, TREE_FEATURE_CONFIG } from './FeatureConfigDefaults';\nimport { BlockStateProvider } from '../../state/BlockStateProvider';\nimport { Button } from '../../../ui/Button';\nimport { NumberInput } from '../../../ui/Input';\nimport Select from '../../../ui/Select';\nimport { UniformInt } from '../../utils/UniformInt';\n\nexport function TreeFeature({configuration, onChange}) {\n\n    const [config, setConfig] = useState(configuration || TREE_FEATURE_CONFIG);\n\n    const handleTrunkProviderChange = useCallback(function(trunk_provider) {\n        setConfig(config => ({ ...config, trunk_provider }));\n    }, []);\n    const handleLeavesProviderChange = useCallback(function(leaves_provider) {\n        setConfig(config => ({ ...config, leaves_provider }));\n    }, []);\n    const handleFoliagePlacerChange = useCallback(function(foliage_placer) {\n        setConfig(config => ({ ...config, foliage_placer }));\n    }, []);\n    const handleTrunkPlacerChange = useCallback(function(trunk_placer) {\n        setConfig(config => ({ ...config, trunk_placer: { ...config.trunk_placer, ...trunk_placer } }));\n    }, []);\n    const handleDecoratorsChange = useCallback(function(decorators) {\n        setConfig(config => ({ ...config, decorators }));\n    }, []);\n    useJsonEffect(config, configuration, onChange);\n\n    return <div>\n        <fieldset>\n            <legend>Trunk provider</legend>\n            <BlockStateProvider block={config.trunk_provider} onChange={handleTrunkProviderChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Leaves provider</legend>\n            <BlockStateProvider block={config.leaves_provider} onChange={handleLeavesProviderChange} />\n        </fieldset>\n        <FoliagePlacer placer={config.foliage_placer} onChange={handleFoliagePlacerChange} />\n        <TrunkPlacer placer={config.trunk_placer} onChange={handleTrunkPlacerChange} />\n        <TreeDecorators data={configuration.decorators} onChange={handleDecoratorsChange}></TreeDecorators>\n    </div>;\n}\n\nconst FoliagePlacer = React.memo(function({placer, onChange}) {\n    const options = useMemo(function() {\n        return [\n            { value: 'acacia_foliage_placer', label: 'Acacia foliage placer' },\n            { value: 'blob_foliage_placer', label: 'Blob foliage placer' },\n            { value: 'bush_foliage_placer', label: 'Bush foliage placer' },\n            { value: 'dark_oak_foliage_placer', label: 'Dark oak foliage placer' },\n            { value: 'fancy_foliage_placer', label: 'Fancy foliage placer' },\n            { value: 'jungle_foliage_placer', label: 'Jungle foliage placer' },\n            { value: 'mega_pine_foliage_placer', label: 'Mega pine foliage placer' },\n            { value: 'pine_foliage_placer', label: 'Pine foliage placer' },\n            { value: 'spruce_foliage_placer', label: 'Spruce foliage placer' }\n        ].map(o => {\n            o.value = 'minecraft:' + o.value;\n            return o;\n        });\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        const type = option.value;\n        if (type === 'minecraft:acacia_foliage_placer' || type === 'minecraft:mega_pine_foliage_placer') {\n            delete placer.height;\n        } else if (type !== 'minecraft:acacia_foliage_placer') {\n            delete placer.crown_height;\n        }\n        onChange({ ...placer, type });\n    }, [onChange, placer]);\n    const handleChange = useCallback(function(value) {\n        onChange({ ...placer, ...value })\n    }, [onChange, placer]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === placer.type) || options[0];\n    }, [options, placer.type]);\n\n    return <fieldset>\n        <legend>Foliage placer</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"foliage_placer_type\">Type</label>\n            <Select options={options} name=\"foliage_placer_type\" value={selected} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <UniformInt id=\"radius\" value={placer.radius} maxBase={8} maxSpread={8} upChange={handleChange}>Radius</UniformInt>\n            <UniformInt id=\"offset\" value={placer.offset} maxBase={8} maxSpread={8} upChange={handleChange}>Offset</UniformInt>\n            {(placer.type === 'minecraft:blob_foliage_placer' ||\n                placer.type === 'minecraft:bush_foliage_placer' ||\n                placer.type === 'minecraft:fancy_foliage_placer' ||\n                placer.type === 'minecraft:jungle_foliage_placer'\n            ) && <NumberInput id=\"height\" value={placer.height} upChange={handleChange} max={16} defaultValue={3}>Height</NumberInput>}\n            \n            {placer.type === 'minecraft:mega_pine_foliage_placer' && <UniformInt id=\"crown_height\" value={placer.crown_height} maxBase={16} maxSpread={8} upChange={handleChange}>Crown height</UniformInt>}\n            {placer.type === 'minecraft:pine_foliage_placer' && <UniformInt id=\"height\" value={placer.height} maxBase={16} maxSpread={8} upChange={handleChange}>Height</UniformInt>}\n            {placer.type === 'minecraft:spruce_foliage_placer' && <UniformInt id=\"trunk_height\" value={placer.trunk_height} maxBase={16} maxSpread={8} upChange={handleChange}>Trunk height</UniformInt>}\n        </div>\n    </fieldset>\n});\n\nconst TrunkPlacer = React.memo(function({placer, onChange}) {\n    const options = useMemo(function() {\n        return [\n            { value: 'straight_trunk_placer', label: 'Straight trunk placer' },\n            { value: 'forking_trunk_placer', label: 'Forking trunk placer' },\n            { value: 'giant_trunk_placer', label: 'Giant trunk placer' },\n            { value: 'mega_jungle_trunk_placer', label: 'Mega jungle trunk placer' },\n            { value: 'dark_oak_trunk_placer', label: 'Dark oak trunk placer' },\n            { value: 'fancy_trunk_placer', label: 'Fancy trunk placer' }\n        ].map(o => {\n            o.value = 'minecraft:' + o.value;\n            return o;\n        });\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        onChange({ type: option.value });\n    }, [onChange]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === placer.type) || options[0];\n    }, [placer.type, options]);\n\n    return <fieldset>\n        <legend>Trunk placer</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"foliage_placer_type\">Type</label>\n            <Select options={options} name=\"foliage_placer_type\" defaultValue={selected} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"base_height\" value={placer.base_height} upChange={onChange} max=\"32\">Base height</NumberInput>\n            <NumberInput id=\"height_rand_a\" value={placer.height_rand_a} upChange={onChange} max=\"24\">First height rand</NumberInput>\n            <NumberInput id=\"height_rand_b\" value={placer.height_rand_b} upChange={onChange} max=\"24\">Second height rand</NumberInput>\n        </div>\n    </fieldset>\n});\n\nconst TreeDecorators = React.memo(function({data, onChange}) {\n    const [decorators, dispatch] = useCrud(data);\n\n    const handleAddClick = useCallback(function(e) {\n        e.preventDefault();\n        const decorator = TREE_DECORATORS_OPTIONS.find(o => !decorators.some(d => d.type === o.value));\n        if (typeof decorator !== 'undefined') {\n            dispatch({ type: CRUD.ADD, payload: { type: decorator.value } });\n        }\n    }, [decorators, dispatch]);\n    const handleChange = useCallback(function(decorator, previous) {\n        dispatch({ type: CRUD.UPDATE, target: previous, payload: decorator });\n    }, [dispatch]);\n    const handleDeleteClick = useCallback(function(e, index) {\n        e.preventDefault();\n        dispatch({ type: CRUD.REMOVE, payload: decorators[index] });\n    }, [decorators, dispatch]);\n    useJsonEffect(decorators.map(decorator => {\n        delete decorator.index;\n        return decorator;\n    }), data, onChange);\n    \n    return <fieldset>\n        <legend>Tree decorators {decorators.length < 5 && <Button onClick={handleAddClick}>Add decorator</Button>}</legend>\n        {decorators.map((decorator, i) => {\n            const options = TREE_DECORATORS_OPTIONS.filter(o => o.value === decorator.type || !decorators.some(d => d.type === o.value));\n            return <TreeDecorator data={decorator }key={decorator.type} onChange={handleChange} options={options}>\n                <Button cat=\"danger mlm\" onClick={(e) => handleDeleteClick(e, i)}>Remove</Button>\n            </TreeDecorator>\n        })}\n    </fieldset>\n});\n\nconst TreeDecorator = React.memo(function({children, data, options, onChange}) {\n    const [decorator, setDecorator] = useState(data);\n\n    const handleSelectChange = useCallback(function(option) {\n        setDecorator({ type: option.value, ...option.default });\n    }, []);\n    const handleAlterGroundChange = useCallback(function(provider) {\n        setDecorator(decorator => ({ type: decorator.type, provider }));\n    }, []);\n    const handleProbabilityChange = useCallback(function(probability) {\n        setDecorator(decorator => ({ type: decorator.type, probability }));\n    }, []);\n    useEffect(() => {\n        if (decorator !== data) {\n            onChange(decorator, data);\n        }\n    }, [data, decorator, onChange]);\n\n    const CustomTag = ['minecraft:leave_vine', 'minecraft:trunk_vine'].indexOf(decorator.type) < 0 ? 'fieldset' : 'div';\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === decorator.type);\n    }, [decorator.type, options]);\n    return <CustomTag>\n        <legend style={{ fontWeight: 'normal', fontSize: 'inherit' }}>\n            <div style={{ width: '200px', display: 'inline-block' }}><Select options={options} value={selected} onChange={handleSelectChange} /></div>\n            {children}\n        </legend>\n        <div className=\"form-group\">\n            {decorator.type === 'minecraft:alter_ground' && <BlockStateProvider block={decorator.provider} onChange={handleAlterGroundChange} />}\n            {(decorator.type === 'minecraft:beehive' || decorator.type === 'minecraft:cocoa') && <NumberInput id=\"probability\" value={decorator.probability} onChange={handleProbabilityChange} max=\"1\" step=\"0.05\" defaultValue=\"0.05\">Probability</NumberInput>}\n        </div>\n    </CustomTag>\n});","import { DECORATED_BAMBOO_CONFIG, DECORATED_BLOCK_PILE_CONFIG, DECORATED_CHORUS_PLANT_CONFIG, DECORATED_DELTA_CONFIG, DECORATED_DESERT_WELL_CONFIG, DECORATED_DISK_CONFIG, DECORATED_FOREST_ROCK_CONFIG, DECORATED_FOSSIL_CONFIG, DECORATED_GLOWSTONE_BLOB_CONFIG, DECORATED_HUGE_FUNGUS_CONFIG, DECORATED_ICEBERG_CONFIG, DECORATED_ICE_PATCH_CONFIG, DECORATED_ICE_SPIKE_CONFIG, DECORATED_LAKE_CONFIG, DECORATED_NETHERRACK_REPLACE_BLOBS_CONFIG, DECORATED_ORE_FEATURE_CONFIG, DECORATED_RANDOM_PATCH_CONFIG, DECORATED_SEAGRASS_CONFIG, DECORATED_SPRING_FEATURE_CONFIG, DECORATED_TREE_CONFIG, DECORATED_VOID_START_PLATFORM_CONFIG, DECORATED_SIMPLE_BLOCK_CONFIG } from './DecoratedFeatureDefaults';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { buildDecorated, capitalize, findDecorators } from '../../utils/data';\nimport { BlockPileFeature } from './config/BlockPileFeature';\nimport { Button } from '../../ui/Button';\nimport { DecoratorsList } from './decorator/Decorator';\nimport { DeltaFeature } from './config/DeltaFeature';\nimport { DiskFeature } from './config/DiskFeature';\nimport { HugeFungusFeature } from './config/HugeFungusFeature';\nimport { JsonViewer } from '../../ui/JsonViewer';\nimport { NamespacedKey } from '../NamespacedKey';\nimport { NetherrackReplaceBlobsFeature } from './config/NetherrackReplaceBlobsFeature';\nimport { OreFeature } from './config/OreFeature';\nimport { ProbabilityFeature } from './config/ProbabilityFeature';\nimport { RandomPatchFeature } from './config/RandomPatchFeature';\nimport Select from '../../ui/Select';\nimport { SimpleBlockFeature } from './config/SimpleBlockFeature';\nimport { SingleStateFeature } from './config/SingleStateFeature';\nimport { SpringFeature } from './config/SpringFeature';\nimport { TreeFeature } from './config/TreeFeature';\n\nconst FEATURES = [\n    { type: 'bamboo', default: DECORATED_BAMBOO_CONFIG, config: ProbabilityFeature },\n    { type: 'block_pile', default: DECORATED_BLOCK_PILE_CONFIG, config: BlockPileFeature },\n    { type: 'chorus_plant', default: DECORATED_CHORUS_PLANT_CONFIG },\n    { type: 'delta_feature', default: DECORATED_DELTA_CONFIG, config: DeltaFeature },\n    { type: 'desert_well', default: DECORATED_DESERT_WELL_CONFIG },\n    { type: 'disk', default: DECORATED_DISK_CONFIG, config: DiskFeature },\n    { type: 'forest_rock', default: DECORATED_FOREST_ROCK_CONFIG, config: SingleStateFeature },\n    { type: 'fossil', default: DECORATED_FOSSIL_CONFIG },\n    { type: 'glowstone_blob', default: DECORATED_GLOWSTONE_BLOB_CONFIG },\n    { type: 'huge_fungus', default: DECORATED_HUGE_FUNGUS_CONFIG, config: HugeFungusFeature },\n    { type: 'iceberg', default: DECORATED_ICEBERG_CONFIG, config: SingleStateFeature },\n    { type: 'ice_patch', default: DECORATED_ICE_PATCH_CONFIG, config: DiskFeature },\n    { type: 'ice_spike', default: DECORATED_ICE_SPIKE_CONFIG },\n    { type: 'lake', default: DECORATED_LAKE_CONFIG, config: SingleStateFeature },\n    { type: 'netherrack_replace_blobs', default: DECORATED_NETHERRACK_REPLACE_BLOBS_CONFIG, config: NetherrackReplaceBlobsFeature },\n    { type: 'ore', default: DECORATED_ORE_FEATURE_CONFIG, config: OreFeature },\n    { type: 'simple_block', default: DECORATED_SIMPLE_BLOCK_CONFIG, config: SimpleBlockFeature },\n    { type: 'seagrass', default: DECORATED_SEAGRASS_CONFIG, config: ProbabilityFeature },\n    { type: 'spring_feature', default: DECORATED_SPRING_FEATURE_CONFIG, config: SpringFeature },\n    { type: 'random_patch', default: DECORATED_RANDOM_PATCH_CONFIG, config: RandomPatchFeature },\n    { type: 'tree', default: DECORATED_TREE_CONFIG, config: TreeFeature },\n    { type: 'void_start_platform', default: DECORATED_VOID_START_PLATFORM_CONFIG }\n].map(feature => {\n    feature.type = 'minecraft:' + feature.type;\n    return feature;\n});\n\nconst OPTIONS = FEATURES\n    .map(feature => ({ value: feature.type, label: capitalize(feature.type.substr(10).replace(/_/, ' ')) }));\n\nexport function RawConfiguredFeature({ data = DECORATED_TREE_CONFIG, onSave }) {\n\n    const [decorators_, feature_] = useMemo(() => findDecorators(data), [data]);\n\n    const [feature, setFeature] = useState(feature_);\n    const [decorators, setDecorators] = useState(decorators_);\n\n    const handleSelectChange = useCallback(function (option) {\n        const [decorators, feature] = findDecorators(FEATURES.find(feature => option.value === feature.type).default);\n        setFeature(feature);\n        setDecorators(decorators);\n    }, []);\n\n    const handleFeatureChange = useCallback(function (config) {\n        setFeature(feature => ({ ...feature, config }));\n    }, []);\n\n    const handleDecoratorsChange = useCallback(function (decorators) {\n        setDecorators(decorators);\n    }, []);\n\n    const handleSubmit = useCallback(function (e) {\n        e.preventDefault();\n        const decorated = buildDecorated(feature, decorators, new FormData(e.target).get('key'));\n        decorated.index = data.index;\n        onSave(decorated);\n    }, [data.index, decorators, feature, onSave]);\n\n    const FeatureConfig = (FEATURES.find(f => feature.type === f.type) || { config: 'p' }).config || (() => <p className=\"text-muted\">No config options</p>);\n\n    return <form onSubmit={handleSubmit}>\n        <NamespacedKey example=\"concrete_tree\" type=\"features\" value={data.key} expectBreakage={typeof data.key !== 'undefined'}>\n            configured feature\n            <JsonViewer data={() => buildDecorated(feature, decorators, data.key || 'feature')} />\n        </NamespacedKey>\n        <div className=\"form-group\">\n            <label htmlFor=\"type\">Type</label>\n            <Select options={OPTIONS} value={OPTIONS.find(o => o.value === feature.type)} onChange={handleSelectChange} inputId=\"type\" />\n        </div>\n        <hr />\n        <FeatureConfig configuration={feature.config} onChange={handleFeatureChange}>Currently not supported (<code>{feature.type}</code>).</FeatureConfig>\n        <DecoratorsList data={decorators} key={feature.type} onChange={handleDecoratorsChange} />\n        <Button type=\"submit\">Save</Button>\n    </form>\n}\n","import React, { useCallback } from 'react';\nimport { BLOCK_PILE_FEATURE_CONFIG } from './FeatureConfigDefaults';\nimport { BlockStateProvider } from '../../state/BlockStateProvider';\n\nexport function BlockPileFeature({ configuration = BLOCK_PILE_FEATURE_CONFIG, onChange }) {\n\n    const handleChange = useCallback(function (state_provider) {\n        onChange({ state_provider });\n    }, [onChange]);\n\n    return <fieldset>\n        <legend>Block state provider</legend>\n        <BlockStateProvider block={configuration.state_provider} onChange={handleChange} />\n    </fieldset>\n}\n","import React, { useCallback } from 'react';\nimport { BlockState } from '../../state/BlockState';\nimport { UniformInt } from '../../utils/UniformInt';\n\nexport function DeltaFeature({ configuration, onChange }) {\n\n    const handleChange = useCallback(function (value) {\n        onChange({ ...configuration, ...value });\n    }, [configuration, onChange]);\n    const handleContentsChange = useCallback(function (contents) {\n        onChange({ ...configuration, contents });\n    }, [configuration, onChange]);\n    const handleRimChange = useCallback(function (rim) {\n        onChange({ ...configuration, rim });\n    }, [configuration, onChange]);\n\n    return <fieldset>\n        <legend>Config</legend>\n        <BlockState block={configuration.contents} onChange={handleContentsChange} />\n        <BlockState block={configuration.rim} onChange={handleRimChange} />\n        <div className=\"form-group form-row\">\n            <UniformInt id=\"size\" value={configuration.size} maxBase={8} maxSpread={8} upChange={handleChange}>Size</UniformInt>\n            <UniformInt id=\"rim_size\" value={configuration.rim_size} maxBase={8} maxSpread={8} upChange={handleChange}>Rim size</UniformInt>\n        </div>\n    </fieldset>\n}\n","import React, { useCallback } from 'react';\nimport { BlockState } from '../../state/BlockState';\nimport { ConfInput } from '../../../ui/Input';\nimport { HUGE_FUNGUS_FEATURE_CONFIG } from './FeatureConfigDefaults';\nimport { useJsonEffect } from '../../../hooks/form';\n\nexport function HugeFungusFeature({ configuration = HUGE_FUNGUS_FEATURE_CONFIG, onChange }) {\n\n    const handleDecorStateChange = useCallback(function (decor_state) {\n        onChange({ ...configuration, decor_state });\n    }, [configuration, onChange]);\n    const handleHatStateChange = useCallback(function (hat_state) {\n        onChange({ ...configuration, hat_state });\n    }, [configuration, onChange]);\n    const handlePlantedChange = useCallback(function (e) {\n        const planted = e.target.checked;\n        onChange({ ...configuration, planted });\n    }, [configuration, onChange]);\n    const handleStemStateChange = useCallback(function (stem_state) {\n        onChange({ ...configuration, stem_state });\n    }, [configuration, onChange]);\n    const handleValidBaseBlockChange = useCallback(function (valid_base_block) {\n        onChange({ ...configuration, valid_base_block });\n    }, [configuration, onChange]);\n    useJsonEffect(configuration || HUGE_FUNGUS_FEATURE_CONFIG, configuration, onChange);\n\n    return <div>\n        <fieldset>\n            <legend>Composition</legend>\n            <label htmlFor=\"stem_state\">Stem</label>\n            <BlockState block={configuration.stem_state} className=\"\" inputId=\"stem_state\" onChange={handleStemStateChange} />\n            <label htmlFor=\"hat_state\">Hat</label>\n            <BlockState block={configuration.hat_state} className=\"\" inputId=\"hat_state\" onChange={handleHatStateChange} />\n            <label htmlFor=\"decor_state\">Decor</label>\n            <BlockState block={configuration.decor_state} className=\"\" inputId=\"decor_state\" onChange={handleDecorStateChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Configuration</legend>\n            <label htmlFor=\"valid_base_block\">Valid base block</label>\n            <BlockState block={configuration.valid_base_block} className=\"\" inputId=\"valid_base_block\" onChange={handleValidBaseBlockChange} />\n            <ConfInput id=\"planted\" checked={configuration.planted} onChange={handlePlantedChange}>Planted</ConfInput>\n        </fieldset>\n    </div>;\n}\n","import React, { useCallback } from 'react';\nimport { BlockState } from '../../state/BlockState';\nimport { INT_MAX_VALUE } from '../../../utils/math';\nimport { NumberInput } from '../../../ui/Input';\nimport { UniformInt } from '../../utils/UniformInt';\n\nexport function NetherrackReplaceBlobsFeature({ configuration, onChange }) {\n\n    const handleChange = useCallback(function (value) {\n        onChange({ ...configuration, ...value });\n    }, [configuration, onChange]);\n    const handleStateChange = useCallback(function (state) {\n        onChange({ ...configuration, state });\n    }, [configuration, onChange]);\n    const handleTargetChange = useCallback(function (target) {\n        onChange({ ...configuration, target });\n    }, [configuration, onChange]);\n\n    return <fieldset>\n        <legend>Config</legend>\n        <BlockState block={configuration.state} onChange={handleStateChange} />\n        <div className=\"form-group form-row\">\n            <UniformInt id=\"radius\" value={configuration.radius} maxBase={INT_MAX_VALUE} maxSpread={INT_MAX_VALUE} upChange={handleChange}>Radius</UniformInt>\n            <NumberInput id=\"half_height\" value={configuration.half_height} upChange={handleChange}>Half height</NumberInput>\n        </div>\n        <fieldset>\n            <legend>Target</legend>\n            <BlockState block={configuration.target} onChange={handleTargetChange} />\n        </fieldset>\n    </fieldset>\n}\n","import React, { useCallback } from 'react';\nimport { BlockPredicate } from '../../state/BlockPredicate';\nimport { BlockState } from '../../state/BlockState';\nimport { NumberInput } from '../../../ui/Input';\nimport { ORE_FEATURE_CONFIG } from \"./FeatureConfigDefaults\";\nimport { useJsonEffect } from '../../../hooks/form';\n\nexport function OreFeature({configuration, onChange}) {\n    const handlePredicateChange = useCallback(function(target) {\n        onChange({ ...configuration, target });\n    }, [configuration, onChange]);\n    const handleBlockChange = useCallback(function(state) {\n        onChange({ ...configuration, state });\n    }, [configuration, onChange]);\n    const handleValueChange = useCallback(function(value) {\n        onChange({ ...configuration, ...value });\n    }, [configuration, onChange]);\n    const config = useJsonEffect(configuration || ORE_FEATURE_CONFIG, configuration, onChange);\n\n    return <div>\n        <fieldset>\n            <legend>Target</legend>\n            <BlockPredicate target={config.target} onChange={handlePredicateChange} />\n        </fieldset>\n        <fieldset>\n            <legend>State</legend>\n            <BlockState block={config.state} onChange={handleBlockChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Settings</legend>\n            <NumberInput id=\"size\" value={config.size} upChange={handleValueChange}>Size</NumberInput>\n        </fieldset>\n    </div>;\n}","import React, { useCallback } from 'react';\nimport { BlocksList, BlockState } from '../../state/BlockState';\n\nexport function SimpleBlockFeature({ configuration, onChange }) {\n\n    const handleToPlaceChange = useCallback(function (to_place) {\n        onChange({ ...configuration, to_place });\n    }, [configuration, onChange]);\n    const handlePlaceOnChange = useCallback(function (place_on) {\n        onChange({ ...configuration, place_on });\n    }, [configuration, onChange]);\n    const handlePlaceInChange = useCallback(function (place_in) {\n        onChange({ ...configuration, place_in });\n    }, [configuration, onChange]);\n    const handlePlaceUnderChange = useCallback(function (place_under) {\n        onChange({ ...configuration, place_under });\n    }, [configuration, onChange]);\n\n    return <div>\n        <fieldset>\n            <legend>To place</legend>\n            <BlockState block={configuration.to_place} className=\"\" inputId=\"to_place\" onChange={handleToPlaceChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Placement</legend>\n            <fieldset>\n                <legend>Place on</legend>\n                <BlocksList list={configuration.place_on} className=\"\" inputId=\"place_on\" onChange={handlePlaceOnChange} />\n            </fieldset>\n            <fieldset>\n                <legend>Place in</legend>\n                <BlocksList list={configuration.place_in} className=\"\" inputId=\"place_in\" onChange={handlePlaceInChange} />\n            </fieldset>\n            <fieldset>\n                <legend>Place under</legend>\n                <BlocksList list={configuration.place_under} className=\"\" inputId=\"place_under\" onChange={handlePlaceUnderChange} />\n            </fieldset>\n        </fieldset>\n    </div>\n}\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { ConfInput, NumberInput } from '../../../ui/Input';\nimport { useBlocksOptions, useJsonEffect } from '../../../hooks/form';\nimport { BlockSelect } from '../../state/BlockPredicate';\nimport { BlocksNamesList } from '../../state/BlockState';\nimport { HUGE_FUNGUS_FEATURE_CONFIG } from './FeatureConfigDefaults';\n\nexport function SpringFeature({ configuration = HUGE_FUNGUS_FEATURE_CONFIG, onChange }) {\n\n    const [config, setConfig] = useState(configuration);\n\n    const handlRequiresBlockBelowChange = useCallback(function (e) {\n        const requires_block_below = e.target.checked;\n        setConfig(config => ({ ...config, requires_block_below }));\n    }, []);\n    const handleStateChange = useCallback(function (option) {\n        setConfig(config => ({ ...config, state: { Name: option.value, Properties: { falling: 'true' } } }));\n    }, []);\n    const handleValidBlocksChange = useCallback(function (valid_blocks) {\n        setConfig(config => ({ ...config, valid_blocks }));\n    }, []);\n    const handleValueChange = useCallback(function (value) {\n        setConfig(config => ({ ...config, ...value }));\n    }, []);\n    useJsonEffect(config, configuration, onChange);\n\n    const blocks = useBlocksOptions(false);\n    const filteredBlocks = useMemo(function () {\n        return blocks.filter(b => b.name === 'lava' || b.name === 'water')\n            .map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n    }, [blocks]);\n\n    return <div>\n        <fieldset>\n            <legend>Fluid</legend>\n            <div className=\"form-group\"><BlockSelect block={config.state.Name} onChange={handleStateChange} options={filteredBlocks} /></div>\n        </fieldset>\n        <fieldset>\n            <legend>Valid blocks</legend>\n            <BlocksNamesList list={config.valid_blocks} onChange={handleValidBlocksChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Configuration</legend>\n            <div className=\"form-row\">\n                <NumberInput id=\"rock_count\" value={config.rock_count} upChange={handleValueChange}>Rock count</NumberInput>\n                <NumberInput id=\"hole_count\" value={config.hole_count} upChange={handleValueChange}>Hole count</NumberInput>\n                <ConfInput id=\"requires_block_below\" checked={config.requires_block_below} onChange={handlRequiresBlockBelowChange}>Requires block below</ConfInput>\n            </div>\n        </fieldset>\n    </div>\n}\n","import React, { useCallback } from 'react';\nimport { ConfInput, NumberInput } from '../../../ui/Input';\nimport { BlockStateProvider } from '../../state/BlockStateProvider';\nimport { BlocksList } from '../../state/BlockState';\nimport { RANDOM_PATCH_FEATURE_CONFIG } from './FeatureConfigDefaults';\nimport { useJsonEffect } from '../../../hooks/form';\n\nexport function RandomPatchFeature({ configuration, onChange }) {\n\n    const config = useJsonEffect(configuration || RANDOM_PATCH_FEATURE_CONFIG, configuration, onChange);\n    const handleStateProviderChange = useCallback(function (state_provider) {\n        onChange({ ...config, state_provider });\n    }, [config, onChange]);\n    const handleWhitelistChange = useCallback(function (whitelist) {\n        onChange({ ...config, whitelist });\n    }, [config, onChange]);\n    const handleBlacklistChange = useCallback(function (blacklist) {\n        onChange({ ...config, blacklist });\n    }, [config, onChange]);\n    const handleValueChange = useCallback(function (value) {\n        onChange({ ...config, ...value });\n    }, [config, onChange]);\n    const handleCheckboxChange = useCallback(function (e) {\n        onChange({ ...config, [e.target.dataset.name]: e.target.checked });\n    }, [config, onChange]);\n\n    return <div>\n        <fieldset>\n            <legend>State provider</legend>\n            <BlockStateProvider block={config.state_provider} onChange={handleStateProviderChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Whitelist</legend>\n            <BlocksList list={config.whitelist} onChange={handleWhitelistChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Blacklist</legend>\n            <BlocksList list={config.blacklist} onChange={handleBlacklistChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Settings</legend>\n            <div className=\"form-group form-row\">\n                <NumberInput id=\"xspread\" value={config.xspread} upChange={handleValueChange}>X spread</NumberInput>\n                <NumberInput id=\"yspread\" value={config.yspread} upChange={handleValueChange}>Y spread</NumberInput>\n                <NumberInput id=\"zspread\" value={config.zspread} upChange={handleValueChange}>Z spread</NumberInput>\n                <NumberInput id=\"tries\" value={config.tries} upChange={handleValueChange}>Tries</NumberInput>\n            </div>\n            <div className=\"form-group form-row\">\n                <ConfInput id=\"need_water\" checked={config.need_water} onChange={handleCheckboxChange}>Need water</ConfInput>\n                <ConfInput id=\"project\" checked={config.project} onChange={handleCheckboxChange}>Project</ConfInput>\n                <ConfInput id=\"can_replace\" checked={config.can_replace} onChange={handleCheckboxChange}>Can replace</ConfInput>\n            </div>\n        </fieldset>\n    </div>;\n}","import JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\nimport { dataUpper } from \"./data\";\nimport { PATHS } from \"../context/Paths\";\n\nconst DIMENSIONS_PATH = /^data\\/([a-z0-9_.-]+)\\/(dimension|dimension_type)\\/([a-z0-9/._-]+).json$/;\nconst WORLDGEN_PATH = /^data\\/([a-z0-9_.-]+)\\/worldgen\\/(biome|configured_carver|configured_feature|configured_surface_builder|noise_settings)\\/([a-z0-9/._-]+).json$/;\n\nconst LEGACY_DIMENSIONS_PATH = /^data\\/minecraft\\/(dimension|dimension_type)\\/([a-z0-9_.-]+)\\/([a-z0-9/._-]+).json$/;\nconst LEGACY_WORLDGEN_PATH = /^data\\/minecraft\\/worldgen\\/(biome|configured_carver|configured_feature|configured_surface_builder|noise_settings)\\/([a-z0-9_.-]+)\\/([a-z0-9/._-]+).json$/;\n\n/**\n * Build zip in blob.\n * \n * @param {{ biomes: object[], carvers: object[], dimensions: object[], dimension_types: object[], features: object[], noises: object[], surfaces: object[] }} custom \n */\nexport function buildZip(custom) {\n    const zip = new JSZip();\n\n    let modified;\n    if (custom.dimensions.length > 0) {\n        modified = 'dimension';\n    } else if (custom.biomes.length > 0) {\n        modified = 'biome';\n    } else {\n        modified = (Object.entries(custom).find(([type, elements]) => typeof elements !== 'function' && elements.length > 0) || [''])[0];\n    }\n    \n    zip.file('pack.mcmeta', JSON.stringify({\n        pack: {\n            pack_format: 6,\n            description: 'Custom ' + modified\n        }\n    }, null, 4));\n    Object.entries(PATHS).forEach(([type, path]) => writeFile(zip, path, custom[type]));\n    zip.generateAsync({ type: 'blob' })\n        .then(function(content) {\n            saveAs(content, 'generated_datapack.zip');\n        });\n}\n\n/**\n * @param {File} file\n * @returns {Promise<[string, { biomes: object[], dimensions: object[], features: object[], surfaces: object[] }]>}\n */\nexport function readZip(file) {\n    return new Promise((resolve, reject) => {\n        if (!['application/zip', 'application/octet-stream', 'application/x-zip-compressed', 'multipart/x-zip'].includes(file.type)) {\n             reject(new Error(`File is not a .zip. Got: ${file.type}`));\n        }\n\n        JSZip.loadAsync(file).then((zip) => {\n            extractDatapack(zip)\n                .then(resolve)\n                .catch(reject);\n        }).catch(reject);\n    });\n}\n\n/**\n * @param {JSZip} zip \n * @returns {Promise<string, object>}\n */\nasync function extractDatapack(zip) {\n    let namespace = 'minecraft';\n    const data = {\n        biomes: [],\n        carvers: [],\n        dimensions: [],\n        dimension_types: [],\n        features: [],\n        noises: [],\n        surfaces: []\n    };\n\n    const pack = zip.file('pack.mcmeta');\n    if (pack === null) {\n        throw new Error('Invalid datapack: no pack.mcmeta');\n    }\n    let legacy = false;\n    try {\n        const mcmeta = JSON.parse(await pack.async('text'));\n        legacy = mcmeta.pack.pack_format < 6;\n    } catch (e) {\n        throw new Error(`Error reading pack.mcmeta file: ${e.message}`);\n    }\n    \n\n    return new Promise((resolve, reject) => {\n        const promises = [];\n        zip.forEach(function(path, entry) {\n            if (entry.dir) {\n                return;\n            }\n            const paths = legacy ? [LEGACY_DIMENSIONS_PATH, LEGACY_WORLDGEN_PATH] : [DIMENSIONS_PATH, WORLDGEN_PATH];\n            const regex = paths.find(path => entry.name.match(path)) || WORLDGEN_PATH;\n            promises.push(parseFile(legacy, regex, entry.name, zip.file(entry.name).async('text')));\n        });\n\n        Promise.all(promises).then(function(values) {\n            values.forEach(function(value) {\n                if (value === null) {\n                    return;\n                }\n\n                if (value.namespace !== 'minecraft') {\n                    namespace = value.namespace;\n                }\n                value.data.index = data[value.type].length;\n                data[value.type].push(value.data);\n            });\n            resolve([namespace, data]);\n        }).catch(e => reject(e));\n    });\n}\n\nfunction getFolderType(folder) {\n    switch (folder) {\n        case 'configured_carver':\n            return 'carvers';\n        case 'configured_feature':\n            return 'features';\n        case 'configured_surface_builder':\n            return 'surfaces';\n        case 'noise_settings':\n            return 'noises';\n        default:\n            return folder + 's';\n    }\n}\n\n/**\n * Parse json file when it will be ready.\n * \n * @param {boolean} legacy\n * @param {RegExp} pathRegex \n * @param {string} filename \n * @param {Promise<string>} contentPromise \n * @returns {Promise<{namespace: string, data: object, type: string}>}\n */\nasync function parseFile(legacy, pathRegex, filename, contentPromise) {\n    const d = pathRegex.exec(filename);\n    if (d === null) {\n        return new Promise((success) => success(null)); // Skip file\n    }\n\n    return new Promise((resolve, reject) => {\n        contentPromise.then(content => {\n            const obj = JSON.parse(content);\n            const namespace = d[legacy ? 2 : 1];\n            const type = getFolderType(d[legacy ? 1 : 2]);\n            obj.key = namespace + ':' + d[3];\n            const data = dataUpper(type, obj);\n            resolve({ namespace, data, type });\n        }).catch(e => {\n            if (e.name !== 'SyntaxError') {\n                console.error(e);\n            }\n            reject(new Error(`Cannot read ${filename}:\\n${e.message}`));\n        });\n    });\n}\n\nfunction writeFile(zip, path, elements) {\n    if (elements.length < 1) {\n        return;\n    }\n\n    for (const el of elements) {\n        const w = {...el};\n        delete w.key;\n        delete w.index;\n\n        const [namespace, filename] = el.key.split(':');\n        zip.folder(path.replace('%namespace%', namespace))\n            .file(filename + '.json', JSON.stringify(w, null, 2));\n    }\n}\n","import React, { useCallback, useState } from 'react';\nimport { BlockState } from '../state/BlockState';\nimport { Button } from '../../ui/Button';\nimport { JsonViewer } from '../../ui/JsonViewer';\nimport Select from '../../ui/Select';\nimport { SURFACE_TYPES_OPTIONS, SURFACE_BUILDER } from './SurfaceBuilderDefaults';\nimport { NamespacedKey } from '../NamespacedKey';\n\nexport function SurfaceBuilder({data = SURFACE_BUILDER, onSave}) {\n    const [config, setConfig] = useState(data.config);\n\n    const handleTopMaterialChange = useCallback(function(top_material) {\n        setConfig(config => ({ ...config, top_material }));\n    }, []);\n    const handleUnderMaterialChange = useCallback(function(under_material) {\n        setConfig(config => ({ ...config, under_material }));\n    }, []);\n    const handleUnderwaterMaterialChange = useCallback(function(underwater_material) {\n        setConfig(config => ({ ...config, underwater_material }));\n    }, []);\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        onSave({\n            config,\n            type: formData.get('type'),\n            key: formData.get('key'),\n            index: data.index\n        });\n    }, [config, data.index, onSave]);\n\n    return <form onSubmit={handleSubmit}>\n        <NamespacedKey example=\"blackstone\" type=\"surfaces\" value={data.key} expectBreakage={typeof data.key !== 'undefined'}>\n            surface builder\n            <JsonViewer data={config} />\n        </NamespacedKey>\n        \n        <div className=\"form-group\">\n            <label htmlFor=\"type\">Type</label>\n            <Select options={SURFACE_TYPES_OPTIONS} defaultValue={SURFACE_TYPES_OPTIONS.find(o => o.value === data.type)} name=\"type\" inputId=\"type\" />\n            <p className=\"help2\"><small className=\"text-muted\">The builder type defines the shape of the surface. For example, the <em>swamp</em> type will create puddles while the <em>badlands</em> types will create small rocky peaks; the <em>nether</em> types will add a mix of nether blocks and expose more of the underneath material.</small></p>\n        </div>\n        \n        <label htmlFor=\"top_material\">Top material</label>\n        <BlockState block={config.top_material} className=\"\" inputId=\"top_material\" onChange={handleTopMaterialChange} />\n        <label htmlFor=\"under_material\">Under material</label>\n        <BlockState block={config.under_material} className=\"\" inputId=\"under_material\" onChange={handleUnderMaterialChange} />\n        <label htmlFor=\"underwater_material\">Underwater material</label>\n        <BlockState block={config.underwater_material} className=\"\" inputId=\"underwater_material\" onChange={handleUnderwaterMaterialChange} />\n\n        <Button type=\"submit\">Save</Button>\n    </form>;\n}","import React, { useContext } from 'react';\nimport { Biome } from './biome/Biome';\nimport { Button } from './../ui/Button';\nimport { MenuItem, NavBar } from './../ui/Menu';\nimport { Dimension } from './dimension/Dimension';\nimport { DimensionTypeForm } from './dimension/DimensionType';\nimport { DataContext } from './../context/DataContext';\nimport { RawConfiguredFeature } from './feature/ConfiguredFeature';\nimport { capitalize } from '../utils/data';\nimport { buildZip } from '../utils/zip';\nimport { SurfaceBuilder } from './surface/SurfaceBuilder';\nimport { NoiseSettings } from './noise/NoiseSettings';\nimport { displayNamespacedKey } from '../utils/data';\nimport { useMenu } from '../hooks/ui';\nimport { ConfiguredCarverForm } from './carver/ConfiguredCarver';\n\nexport function Datapack() {\n    const context = useContext(DataContext);\n    const custom = context.custom;\n    const namespace = context.namespace;\n    const [page, index, setMenu] = useMenu();\n\n    const handleSave = function (type, data) {\n        const method = 'update' + (type === 'surface' ? 'SurfacesBuilder' : capitalize(type)) + 's'\n        custom[method](data);\n        setMenu(null);\n    }\n    window.scrollTo(0, 0);\n\n    return <div>\n        <NavBar>\n            <nav className=\"tabs\"><ul>\n                <MenuItem onClick={e => setMenu(e, 'stats')} active={page === 'stats'}>Stats</MenuItem>\n                <MenuItem onClick={e => setMenu(e, 'biome')} active={page === 'biome'}>Biome</MenuItem>\n                <MenuItem onClick={e => setMenu(e, 'surface')} active={page === 'surface'}>Surface builders</MenuItem>\n                <MenuItem onClick={e => setMenu(e, 'feature')} active={page === 'feature'}>Feature</MenuItem>\n                <MenuItem onClick={e => setMenu(e, 'dimension')} active={page === 'dimension'}>Dimension</MenuItem>\n                <MenuItem onClick={e => setMenu(e, 'noise')} active={page === 'noise'}>Noise</MenuItem>\n            </ul></nav>\n        </NavBar>\n        <div className=\"content\">\n            {page === 'biome' && <Biome onSave={biome => handleSave('biome', biome)} data={custom.biomes[index]} />}\n            {page === 'carver' && <ConfiguredCarverForm onSave={carver => handleSave('carver', carver)} data={custom.carvers[index]} />}\n            {page === 'surface' && <SurfaceBuilder onSave={surface => handleSave('surface', surface)} data={custom.surfaces[index]} />}\n            {page === 'feature' && <RawConfiguredFeature onSave={feature => handleSave('feature', feature)} data={custom.features[index]} />}\n            {page === 'noise' && <NoiseSettings onSave={noise => handleSave('noise', noise)} data={custom.noises[index]} />}\n            {page === 'dimension' && <Dimension onSave={dimension => handleSave('dimension', dimension)} data={custom.dimensions[index]} />}\n            {page === 'dimension_type' && <DimensionTypeForm onSave={dimension => handleSave('dimension', dimension)} data={custom.dimension_types[index]} />}\n            {page === 'stats' && <><h2>Datapack {namespace}</h2><Stats custom={custom} namespace={namespace} setPage={setMenu} /></>}\n        </div>\n    </div>\n}\n\nfunction Stats({custom, namespace, setPage}) {\n\n    const handleGenerateClick = function(e) {\n        e.preventDefault();\n        buildZip(custom);\n    }\n\n    const mayGenerate = Object.values(custom).some(content => {\n        if (Array.isArray(content)) {\n            return content.length;\n        }\n        return false;\n    });\n\n    return <div className=\"mtm\">\n        <StatsTitle data={custom.biomes} namespace={namespace} onClick={(e, i) => setPage(e, 'biome', i)}>custom biome</StatsTitle>\n        <StatsTitle data={custom.dimensions} namespace={namespace} onClick={(e, i) => setPage(e, 'dimension', i)}>custom dimension</StatsTitle>\n        <StatsTitle data={custom.dimension_types} namespace={namespace} onClick={(e, i) => setPage(e, 'dimension_type', i)} invisible={true}>custom dimension type</StatsTitle>\n        <StatsTitle data={custom.features} namespace={namespace} onClick={(e, i) => setPage(e, 'feature', i)}>configured feature</StatsTitle>\n        <StatsTitle data={custom.surfaces} namespace={namespace} onClick={(e, i) => setPage(e, 'surface', i)}>configured surface builder</StatsTitle>\n        <StatsTitle data={custom.noises} namespace={namespace} onClick={(e, i) => setPage(e, 'noise', i)}>custom noise</StatsTitle>\n        <StatsTitle data={custom.carvers} namespace={namespace} onClick={(e, i) => setPage(e, 'carver', i)} invisible={true}>custom carver</StatsTitle>\n        {mayGenerate && <p><Button type=\"submit\" onClick={handleGenerateClick}>Generate</Button></p>}\n    </div>\n}\n\nfunction StatsTitle({ children, data, invisible = false, namespace, onClick }) {\n    if (invisible && data.length < 1) {\n        return <></>\n    }\n\n    return <>\n        <h5><strong>{data.length}</strong> {children}{data.length > 1 && 's'}</h5>\n        <ul>\n            {data.map((d, i) => {\n                const name = displayNamespacedKey(d.key, namespace);\n                return <li key={i}><a href=\"#edit\" onClick={(e) => onClick(e, i)}>{name}</a></li>\n            })}\n        </ul>\n    </>\n}","import React, { useState } from 'react';\nimport { Button } from '../ui/Button';\nimport { readZip } from '../utils/zip';\nimport { NavBar } from '../ui/Menu';\n\nexport function DatapackForm({onCreate}) {\n\n    const [error, setError] = useState(null);\n\n    const handleCreate = function(e) {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const namespace = data.get('namespace');\n        onCreate([namespace, undefined]);\n    };\n\n    const handleFile = function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const file = (e.dataTransfer || e.target).files[0];\n        readZip(file)\n            .then(onCreate)\n            .catch(error => {\n                console.error(error);\n                setError(error.message);\n            });\n    };\n    const handleDrag = function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n    };\n\n    window.scrollTo(0, 0);\n\n    return <div className=\"first-screen\" onDragStart={handleDrag} onDragEnter={handleDrag} onDragOver={handleDrag} onDrop={handleFile}>\n        <NavBar>\n            <h2>Dimension datapack generator</h2>\n        </NavBar>\n        <form className=\"content\" onSubmit={handleCreate}>\n            <div className=\"form-control\">\n                <div className=\"mbm\">\n                    <h3>What's this?</h3>\n                    <p className=\"mbm\" style={{ fontSize: '0.95rem' }}>\n                        This online generator under development allows you to create world generation datapacks for Minecraft 1.16.2. You'll be able to create your own biomes or edit existing ones, custom trees, change the amplitude of the terrain, mix generated blocks and more in the following menus. To continue, choose your datapack identifier.\n                    </p>\n                    <hr />\n                </div>\n                <label htmlFor=\"namespace\">Default namespace</label><br />\n                <input type=\"text\" name=\"namespace\" id=\"namespace\" required pattern=\"[a-z0-9._-]+\" autoCapitalize=\"none\" spellCheck=\"false\" autoComplete=\"off\" aria-describedby=\"namespaceHelp\" />\n                <p className=\"help2\"><small id=\"namespaceHelp\" className=\"form-text text-muted\">This differentiates the datapack from the vanilla functions. Namespaces and identifiers may only contain letters, numbers and <code>._-</code> characters. This namespace is not final, you can edit the vanilla dimensions in the following menus.</small></p>\n                <div className=\"actions\">\n                    <Button type=\"submit\">Create</Button>\n                    <input type=\"file\" name=\"load-existing-zip\" id=\"load-existing-zip\" accept=\".zip\" onChange={handleFile} tabIndex=\"0\" /><label htmlFor=\"load-existing-zip\" className=\"btn--info\">Use existing datapack</label>\n                </div>\n                <div className=\"mtm\">\n                    {error !== null && <div className=\"alert--danger\">{error}</div>}\n                    <p className=\"alert--warning\">\n                        This generator is currently built for 1.16.2. As it is a beta, you might expect a few bugs.\n                    </p>\n                </div>\n            </div>\n        </form>\n    </div>\n}\n","import React, { useState } from 'react';\nimport './styles/App.scss';\nimport { Datapack } from './components/Datapack';\nimport { DataContextProvider } from './context/DataContext';\nimport { DatapackForm } from './components/DatapackForm';\n\nfunction App() {\n    const [data, setData] = useState(null);\n\n    return <>\n        {data !== null ?\n            <DataContextProvider namespace={data[0]} initial={data[1]}>\n                <Datapack />\n            </DataContextProvider>\n            :\n            <DatapackForm onCreate={setData} />\n        }\n    </>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nwindow.addEventListener('load', () => {\n    document.body.classList.remove('preload');\n});\n\nReactDOM.render(\n    <App />\n,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}