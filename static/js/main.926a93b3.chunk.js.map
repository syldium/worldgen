{"version":3,"sources":["ui/Select.jsx","ui/Button.jsx","hooks/ui.js","utils/fetch.js","components/feature/FeatureDefaults.js","components/surface/SurfaceBuilderDefaults.js","components/noise/NoiseDefaults.js","components/dimension/DimensionDefaults.js","context/DataContext.jsx","utils/data.js","hooks/context.js","components/NamespacedKey.jsx","components/biome/BiomeDefaults.js","utils/color.js","ui/Input.jsx","components/state/BlockPredicate.jsx","hooks/form.js","components/state/BlockState.jsx","components/biome/BiomeEffects.jsx","components/biome/BiomeSpawners.jsx","components/biome/BiomeStarts.jsx","components/biome/Features.jsx","components/biome/Biome.jsx","ui/Toggle.jsx","ui/DarkModeToggle.jsx","ui/Menu.jsx","components/dimension/DimensionType.jsx","ui/NumberList.jsx","components/dimension/BiomeSource.jsx","components/dimension/DimensionGenerator.jsx","utils/hash.js","components/dimension/Dimension.jsx","components/state/BlockStateProvider.jsx","components/feature/TreeFeature.jsx","components/feature/Decorator.jsx","components/feature/RandomPatchFeature.jsx","components/feature/OreFeature.jsx","components/feature/HugeFungusFeature.jsx","components/feature/SpringFeature.jsx","components/feature/ConfiguredFeature.jsx","utils/zip.js","components/surface/SurfaceBuilder.jsx","components/noise/Structures.jsx","components/noise/NoiseSettings.jsx","components/Datapack.jsx","components/DatapackForm.jsx","App.js","serviceWorker.js","index.js"],"names":["React","memo","props","styles","control","backgroundColor","borderColor","boxShadow","transition","singleValue","color","menuList","input","menu","option","isFocused","isSelected","cursor","multiValue","multiValueLabel","multiValueRemove","Button","loading","cat","buttonProps","className","tabIndex","useToggle","initial","useState","status","setState","toggle","e","target","checked","preventDefault","current","jsonFetch","url","options","a","fetch","headers","Accept","response","json","responseData","ok","VANILLA_FEATURES","TAGS_OPTIONS","map","tag","value","label","DECORATORS_OPTIONS","o","TREE_DECORATORS_OPTIONS","default","probability","HUGE_FUNGUS_FEATURE_CONFIG","hat_state","Name","decor_state","planted","valid_base_block","stem_state","Properties","axis","ORE_FEATURE_CONFIG","predicate_type","state","size","DECORATED_ORE_FEATURE_CONFIG","config","feature","type","decorator","bottom_offset","top_offset","maximum","count","DECORATED_SPRING_FEATURE_CONFIG","rock_count","hole_count","valid_blocks","falling","requires_block_below","TREE_FEATURE_CONFIG","heightmap","minimum_size","limit","lower_size","upper_size","decorators","trunk_provider","leaves_provider","persistent","distance","foliage_placer","radius","offset","height","trunk_placer","base_height","height_rand_a","height_rand_b","RANDOM_PATCH_FEATURE_CONFIG","can_replace","project","need_water","xspread","yspread","zspread","whitelist","snowy","blacklist","tries","state_provider","block_placer","DECORATED_HUGE_FUNGUS_CONFIG","DECORATED_RANDOM_PATCH_CONFIG","outer","inner","chance","DECORATED_TREE_CONFIG","extra_chance","extra_count","DECORATOR_EXTRA_COUNT_DEFAULTS","DECORATOR_DECORATED_DEFAULTS","DECORATOR_RANGE_DEFAULTS","VANILLA_SURFACE_BUILDERS","SURFACE_TYPES_OPTIONS","SURFACE_BUILDER","top_material","under_material","underwater_material","VANILLA_NOISES","STRUCTURES","OVERWORLD_NOISE","bedrock_roof_position","bedrock_floor_position","sea_level","disable_mob_generation","structures","stronghold","spread","spacing","separation","salt","noise","sampling","xz_scale","y_scale","xz_factor","y_factor","top_slide","bottom_slide","size_horizontal","size_vertical","density_factor","density_offset","simplex_surface_noise","random_density_offset","island_noise_override","amplified","default_block","default_fluid","level","DIMENSION","generator","seed","biome_source","biome","settings","VANILLA_DIMENSION_TYPES","NOISES_NAMES","MULTI_NOISE_BIOME_SOURCE","temperature_noise","firstOctave","amplitudes","humidity_noise","altitude_noise","weirdness_noise","biomes","DataContext","createContext","vanilla","blocks","dimensions","dimension_types","entities","features","noises","surfaces","custom","updateBiomes","updateDimensions","dimension","updateDimensionTypes","dimension_type","updateFeatures","updateNoises","updateSurfacesBuilders","surface_builder","namespace","DataContextProvider","children","setBiomes","setBlocks","setEntities","useData","customBiomes","useEffect","then","entity","name","displayName","Provider","filter","includes","objectsEqual","b","Object","keys","length","every","p","capitalize","str","toUpperCase","substr","displayNamespacedKey","key","defaultNamespace","startsWith","split","findDecorators","f","find","obj","unshift","hasOwnProperty","buildDecorated","decorated","forEach","i","dataUpper","group","data","effects","sky_color","refitKeys","build","destKey","source","some","n","setData","updateData","object","stored","existing","findIndex","index","push","useKeyedListOptions","category","includeCustom","empty","context","useContext","useMemo","keyed","struct","NamespacedKey","example","onChange","expectBreakage","mayReplaceVanilla","hidden","useRef","setKey","replace","handleKeyChange","useCallback","toLowerCase","handleReplaceTargetChange","selected","handleKeyDown","form","dispatchEvent","Event","cancelable","handleToggle","inputValue","hiddenInputValue","style","width","Math","max","apply","dummyOnChange","console","log","htmlFor","inputId","id","required","pattern","placeholder","autoCapitalize","spellCheck","autoComplete","onKeyPress","ref","opacity","position","onClick","EFFECTS","mood_sound","sound","tick_delay","block_search_extent","fog_color","water_color","water_fog_color","FEATURES","STARTS","SPAWNERS_DEFAULTS","ambient","weight","minCount","maxCount","creature","misc","monster","water_ambient","water_creature","BIOME_DEFAULTS","carvers","air","starts","spawners","precipitation","scale","downfall","depth","temperature","spawn_costs","PARTICLES","particle","PARTICLE_DEFAULTS","hexColorToInteger","parseInt","ConfInput","attr","defaultChecked","defaultValue","min","step","uId","random","toString","isNaN","decimals","countDecimals","toFixed","ceil","smooth","getNumberSize","parseFloat","data-name","NumberInput","upChange","padStart","parse","BlockPredicate","predicate","setPredicate","handleTypeChange","handleBlockChange","block","handleBlockStateChange","block_state","handleTagChange","handleChange","content","BlockSelect","BlockState","RandomBlockMatch","t","flexGrow","crudReducer","action","ADD","payload","UPDATE","arrayMove","Error","element","REMOVE","useCrud","useReducer","useCrudPreset","dispatch","add","CRUD","update","previous","oldIndex","newIndex","remove","useBlocksOptions","mapped","useJsonEffect","JSON","stringify","useKeyedOptionsState","multiple","Array","isArray","selection","setSelection","setSelectionFromOptions","states","properties","actual","values","getStateValue","handlePropertiesChange","BlockStateProperties","BlocksList","list","handleAdd","handleRemove","handleStateChange","filteredOptions","d","BlocksNamesList","handlePropertyChange","handleCheckboxChange","dataset","selects","possible","num_values","BiomeEffects","colors","setColors","blockColor","toggleBlockColor","toggleParticle","handleColorChange","handleParticleChange","next","foliage_color","grass_color","ParticleEffect","handleScaleChange","handleProbabilityChange","flexShrink","op","DustColor","r","g","undefined","BiomeSpawners","groupSpawners","SpawnGroup","visibility","text","s","insert","spawner","SpawnDefinition","onDelete","handleValueChange","handleCountChange","handleDelete","selectedOption","BiomeStarts","selectedOptions","isMulti","GenFeatures","levels","setLevels","handleLevelChange","priority","elements","GenFeaturesLevel","Biome","onSave","handleStartsChange","handleEffectsChange","handleFeaturesChange","handleSpawnersChange","handleSubmit","formData","fromEntries","FormData","onSubmit","BiomeCategory","BiomePrecipitation","SurfaceBuilder","Toggle","ariaLabel","aria-label","DarkModeToggle","darkMode","useDarkMode","title","disable","enable","MenuItem","active","href","role","aria-current","NavBar","rel","DimensionType","NumberList","numbers","val","pos","number","BiomeSource","setSource","handleSeedChange","handleCheckerboardSourceChange","handleFixedSourceChange","handleMultiSourceChange","SeedField","CheckerboardBiomeSource","FixedBiomeSource","MultiNoiseBiomeSource","setNumber","useNumber","setScale","isClearable","setBiome","advanced","toggleAdvanced","handleNoiseChange","handleAddClick","parameters","altitude","weirdness","humidity","handleDeleteClick","entry","BiomeSelection","biomesOptions","alignItems","PerlinNoiseParameters","objects","hasDuplicatedObjects","handleFirstOctaveChange","handleAmplitudesChange","handleBiomeChange","rainfall","handleParameterChange","DimensionGenerator","handleSettingsChange","handleBiomeSourceChange","Settings","setText","hash","imul","charCodeAt","hashCode","Dimension","handleGeneratorChange","get","BlockStateProvider","provider","setProvider","similarities","handleSimpleStateChange","handleWeighestStateChange","entries","filteredBlocks","WeightedStateProvider","handleWeightChange","TreeFeatureConfig","configuration","setConfig","handleTrunkProviderChange","handleLeavesProviderChange","handleFoliagePlacerChange","handleTrunkPlacerChange","handleDecoratorsChange","FoliagePlacer","placer","TrunkPlacer","TreeDecorators","TreeDecorator","setDecorator","handleSelectChange","handleAlterGroundChange","CustomTag","indexOf","fontWeight","fontSize","display","DecoratorsList","shouldCancelStart","parentNode","classList","contains","SortableDecoratorsList","onSortEnd","SortableContainer","Decorator","SortableElement","handleConfigChange","ChanceDecorator","CountDecorator","ExtraCountDecorator","DecoratedDecorator","RangeDecorator","RandomPatchFeature","handleStateProviderChange","handleWhitelistChange","handleBlacklistChange","OreFeatureConfig","handlePredicateChange","HugeFungusFeature","handleDecorStateChange","handleHatStateChange","handlePlantedChange","handleStemStateChange","handleValidBaseBlockChange","SpringFeature","handlRequiresBlockBelowChange","handleValidBlocksChange","RawConfiguredFeature","decorators_","feature_","setFeature","setDecorators","handleFeatureChange","DIMENSIONS_PATH","WORLDGEN_PATH","LEGACY_PATH_DETECTION","LEGACY_DIMENSIONS_PATH","LEGACY_WORLDGEN_PATH","readZip","file","Promise","resolve","reject","JSZip","loadAsync","zip","mcmeta","promises","path","dir","legacy","match","regex","parseFile","async","all","catch","extractDatapack","getFolderType","folder","pathRegex","filename","contentPromise","exec","success","error","message","writeFile","el","w","handleTopMaterialChange","handleUnderMaterialChange","handleUnderwaterMaterialChange","Structures","handleStrongholdChange","handleStructuresChange","Stronghold","StructuresList","enabled","setStronghold","original","structure","def","Structure","handleSpacingChange","handleSaltChange","NoiseSettings","NoiseConfig","changeCallback","handleSamplingChange","handleTopSlideChange","handleBottomSlideChange","NoiseSamplingConfig","SlideConfig","Datapack","page","setPage","useMenu","setMenu","handleSave","method","window","scrollTo","surface","Stats","mayGenerate","StatsTitle","pack","pack_format","description","generateAsync","saveAs","buildZip","DatapackForm","onCreate","setError","handleFile","stopPropagation","dataTransfer","files","handleDrag","onDragStart","onDragEnter","onDragOver","onDrop","aria-describedby","accept","App","Boolean","location","hostname","addEventListener","document","body","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oQAkFeA,MAAMC,MA/EN,SAAAC,GACX,OACI,kBAAC,IAAD,eACIC,OAAQ,CACJC,QAAS,SAAAD,GAAM,kCACRA,GADQ,IAEXE,gBAAiB,wBACjBC,YAAa,sBACb,SAAS,2BACFH,EAAO,WADd,IAEIE,gBAAiB,8BACjBC,YAAa,wBAEjB,SAAS,2BACFH,EAAO,WADd,IAEII,UAAW,iCAEfC,WAAY,SAEhBC,YAAa,SAAAN,GAAM,kCACZA,GADY,IAEfO,MAAO,0BAEXC,SAAU,SAAAR,GAAM,kCACTA,GADS,IAEZO,MAAO,uBACPL,gBAAiB,0BACjB,SAAS,2BACFF,EAAO,WADd,IAEIO,MAAO,mCAGfE,MAAO,SAAAT,GAAM,kCACNA,GADM,IAETO,MAAO,0BAEXG,KAAM,SAAAV,GAAM,kCACLA,GADK,IAERE,gBAAiB,6BAErBS,OAAQ,SAACX,EAAD,OAAWY,EAAX,EAAWA,UAAWC,EAAtB,EAAsBA,WAAtB,mBAAC,eACFb,GADC,IAEJO,MAAO,uBACPO,OAAQ,UACRZ,gBAAiBW,EACX,+BACAD,EACI,8BACA,KACV,UAAU,2BACHZ,EAAO,YADd,IAEIE,gBAAiBW,EACX,+BACA,mCAGdE,WAAY,SAAAf,GAAM,kCACXA,GADW,IAEdO,MAAO,uBACPL,gBAAiB,yBAErBc,gBAAiB,SAAAhB,GAAM,kCAChBA,GADgB,IAEnBO,MAAO,uBACPL,gBAAiB,yBAErBe,iBAAkB,SAAAjB,GAAM,kCACjBA,GADiB,IAEpB,SAAS,2BACFA,EAAO,WADd,IAEIE,gBAAiB,6BAIzBH,O,QC3ET,SAASmB,EAAT,GAA6D,EAA3CC,QAA4C,IAAD,IAAlCC,WAAkC,MAA5B,UAA4B,EAAdC,EAAc,iCAChE,OAAO,0CAAQC,UAAS,mBAAcF,IAAWC,EAA1C,CAAuDE,SAAS,OCGpE,SAASC,IAA4B,IAAlBC,EAAiB,0DACZC,mBAASD,GADG,mBAChCE,EADgC,KACxBC,EADwB,KAEjCC,EAAS,WAAqB,IAAXC,EAAU,uDAAN,KACf,OAANA,GAA4B,mBAANA,GAA+C,mBAArBA,EAAEC,OAAOC,SAKnD,OAANF,GAA0C,oBAArBA,EAAEG,gBACvBH,EAAEG,iBAENL,GAAS,SAAAM,GAAO,OAAKA,MAPjBN,EAAsB,mBAANE,EAAkBA,EAAIA,EAAEC,OAAOC,UASvD,MAAO,CAACL,EAAQE,G,4BCfb,SAAeM,EAAtB,oC,4CAAO,WAAyBC,EAAKC,GAA9B,iBAAAC,EAAA,sEACoBC,MAAMH,EAAD,aACxBI,QAAS,CACLC,OAAQ,mBACR,eAAgB,qBAEjBJ,IANJ,cACGK,EADH,gBASwBA,EAASC,OATjC,UASGC,EATH,QAUCF,EAASG,GAVV,yCAWQD,GAXR,aAaGA,EAbH,4C,sBCJA,IAAME,EAAmB,CAC5B,OACA,YACA,cACA,sBACA,eACA,aACA,uBACA,QACA,uBACA,uBACA,eACA,mBACA,kBACA,YACA,4BACA,2BACA,iBACA,iBACA,gBACA,gBACA,gBACA,qBACA,kBACA,iBACA,gBACA,iBACA,gBACA,qBACA,aACA,YACA,YACA,cACA,kBACA,iBACA,eACA,YACA,YACA,WACA,eACA,SACA,QACA,aACA,YACA,YACA,cACA,YACA,mBACA,cACA,sBACA,eACA,cACA,SACA,qBACA,cACA,eACA,gBACA,uBACA,cACA,eACA,WACA,aACA,YACA,WACA,eACA,aACA,kBACA,uBACA,qBACA,sBACA,kBACA,gBACA,oBACA,mBACA,oBACA,qBACA,uBACA,sBACA,qBACA,oBACA,sBACA,qBACA,kBACA,oBACA,2BACA,cACA,qBACA,wBACA,mBACA,mBACA,qBACA,mBACA,eACA,sBACA,yBACA,yBACA,0BACA,4BACA,mBACA,wBACA,sBACA,wBACA,sBACA,uBACA,qBACA,uBACA,qBACA,uBACA,qBACA,YACA,gBACA,kBACA,oBACA,kBACA,oBACA,oBACA,iBACA,WACA,aACA,cACA,cACA,eACA,WACA,WACA,iBACA,WACA,eACA,cACA,YACA,eACA,cACA,mBACA,mBACA,gBACA,wBACA,eACA,uBACA,sBACA,oBACA,MACA,WACA,QACA,SACA,SACA,OACA,cACA,YACA,sBACA,mBACA,cACA,YACA,aACA,cACA,eACA,eACA,cACA,iBACA,gBACA,eACA,eACA,yBACA,kCACA,2BACA,+BACA,6BACA,wBACA,sBACA,mBACA,0BACA,gBACA,aACA,sBACA,iBACA,cACA,cACA,mBACA,oBACA,qBACA,cACA,eACA,oBACA,6BAGSC,EAAe,CACxB,cACA,QACA,sBACA,UACA,oBACA,uBACA,qBACA,OACA,WACA,gBACA,aACA,UACA,YACA,UACA,YACA,SACA,eACA,eACA,gBACA,QACA,gBACA,QACA,gBACA,oBACA,cACA,SACA,OACA,UACA,cACA,YACA,qBACA,oBACA,MACA,cACA,iBACA,oBACA,uBACA,cACA,SACA,OACA,iBACA,4BACA,qBACA,WACA,oBACA,SACA,UACA,kBACA,8BACA,QACA,OACA,WACA,gBACA,QACA,QACA,gBACA,wBACA,oBACA,cACA,SACA,iBACA,eACA,wBACA,sBACA,eACA,YACA,uBACA,yBACA,cACA,QACA,cACA,qBACA,aACA,eACA,cACA,gBACA,4BACA,iBACA,eACA,gBACA,yBACA,eACA,gBACA,mBACA,QACFC,KAAI,SAAAC,GAAG,MAAK,CAAEC,MAAO,aAAeD,EAAKE,MAAOF,MAErCG,EAAqB,CAC9B,CAAEF,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,cAAeC,MAAO,eAC/B,CAAED,MAAO,mBAAoBC,MAAO,qBACpC,CAAED,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,eAAgBC,MAAO,gBAChC,CAAED,MAAO,oBAAqBC,MAAO,qBACrC,CAAED,MAAO,SAAUC,MAAO,WAC5BH,KAAI,SAAAK,GAEF,OADAA,EAAEH,MAAQ,aAAeG,EAAEH,MACpBG,KAGEC,EAA0B,CACnC,CAAEJ,MAAO,eAAgBC,MAAO,gBAChC,CAAED,MAAO,UAAWC,MAAO,UAAWI,QAAS,CAAEC,YAAa,MAC9D,CAAEN,MAAO,QAASC,MAAO,cAAeI,QAAS,CAAEC,YAAa,KAChE,CAAEN,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ACN+P,OAAQ,EACRC,SAAU,EACVC,SAAU,GAEd,CACIjQ,KAAM,kBACN+P,OAAQ,EACRC,SAAU,EACVC,SAAU,GAEd,CACIjQ,KAAM,mBACN+P,OAAQ,EACRC,SAAU,EACVC,SAAU,IA0DdE,KAAM,GACNC,QAvDqB,CACrB,CACIpQ,KAAM,mBACN+P,OAAQ,IACRC,SAAU,EACVC,SAAU,GAEd,CACIjQ,KAAM,mBACN+P,OAAQ,GACRC,SAAU,EACVC,SAAU,GAEd,CACIjQ,KAAM,4BACN+P,OAAQ,EACRC,SAAU,EACVC,SAAU,GAEd,CACIjQ,KAAM,qBACN+P,OAAQ,IACRC,SAAU,EACVC,SAAU,GAEd,CACIjQ,KAAM,oBACN+P,OAAQ,IACRC,SAAU,EACVC,SAAU,GAEd,CACIjQ,KAAM,kBACN+P,OAAQ,IACRC,SAAU,EACVC,SAAU,GAEd,CACIjQ,KAAM,qBACN+P,OAAQ,GACRC,SAAU,EACVC,SAAU,GAEd,CACIjQ,KAAM,kBACN+P,OAAQ,EACRC,SAAU,EACVC,SAAU,IASdI,cAAe,GACfC,eAAgB,IAGPC,GAAiB,CAC1BzF,QAASqE,GACTqB,QAAS,CACLC,IAAK,CACD,iBACA,qBAGRC,OAAQd,GACRxI,SAAUuI,GACVgB,SAAUd,GACV9D,SAAU,SACV6E,cAAe,OACf5I,gBAAiB,kBACjB6I,MAAO,IACPC,SAAU,GACVC,MAAO,IACPC,YAAa,GACbC,YAAa,IAGJC,GAAY,CACrB,wBACA,iBACA,MACA,UACA,QACA,SACA,mBACA,aACA,sBACA,wBACA,QACA,YACA,gBACA,OACA,eACA,mBACA,UACA,gBACA,iBACA,gBACA,yBACA,iBACA,OACA,SACA,iBACA,UACA,gBACA,UACA,gBACA,YACA,oBACA,eACA,gBACA,eACA,iBACA,wBACA,gBACA,WACA,UACA,QACA,QACA,iBACA,QACA,iBACA,OACA,aACA,gBACA,gBACA,eACA,wBACA,cACA,OACA,WACA,WACA,OACA,OACA,SACA,OACA,iBACA,QACA,SACA,OACA,kBACA,OACA,SACA,YACA,eACA,mBACA,aACA,eACA,YACA,S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","file":"static/js/main.926a93b3.chunk.js","sourcesContent":["import React from 'react';\nimport ReactSelect from 'react-select';\n\nconst Select = props => {\n    return (\n        <ReactSelect\n            styles={{\n                control: styles => ({\n                    ...styles,\n                    backgroundColor: 'var(--bg-color-input)',\n                    borderColor: 'var(--border-color)',\n                    ':hover': {\n                        ...styles[':hover'],\n                        backgroundColor: 'var(--bg-color-input-hover)',\n                        borderColor: 'var(--border-color)'\n                    },\n                    ':focus': {\n                        ...styles[':focus'],\n                        boxShadow: '0 0 0 1px var(--focus-color)'\n                    },\n                    transition: '.1s',\n                }),\n                singleValue: styles => ({\n                    ...styles,\n                    color: 'var(--primary-color)',\n                }),\n                menuList: styles => ({\n                    ...styles,\n                    color: 'var(--primary-color)',\n                    backgroundColor: 'var(--bg-color-section)',\n                    ':hover': {\n                        ...styles[':hover'],\n                        color: 'var(--bg-color-input-hover)',\n                    },\n                }),\n                input: styles => ({\n                    ...styles,\n                    color: 'var(--primary-color)',\n                }),\n                menu: styles => ({\n                    ...styles,\n                    backgroundColor: 'var(--bg-color-section)',\n                }),\n                option: (styles, { isFocused, isSelected }) => ({\n                    ...styles,\n                    color: 'var(--primary-color)',\n                    cursor: 'pointer',\n                    backgroundColor: isSelected\n                        ? 'var(--bg-color-select-focus)'\n                        : isFocused\n                            ? 'var(--bg-color-input-hover)'\n                            : null,\n                    ':active': {\n                        ...styles[':active'],\n                        backgroundColor: isSelected\n                            ? 'var(--bg-color-select-focus)'\n                            : 'var(--bg-color-input-hover)',\n                    },\n                }),\n                multiValue: styles => ({\n                    ...styles,\n                    color: 'var(--primary-color)',\n                    backgroundColor: 'var(--select-label)'\n                }),\n                multiValueLabel: styles => ({\n                    ...styles,\n                    color: 'var(--primary-color)',\n                    backgroundColor: 'var(--select-label)'\n                }),\n                multiValueRemove: styles => ({\n                    ...styles,\n                    ':hover': {\n                        ...styles[':hover'],\n                        backgroundColor: 'var(--select-label)',\n                    },\n                }),\n            }}\n            {...props}\n        />\n    );\n};\n\nexport default React.memo(Select);\n","import React from 'react';\n\nexport function Button ({loading, cat = 'primary', ...buttonProps}) {\n    return <button className={`btn btn--${cat}`} {...buttonProps} tabIndex=\"0\"></button>\n}\n","import { useState, useRef, useEffect } from \"react\";\n\n/**\n * @param {boolean} initial \n * @returns {[boolean, function(): void]}\n */\nexport function useToggle(initial = false) {\n    const [status, setState] = useState(initial);\n    const toggle = function (e = null) {\n        if (e !== null && (typeof e === 'boolean' || typeof e.target.checked === 'boolean')) {\n            setState(typeof e === 'boolean' ? e : e.target.checked);\n            return;\n        }\n        \n        if (e !== null && typeof e.preventDefault === 'function') {\n            e.preventDefault();\n        }\n        setState(current => !current);\n    }\n    return [status, toggle];\n}\n\n/**\n * \n * @param {string} [page] \n * @param {number} [index] \n * @returns {[string, number, function (SyntheticEvent, string, number): void]}\n */\nexport function useMenu(page = 'stats', index = -1) {\n    const [state, setState] = useState({ page, index });\n\n    const setPage = function (e, page = 'stats', index = -1) {\n        if (e !== null) {\n            e.preventDefault();\n        }\n        if (index < 0) {\n            setState({ page });\n        } else {\n            setState({ page, index });\n        }\n    }\n\n    return [\n        state.page,\n        state.index,\n        setPage\n    ];\n}\n\n/**\n * @param {function(HTMLCanvasElement, CanvasRenderingContext2D): void} callback\n * @returns {React.MutableRefObject}\n */\nexport function useCanvas(callback) {\n    const reference = useRef(null);\n\n    useEffect(function() {\n        const canvas = reference.current;\n        const ctx = canvas.getContext('2d');\n        callback(canvas, ctx);\n    }, [callback]);\n\n    return reference;\n}","/**\n * @param {string} url\n * @param {object} options\n */\nexport async function jsonFetch(url, options) {\n    const response = await fetch(url, {\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        ...options\n    });\n\n    const responseData = await response.json();\n    if (response.ok) {\n        return responseData;\n    }\n    throw responseData;\n}","export const VANILLA_FEATURES = [\n    \"nope\",\n    \"end_spike\",\n    \"end_gateway\",\n    \"end_gateway_delayed\",\n    \"chorus_plant\",\n    \"end_island\",\n    \"end_island_decorated\",\n    \"delta\",\n    \"small_basalt_columns\",\n    \"large_basalt_columns\",\n    \"basalt_blobs\",\n    \"blackstone_blobs\",\n    \"glowstone_extra\",\n    \"glowstone\",\n    \"crimson_forest_vegetation\",\n    \"warped_forest_vegetation\",\n    \"nether_sprouts\",\n    \"twisting_vines\",\n    \"weeping_vines\",\n    \"basalt_pillar\",\n    \"seagrass_cold\",\n    \"seagrass_deep_cold\",\n    \"seagrass_normal\",\n    \"seagrass_river\",\n    \"seagrass_deep\",\n    \"seagrass_swamp\",\n    \"seagrass_warm\",\n    \"seagrass_deep_warm\",\n    \"sea_pickle\",\n    \"ice_spike\",\n    \"ice_patch\",\n    \"forest_rock\",\n    \"seagrass_simple\",\n    \"iceberg_packed\",\n    \"iceberg_blue\",\n    \"kelp_cold\",\n    \"kelp_warm\",\n    \"blue_ice\",\n    \"bamboo_light\",\n    \"bamboo\",\n    \"vines\",\n    \"lake_water\",\n    \"lake_lava\",\n    \"disk_clay\",\n    \"disk_gravel\",\n    \"disk_sand\",\n    \"freeze_top_layer\",\n    \"bonus_chest\",\n    \"void_start_platform\",\n    \"monster_room\",\n    \"desert_well\",\n    \"fossil\",\n    \"spring_lava_double\",\n    \"spring_lava\",\n    \"spring_delta\",\n    \"spring_closed\",\n    \"spring_closed_double\",\n    \"spring_open\",\n    \"spring_water\",\n    \"pile_hay\",\n    \"pile_melon\",\n    \"pile_snow\",\n    \"pile_ice\",\n    \"pile_pumpkin\",\n    \"patch_fire\",\n    \"patch_soul_fire\",\n    \"patch_brown_mushroom\",\n    \"patch_red_mushroom\",\n    \"patch_crimson_roots\",\n    \"patch_sunflower\",\n    \"patch_pumpkin\",\n    \"patch_taiga_grass\",\n    \"patch_berry_bush\",\n    \"patch_grass_plain\",\n    \"patch_grass_forest\",\n    \"patch_grass_badlands\",\n    \"patch_grass_savanna\",\n    \"patch_grass_normal\",\n    \"patch_grass_taiga\",\n    \"patch_grass_taiga_2\",\n    \"patch_grass_jungle\",\n    \"patch_dead_bush\",\n    \"patch_dead_bush_2\",\n    \"patch_dead_bush_badlands\",\n    \"patch_melon\",\n    \"patch_berry_sparse\",\n    \"patch_berry_decorated\",\n    \"patch_waterlilly\",\n    \"patch_tall_grass\",\n    \"patch_tall_grass_2\",\n    \"patch_large_fern\",\n    \"patch_cactus\",\n    \"patch_cactus_desert\",\n    \"patch_cactus_decorated\",\n    \"patch_sugar_cane_swamp\",\n    \"patch_sugar_cane_desert\",\n    \"patch_sugar_cane_badlands\",\n    \"patch_sugar_cane\",\n    \"brown_mushroom_nether\",\n    \"red_mushroom_nether\",\n    \"brown_mushroom_normal\",\n    \"red_mushroom_normal\",\n    \"brown_mushroom_taiga\",\n    \"red_mushroom_taiga\",\n    \"brown_mushroom_giant\",\n    \"red_mushroom_giant\",\n    \"brown_mushroom_swamp\",\n    \"red_mushroom_swamp\",\n    \"ore_magma\",\n    \"ore_soul_sand\",\n    \"ore_gold_deltas\",\n    \"ore_quartz_deltas\",\n    \"ore_gold_nether\",\n    \"ore_quartz_nether\",\n    \"ore_gravel_nether\",\n    \"ore_blackstone\",\n    \"ore_dirt\",\n    \"ore_gravel\",\n    \"ore_granite\",\n    \"ore_diorite\",\n    \"ore_andesite\",\n    \"ore_coal\",\n    \"ore_iron\",\n    \"ore_gold_extra\",\n    \"ore_gold\",\n    \"ore_redstone\",\n    \"ore_diamond\",\n    \"ore_lapis\",\n    \"ore_infested\",\n    \"ore_emerald\",\n    \"ore_debris_large\",\n    \"ore_debris_small\",\n    \"crimson_fungi\",\n    \"crimson_fungi_planted\",\n    \"warped_fungi\",\n    \"warped_fungi_planted\",\n    \"huge_brown_mushroom\",\n    \"huge_red_mushroom\",\n    \"oak\",\n    \"dark_oak\",\n    \"birch\",\n    \"acacia\",\n    \"spruce\",\n    \"pine\",\n    \"jungle_tree\",\n    \"fancy_oak\",\n    \"jungle_tree_no_vine\",\n    \"mega_jungle_tree\",\n    \"mega_spruce\",\n    \"mega_pine\",\n    \"swamp_tree\",\n    \"jungle_bush\",\n    \"oak_badlands\",\n    \"spruce_snovy\",\n    \"flower_warm\",\n    \"flower_default\",\n    \"flower_forest\",\n    \"flower_swamp\",\n    \"flower_plain\",\n    \"flower_plain_decorated\",\n    \"forest_flower_vegetation_common\",\n    \"forest_flower_vegetation\",\n    \"dark_forest_vegetation_brown\",\n    \"dark_forest_vegetation_red\",\n    \"warm_ocean_vegetation\",\n    \"forest_flower_trees\",\n    \"taiga_vegetation\",\n    \"trees_shattered_savanna\",\n    \"trees_savanna\",\n    \"birch_tall\",\n    \"trees_mountain_edge\",\n    \"trees_mountain\",\n    \"trees_water\",\n    \"birch_other\",\n    \"plain_vegetation\",\n    \"trees_jungle_edge\",\n    \"trees_giant_spruce\",\n    \"trees_giant\",\n    \"trees_jungle\",\n    \"bamboo_vegetation\",\n    \"mushroom_field_vegetation\"\n];\n\nexport const TAGS_OPTIONS = [\n    'acacia_logs',\n    'anvil',\n    'bamboo_plantable_on',\n    'banners',\n    'base_stone_nether',\n    'base_stone_overworld',\n    'beacon_base_blocks',\n    'beds',\n    'beehives',\n    'bee_growables',\n    'birch_logs',\n    'buttons',\n    'campfires',\n    'carpets',\n    'climbable',\n    'corals',\n    'coral_blocks',\n    'coral_plants',\n    'crimson_stems',\n    'crops',\n    'dark_oak_logs',\n    'doors',\n    'dragon_immune',\n    'enderman_holdable',\n    'fence_gates',\n    'fences',\n    'fire',\n    'flowers',\n    'flower_pots',\n    'gold_ores',\n    'guarded_by_piglins',\n    'hoglin_repellents',\n    'ice',\n    'impermeable',\n    'infiniburn_end',\n    'infiniburn_nether',\n    'infiniburn_overworld',\n    'jungle_logs',\n    'leaves',\n    'logs',\n    'logs_that_burn',\n    'mushroom_grow_block‌',\n    'non_flammable_wood',\n    'oak_logs',\n    'piglin_repellents',\n    'planks',\n    'portals',\n    'pressure_plates',\n    'prevent_mob_spawning_inside',\n    'rails',\n    'sand',\n    'saplings',\n    'shulker_boxes',\n    'signs',\n    'slabs',\n    'small_flowers',\n    'soul_fire_base_blocks',\n    'soul_speed_blocks',\n    'spruce_logs',\n    'stairs',\n    'standing_signs',\n    'stone_bricks',\n    'stone_pressure_plates',\n    'strider_warm_blocks',\n    'tall_flowers',\n    'trapdoors',\n    'underwater_bonemeals',\n    'unstable_bottom_center',\n    'valid_spawn',\n    'walls',\n    'wall_corals',\n    'wall_post_override',\n    'wall_signs',\n    'warped_stems',\n    'wart_blocks',\n    'wither_immune',\n    'wither_summon_base_blocks',\n    'wooden_buttons',\n    'wooden_doors',\n    'wooden_fences',\n    'wooden_pressure_plates',\n    'wooden_slabs',\n    'wooden_stairs',\n    'wooden_trapdoors',\n    'wool'\n].map(tag => ({ value: 'minecraft:' + tag, label: tag }));\n\nexport const DECORATORS_OPTIONS = [\n    { value: 'chance', label: 'Chance' },\n    { value: 'count', label: 'Count' },\n    { value: 'count_extra', label: 'Count extra' },\n    { value: 'count_multilayer', label: 'Count multi layer' },\n    { value: 'decorated', label: 'Decorated' },\n    { value: 'fire', label: 'Fire' },\n    { value: 'range', label: 'Range' },\n    { value: 'range_biased', label: 'Range biased' },\n    { value: 'range_very_biased', label: 'Range very biased' },\n    { value: 'square', label: 'Square' }\n].map(o => {\n    o.value = 'minecraft:' + o.value;\n    return o;\n});\n\nexport const TREE_DECORATORS_OPTIONS = [\n    { value: 'alter_ground', label: 'Alter ground' },\n    { value: 'beehive', label: 'Beehive', default: { probability: 0.02 } },\n    { value: 'cocoa', label: 'Cocoa beans', default: { probability: 0.2 } },\n    { value: 'leave_vine', label: 'Leave vine' },\n    { value: 'trunk_vine', label: 'Trunk vine' }\n].map(o => {\n    o.value = 'minecraft:' + o.value;\n    return o;\n});\n\nexport const HUGE_FUNGUS_FEATURE_CONFIG = {\n    hat_state: {\n        Name: \"minecraft:nether_wart_block\"\n    },\n    decor_state: {\n        Name: \"minecraft:shroomlight\"\n    },\n    planted: false,\n    valid_base_block: {\n        Name: \"minecraft:crimson_nylium\"\n    },\n    stem_state: {\n        Properties: {\n            axis: \"y\"\n        },\n        Name: \"minecraft:crimson_stem\"\n    }\n};\n\nexport const ORE_FEATURE_CONFIG = {\n    target: {\n        tag: \"minecraft:base_stone_overworld\",\n        predicate_type: \"minecraft:tag_match\"\n    },\n    state: {\n        Name: \"minecraft:gold_ore\"\n    },\n    size: 30\n};\n\nexport const SPRING_FEATURE_CONFIG = {\n    rock_count: 4,\n    hole_count: 1,\n    valid_blocks: [\n        \"minecraft:stone\",\n        \"minecraft:granite\",\n        \"minecraft:diorite\",\n        \"minecraft:andesite\"\n    ],\n    state: {\n        Properties: {\n            falling: \"true\"\n        },\n        Name: \"minecraft:water\"\n    },\n    requires_block_below: true\n}\n\nexport const DECORATED_ORE_FEATURE_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        feature: {\n                            config: ORE_FEATURE_CONFIG,\n                            type: \"minecraft:ore\"\n                        },\n                        decorator: {\n                            config: {\n                                bottom_offset: 0,\n                                top_offset: 0,\n                                maximum: 32\n                            },\n                            type: \"minecraft:range\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                },\n                decorator: {\n                    config: {},\n                    type: \"minecraft:square\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 2\n            },\n            type: \"minecraft:count\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_SPRING_FEATURE_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        feature: {\n                            config: SPRING_FEATURE_CONFIG,\n                            type: \"minecraft:spring_feature\"\n                        },\n                        decorator: {\n                            config: {\n                                bottom_offset: 8,\n                                top_offset: 8,\n                                maximum: 256\n                            },\n                            type: \"minecraft:range_biased\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                },\n                decorator: {\n                    config: {},\n                    type: \"minecraft:square\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 50\n            },\n            type: \"minecraft:count\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const TREE_FEATURE_CONFIG = {\n    heightmap: \"OCEAN_FLOOR\",\n    minimum_size: {\n        limit: 1,\n        lower_size: 0,\n        upper_size: 1,\n        type: \"minecraft:two_layers_feature_size\"\n    },\n    decorators: [],\n    trunk_provider: {\n        state: {\n            Properties: {\n                axis: \"y\"\n            },\n            Name: \"minecraft:birch_log\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    leaves_provider: {\n        state: {\n            Properties: {\n                persistent: \"false\",\n                distance: \"7\"\n            },\n            Name: \"minecraft:birch_leaves\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    foliage_placer: {\n        radius: 2,\n        offset: 0,\n        height: 3,\n        type: \"minecraft:blob_foliage_placer\"\n    },\n    trunk_placer: {\n        base_height: 5,\n        height_rand_a: 2,\n        height_rand_b: 0,\n        type: \"minecraft:straight_trunk_placer\"\n    }\n};\n\nexport const RANDOM_PATCH_FEATURE_CONFIG = {\n    can_replace: false,\n    project: true,\n    need_water: false,\n    xspread: 7,\n    yspread: 3,\n    zspread: 7,\n    whitelist: [\n        {\n            Properties: {\n                snowy: \"false\"\n            },\n            Name: \"minecraft:grass_block\"\n        }\n    ],\n    blacklist: [],\n    tries: 64,\n    state_provider: {\n        state: {\n            Name: \"minecraft:pumpkin\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    block_placer: {\n        type: \"minecraft:simple_block_placer\"\n    }\n}\n\nexport const DECORATED_HUGE_FUNGUS_CONFIG = {\n    config: {\n        feature: {\n            config: HUGE_FUNGUS_FEATURE_CONFIG,\n            type: \"minecraft:huge_fungus\"\n        },\n        decorator: {\n            config: {\n                count: 8\n            },\n            type: \"minecraft:count_multilayer\"\n        }\n    },\n    type: \"minecraft:decorated\"\n}\n\nexport const DECORATED_RANDOM_PATCH_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: RANDOM_PATCH_FEATURE_CONFIG,\n                    type: \"minecraft:random_patch\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:heightmap_spread_double\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                chance: 32\n            },\n            type: \"minecraft:chance\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_TREE_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: TREE_FEATURE_CONFIG,\n                    type: \"minecraft:tree\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:heightmap\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 10,\n                extra_chance: 0.1,\n                extra_count: 1\n            },\n            type: \"minecraft:count_extra\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATOR_EXTRA_COUNT_DEFAULTS = {\n    count: 10,\n    extra_chance: 0.1,\n    extra_count: 1\n}\n\nexport const DECORATOR_DECORATED_DEFAULTS = {\n    outer: {\n        config: {},\n        type: \"minecraft:square\"\n    },\n    inner: {\n        config: {},\n        type: \"minecraft:heightmap\"\n    }\n}\n\nexport const DECORATOR_RANGE_DEFAULTS = {\n    bottom_offset: 4,\n    top_offset: 0,\n    maximum: 64\n}\n","export const VANILLA_SURFACE_BUILDERS = [\n    { value: 'badlands', label: 'Badlands' },\n    { value: 'basalt_deltas', label: 'Basalt Deltas' },\n    { value: 'crimson_forest', label: 'Crimson forest' },\n    { value: 'desert', label: 'Desert' },\n    { value: 'end', label: 'End' },\n    { value: 'eroded_badlands', label: 'Eroded Badlands' },\n    { value: 'frozen_ocean', label: 'Frozen ocean' },\n    { value: 'full_sand', label: 'Full sand' },\n    { value: 'giant_tree_taiga', label: 'Giant tree taiga' },\n    { value: 'grass', label: 'Grass' },\n    { value: 'gravelly_mountain', label: 'Gravelly mountain' },\n    { value: 'ice_spikes', label: 'Ice spikes' },\n    { value: 'mountain', label: 'Mountain' },\n    { value: 'mycelium', label: 'Mycelium' },\n    { value: 'nether', label: 'Nether' },\n    { value: 'nope', label: 'Nope' },\n    { value: 'ocean_sand', label: 'Ocean sand' },\n    { value: 'shattered_savanna', label: 'Shattered savanna' },\n    { value: 'soul_sand_valley', label: 'Soul sand valley' },\n    { value: 'stone', label: 'Stone' },\n    { value: 'swamp', label: 'Swamp' },\n    { value: 'warped_forest', label: 'Warped forest' },\n    { value: 'wooded_badlands', label: 'Wooded badlands' },\n].map(option => {\n    option.value = 'minecraft:' + option.value;\n    return option;\n});\n\nexport const SURFACE_TYPES_OPTIONS = [\n    { value: 'default', label: 'Default' },\n    { value: 'mountain', label: 'Mountain' },\n    { value: 'shattered_savanna', label: 'Shattered savanna' },\n    { value: 'gravelly_mountain', label: 'Gravelly mountain' },\n    { value: 'giant_tree_taiga', label: 'Giant tree taiga' },\n    { value: 'swamp', label: 'Swamp' },\n    { value: 'badlands', label: 'Badlands' },\n    { value: 'wooded_badlands', label: 'Wooded badlands' },\n    { value: 'eroded_badlands', label: 'Eroded badlands' },\n    { value: 'frozen_ocean', label: 'Frozen ocean' },\n    { value: 'nether', label: 'Nether' },\n    { value: 'nether_forest', label: 'Nether forest' },\n    { value: 'soul_sand_valley', label: 'Soul sand valley' },\n    { value: 'basalt_deltas', label: 'Basalt deltas' },\n    { value: 'nope', label: 'Nope' }\n].map(option => {\n    option.value = 'minecraft:' + option.value;\n    return option;\n});\n\nexport const SURFACE_BUILDER = {\n    config: {\n        top_material: {\n            Properties: {\n                snowy: \"false\"\n            },\n            Name: \"minecraft:grass_block\"\n        },\n        under_material: {\n            Name: \"minecraft:dirt\"\n        },\n        underwater_material: {\n            Name: \"minecraft:gravel\"\n        }\n    },\n    type: \"minecraft:default\"\n}","export const VANILLA_NOISES = [\n    { value: 'minecraft:overworld', label: 'Overworld' },\n    { value: 'minecraft:nether', label: 'Nether' },\n    { value: 'minecraft:end', label: 'End' },\n    { value: 'minecraft:amplified', label: 'Amplified' },\n    { value: 'minecraft:caves', label: 'Caves' },\n    { value: 'minecraft:floating_islands', label: 'Floating islands' }\n];\n\nexport const STRUCTURES = [\n    \"ocean_ruin\",\n    \"bastion_remnant\",\n    \"fortress\",\n    \"nether_fossil\",\n    \"igloo\",\n    \"shipwreck\",\n    \"swamp_hut\",\n    \"jungle_pyramid\",\n    \"village\",\n    \"ruined_portal\",\n    \"endcity\",\n    \"buried_treasure\",\n    \"mansion\",\n    \"monument\",\n    \"stronghold\",\n    \"pillager_outpost\",\n    \"desert_pyramid\",\n    \"mineshaft\"\n].map(tag => ({ value: 'minecraft:' + tag, label: tag }));;\n\nexport const OVERWORLD_NOISE = {\n    bedrock_roof_position: -10,\n    bedrock_floor_position: 0,\n    sea_level: 63,\n    disable_mob_generation: false,\n    structures: {\n        stronghold: {\n            distance: 32,\n            spread: 3,\n            count: 128\n        },\n        structures: {\n            \"minecraft:ocean_ruin\": {\n                spacing: 20,\n                separation: 8,\n                salt: 14357621\n            },\n            \"minecraft:bastion_remnant\": {\n                spacing: 27,\n                separation: 4,\n                salt: 30084232\n            },\n            \"minecraft:fortress\": {\n                spacing: 27,\n                separation: 4,\n                salt: 30084232\n            },\n            \"minecraft:nether_fossil\": {\n                spacing: 2,\n                separation: 1,\n                salt: 14357921\n            },\n            \"minecraft:igloo\": {\n                spacing: 32,\n                separation: 8,\n                salt: 14357618\n            },\n            \"minecraft:shipwreck\": {\n                spacing: 24,\n                separation: 4,\n                salt: 165745295\n            },\n            \"minecraft:swamp_hut\": {\n                spacing: 32,\n                separation: 8,\n                salt: 14357620\n            },\n            \"minecraft:jungle_pyramid\": {\n                spacing: 32,\n                separation: 8,\n                salt: 14357619\n            },\n            \"minecraft:village\": {\n                spacing: 32,\n                separation: 8,\n                salt: 10387312\n            },\n            \"minecraft:ruined_portal\": {\n                spacing: 40,\n                separation: 15,\n                salt: 34222645\n            },\n            \"minecraft:endcity\": {\n                spacing: 20,\n                separation: 11,\n                salt: 10387313\n            },\n            \"minecraft:buried_treasure\": {\n                spacing: 1,\n                separation: 0,\n                salt: 0\n            },\n            \"minecraft:mansion\": {\n                spacing: 80,\n                separation: 20,\n                salt: 10387319\n            },\n            \"minecraft:monument\": {\n                spacing: 32,\n                separation: 5,\n                salt: 10387313\n            },\n            \"minecraft:stronghold\": {\n                spacing: 1,\n                separation: 0,\n                salt: 0\n            },\n            \"minecraft:pillager_outpost\": {\n                spacing: 32,\n                separation: 8,\n                salt: 165745296\n            },\n            \"minecraft:desert_pyramid\": {\n                spacing: 32,\n                separation: 8,\n                salt: 14357617\n            },\n            \"minecraft:mineshaft\": {\n                spacing: 1,\n                separation: 0,\n                salt: 0\n            }\n        }\n    },\n    noise: {\n        height: 256,\n        sampling: {\n            xz_scale: 1,\n            y_scale: 1,\n            xz_factor: 80.0,\n            y_factor: 160.0\n        },\n        top_slide: {\n            target: -10,\n            size: 3,\n            offset: 0\n        },\n        bottom_slide: {\n            target: -30,\n            size: 0,\n            offset: 0\n        },\n        size_horizontal: 1,\n        size_vertical: 2,\n        density_factor: 1.0,\n        density_offset: -0.47,\n        simplex_surface_noise: true,\n        random_density_offset: true,\n        island_noise_override: false,\n        amplified: false\n        \n    },\n    default_block: {\n        Name: \"minecraft:stone\"\n    },\n    default_fluid: {\n        Properties: {\n            level: \"0\"\n        },\n        Name: \"minecraft:water\"\n    }\n}\n","export const DIMENSION = {\n    generator: {\n        type: \"minecraft:noise\",\n        seed: 286956243,\n        biome_source: {\n            type: \"minecraft:fixed\",\n            seed: 286956243,\n            biome: \"minecraft:plains\"\n        },\n        settings: \"minecraft:overworld\"\n    },\n    type: \"minecraft:overworld\"\n}\n\nexport const VANILLA_DIMENSION_TYPES = [\n    { value: 'minecraft:overworld', label: 'Overworld' },\n    { value: 'minecraft:overworld_cave', label: 'Overworld caves' },\n    { value: 'minecraft:the_nether', label: 'The Nether' },\n    { value: 'minecraft:the_end', label: 'The End' },\n]\n\nexport const NOISES_NAMES = [\n    'temperature_noise',\n    'humidity_noise',\n    'altitude_noise',\n    'weirdness_noise'\n];\n\nexport const MULTI_NOISE_BIOME_SOURCE = {\n    type: 'minecraft:multi_noise',\n    seed: 286956243,\n    temperature_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    humidity_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    altitude_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    weirdness_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    biomes: []\n};\n\nexport const OVERWORLD_DIMENSION_TYPE = {\n    has_raids: true,\n    logical_height: 256,\n    infiniburn: \"minecraft:infiniburn_overworld\",\n    ambient_light: 0.0,\n    piglin_safe: false,\n    bed_works: true,\n    respawn_anchor_works: false,\n    ultrawarm: false,\n    natural: true,\n    shrunk: false,\n    has_skylight: true,\n    has_ceiling: false\n}\n\nexport const THE_NETHER_DIMENSION_TYPE = {\n    has_raids: false,\n    logical_height: 128,\n    infiniburn: \"minecraft:infiniburn_nether\",\n    ambient_light: 0.1,\n    piglin_safe: true,\n    bed_works: false,\n    respawn_anchor_works: true,\n    ultrawarm: true,\n    natural: false,\n    shrunk: true,\n    fixed_time: 18000,\n    has_skylight: false,\n    has_ceiling: true\n}\n\nexport const THE_END_DIMENSION_TYPE = {\n    has_raids: true,\n    logical_height: 256,\n    infiniburn: \"minecraft:infiniburn_end\",\n    ambient_light: 0.0,\n    piglin_safe: false,\n    bed_works: false,\n    respawn_anchor_works: false,\n    ultrawarm: false,\n    natural: false,\n    shrunk: false,\n    fixed_time: 6000,\n    has_skylight: false,\n    has_ceiling: false\n}\n","import React, { useState, useEffect } from 'react';\nimport { jsonFetch } from '../utils/fetch';\nimport { VANILLA_FEATURES } from '../components/feature/FeatureDefaults';\nimport { useData } from '../hooks/context';\nimport { VANILLA_SURFACE_BUILDERS } from '../components/surface/SurfaceBuilderDefaults';\nimport { VANILLA_NOISES } from '../components/noise/NoiseDefaults';\nimport { VANILLA_DIMENSION_TYPES } from '../components/dimension/DimensionDefaults';\n\nexport const DataContext = React.createContext({\n    vanilla: {\n        biomes: [],\n        blocks: [],\n        dimensions: [],\n        dimension_types: [],\n        entities: [],\n        features: [],\n        noises: [],\n        surfaces: []\n    },\n    custom: {\n        biomes: [],\n        dimensions: [],\n        dimension_types: [],\n        features: [],\n        noises: [],\n        surfaces: [],\n        updateBiomes: (biome) => {},\n        updateDimensions: (dimension) => {},\n        updateDimensionTypes: (dimension_type) => {},\n        updateFeatures: (feature) => {},\n        updateNoises: (noise) => {},\n        updateSurfacesBuilders: (surface_builder) => {}\n    },\n    namespace: ''\n});\n\nexport function DataContextProvider({children, namespace, initial = {}}) {\n    const [biomes, setBiomes] = useState([]);\n    const [blocks, setBlocks] = useState([]);\n    const [entities, setEntities] = useState([]);\n\n    const [customBiomes, updateBiomes] = useData(initial.biomes);\n    const [dimensions, updateDimensions] = useData(initial.dimensions);\n    const [dimension_types, updateDimensionTypes] = useData(initial.dimension_types);\n    const [features, updateFeatures] = useData(initial.features);\n    const [noises, updateNoises] = useData(initial.noises);\n    const [surfaces, updateSurfacesBuilders] = useData(initial.surfaces);\n\n    useEffect(() => {\n        (async function () {\n            jsonFetch('https://unpkg.com/minecraft-data@2.63.0/minecraft-data/data/pc/1.16.1/biomes.json')\n                .then(biomes => setBiomes(biomes));\n            jsonFetch('https://unpkg.com/minecraft-data@2.63.0/minecraft-data/data/pc/1.16.1/blocks.json')\n                .then(blocks => setBlocks(blocks));\n            jsonFetch('https://unpkg.com/minecraft-data@2.63.0/minecraft-data/data/pc/1.16.1/entities.json')\n                .then(entities => setEntities(entities.map(entity => ({ value: 'minecraft:' + entity.name, label: entity.displayName }))));\n        })();\n    }, []);\n\n    return <DataContext.Provider value={{\n        vanilla: {\n            biomes,\n            blocks,\n            dimensions: VANILLA_DIMENSION_TYPES.filter(o => !o.value.includes('cave')),\n            dimension_types: VANILLA_DIMENSION_TYPES,\n            entities,\n            features: VANILLA_FEATURES,\n            noises: VANILLA_NOISES,\n            surfaces: VANILLA_SURFACE_BUILDERS\n        },\n        custom: { biomes: customBiomes, dimensions, dimension_types, features, noises, surfaces,\n            updateBiomes, updateDimensions, updateDimensionTypes, updateFeatures, updateNoises, updateSurfacesBuilders },\n        namespace\n    }}>{children}</DataContext.Provider>\n}","import { MULTI_NOISE_BIOME_SOURCE, NOISES_NAMES } from './../components/dimension/DimensionDefaults';\n\n/**\n * @param {object} a \n * @param {object} b \n * @returns {boolean}\n */\nexport function objectsEqual(a, b) {\n    return Object.keys(a).length === Object.keys(b).length\n        && Object.keys(a).every(p => a[p] === b[p]);\n}\n\n/**\n * @param {string} str \n * @returns {string}\n */\nexport function capitalize(str) {\n    return str[0].toUpperCase() + str.substr(1);\n}\n\n/**\n * @param {string} key \n * @param {string} [defaultNamespace]\n * @returns {string}\n */\nexport function displayNamespacedKey(key, defaultNamespace) {\n    return key.startsWith(defaultNamespace + ':') ? key.split(':')[1] : key;\n}\n\nexport function getStateValue(state, properties = {}) {\n    const actual = properties[state.name];\n    switch (state.type) {\n        case 'bool':\n            return actual === 'true' ? 'true' : 'false';\n        case 'int':\n            return actual || 0;\n        default:\n            return actual || state.values[0];\n    }\n}\n\nexport function hasDuplicatedObjects(objects) {\n    for (const a of objects) {\n        for (const b of objects) {\n            if (a !== b && objectsEqual(a, b)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n/**\n * @param {object} feature Unserialized feature\n * @returns {{type: string, config: object}[]} Decorators list\n */\nexport function findDecorators(feature) {\n    const decorators = [];\n\n    let f = null;\n    (function find(obj) {\n        for (const key of Object.keys(obj)) {\n            if (key === 'decorator') {\n                decorators.unshift(obj[key]);\n                if (f === null && !obj.feature.hasOwnProperty('decorator')) {\n                    f = obj.feature;\n                }\n            } else if (typeof obj[key] === 'object') {\n                find(obj[key]);\n            }\n        }\n    }(feature));\n\n    if (f === null) {\n        f = {};\n    }\n    return [decorators, f];\n}\n\n/**\n * @param {object} feature \n * @param {{type: string, config: object}[]} decorators \n * @param {string} name\n * @returns {object} Decorated feature\n */\nexport function buildDecorated(feature, decorators, name) {\n    if (decorators.length < 1) {\n        return feature;\n    }\n\n    const decorated = { type: 'minecraft:decorated', key: name };\n    let current = decorated;\n    decorators.forEach((decorator, i) => {\n        const f = i === (decorators.length - 1) ? feature : { type: 'minecraft:decorated' };\n        current.config = {\n            feature: f,\n            decorator\n        };\n        current = f;\n        if (i < 1) {\n            f.name = name;\n        }\n    });\n    return decorated;\n}\n\n/**\n * Rename object keys.\n * \n * @param {object} obj \n * @param {object} map \n * @returns {object}\n */\nfunction refitKeys(obj, map) {\n    const build = {};\n    for (const key in obj) {\n        const destKey = map[key] || key;\n\n        let value = obj[key];\n        if (typeof value === 'object') {\n            value = refitKeys(value, map);\n        }\n        build[destKey] = value;\n    }\n    return build;\n}\n\n/**\n * @param {string} group \n * @param {object} data \n * @returns {object}\n */\nexport function dataUpper(group, data) {\n    switch (group) {\n        case 'biomes':\n            // 20w30a: sky_color into effects\n            if (data.hasOwnProperty('sky_color')) {\n                data.effects.sky_color = data.sky_color;\n            }\n            return data;\n        case 'features':\n            // 20w30a: name -> type\n            const [decorators, feature] = findDecorators(data);\n            if (!feature.hasOwnProperty('type')) {\n                feature.type = feature.name;\n                delete feature.name;\n                return buildDecorated(\n                    feature,\n                    decorators.map(decorator => refitKeys(decorator, { name: 'type' })),\n                    data.key\n                );\n            }\n            return data;\n        case 'dimensions':\n            // 20w30a: multi_noise: firstOctave and amplitudes parameters\n            const source = data.generator.biome_source;\n            if (source.type === 'minecraft:multi_noise' && NOISES_NAMES.some(n => !source.hasOwnProperty(n))) {\n                data.generator.biome_source = { ...MULTI_NOISE_BIOME_SOURCE, ...source };\n            }\n            return data;\n        default:\n            // 20w30a: name -> type\n            if (data.hasOwnProperty('name') && !data.hasOwnProperty('type')) {\n                data.type = data.name;\n            }\n            return data;\n    }\n}\n","import { useState, useContext, useMemo } from \"react\";\nimport { DataContext } from \"../context/DataContext\";\nimport { displayNamespacedKey } from \"../utils/data\";\n\n/**\n * @param {object[]} initial\n * @returns {[object[], function(object): void]} \n */\nexport function useData(initial = []) {\n    const [data, setData] = useState(initial);\n    const updateData = function(object) {\n        setData(stored => {\n            const existing = stored.findIndex(({key}) => object.key === key);\n            if (existing > -1 && existing !== object.index) {\n                object.index = stored.length;\n                object.key = object.key + '2';\n                stored.push(object);\n                return stored;\n            }\n\n            if (typeof object.index === 'undefined') {\n                object.index = stored.length;\n                stored.push(object);\n            } else {\n                stored[object.index] = object;\n            }\n            return stored;\n        });\n    }\n    return [data, updateData];\n}\n\n/**\n * @param {('biomes'|'dimensions'|'dimension_types'|'features'|'noises'|'surfaces')} category Data category\n * @param {boolean} [includeCustom]\n * @param {boolean} [empty]\n * @returns {{ value: string, label: string }[]} Options list for react-select\n */\nexport function useKeyedListOptions(category, includeCustom = true, empty = false) {\n    const context = useContext(DataContext);\n    return useMemo(function() {\n        if (empty) {\n            return [];\n        }\n\n        const options = includeCustom ? context.custom[category]\n            .map(keyed => {\n                const name = displayNamespacedKey(keyed.key, context.namespace);\n                return { value: keyed.key, label: '(Custom) ' + name };\n            }) : [];\n\n        let struct = null;\n        context.vanilla[category].forEach(keyed => {\n            if (struct === null) {\n                struct = keyed.hasOwnProperty('displayName') ? 1 : (keyed.hasOwnProperty('label') ? 2 : 3);\n            }\n            switch(struct) {\n                case 1: // displayName\n                    options.push({ value: 'minecraft:' + keyed.name, label: keyed.displayName });\n                    return;\n                case 2: // already option\n                    options.push(keyed);\n                    return;\n                default:\n                    options.push({ value: 'minecraft:' + keyed, label: keyed });\n            }\n        });\n        return options;\n    }, [category, context.custom, context.namespace, context.vanilla, empty, includeCustom]);\n}","import React, { useState, useCallback, useRef, useMemo, useContext, useEffect } from 'react';\nimport { useToggle } from '../hooks/ui';\nimport Select from '../ui/Select';\nimport { useKeyedListOptions } from '../hooks/context';\nimport { DataContext } from '../context/DataContext';\nimport { Button } from '../ui/Button';\n\nexport function NamespacedKey({ example = 'daily_resource', type, value = '', onChange, expectBreakage = false, mayReplaceVanilla = false }) {\n    // To trigger form submit\n    const hidden = useRef(null);\n\n    // Final namespaced key\n    const [key, setKey] = useState(value);\n\n    const options = useKeyedListOptions(type, false, !mayReplaceVanilla);\n\n    const defaultNamespace = useContext(DataContext).namespace;\n    const [replace, toggle] = useToggle(options.some(o => key === o.value));\n\n    // Adjust value with default namespace if needed\n    const handleKeyChange = useCallback(function (e) {\n        const value = e.target.value.toLowerCase();\n        if (value.includes(':')) {\n            setKey(value);\n        } else {\n            setKey(defaultNamespace + ':' + value);\n        }\n    }, [defaultNamespace, setKey]);\n\n    const handleReplaceTargetChange = useCallback((selected) => setKey(selected.value), [setKey]);\n\n    // Fire onChange\n    useEffect(function() {\n        if (typeof onChange === 'function' && key !== value) {\n            onChange(key);\n        }\n    }, [key, onChange, value]);\n\n    // Allow form submit by pressing enter\n    const handleKeyDown = useCallback(function (e) {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            const form = hidden.current.form;\n            if (form !== null) {\n                form.dispatchEvent(new Event('submit', { cancelable: true }));\n            }\n        }\n    }, []);\n\n    // Remove the \"minecraft:\" part when changing mode\n    const handleToggle = useCallback(function (e) {\n        if (replace && key.startsWith('minecraft:')) {\n            setKey(key => defaultNamespace + ':' + key.split(':')[1]);\n        }\n        toggle(e);\n    }, [defaultNamespace, key, setKey, replace, toggle]);\n\n    // Displayed input value - trim namespace if default\n    const inputValue = useMemo(function () {\n        if (key.startsWith(defaultNamespace + ':')) {\n            return key.split(':')[1];\n        }\n        return key;\n    }, [defaultNamespace, key]);\n\n    // Hidden input value - set to empty when nothing is selected (keeps the key from text mode)\n    const hiddenInputValue = useMemo(function () {\n        if (replace && !options.some(o => o.value === key)) {\n            return '';\n        }\n        return key;\n    }, [key, options, replace]);\n\n    // Adapt select width to its content\n    const style = useMemo(function () {\n        return { width: 8 * Math.max.apply(Math, options.map(o => o.label.length)) + 60 };\n    }, [options]);\n\n    const dummyOnChange = useCallback(console.log, []);\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"key\">{replace ? 'Replace' : 'Key'}</label> :&nbsp;\n        {replace && <div className=\"inbl\" style={style}>\n            <Select options={options} value={options.find(o => key === o.value)} onChange={handleReplaceTargetChange} inputId=\"key\" />\n        </div>}\n        {!replace &&\n            <input type=\"text\" id=\"key\" required pattern=\"^([\\w.-]+:[\\w.-]+)$|^[\\w.-]+$\" placeholder={`Example: ${example}`}\n                autoCapitalize=\"none\" spellCheck=\"false\" autoComplete=\"off\" value={inputValue}\n                onChange={handleKeyChange} onKeyPress={handleKeyDown} />\n        }\n        <input type={replace ? 'text' : 'hidden'} name=\"key\" value={hiddenInputValue} onChange={dummyOnChange} ref={hidden}\n            required tabIndex=\"-1\" style={{ opacity: 0, height: 0, position: 'absolute' }} />\n        {mayReplaceVanilla && <Button cat=\"info mlm\" onClick={handleToggle}>{replace ? 'Create a new one' : 'Replace vanilla'}</Button>}\n        \n        {expectBreakage && value !== key &&\n            <p className=\"alert--warning\">Warning: changing the name of a resource may break other resources that depend on it.</p>\n        }\n        {!mayReplaceVanilla && !replace && key.startsWith('minecraft:') &&\n            <p className=\"alert--warning\">Warning: datapacks cannot currently replace vanilla {type}.</p>\n        }\n    </div>;\n}","export const EFFECTS = {\n    mood_sound: {\n        sound: \"minecraft:ambient.cave\",\n        tick_delay: 6000,\n        block_search_extent: 8,\n        offset: 2.0\n    },\n    sky_color: 7907327,\n    fog_color: 12638463,\n    water_color: 4159204,\n    water_fog_color: 329011\n}\n\nexport const FEATURES = [\n    [],\n    [\n        \"minecraft:lake_water\",\n        \"minecraft:lake_lava\"\n    ],\n    [],\n    [\n        \"minecraft:monster_room\"\n    ],\n    [],\n    [],\n    [\n        \"minecraft:ore_dirt\",\n        \"minecraft:ore_gravel\",\n        \"minecraft:ore_granite\",\n        \"minecraft:ore_diorite\",\n        \"minecraft:ore_andesite\",\n        \"minecraft:ore_coal\",\n        \"minecraft:ore_iron\",\n        \"minecraft:ore_gold\",\n        \"minecraft:ore_redstone\",\n        \"minecraft:ore_diamond\",\n        \"minecraft:ore_lapis\",\n        \"minecraft:disk_sand\",\n        \"minecraft:disk_clay\",\n        \"minecraft:disk_gravel\"\n    ],\n    [],\n    [\n        \"minecraft:patch_tall_grass_2\",\n        \"minecraft:plain_vegetation\",\n        \"minecraft:flower_plain_decorated\",\n        \"minecraft:patch_grass_plain\",\n        \"minecraft:brown_mushroom_normal\",\n        \"minecraft:red_mushroom_normal\",\n        \"minecraft:patch_sugar_cane\",\n        \"minecraft:patch_pumpkin\",\n        \"minecraft:spring_water\",\n        \"minecraft:spring_lava\"\n    ],\n    [\n        \"minecraft:freeze_top_layer\"\n    ]\n]\n\nexport const STARTS = [\n    \"minecraft:village_plains\",\n    \"minecraft:pillager_outpost\",\n    \"minecraft:mineshaft\",\n    \"minecraft:stronghold\",\n    \"minecraft:ruined_portal\"\n]\n\nconst SPAWNERS_AMBIENT = [\n    {\n        type: \"minecraft:bat\",\n        weight: 10,\n        minCount: 8,\n        maxCount: 8\n    }\n];\n\nconst SPAWNERS_CREATURE = [\n    {\n        type: \"minecraft:sheep\",\n        weight: 12,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:pig\",\n        weight: 10,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:chicken\",\n        weight: 10,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:cow\",\n        weight: 8,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:horse\",\n        weight: 5,\n        minCount: 2,\n        maxCount: 6\n    },\n    {\n        type: \"minecraft:donkey\",\n        weight: 1,\n        minCount: 1,\n        maxCount: 3\n    }\n];\n\nconst SPAWNERS_MONSTER = [\n    {\n        type: \"minecraft:spider\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:zombie\",\n        weight: 95,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:zombie_villager\",\n        weight: 5,\n        minCount: 1,\n        maxCount: 1\n    },\n    {\n        type: \"minecraft:skeleton\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:creeper\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:slime\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:enderman\",\n        weight: 10,\n        minCount: 1,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:witch\",\n        weight: 5,\n        minCount: 1,\n        maxCount: 1\n    },\n];\n\nexport const SPAWNERS_DEFAULTS = {\n    ambient: SPAWNERS_AMBIENT,\n    creature: SPAWNERS_CREATURE,\n    misc: [],\n    monster: SPAWNERS_MONSTER,\n    water_ambient: [],\n    water_creature: []\n};\n\nexport const BIOME_DEFAULTS = {\n    effects: EFFECTS,\n    carvers: {\n        air: [\n            \"minecraft:cave\",\n            \"minecraft:canyon\"\n        ]\n    },\n    starts: STARTS,\n    features: FEATURES,\n    spawners: SPAWNERS_DEFAULTS,\n    category: \"plains\",\n    precipitation: \"rain\",\n    surface_builder: \"minecraft:grass\",\n    scale: 0.05,\n    downfall: 0.4,\n    depth: 0.12,\n    temperature: 0.8,\n    spawn_costs: {}\n}\n\nexport const PARTICLES = [\n    'ambient_entity_effect',\n    'angry_villager',\n    'ash',\n    'barrier',\n    'block',\n    'bubble',\n    'bubble_column_up',\n    'bubble_pop',\n    'campfire_cosy_smoke',\n    'campfire_signal_smoke',\n    'cloud',\n    'composter',\n    'crimson_spore',\n    'crit',\n    'current_down',\n    'damage_indicator',\n    'dolphin',\n    'dragon_breath',\n    'dripping_honey',\n    'dripping_lava',\n    'dripping_obsidian_tear',\n    'dripping_water',\n    'dust',\n    'effect',\n    'elder_guardian',\n    'enchant',\n    'enchanted_hit',\n    'end_rod',\n    'entity_effect',\n    'explosion',\n    'explosion_emitter',\n    'falling_dust',\n    'falling_honey',\n    'falling_lava',\n    'falling_nectar',\n    'falling_obsidian_tear',\n    'falling_water',\n    'firework',\n    'fishing',\n    'flame',\n    'flash',\n    'happy_villager',\n    'heart',\n    'instant_effect',\n    'item',\n    'item_slime',\n    'item_snowball',\n    'landing_honey',\n    'landing_lava',\n    'landing_obsidian_tear',\n    'large_smoke',\n    'lava',\n    'mycelium',\n    'nautilus',\n    'note',\n    'poof',\n    'portal',\n    'rain',\n    'reverse_portal',\n    'smoke',\n    'sneeze',\n    'soul',\n    'soul_fire_flame',\n    'spit',\n    'splash',\n    'squid_ink',\n    'sweep_attack',\n    'totem_of_undying',\n    'underwater',\n    'warped_spore',\n    'white_ash',\n    'witch'\n].map(particle => ({ value: 'minecraft:' + particle, label: particle }));\n\nexport const PARTICLE_DEFAULTS = {\n    options: {\n        type: \"minecraft:crimson_spore\"\n    },\n    probability: 0.015\n}\n","export function hexColorToInteger(color) {\n    return parseInt(color.replace(/^#/, ''), 16);\n}\n\nexport function integerColorToHex(color) {\n    return '#' + (color & 0xFFFFFF).toString(16).padStart(6, '0');\n}","import React, { useEffect } from 'react';\nimport { hexColorToInteger, integerColorToHex } from '../utils/color';\n\nexport const ConfInput = React.memo(function ({\n    attr, type,\n    checked, defaultChecked,\n    children,\n    name, id,\n    onChange,\n    value, defaultValue,\n    min, max, step,\n    className, style = {}\n}) {\n\n    const uId = name || Math.random().toString(36).substr(2, 5) + '-' + id;\n    \n    if (typeof type !== 'string') {\n        if (typeof checked !== 'undefined' || typeof defaultChecked !== 'undefined') {\n            type = 'checkbox';\n        } else if (typeof step === 'number' || typeof max === 'number' || !isNaN(typeof value === 'undefined' ? defaultValue : value)) {\n            type = 'number';\n        } else {\n            type = 'text';\n        }\n    }\n\n    if (type === 'number') {\n        style.width = getNumberSize(parseFloat(defaultValue || value || 0), max, step);\n        className = (className || '') + ' number-wrapper';\n    }\n\n    if (type === 'checkbox') {\n        return <div className={className}>\n            <label htmlFor={uId}>{children}</label> : <input type={type || 'checkbox'} data-name={name || id} name={name} id={uId} className=\"checkbox\" {...{ ...attr, checked, defaultChecked, onChange, value, style }} />\n        </div>\n    }\n    return <div className={className}>\n        <label htmlFor={uId}>{children}</label> : <input\n            type={type} data-name={name || id} name={name} id={uId}\n            {...{ ...attr, value, onChange, defaultValue, min, max, step, style }} />\n    </div>\n});\n\nexport const NumberInput = React.memo(function ({\n    className, style, children, defaultValue = 0,\n    id, name, onChange, upChange,\n    required = true, value,\n    type, step, min = 0, max\n}) {\n\n    const handleChange = function(e) {\n        const value = e.target.value;\n\n        if (type === 'color') {\n            if (typeof upChange === 'function') {\n                upChange({ [id || name]: hexColorToInteger(value) });\n            } else if (typeof onChange === 'function') {\n                onChange(hexColorToInteger(value));\n            }\n            return;\n        }\n\n        const parse = typeof step === 'undefined' ? parseInt : parseFloat;\n        if (value !== '' && !isNaN(value)) {\n            if (typeof upChange === 'function') {\n                upChange({ [id || name]: parse(value) });\n            } else if (typeof onChange === 'function') {\n                onChange(parse(value));\n            }\n        }\n    };\n    \n    if (required && typeof value !== 'number' && defaultValue !== 0) {\n        useEffect(() => {\n            if (typeof upChange === 'function') {\n                upChange({ [id || name]: parseFloat(defaultValue) });\n            } else if (typeof onChange === 'function') {\n                onChange(parseFloat(defaultValue));\n            }\n        }, [defaultValue, id, name, onChange, upChange]);\n    }\n    value = type === 'color' ? integerColorToHex(value) : (typeof value === 'number' ? value : defaultValue);\n    return <ConfInput id={id} name={name} className={className}\n        step={step} min={min} max={max} type={type || 'number'} style={style}\n        value={value} onChange={handleChange} required={required}>\n            {children}\n    </ConfInput>\n});\n\nfunction getNumberSize(n, max = 10, step = 1) {\n    const decimals = Math.max(countDecimals(step), countDecimals(n));\n    const length = n.toFixed(decimals).toString().length;\n    const ceil = max > 9 && n < 10;\n    const smooth = step === 1 ? 7 : 5;\n    return length + smooth + (ceil ? 1 : 0) + 'ch';\n}\nfunction countDecimals(n) { \n    if ((n % 1) !== 0) \n        return n.toString().split(\".\")[1].length;  \n    return 0;\n};\n","import React, { useState, useCallback, useMemo, useEffect, useContext } from \"react\";\nimport Select from \"../../ui/Select\";\nimport { TAGS_OPTIONS } from \"../feature/FeatureDefaults\";\nimport { BlockState } from \"./BlockState\";\nimport { NumberInput } from \"../../ui/Input\";\nimport { DataContext } from \"../../context/DataContext\";\n\nexport const BlockPredicate = React.memo(function({target, onChange}) {\n    const [predicate, setPredicate] = useState(target);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:always_true', label: 'Always true' },\n            { value: 'minecraft:block_match', label: 'Block match' },\n            { value: 'minecraft:blockstate_match', label: 'Block state match' },\n            { value: 'minecraft:random_block_match', label: 'Random block match' },\n            { value: 'minecraft:random_blockstate_match', label: 'Random block state match' },\n            { value: 'minecraft:tag_match', label: 'Tag match' }\n        ];\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        setPredicate({ predicate_type: option.value });\n    }, []);\n    const handleBlockChange = useCallback(function(option) {\n        setPredicate(predicate => ({ ...predicate, block: option.value }));\n    }, []);\n    const handleBlockStateChange = useCallback(function(block_state) {\n        setPredicate(predicate => ({ ...predicate, block_state }));\n    }, []);\n    const handleTagChange = useCallback(function(option) {\n        setPredicate(predicate => ({ ...predicate, tag: option.value }));\n    }, []);\n    const handleChange = useCallback(function(content) {\n        setPredicate(predicate => ({ ...predicate, ...content }));\n    }, []);\n    useEffect(() => {\n        if (predicate !== target) {\n            onChange(predicate);\n        }\n    }, [onChange, predicate, target]);\n\n    const type = predicate.predicate_type;\n\n    return <div>\n        <label>Predicate type</label>\n        <Select options={options} value={options.find(o => o.value === predicate.predicate_type)} onChange={handleTypeChange} />\n        {type === 'minecraft:block_match' && <BlockSelect block={predicate.block} onChange={handleBlockChange} />}\n        {type === 'minecraft:blockstate_match' && <BlockState block={predicate.block_state} onChange={handleBlockStateChange} />}\n        {(type === 'minecraft:random_block_match' || type === 'minecraft:random_blockstate_match') &&\n            <RandomBlockMatch block={predicate.block} probability={predicate.probability} onChange={handleChange} type={type} />\n        }\n        {type === 'minecraft:tag_match' && <Select options={TAGS_OPTIONS} value={TAGS_OPTIONS.find(t => t.value === predicate.tag)} onChange={handleTagChange} />}\n    </div>;\n});\n\nconst RandomBlockMatch = React.memo(function({block, onChange, type, probability}) {\n    const handleBlockChange = useCallback(function(option) {\n        onChange({ block: option.value });\n    }, [onChange]);\n    const handleBlockStateChange = useCallback(function(block_state) {\n        onChange({ block_state });\n    }, [onChange]);\n\n    return <div className=\"form-group form-row\">\n        <div style={{ flexGrow: 1 }}>\n        {type === 'minecraft:random_block_match' && <BlockSelect block={block} onChange={handleBlockChange} />}\n        {type === 'minecraft:random_blockstate_match' && <BlockState block={block} onChange={handleBlockStateChange} />}\n        </div>\n        <NumberInput id=\"probability\" value={probability} defaultValue=\"0.1\"\n            step=\"0.01\" min=\"0\" max=\"1\" className=\"mlm\" upChange={onChange}>\n                Probability\n        </NumberInput>\n    </div>\n});\n\nexport const BlockSelect = React.memo(function({block, inputId, onChange, options}) {\n    const context = useContext(DataContext);\n    const blocks = useMemo(function () {\n        if (typeof options === 'undefined') {\n            return context.vanilla.blocks.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n        }\n        return options;\n    }, [context.vanilla.blocks, options]);\n    return <Select options={blocks} value={blocks.find(b => b.value === block)} onChange={onChange} inputId={inputId} />;\n});\n","import { useReducer, useState, useCallback, useEffect, useContext, useMemo } from \"react\";\nimport { useKeyedListOptions } from \"./context\";\nimport { DataContext } from \"../context/DataContext\";\nimport arrayMove from \"array-move\";\n\nfunction crudReducer(state, action) {\n    switch (action.type) {\n        case ADD:\n            if (action.unshift) {\n                return [action.payload, ...state];\n            }\n            return [...state, action.payload];\n        case UPDATE:\n            if (typeof action.target === 'number' && typeof action.payload === 'number') {\n                return arrayMove(state, action.target, action.payload);\n            }\n            if (typeof action.target === 'undefined') {\n                throw new Error('Cannot update an element without its previous state.');\n            }\n            return state.map(element => element === action.target ? action.payload : element);\n        case REMOVE:\n            return state.filter(element => element !== action.payload);\n        default:\n            return state;\n    }\n}\n\nexport function useCrud(data = []) {\n    return useReducer(crudReducer, data);\n}\n\n/**\n * @param {object[]} [data] \n * @param {object|function (object[]): object} [initial] \n * @returns {[object[], function (SyntheticEvent): void, function (number|object, number|object): void, function (SyntheticEvent, number): void}\n */\nexport function useCrudPreset(data = [], initial = {}, unshift = false) {\n    const [entities, dispatch] = useCrud(data);\n\n    const add = useCallback(function(e) {\n        e.preventDefault();\n        const n = typeof initial === 'function' ? initial(entities) : { ...initial };\n        dispatch({ type: CRUD.ADD, payload: n, unshift });\n    }, [dispatch, entities, initial, unshift]);\n    const update = useCallback(function(state, previous) {\n        if (state.hasOwnProperty('oldIndex') && state.hasOwnProperty('newIndex')) {\n            dispatch({ type: CRUD.UPDATE, target: state.oldIndex, payload: state.newIndex });\n            return;\n        }\n        dispatch({ type: CRUD.UPDATE, target: previous, payload: state });\n    }, [dispatch]);\n    const remove = useCallback(function(e, index) {\n        e.preventDefault();\n        dispatch({ type: CRUD.REMOVE, payload: entities[index] });\n    }, [dispatch, entities]);\n\n    return [entities, add, update, remove];\n}\n\nexport function useBlocksOptions(mapped = true) {\n    const blocks = useContext(DataContext).vanilla.blocks;\n    return useMemo(function() {\n        return mapped ? blocks.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName })): blocks;\n    }, [blocks, mapped]);\n}\n\n/**\n * @param {number} [initial] \n * @returns {function(SyntheticEvent|string|number): void} \n */\nexport function useNumber(initial = 0) {\n    const [n, setState] = useState(initial);\n    const setNumber = function(n) {\n        if (typeof n === 'object') {\n            n = n.target.value;\n        }\n        if (typeof n === 'string') {\n            n = isNaN(n) ? initial : parseInt(n);\n        }\n        setState(n);\n    }\n    return [n, setNumber];\n}\n\nexport function useValueChange(changeCallback, obj) {\n    return useCallback(function(e) {\n        if (e.target.type === 'checkbox') {\n            changeCallback({ ...obj, [e.target.dataset.name || e.target.id || e.target.name]: e.target.checked });\n            return;\n        }\n        const value = isNaN(e.target.value) ? e.target.value : parseFloat(e.target.value);\n        changeCallback({ ...obj, [e.target.dataset.name || e.target.id || e.target.name]: value });\n    }, [changeCallback, obj]);\n}\n\nexport function useJsonEffect(state, props, onChange) {\n    useEffect(() => {\n        if (state === props) {\n            return;\n        }\n        if (JSON.stringify(state) !== JSON.stringify(props)) {\n            onChange(state, props);\n        }\n    }, [state, props, onChange]);\n    return state;\n}\n\n/**\n * Fast way to provide a list of options for react-select\n * and store selection as string (list).\n * \n * @param {('biomes'|'dimensions'|'dimension_types'|'features'|'noises'|'surfaces')} category Data category\n * @param {string|string[]} initial Initial selection\n * @param {boolean} [multiple]\n * @returns {[{ value: string, label: string }[], string|string[], function({ value: string }): void]} Options list, currently selected list and his updater\n */\nexport function useKeyedOptionsState(category, initial, multiple) {\n    const options = useKeyedListOptions(category); // Get options\n\n    // Default value for 'multiple' argument\n    if (typeof multiple === 'undefined') {\n        multiple = Array.isArray(initial);\n    }\n\n    // Enhanced use state - usage of options for default value if needed\n    const [selection, setSelection] = useState(initial || function() {\n        if (multiple) {\n            return options.length > 0 ? [options[0].value] : [];\n        }\n        return options.length > 0 ? options[0].value : '';\n    }());\n\n    // End chain react-select change handler\n    const setSelectionFromOptions = useCallback(function(selected) {\n        if (multiple) {\n            setSelection(selected === null ? [] : selected.map(o => o.value));\n        } else {\n            setSelection(selected.value);\n        }\n    }, [multiple]);\n\n    return [options, selection, setSelectionFromOptions];\n}\n\nconst ADD = 'ADD';\nconst UPDATE = 'UPDATE';\nconst REMOVE = 'REMOVE';\nexport const CRUD = { ADD, UPDATE, REMOVE };","import React, { useCallback, useContext, useEffect, useMemo } from \"react\";\nimport Select from \"../../ui/Select\";\nimport { BlockSelect } from \"./BlockPredicate\";\nimport { DataContext } from \"../../context/DataContext\";\nimport { Button } from '../../ui/Button';\nimport { getStateValue } from \"../../utils/data\";\nimport { useCrudPreset, useBlocksOptions } from \"../../hooks/form\";\nimport { ConfInput, NumberInput } from \"../../ui/Input\";\n\nexport const BlockState = React.memo(function ({ block = {}, children, className = 'form-group', inputId, name, onChange, options }) {\n    const context = useContext(DataContext);\n\n    const handleTypeChange = useCallback(function (option) {\n        const Name = option.value;\n        const Properties = {};\n        (context.vanilla.blocks.find(b => 'minecraft:' + b.name === Name) || { states: [] }).states.forEach(state => {\n            Properties[state.name] = getStateValue(state);\n        })\n        delete block.Properties;\n        if (Object.keys(Properties).length > 0) {\n            onChange({ ...block, Name, Properties });\n        } else {\n            onChange({ ...block, Name });\n        }\n    }, [block, context.vanilla.blocks, onChange]);\n    const handlePropertiesChange = useCallback(function (properties) {\n        onChange({ ...block, Properties: { ...block.Properties, ...properties } });\n    }, [block, onChange]);\n\n    const blocks = useMemo(function () {\n        if (typeof options === 'undefined') {\n            return context.vanilla.blocks.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n        }\n        return options;\n    }, [context.vanilla.blocks, options]);\n\n    const selected = useMemo(function () {\n        return blocks.find(o => o.value === block.Name);\n    }, [blocks, block.Name]);\n\n    return <div className={className}>\n        <div className=\"form-row\">\n            <div style={{ flexGrow: 1 }}><Select options={blocks} value={selected} name={name} onChange={handleTypeChange} inputId={inputId} /></div>\n            {children}\n        </div>\n        <BlockStateProperties block={block.Name} properties={block.Properties} onChange={handlePropertiesChange} />\n    </div>;\n});\n\nexport const BlocksList = React.memo(function ({ list, onChange }) {\n    const options = useBlocksOptions();\n\n    const [blocks, handleAdd, handleChange, handleRemove] = useCrudPreset(list, function (blocks) {\n        // Get the first non taken block name\n        return { Name: (options.find(o => !blocks.some(b => b.Name === o.value)) || { value: 'minecraft:stone' }).value };\n    });\n\n    const handleStateChange = useCallback(function (state, i) {\n        handleChange(state, blocks[i]);\n    }, [blocks, handleChange]);\n\n    useEffect(() => {\n        if (blocks !== list) {\n            onChange(blocks);\n        }\n    }, [blocks, list, onChange]);\n\n    return <div className=\"form-group\">\n        {blocks.map((block, i) => {\n            const filteredOptions = options.filter(o => o.value === block.Name || !blocks.some(d => d.Name === o.value));\n            return <BlockState block={block} options={filteredOptions} key={block.Name} onChange={state => handleStateChange(state, i)}>\n                <Button cat=\"danger mlm\" onClick={(e) => handleRemove(e, i)}>Remove</Button>\n            </BlockState>\n        })}\n        <Button onClick={handleAdd}>Add block</Button>\n    </div>;\n});\n\nexport const BlocksNamesList = React.memo(function ({ list, onChange }) {\n    const options = useBlocksOptions();\n\n    const [blocks, handleAdd, handleChange, handleRemove] = useCrudPreset(list, function (blocks) {\n        // Get the first non taken block name\n        return (options.find(o => !blocks.some(b => b === o.value)) || { value: 'minecraft:stone' }).value;\n    });\n\n    useEffect(() => {\n        if (blocks !== list) {\n            onChange(blocks);\n        }\n    }, [blocks, list, onChange]);\n\n    return <div className=\"form-group\">\n        {blocks.map((block, i) => {\n            const filteredOptions = options.filter(o => o.value === block || !blocks.some(d => d === o.value));\n            return <div className=\"form-group form-row\" key={block}>\n                <div style={{ flexGrow: 1 }}><BlockSelect block={block} options={filteredOptions} onChange={o => handleChange(o.value, block)} /></div>\n                <Button cat=\"danger mlm\" onClick={(e) => handleRemove(e, i)}>Remove</Button>\n            </div>\n        })}\n        <Button cat=\"primary mts\" onClick={handleAdd}>Add block</Button>\n    </div>;\n});\n\nfunction BlockStateProperties({ block, children, onChange, properties = {} }) {\n    const states = (useContext(DataContext).vanilla.blocks.find(b => 'minecraft:' + b.name === block) || { states: [] }).states;\n\n    const handlePropertyChange = useCallback(function (option) {\n        onChange({ ...properties, [option.name]: option.value });\n    }, [onChange, properties]);\n    const handleCheckboxChange = useCallback(function (e) {\n        const value = e.target.checked.toString();\n        onChange({ ...properties, [e.target.dataset.name]: value });\n    }, [onChange, properties]);\n\n    const selects = [];\n    states.forEach(possible => {\n        switch (possible.type) {\n            case 'bool':\n                selects.push(\n                    <ConfInput key={possible.name} id={possible.name}\n                        checked={properties[possible.name] === 'true'}\n                        onChange={handleCheckboxChange}>\n                        {possible.name}\n                    </ConfInput>\n                );\n                break;\n            case 'int':\n                selects.push(\n                    <NumberInput key={possible.name} id={possible.name}\n                        value={properties[possible.name] || 0} upChange={onChange}\n                        min=\"0\" max={possible.num_values - 1}>\n                        {possible.name}\n                    </NumberInput>\n                );\n                break;\n            default:\n                const options = possible.values.map(value => ({ value, name: possible.name, label: value }));\n                const defaultValue = options.find(o => o.value === properties[possible.name]) || options[0];\n                selects.push(<div key={possible.name}>\n                    <label>{possible.name}</label> : <div className=\"inbl\">\n                        <Select options={options} value={defaultValue} onChange={handlePropertyChange} />\n                    </div>\n                </div>);\n        }\n    });\n    return <div className=\"form-group form-row\">\n        {selects}{children}\n    </div>;\n}","import React, { useState, useEffect, useCallback } from 'react';\nimport { EFFECTS, PARTICLES, PARTICLE_DEFAULTS } from './BiomeDefaults';\nimport { useToggle } from '../../hooks/ui';\nimport { NumberInput, ConfInput } from '../../ui/Input';\nimport Select from '../../ui/Select';\nimport { BlockState } from '../state/BlockState';\nimport { useJsonEffect } from '../../hooks/form';\n\nexport function BiomeEffects({effects, onChange}) {\n\n    const [colors, setColors] = useState(effects || EFFECTS);\n    const [blockColor, toggleBlockColor] = useToggle(colors.hasOwnProperty('foliage_color') || colors.hasOwnProperty('grass_color'));\n    const [particle, toggleParticle] = useToggle(colors.hasOwnProperty('particle'));\n\n    const handleColorChange = useCallback(function(color) {\n        setColors(colors => ({ ...colors, ...color }));\n    }, []);\n    const handleParticleChange = useCallback(function(particle) {\n        setColors(colors => ({ ...colors, particle }));\n    }, []);\n\n    useEffect(function () {\n        const next = { ...colors };\n        if (!blockColor) {\n            delete next.foliage_color;\n            delete next.grass_color;\n        }\n        if (!particle) {  \n            delete next.particle;\n        }\n        if (JSON.stringify(next) !== JSON.stringify(effects)){\n            onChange(next);\n        }\n    }, [blockColor, colors, effects, onChange, particle]);\n\n    return <fieldset>\n        <legend>Biome effects</legend>\n        <div className=\"form-group form-row\">\n            <NumberInput type=\"color\" id=\"sky_color\" value={colors.sky_color} upChange={handleColorChange}>Sky color</NumberInput>\n            <NumberInput type=\"color\" id=\"fog_color\" value={colors.fog_color} upChange={handleColorChange}>Fog color</NumberInput>\n            <NumberInput type=\"color\" id=\"water_color\" value={colors.water_color} upChange={handleColorChange}>Water color</NumberInput>\n            <NumberInput type=\"color\" id=\"water_fog_color\" value={colors.water_fog_color} upChange={handleColorChange}>Water fog color</NumberInput>\n            {blockColor && <>\n                <NumberInput type=\"color\" id=\"foliage_color\" value={colors.foliage_color || 10387789} upChange={handleColorChange}>Foliage color</NumberInput>\n                <NumberInput type=\"color\" id=\"grass_color\" value={colors.grass_color  || 9470285} upChange={handleColorChange}>Grass color</NumberInput>\n            </>}\n            <ConfInput id=\"block-toggle\" checked={blockColor} onChange={toggleBlockColor}>Optionals</ConfInput>\n            <ConfInput id=\"particle\" checked={particle} onChange={toggleParticle}>Particle</ConfInput>\n        </div>\n        {particle && <ParticleEffect particle={colors.particle} onChange={handleParticleChange} />}\n    </fieldset>\n}\n\nfunction ParticleEffect({onChange, particle}) {\n\n    particle = useJsonEffect(particle || PARTICLE_DEFAULTS, particle, onChange);\n    const handleTypeChange = useCallback(function(option) {\n        onChange({ ...particle, options: { type: option.value } });\n    }, [particle, onChange]);\n    const handleBlockChange = useCallback(function(block) {\n        onChange({ ...particle, options: { ...particle.options, ...block } });\n    }, [particle, onChange]);\n    const handleColorChange = useCallback(function(color) {\n        onChange({ ...particle, options: { ...particle.options, ...color } });\n    }, [particle, onChange]);\n    const handleScaleChange = useCallback(function(scale) {\n        onChange({ ...particle, options: { ...particle.options, scale } });\n    }, [particle, onChange]);\n    const handleProbabilityChange = useCallback(function(probability) {\n        onChange({ ...particle, probability });\n    }, [particle, onChange]);\n\n    const o = particle.options;\n    return <div className=\"form-group form-row\">\n        <div style={{ flexGrow: 0.95, flexShrink: 1 }}><Select options={PARTICLES} value={PARTICLES.find(op => o.type === op.value)} onChange={handleTypeChange} /></div>\n        {(o.type === 'minecraft:block' || o.type === 'minecraft:falling_dust') && <div style={{ flexGrow: 1 }}><BlockState block={o} onChange={handleBlockChange} /></div>}\n        {o.type === 'minecraft:dust' && <>\n            <DustColor r={o.r} g={o.g} b={o.b} onChange={handleColorChange} />\n            <NumberInput id=\"scale\" value={o.scale} onChange={handleScaleChange} defaultValue=\"1\" step=\"0.1\" className=\"mls\">Scale</NumberInput>\n        </>}\n        <NumberInput id=\"probability\" value={particle.probability} onChange={handleProbabilityChange} step=\"0.005\" className=\"mlm\">Probability</NumberInput>\n    </div>\n}\n\nfunction DustColor({ r, g, b, onChange }) {\n    const handleColorChange = useCallback(function(color) {\n        const r = ((color >> 16) & 0xFF) / 0xFF;\n        const g = ((color >> 8) & 0xFF) / 0xFF;\n        const b = (color & 0xFF) / 0xFF;\n        onChange({ r, g, b });\n    }, [onChange]);\n\n    let value = undefined;\n    if (typeof r === 'number' && typeof g === 'number' && typeof b === 'number') {\n        r = (r * 0xFF) & 0xFF;\n        g = (g * 0xFF) & 0xFF;\n        b = (b * 0xFF) & 0xFF;\n        value = ((r << 16) | (g << 8) | b);\n    }\n\n    return <NumberInput type=\"color\" value={value} defaultValue={0x38470} onChange={handleColorChange} className=\"mls\">Color</NumberInput>\n}","import React, { useContext, useEffect, useMemo, useCallback } from 'react';\nimport Select from '../../ui/Select';\nimport { useCrudPreset, useJsonEffect } from \"../../hooks/form\";\nimport { useToggle } from '../../hooks/ui';\nimport { Button } from '../../ui/Button';\nimport { DataContext } from '../../context/DataContext';\nimport { SPAWNERS_DEFAULTS } from './BiomeDefaults';\nimport { NumberInput } from '../../ui/Input';\n\nexport const BiomeSpawners = React.memo(function({onChange, data}) {\n\n    const spawners = useJsonEffect(data || SPAWNERS_DEFAULTS, data, onChange);\n    const entities = useContext(DataContext).vanilla.entities;\n\n    const handleChange = useCallback(function(group, groupSpawners) {\n        onChange({ ...spawners, [group]: groupSpawners });\n    }, [spawners, onChange]);\n\n    return <div>\n        <SpawnGroup group=\"ambient\" data={spawners.ambient} onChange={handleChange} entities={entities}>Ambient</SpawnGroup>\n        <SpawnGroup group=\"creature\" data={spawners.creature} onChange={handleChange} entities={entities}>Creature</SpawnGroup>\n        <SpawnGroup group=\"misc\" data={spawners.misc} onChange={handleChange} entities={entities}>Miscellaneous</SpawnGroup>\n        <SpawnGroup group=\"monster\" data={spawners.monster} onChange={handleChange} entities={entities}>Monster</SpawnGroup>\n        <SpawnGroup group=\"water_ambient\" data={spawners.water_ambient} onChange={handleChange} entities={entities}>Water ambient</SpawnGroup>\n        <SpawnGroup group=\"water_creature\" data={spawners.water_creature} onChange={handleChange} entities={entities}>Water creature</SpawnGroup>\n    </div>;\n});\n\nconst SpawnGroup = React.memo(function({children, entities, data = [], group, onChange}) {\n    const [visibility, toggle] = useToggle();\n    const text = visibility ? 'Less...' : 'More...';\n\n    const [spawners, insert, handleChange, handleRemove] = useCrudPreset(data, function(spawners) {\n        // Get the first non taken entity\n        return { type: (entities.filter(o => !spawners.some(s => s.type === o.value))[0] || { value: 'minecraft:cow' }).value, minCount: 1, maxCount: 1, weight: 1 };\n    }, true);\n\n    const handleAdd = useCallback(function(e) {\n        insert(e);\n        if (!visibility) {\n            toggle();\n        }\n    }, [insert, toggle, visibility]);\n\n    useEffect(function() {\n        if (spawners !== data) {\n            onChange(group, spawners);\n        }\n    }, [data, group, onChange, spawners]);\n\n    if (visibility) {\n        return <div>\n            <div className=\"toggle-label\">\n                {children}\n                <div className=\"btn-group\">\n                    {entities.length > spawners.length && <Button onClick={handleAdd}>Add</Button>}\n                    {spawners.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{text}</Button>} \n                </div>\n            </div>\n            {spawners.map((spawner, index) => {\n                const options = entities.filter(o => spawner.type === o.value || !spawners.some(s => s.type === o.value));\n                return <SpawnDefinition data={spawner} key={spawner.type} onChange={handleChange} onDelete={handleRemove} index={index} options={options} />;\n            })}\n        </div>;\n    }\n    \n    return <div className=\"toggle-label\">\n        {children}\n        <div className=\"btn-group\">\n            {spawners.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{text}</Button>}\n            {(spawners.length < 1) && <Button onClick={handleAdd}>Add</Button>}\n        </div>\n    </div>;\n});\n\nconst SpawnDefinition = React.memo(function({data, index, options, onChange, onDelete}) {\n\n    const handleTypeChange = useCallback(function(option) {\n        onChange({ ...data, type: option.value }, data);\n    }, [data, onChange]);\n    const handleValueChange = useCallback(function(value) {\n        onChange({ ...data, ...value }, data);\n    }, [data, onChange]);\n    const handleCountChange = function(count) {\n        const name = Object.keys(count)[0];\n        const value = count[name];\n        if ((name === 'minCount' && value <= data.maxCount)\n            || (name === 'maxCount' && value >= data.minCount)) {\n                onChange({ ...data, [name]: value }, data);\n        } \n    };\n    const handleDelete = useCallback(function(e) {\n        onDelete(e, index);\n    }, [index, onDelete]);\n\n    const selectedOption = useMemo(function() {\n        return options.find(o => o.value === data.type);\n    }, [data.type, options]);\n\n    return <div>\n        <div className=\"form-group\">\n            <label>Mob type</label> : <Select options={options} value={selectedOption} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"weight\" value={data.weight} upChange={handleValueChange}>Weight</NumberInput>\n            <NumberInput id=\"minCount\" value={data.minCount} upChange={handleCountChange}>Min count</NumberInput>\n            <NumberInput id=\"maxCount\" value={data.maxCount} upChange={handleCountChange}>Max count</NumberInput>\n            <div className=\"form-inline\"><Button cat=\"danger\" onClick={handleDelete}>Delete</Button></div>\n        </div>\n        <hr /> \n    </div>\n});\n","import React, { useCallback, useMemo } from 'react';\nimport Select from '../../ui/Select';\nimport { STARTS } from './BiomeDefaults';\nimport { useJsonEffect } from '../../hooks/form';\n\nexport const BiomeStarts = React.memo(function({onChange, starts}) {\n    starts = useJsonEffect(starts || STARTS, starts, onChange);\n\n    const handleChange = useCallback(function(selectedOptions) {\n        onChange(selectedOptions === null ? [] : selectedOptions.map(option => option.value));\n    }, [onChange]);\n\n    const options = useMemo(function() {\n        return [\n            \"pillager_outpost\",\n            \"mineshaft\",\n            \"mineshaft_mesa\",\n            \"mansion\",\n            \"jungle_pyramid\",\n            \"desert_pyramid\",\n            \"igloo\",\n            \"shipwreck\",\n            \"shipwreck_beached\",\n            \"swamp_hut\",\n            \"stronghold\",\n            \"monument\",\n            \"ocean_ruin_cold\",\n            \"ocean_ruin_warm\",\n            \"fortress\",\n            \"nether_fossil\",\n            \"end_city\",\n            \"buried_treasure\",\n            \"bastion_remnant\",\n            \"village_plains\",\n            \"village_desert\",\n            \"village_savanna\",\n            \"village_snovy\",\n            \"village_taiga\",\n            \"ruined_portal\",\n            \"ruined_portal_desert\",\n            \"ruined_portal_jungle\",\n            \"ruined_portal_swamp\",\n            \"ruined_portal_mountain\",\n            \"ruined_portal_ocean\",\n            \"ruined_portal_nether\"\n        ].map(option => ({ value: 'minecraft:' + option, label: 'minecraft:' + option }));\n    }, []);\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"starts\">Structures</label>\n        <Select isMulti id=\"starts\" options={options} onChange={handleChange} defaultValue={options.filter(o => starts.includes(o.value))} />\n    </div>;\n});\n","import React, { useCallback, useState, useEffect } from 'react';\nimport Select from '../../ui/Select';\nimport { FEATURES } from './BiomeDefaults';\nimport { useKeyedListOptions } from '../../hooks/context';\n\nexport const GenFeatures = React.memo(function({ onChange, features }) {\n\n    const [levels, setLevels] = useState(features || FEATURES);\n\n    const handleLevelChange = useCallback(function(priority, list) {\n        setLevels(levels => {\n            levels[priority] = list;\n            return levels;\n        })\n        onChange(levels);\n    }, [levels, onChange]);\n\n    useEffect(function() {\n        if (levels !== features) {\n            onChange(levels);\n        }\n    }, [features, levels, onChange]);\n\n    const elements = [];\n    levels.forEach((level, i) => {\n        elements.push(<li key={i}><GenFeaturesLevel value={level} onChange={handleLevelChange} priority={i} /></li>);\n    });\n    return <div className=\"form-group\">\n        <label>Features</label>\n        <p className=\"help\"><small className=\"text-muted\">Each generation feature is associated with a priority. The higher the priority, the later the feature will be applied.</small></p>\n        <ol>{elements}</ol>\n    </div>;\n});\n\nexport const GenFeaturesLevel = React.memo(function({ onChange, priority, value }) {\n    const options = useKeyedListOptions('features');\n\n    const handleChange = useCallback(function(selectedOptions) {\n        onChange(priority, selectedOptions === null ? [] : selectedOptions.map(option => option.value));\n    }, [onChange, priority]);\n\n    return <Select isMulti options={options} onChange={handleChange} defaultValue={options.filter(o => value.includes(o.value))} />;\n});\n","import React, { useCallback, useState } from 'react';\nimport Select from '../../ui/Select';\nimport { Button } from '../../ui/Button';\nimport { NamespacedKey } from '../NamespacedKey';\nimport { BiomeEffects } from './BiomeEffects';\nimport { BiomeSpawners } from './BiomeSpawners';\nimport { BiomeStarts } from './BiomeStarts';\nimport { GenFeatures } from './Features';\nimport { useKeyedListOptions } from '../../hooks/context';\nimport { ConfInput } from '../../ui/Input';\nimport { BIOME_DEFAULTS } from './BiomeDefaults';\n\nexport function Biome({data = BIOME_DEFAULTS, onSave}) {\n\n    const [state, setState] = useState(data);\n\n    const handleStartsChange = useCallback(function(starts) {\n        setState(state => ({ ...state, starts }));\n    }, []);\n    const handleEffectsChange = useCallback(function(effects) {\n        setState(state => ({ ...state, effects }));\n    }, []);\n    const handleFeaturesChange = useCallback(function(features) {\n        setState(state => ({ ...state, features }));\n    }, []);\n    const handleSpawnersChange = useCallback(function(spawners) {\n        setState(state => ({ ...state, spawners }));\n    }, []);\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        const formData = Object.fromEntries(new FormData(e.target));\n        const data = { ...state, ...formData };\n        data.spawn_costs = {};\n        Object.keys(formData).forEach(function(key) {\n            if (!isNaN(formData[key])) {\n                data[key] = parseFloat(formData[key]);\n            }\n        });\n        onSave(data);\n    }, [onSave, state]);\n\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit biome</h3>\n        <NamespacedKey example=\"arctic\" type=\"biomes\" value={state.key} expectBreakage={typeof data.key !== 'undefined'} />\n\n        <BiomeEffects effects={state.effects} onChange={handleEffectsChange} />\n\n        <fieldset>\n            <BiomeCategory category={state.category} />\n            <BiomePrecipitation value={state.precipitation} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Generation</legend>\n            <SurfaceBuilder value={state.surface_builder} />\n            <BiomeStarts onChange={handleStartsChange} starts={state.starts} />\n            <GenFeatures features={state.features} onChange={handleFeaturesChange} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Creatures</legend>\n            <BiomeSpawners data={state.spawners} onChange={handleSpawnersChange} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Settings</legend>\n            <div className=\"form-group form-row\">\n                <ConfInput name=\"scale\" defaultValue={data.scale || 0.05} step={0.05}>Scale</ConfInput>\n                <ConfInput name=\"downfall\" defaultValue={data.downfall || 0.4} step={0.1}>Downfall</ConfInput>\n                <ConfInput name=\"depth\" defaultValue={data.depth || 0.12} step={0.01}>Depth</ConfInput>\n                <ConfInput name=\"temperature\" defaultValue={data.temperature || 0.8} step={0.1}>Temperature</ConfInput>\n                <p className=\"mts\"><small className=\"text-muted\">The <em>scale</em> parameter defines terrain amplitude, <em>downfall</em> controls grass and foliage color, <em>depth</em> is the difference from sea level, <em>temperature</em> controls some gameplay features like whether snow golems take damage. The default values are those of the plains biome.</small></p>\n            </div>\n        </fieldset>\n        <Button type=\"submit\">Save</Button>\n    </form>;\n}\n\nconst BiomeCategory = React.memo(function({category = 'plains'}) {\n\n    const options = [\n        { value: 'beach', label: 'Beach' },\n        { value: 'desert', label: 'Desert' },\n        { value: 'extreme_hills', label: 'Extreme hills' },\n        { value: 'forest', label: 'Forest' },\n        { value: 'icy', label: 'Icy' },\n        { value: 'jungle', label: 'Jungle' },\n        { value: 'mesa', label: 'Mesa' },\n        { value: 'nether', label: 'Nether' },\n        { value: 'none', label: 'None' },\n        { value: 'ocean', label: 'Ocean' },\n        { value: 'plains', label: 'Plains' },\n        { value: 'river', label: 'River' },\n        { value: 'savanna', label: 'Savanna' },\n        { value: 'swamp', label: 'Swamp' },\n        { value: 'taiga', label: 'Taiga' },\n        { value: 'the_end', label: 'The end' },\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"category\">Category</label>\n        <Select options={options} defaultValue={options.find(o => o.value === category)} name=\"category\" />\n    </div>;\n});\n\nconst BiomePrecipitation = React.memo(function({value = 'rain'}) {\n\n    const options = [\n        { value: 'none', label: 'None' },\n        { value: 'rain', label: 'Rain' },\n        { value: 'snow', label: 'Snow' }\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"precipitation\">Precipitation</label>\n        <Select options={options} defaultValue={options.find(o => o.value === value)} name=\"precipitation\" />\n    </div>;\n});\n\nconst SurfaceBuilder = React.memo(function({value = 'minecraft:grass'}) {\n    const options = useKeyedListOptions('surfaces');\n    return <div className=\"form-group\">\n        <label htmlFor=\"surface_builder\">Surface builder</label>\n        <Select options={options} defaultValue={options.find(o => o.value === value)} name=\"surface_builder\" />\n    </div>;\n});\n","import React from 'react';\n\nexport const Toggle = ({ ariaLabel, checked, id, onChange }) => (\n    <span className=\"toggle-control\">\n        <input\n            aria-label={ariaLabel}\n            className=\"dmcheck\"\n            type=\"checkbox\"\n            checked={checked}\n            onChange={onChange}\n            id={id}\n        />\n        <label htmlFor={id} />\n    </span>\n);\n","import React from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport { Toggle } from './Toggle';\n\nexport function DarkModeToggle() {\n    const darkMode = useDarkMode(true);\n\n    return <div className=\"dark-mode-toggle\" title=\"Dark mode toggle\">\n        <button type=\"button\" onClick={darkMode.disable} tabIndex=\"-1\">☀</button>\n        <Toggle ariaLabel=\"Dark mode toggle\" checked={darkMode.value} onChange={darkMode.toggle} />\n        <button type=\"button\" onClick={darkMode.enable} tabIndex=\"-1\">☾</button>\n    </div>\n}","import React from 'react';\nimport { DarkModeToggle } from './DarkModeToggle';\n\nexport function MenuItem({active, children, onClick}) {\n    return <li><a href=\"#_\" role=\"menuitem\" aria-current={active} onClick={onClick}>{children}</a></li>\n}\n\nexport function NavBar({ children }) {\n    return <div className=\"navbar\">\n        {children}\n        <p className=\"github\"><a href=\"https://github.com/syldium/worldgen\" target=\"_blank\" rel=\"noopener noreferrer\">View on GitHub</a></p>\n        <DarkModeToggle />\n    </div>\n}\n","import React from 'react';\nimport Select from '../../ui/Select';\nimport { useKeyedListOptions } from '../../hooks/context';\n\nexport function DimensionType({type = 'minecraft:overworld'}) {\n    const options = useKeyedListOptions('dimension_types');\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"dimension-type\">Dimension type</label>\n        <Select name=\"dimension-type\" inputId=\"dimension-type\" options={options} defaultValue={options.find(o => o.value === type) || options[0]} />\n    </div>;\n}\n","import React from 'react';\n\nexport const NumberList = React.memo(function ({ numbers = [], onChange }) {\n\n    const handleChange = function(val, pos) {\n        onChange(numbers.map((n, i) => i === pos ? val : n));\n    };\n\n    return <div className=\"flex-container\">\n        {numbers.map((n, i) => <NumberInput key={i} number={n} onChange={(n) => handleChange(n, i)} />)}\n    </div>\n});\n\nconst NumberInput = React.memo(function ({ number, onChange }) {\n    return <input type=\"number\" value={number} onChange={e => onChange(parseInt(e.target.value))} />\n});","import React, { useState, useCallback, useContext, useEffect } from 'react';\nimport Select from '../../ui/Select';\nimport { SeedField } from './DimensionGenerator';\nimport { useKeyedListOptions } from '../../hooks/context';\nimport { useMemo } from 'react';\nimport { useCrud, CRUD, useNumber, useKeyedOptionsState } from '../../hooks/form';\nimport { useToggle } from '../../hooks/ui';\nimport { DataContext } from '../../context/DataContext';\nimport { Button } from '../../ui/Button';\nimport { capitalize, hasDuplicatedObjects } from '../../utils/data';\nimport { NumberList } from '../../ui/NumberList';\nimport { MULTI_NOISE_BIOME_SOURCE, NOISES_NAMES } from './DimensionDefaults';\n\nexport function BiomeSource({biome_source = { type: 'minecraft:fixed' }, onChange}) {\n    const [source, setSource] = useState(biome_source);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:checkerboard', label: 'Checkerboard' },\n            { value: 'minecraft:fixed', label: 'Fixed' },\n            { value: 'minecraft:multi_noise', label: 'Multi noise' },\n        ];\n    }, []);\n\n    const handleSeedChange = useCallback(function(seed) {\n        setSource(source => ({ ...source, seed }));\n    }, []);\n    const handleTypeChange = useCallback(function(option) {\n        setSource(source => ({ type: option.value, seed: source.seed }));\n    }, []);\n    const handleCheckerboardSourceChange = useCallback(function(settings) {\n        setSource(source => ({ ...source, ...settings }));\n    }, []);\n    const handleFixedSourceChange = useCallback(function(biome) {\n        setSource(source => ({ ...source, biome }));\n    }, []);\n    const handleMultiSourceChange = useCallback(function(s) {\n        setSource(source => ({ ...source, ...s }));\n    }, []);\n\n    useEffect(() => onChange(source), [onChange, source]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === source.type);\n    }, [options, source.type]);\n\n    return <fieldset>\n        <legend>Biome source</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"biome-source-type\">Type</label><Select inputId=\"biome-source-type\" options={options} value={selected} onChange={handleTypeChange} />\n        </div>\n        <SeedField value={source.seed} onChange={handleSeedChange} />\n        <hr />\n        {source.type === 'minecraft:checkerboard' && <CheckerboardBiomeSource source={source} onChange={handleCheckerboardSourceChange} />}\n        {source.type === 'minecraft:fixed' && <FixedBiomeSource source={source.biome} onChange={handleFixedSourceChange} />}\n        {source.type === 'minecraft:multi_noise' && <MultiNoiseBiomeSource source={source} onChange={handleMultiSourceChange} />}\n    </fieldset>\n}\n\nconst CheckerboardBiomeSource = React.memo(function({source, onChange}) {\n    const [options, biomes, setBiomes] = useKeyedOptionsState('biomes', source.biomes, true);\n    const [scale, setScale] = useNumber(source.scale);\n\n    useEffect(() => onChange({ biomes, scale }), [biomes, onChange, scale]);\n\n    return <div className=\"form-group\">\n        <div className=\"form-group\">\n            <label htmlFor=\"biomes\">Biomes</label><Select options={options} isMulti isClearable={false} value={options.filter(o => biomes.includes(o.value))} onChange={setBiomes} id=\"biomes\" />\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"scale\">Scale (squares of 2<sup>scale</sup> chunks) : </label><input type=\"number\" id=\"scale\" value={scale} onChange={setScale} min=\"0\" />\n        </div>\n        {biomes.length < 1 && <p className=\"alert--warning\">Warning: a dimension must contain at least one biome!</p>}\n    </div>;\n});\n\nconst FixedBiomeSource = React.memo(function({source = 'minecraft:plains', onChange}) {\n    const [options, biome, setBiome] = useKeyedOptionsState('biomes', source);\n    useEffect(() => onChange(biome), [biome, onChange]);\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"fixed-biome\">Biome</label><Select options={options} value={options.find(o => o.value === biome)} onChange={setBiome} />\n    </div>;\n});\n\nconst MultiNoiseBiomeSource = React.memo(function({source = MULTI_NOISE_BIOME_SOURCE, onChange}) {\n    const options = useKeyedListOptions('biomes');\n    const [biomes, dispatch] = useCrud(source.biomes);\n\n    const [advanced, toggleAdvanced] = useToggle();\n    const handleNoiseChange = useCallback(function(type, noise) {\n        onChange(({ ...source, [type]: noise }));\n    }, [source, onChange]);\n\n    const handleAddClick = useCallback(function(e) {\n        e.preventDefault();\n        dispatch({ type: CRUD.ADD, payload: { biome: 'minecraft:plains', parameters: {\n            altitude: 0,\n            weirdness: 0,\n            offset: 0,\n            temperature: 0.8,\n            humidity: 0.4\n        } } });\n    }, [dispatch]);\n    const handleChange = useCallback(function(state, previous) {\n        dispatch({ type: CRUD.UPDATE, target: previous, payload: state });\n    }, [dispatch]);\n    const handleDeleteClick = useCallback(function(e, index) {\n        e.preventDefault();\n        dispatch({ type: CRUD.REMOVE, payload: biomes[index] });\n    }, [biomes, dispatch]);\n\n    const vanilla = useContext(DataContext).vanilla.biomes;\n    const custom = useContext(DataContext).custom.biomes;\n    const namespace = useContext(DataContext).namespace;\n    useEffect(function() {\n        for (const noise of NOISES_NAMES) {\n            if (typeof source[noise] === 'undefined') {\n                onChange({ ...MULTI_NOISE_BIOME_SOURCE, ...source, biomes });\n                return;\n            }\n        }\n        if (biomes !== source.biomes) {\n            onChange({ ...source, biomes });\n        }\n    }, [biomes, onChange, source]);\n\n    const values = [];\n    biomes.forEach((entry, i) => {\n        const key = i;\n        values.push(<BiomeSelection namespace={namespace} vanilla={vanilla} custom={custom} biomesOptions={options} entry={entry} key={key} onChange={handleChange}><Button cat=\"danger\" onClick={(e) => handleDeleteClick(e, i)}>Delete</Button></BiomeSelection>);\n    });\n    return <>\n        <div className=\"flex-container\" style={{ alignItems: 'baseline' }}>\n            <h5>Biomes list</h5>\n            <Button onClick={handleAddClick} cat=\"primary mlm\">Add biome</Button>\n            <Button onClick={toggleAdvanced} cat=\"secondary\">Advanced</Button>\n        </div>\n        {advanced && <div className=\"grid-2-small-1 has-gutter mbm\">\n            {NOISES_NAMES\n                .map(noise => <PerlinNoiseParameters\n                    key={noise}\n                    noise={source[noise] || MULTI_NOISE_BIOME_SOURCE[noise]}\n                    onChange={(n) => handleNoiseChange(noise, n)}>{capitalize(noise.replace('_', ' '))}</PerlinNoiseParameters>)}\n        </div>}\n        {values}\n        {hasDuplicatedObjects(biomes.map(biome => biome.parameters)) && <p className=\"alert--warning\">Warning: every biome must have a unique combination of parameters!</p>}\n    </>;\n});\n\nconst PerlinNoiseParameters = React.memo(function({children, noise = { firstOctave: -7, amplitudes: [1, 1] }, onChange}) {\n\n    const handleFirstOctaveChange = useCallback(function(e) {\n        onChange({ ...noise, firstOctave: parseInt(e.target.value) });\n    }, [noise, onChange]);\n    const handleAmplitudesChange = useCallback(function(amplitudes) {\n        onChange({ ...noise, amplitudes });\n    }, [noise, onChange]);\n\n    return <fieldset>\n        <legend>{children}</legend>\n        <div className=\"form-group form-row\">\n            <div><label>First octave</label> : <input type=\"number\" name=\"firstOctave\" defaultValue={noise.firstOctave} onChange={handleFirstOctaveChange} /></div>\n            <div className=\"form-row\"><div><label>Amplitudes</label> : </div><NumberList numbers={noise.amplitudes} onChange={handleAmplitudesChange} /></div>\n        </div>\n    </fieldset>;\n});\n\nconst BiomeSelection = React.memo(function({namespace, vanilla, custom, biomesOptions, entry, onChange, children}) {\n    const [selection, setSelection] = useState(entry);\n\n    const handleBiomeChange = useCallback(function(option) {\n        const biome = option.value;\n        const data = (vanilla.find(b => 'minecraft:' + b.name === biome) || custom.find(b => namespace + ':' + b.key === biome) || { rainfall: 0, temperature: 0 });\n        setSelection(selection => {\n            const parameters = {\n                altitude: selection.parameters.altitude || 0,\n                weirdness: selection.parameters.weirdness || 0,\n                offset: selection.parameters.offset || 0,\n                temperature: data.temperature || 0.8,\n                humidity: data.rainfall || 0.4\n            };\n            return { biome, parameters };\n        });\n    }, [custom, namespace, vanilla]);\n\n    const handleParameterChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = e.target.value;\n        setSelection(selection => {\n            const parameters = { ...selection.parameters, [name]: parseFloat(value) };\n            return { biome: selection.biome, parameters };\n        });\n    }, []);\n\n    useEffect(() => onChange(selection, entry), [entry, onChange, selection]);\n\n    const selected = useMemo(function() {\n        return biomesOptions.find(o => o.value === selection.biome);\n    }, [biomesOptions, selection.biome]);\n    return <div className=\"form-group\">\n        <Select options={biomesOptions} value={selected} onChange={handleBiomeChange} />\n        <div className=\"form-group form-row\">\n            <div><label>Altitude</label> : <input type=\"number\" id=\"altitude\" value={selection.parameters.altitude} onChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\" /></div>\n            <div><label>Weirdness</label> : <input type=\"number\" id=\"weirdness\" value={selection.parameters.weirdness} onChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\" /></div>\n            <div><label>Offset</label> : <input type=\"number\" id=\"offset\" value={selection.parameters.offset} onChange={handleParameterChange} step=\"0.1\" min=\"0\" max=\"1\"  /></div>\n            <div><label>Temperature</label> : <input type=\"number\" id=\"temperature\" value={selection.parameters.temperature} onChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\" /></div>\n            <div><label>Humidity</label> : <input type=\"number\" id=\"humidity\" value={selection.parameters.humidity} onChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\" /></div>\n            {children}\n        </div>\n    </div>\n});\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { BiomeSource } from './BiomeSource';\nimport { hashCode } from './../../utils/hash';\nimport Select from '../../ui/Select';\nimport { useKeyedListOptions } from '../../hooks/context';\nimport { ConfInput } from '../../ui/Input';\n\nexport function DimensionGenerator({generator, onChange}) {\n    \n    const [data, setData] = useState(generator);\n\n    const handleSeedChange = useCallback(function(seed) {\n        setData(data => {\n            data.seed = seed;\n            return data;\n        });\n        onChange(data);\n    }, [data, onChange]);\n\n    const handleSettingsChange = useCallback(function(settings) {\n        setData(data => {\n            data.settings = settings;\n            return data;\n        });\n        onChange(data);\n    }, [data, onChange]);\n\n    const handleBiomeSourceChange = useCallback(function(biome_source) {\n        setData(data => {\n            data.biome_source = biome_source;\n            return data;\n        });\n        onChange(data);\n    }, [data, onChange]);\n\n    useEffect(function () {\n        if (data !== generator) {\n            onChange(data);\n        }\n    }, [data, generator, onChange]);\n\n    return <fieldset>\n        <legend>Noise dimension generator</legend>\n        <div className=\"form-group\">\n            <SeedField value={data.seed} onChange={handleSeedChange} />\n            <Settings settings={data.settings} onChange={handleSettingsChange} />\n            <BiomeSource biome_source={data.biome_source} onChange={handleBiomeSourceChange} />\n        </div>\n    </fieldset>;\n}\n\nexport const SeedField = React.memo(function({onChange, value = 286956243}) {\n    const [text, setText] = useState(value);\n\n    const handleChange = function(e) {\n        const value = e.target.value;\n        setText(value);\n        onChange(isNaN(value) ? hashCode(value) : parseInt(value));\n    };\n\n    return <div className=\"form-group\">\n        <ConfInput type=\"text\" id=\"seed\" value={text} onChange={handleChange}>Seed</ConfInput>\n    </div>\n});\n\nconst Settings = React.memo(function({onChange, settings = 'minecraft:overworld'}) {\n    const handleChange = useCallback(function(option) {\n        onChange(option.value);\n    }, [onChange]);\n\n    const options = useKeyedListOptions('noises');\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"settings\">Noise settings</label><Select options={options} value={options.find(o => o.value === settings)} onChange={handleChange} inputId=\"settings\" />\n    </div>;\n});","export function hashCode(s) {\n    let hash;\n    for (let i = 0; i < s.length; i++) { \n        hash = Math.imul(31, hash) + s.charCodeAt(i) | 0;\n    }\n    return hash;\n}","import React, { useCallback, useState } from 'react';\nimport { DimensionType } from './DimensionType';\nimport { DimensionGenerator } from './DimensionGenerator';\nimport { Button } from '../../ui/Button';\nimport { DIMENSION } from './DimensionDefaults';\nimport { NamespacedKey } from '../NamespacedKey';\n\nexport function Dimension({data = DIMENSION, onSave}) {\n\n    const [state, setState] = useState(data);\n\n    const handleGeneratorChange = useCallback(function(generator) {\n        setState(s => {\n            s.generator = generator;\n            return s;\n        });\n    }, []);\n\n    const handleSubmit = function (e) {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        const data = {...state};\n        data.key = formData.get('key');\n        data.type = formData.get('dimension-type');\n        onSave(data);\n    }\n\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit dimension</h3>\n        <NamespacedKey example=\"blue_dimension\" type=\"dimensions\" value={data.key} mayReplaceVanilla={true} />\n        <DimensionType type={state.type} />\n        <fieldset>\n            <legend>Generator configuration</legend>\n            <DimensionGenerator generator={state.generator} onChange={handleGeneratorChange} />\n        </fieldset>\n        <Button type=\"submit\">Save</Button>\n    </form>\n}","import React, { useState, useCallback, useMemo } from \"react\";\nimport Select from \"../../ui/Select\";\nimport { Button } from '../../ui/Button';\nimport { NumberInput } from '../../ui/Input';\nimport { useEffect } from \"react\";\nimport { useJsonEffect, useCrudPreset, useBlocksOptions } from \"../../hooks/form\";\nimport { BlockState } from \"./BlockState\";\n\nexport const BlockStateProvider = React.memo(function({block = { type: 'minecraft:simple_state_provider' }, onChange}) {\n    const [provider, setProvider] = useState(block);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:forest_flower_provider', label: 'Forest flower provider' },\n            { value: 'minecraft:plain_flower_provider', label: 'Plain flower provider' },\n            { value: 'minecraft:simple_state_provider', label: 'Simple state provider' },\n            { value: 'minecraft:rotated_block_provider', label: 'Rotated block provider' },\n            { value: 'minecraft:weighted_state_provider', label: 'Weighted state provider' }\n        ];\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        const similarities = ['minecraft:simple_state_provider', 'minecraft:rotated_block_provider'];\n        if (similarities.includes(provider.type) && similarities.includes(option.value)) {\n            setProvider({ ...provider, type: option.value });\n        } else {\n            setProvider({ type: option.value });\n        }\n    }, [provider]);\n\n    const handleSimpleStateChange = useCallback(function(state) {\n        setProvider(provider => ({ ...provider, state }));\n    }, []);\n\n    const handleWeighestStateChange = useCallback(function(entries) {\n        setProvider(provider => ({ ...provider, entries }));\n    }, []);\n\n    useJsonEffect(provider, block, onChange);\n\n    const blocks = useBlocksOptions(false);\n    const filteredBlocks = useMemo(function () {\n        const filtered = provider.type === 'minecraft:rotated_block_provider' ?\n            blocks.filter(b => b.states.some(state => state.name === 'axis')) : blocks;\n        return filtered.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n    }, [blocks, provider.type]);\n\n    return <div>\n        <label>Provider type</label>\n        <Select options={options} value={options.find(o => o.value === provider.type)} onChange={handleTypeChange} />\n        {(provider.type === 'minecraft:simple_state_provider' || provider.type === 'minecraft:rotated_block_provider') && <BlockState block={provider.state} options={filteredBlocks} onChange={handleSimpleStateChange} />}\n        {provider.type === 'minecraft:weighted_state_provider' && <WeightedStateProvider entries={provider.entries} onChange={handleWeighestStateChange} />}\n    </div>\n});\n\n\nconst WeightedStateProvider = React.memo(function({entries = [], onChange}) {\n    const options = useBlocksOptions();\n\n    const [blocks, handleAdd, handleChange, handleRemove] = useCrudPreset(entries, function(blocks) {\n        // Get the first non taken block name\n        return { data: { Name: (options.find(o => !blocks.some(b => b.data.Name === o.value)) || { value: 'minecraft:stone' }).value } };\n    });\n\n    const handleStateChange = useCallback(function(state, i) {\n        handleChange({ ...blocks[i], data: state }, blocks[i]);\n    }, [blocks, handleChange]);\n    const handleWeightChange = useCallback(function(weight, i) {\n        if (weight === 1) {\n            handleChange({ data: blocks[i].data }, blocks[i]);\n        } else {\n            handleChange({ weight, data: blocks[i].data }, blocks[i]);\n        }\n    }, [blocks, handleChange]);\n\n    useEffect(() => {\n        if (blocks !== entries) {\n            onChange(blocks);\n        }\n    }, [blocks, entries, onChange]);\n\n    return <div className=\"form-group\">\n        {blocks.map((block, i) => {\n            const filteredOptions = options.filter(o => o.value === block.data.Name || !blocks.some(d => d.data.Name === o.value));\n            return <BlockState block={block.data} options={filteredOptions} key={block.data.Name} onChange={state => handleStateChange(state, i)}>\n                <NumberInput id=\"weight\" value={block.weight || 1} min=\"1\" onChange={weight => handleWeightChange(weight, i)} className=\"mlm\">Weight</NumberInput>\n                <Button cat=\"danger mlm\" onClick={(e) => handleRemove(e, i)}>Remove</Button>\n            </BlockState>\n        })}\n        <Button onClick={handleAdd}>Add block</Button>\n    </div>;\n});","import React, { useCallback, useMemo, useState, useEffect } from 'react';\nimport { BlockStateProvider } from '../state/BlockStateProvider';\nimport Select from '../../ui/Select';\nimport { TREE_DECORATORS_OPTIONS, TREE_FEATURE_CONFIG } from './FeatureDefaults';\nimport { useJsonEffect, useCrud, CRUD } from '../../hooks/form';\nimport { NumberInput } from '../../ui/Input';\nimport { Button } from '../../ui/Button';\n\nexport function TreeFeatureConfig({configuration = TREE_FEATURE_CONFIG, onChange}) {\n\n    const [config, setConfig] = useState(configuration);\n\n    const handleTrunkProviderChange = useCallback(function(trunk_provider) {\n        setConfig(config => ({ ...config, trunk_provider }));\n    }, []);\n    const handleLeavesProviderChange = useCallback(function(leaves_provider) {\n        setConfig(config => ({ ...config, leaves_provider }));\n    }, []);\n    const handleFoliagePlacerChange = useCallback(function(foliage_placer) {\n        setConfig(config => ({ ...config, foliage_placer: { ...config.foliage_placer, ...foliage_placer } }));\n    }, []);\n    const handleTrunkPlacerChange = useCallback(function(trunk_placer) {\n        setConfig(config => ({ ...config, trunk_placer: { ...config.trunk_placer, ...trunk_placer } }));\n    }, []);\n    const handleDecoratorsChange = useCallback(function(decorators) {\n        setConfig(config => ({ ...config, decorators }));\n    }, []);\n    useJsonEffect(config, configuration, onChange);\n\n    return <div>\n        <fieldset>\n            <legend>Trunk provider</legend>\n            <BlockStateProvider block={config.trunk_provider} onChange={handleTrunkProviderChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Leaves provider</legend>\n            <BlockStateProvider block={config.leaves_provider} onChange={handleLeavesProviderChange} />\n        </fieldset>\n        <FoliagePlacer placer={config.foliage_placer} onChange={handleFoliagePlacerChange} />\n        <TrunkPlacer placer={config.trunk_placer} onChange={handleTrunkPlacerChange} />\n        <TreeDecorators data={configuration.decorators} onChange={handleDecoratorsChange}></TreeDecorators>\n    </div>;\n}\n\nconst FoliagePlacer = React.memo(function({placer, onChange}) {\n    const options = useMemo(function() {\n        return [\n            { value: 'blob_foliage_placer', label: 'Blob foliage placer' },\n            { value: 'fancy_foliage_placer', label: 'Fancy foliage placer' }\n        ].map(o => {\n            o.value = 'minecraft:' + o.value;\n            return o;\n        });\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        onChange({ type: option.value });\n    }, [onChange]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === placer.type) || options[0];\n    }, [options, placer.type]);\n\n    return <fieldset>\n        <legend>Foliage placer</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"foliage_placer_type\">Type</label>\n            <Select options={options} name=\"foliage_placer_type\" value={selected} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"radius\" value={placer.radius} upChange={onChange} max=\"8\">Radius</NumberInput>\n            <NumberInput id=\"offset\" value={placer.offset} upChange={onChange} max=\"8\">Offset</NumberInput>\n            {(placer.type === 'minecraft:blob_foliage_placer' ||\n                placer.type === 'minecraft:bush_foliage_placer' ||\n                placer.type === 'minecraft:fancy_foliage_placer' ||\n                placer.type === 'minecraft:jungle_foliage_placer'\n            ) && <NumberInput id=\"height\" value={placer.height} upChange={onChange} max=\"16\" defaultValue=\"3\">Height</NumberInput>}\n        </div>\n    </fieldset>\n});\n\nconst TrunkPlacer = React.memo(function({placer, onChange}) {\n    const options = useMemo(function() {\n        return [\n            { value: 'straight_trunk_placer', label: 'Straight trunk placer' },\n            { value: 'forking_trunk_placer', label: 'Forking trunk placer' },\n            { value: 'giant_trunk_placer', label: 'Giant trunk placer' },\n            { value: 'mega_jungle_trunk_placer', label: 'Mega jungle trunk placer' },\n            { value: 'dark_oak_trunk_placer', label: 'Dark oak trunk placer' },\n            { value: 'fancy_trunk_placer', label: 'Fancy trunk placer' }\n        ].map(o => {\n            o.value = 'minecraft:' + o.value;\n            return o;\n        });\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        onChange({ type: option.value });\n    }, [onChange]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === placer.type) || options[0];\n    }, [placer.type, options]);\n\n    return <fieldset>\n        <legend>Trunk placer</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"foliage_placer_type\">Type</label>\n            <Select options={options} name=\"foliage_placer_type\" defaultValue={selected} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"base_height\" value={placer.base_height} upChange={onChange} max=\"32\">Base height</NumberInput>\n            <NumberInput id=\"height_rand_a\" value={placer.height_rand_a} upChange={onChange} max=\"24\">First height rand</NumberInput>\n            <NumberInput id=\"height_rand_b\" value={placer.height_rand_b} upChange={onChange} max=\"24\">Second height rand</NumberInput>\n        </div>\n    </fieldset>\n});\n\nconst TreeDecorators = React.memo(function({data, onChange}) {\n    const [decorators, dispatch] = useCrud(data);\n\n    const handleAddClick = useCallback(function(e) {\n        e.preventDefault();\n        const decorator = TREE_DECORATORS_OPTIONS.find(o => !decorators.some(d => d.type === o.value));\n        if (typeof decorator !== 'undefined') {\n            dispatch({ type: CRUD.ADD, payload: { type: decorator.value } });\n        }\n    }, [decorators, dispatch]);\n    const handleChange = useCallback(function(decorator, previous) {\n        dispatch({ type: CRUD.UPDATE, target: previous, payload: decorator });\n    }, [dispatch]);\n    const handleDeleteClick = useCallback(function(e, index) {\n        e.preventDefault();\n        dispatch({ type: CRUD.REMOVE, payload: decorators[index] });\n    }, [decorators, dispatch]);\n    useJsonEffect(decorators.map(decorator => {\n        delete decorator.index;\n        return decorator;\n    }), data, onChange);\n    \n    return <fieldset>\n        <legend>Tree decorators {decorators.length < 5 && <Button onClick={handleAddClick}>Add decorator</Button>}</legend>\n        {decorators.map((decorator, i) => {\n            const options = TREE_DECORATORS_OPTIONS.filter(o => o.value === decorator.type || !decorators.some(d => d.type === o.value));\n            return <TreeDecorator data={decorator }key={decorator.type} onChange={handleChange} options={options}>\n                <Button cat=\"danger mlm\" onClick={(e) => handleDeleteClick(e, i)}>Remove</Button>\n            </TreeDecorator>\n        })}\n    </fieldset>\n});\n\nconst TreeDecorator = React.memo(function({children, data, options, onChange}) {\n    const [decorator, setDecorator] = useState(data);\n\n    const handleSelectChange = useCallback(function(option) {\n        setDecorator({ type: option.value, ...option.default });\n    }, []);\n    const handleAlterGroundChange = useCallback(function(provider) {\n        setDecorator(decorator => ({ type: decorator.type, provider }));\n    }, []);\n    const handleProbabilityChange = useCallback(function(probability) {\n        setDecorator(decorator => ({ type: decorator.type, probability }));\n    }, []);\n    useEffect(() => {\n        if (decorator !== data) {\n            onChange(decorator, data);\n        }\n    }, [data, decorator, onChange]);\n\n    const CustomTag = ['minecraft:leave_vine', 'minecraft:trunk_vine'].indexOf(decorator.type) < 0 ? 'fieldset' : 'div';\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === decorator.type);\n    }, [decorator.type, options]);\n    return <CustomTag>\n        <legend style={{ fontWeight: 'normal', fontSize: 'inherit' }}>\n            <div style={{ width: '200px', display: 'inline-block' }}><Select options={options} value={selected} onChange={handleSelectChange} /></div>\n            {children}\n        </legend>\n        <div className=\"form-group\">\n            {decorator.type === 'minecraft:alter_ground' && <BlockStateProvider block={decorator.provider} onChange={handleAlterGroundChange} />}\n            {(decorator.type === 'minecraft:beehive' || decorator.type === 'minecraft:cocoa') && <NumberInput id=\"probability\" value={decorator.probability} onChange={handleProbabilityChange} max=\"1\" step=\"0.05\" defaultValue=\"0.05\">Probability</NumberInput>}\n        </div>\n    </CustomTag>\n});","import React, { useCallback, useState, useMemo, useEffect } from 'react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport { useCrudPreset, useJsonEffect } from '../../hooks/form';\nimport { Button } from '../../ui/Button';\nimport Select from '../../ui/Select';\nimport { DECORATORS_OPTIONS, DECORATOR_EXTRA_COUNT_DEFAULTS, DECORATOR_DECORATED_DEFAULTS, DECORATOR_RANGE_DEFAULTS } from './FeatureDefaults';\nimport { NumberInput } from '../../ui/Input';\n\nexport const DecoratorsList = React.memo(function({data, onChange}) {\n    const [decorators, handleAdd, handleChange, handleRemove] = useCrudPreset(data, function(decorators) {\n        // Get the first non taken decorator\n        return { type: (DECORATORS_OPTIONS.filter(o => !decorators.some(d => d.type === o.value))[0] || { value: 'minecraft:count' }).value };\n    });\n    useJsonEffect(decorators, data, onChange);\n\n    const shouldCancelStart = useCallback(function(e) {\n        return !e.target.parentNode.classList.contains('sortable-item');\n    }, []);\n    \n    return <fieldset>\n        <legend>Decorators wrappers {DECORATORS_OPTIONS.length > decorators.length && <Button onClick={handleAdd}>Add decorator</Button>}</legend>\n        <SortableDecoratorsList decorators={decorators} handleChange={handleChange} handleRemove={handleRemove}\n            onSortEnd={handleChange} shouldCancelStart={shouldCancelStart} />\n    </fieldset>\n});\n\nconst SortableDecoratorsList = SortableContainer(function({decorators, handleChange, handleRemove}) {\n    return <ol className=\"sortable-container\">\n        {decorators.map((decorator, index) => {\n            const options = DECORATORS_OPTIONS.filter(o => decorator.type === o.value || !decorators.some(d => d.type === o.value));\n            return <Decorator key={decorator.type} data={decorator} index={index} onChange={handleChange} options={options}>\n                <Button cat=\"danger mlm\" onClick={(e) => handleRemove(e, index)}>Remove</Button>\n            </Decorator>\n        })}\n    </ol>\n});\n\nconst Decorator = React.memo(SortableElement(function({children, data = { type: 'minecraft:count' }, onChange, options}) {\n    const [decorator, setDecorator] = useState(data);\n\n    const handleSelectChange = useCallback(function(option) {\n        setDecorator({ type: option.value });\n    }, []);\n    const handleConfigChange = useCallback(function(config) {\n        setDecorator(decorator => ({ type: decorator.type, config: { ...decorator.config, ...config }}));\n    }, []);\n    useJsonEffect(decorator, data, onChange);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === decorator.type);\n    }, [decorator.type, options]);\n    return <li className=\"sortable-item\">\n        <div className=\"form-group form-row\">\n            <div style={{ flexGrow: 1 }}><Select options={options} value={selected} onChange={handleSelectChange} /></div>\n            {children}\n        </div>\n        <div className=\"form-group form-row\">\n            {decorator.type === 'minecraft:chance' && <ChanceDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.type === 'minecraft:count' || decorator.type === 'minecraft:fire' || decorator.type === 'minecraft:count_multilayer') && <CountDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {decorator.type === 'minecraft:count_extra' && <ExtraCountDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.type === 'minecraft:decorated' || decorator.type === 'minecraft:square') && <DecoratedDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.type === 'minecraft:range' || decorator.type === 'minecraft:range_biased' || decorator.type === 'minecraft:range_very_biased') && <RangeDecorator config={decorator.config} onChange={handleConfigChange} />}\n        </div>\n    </li>;\n}));\n\nconst ChanceDecorator = React.memo(function({config = {}, onChange}) {\n    return <NumberInput id=\"chance\" value={config.chance} defaultValue=\"32\" upChange={onChange}>Chance</NumberInput>\n});\n\nconst CountDecorator = React.memo(function({config = {}, onChange}) {\n    return <NumberInput id=\"count\" value={config.count} defaultValue=\"25\" upChange={onChange}>Count</NumberInput>\n});\n\nconst ExtraCountDecorator = React.memo(function({config, onChange}) {\n    config = useJsonEffect(config || DECORATOR_EXTRA_COUNT_DEFAULTS, config, onChange);\n\n    return <>\n        <NumberInput id=\"count\" value={config.count} upChange={onChange}>Count</NumberInput>\n        <NumberInput id=\"extra_chance\" value={config.extra_chance} upChange={onChange} step=\"0.05\">Extra chance</NumberInput>\n        <NumberInput id=\"extra_count\" value={config.extra_count} upChange={onChange}>Extra count</NumberInput>\n    </>\n});\n\nconst DecoratedDecorator = React.memo(function({config, onChange}) {\n    useEffect(() => {\n        if (typeof config === 'undefined') {\n            onChange(DECORATOR_DECORATED_DEFAULTS);\n        }\n    }, [config, onChange]);\n    return <div></div>;\n});\n\nconst RangeDecorator = React.memo(function({config, onChange}) {\n    config = useJsonEffect(config || DECORATOR_RANGE_DEFAULTS, config, onChange);\n\n    return <>\n        <NumberInput id=\"bottom_offset\" value={config.bottom_offset} upChange={onChange}>Bottom offset</NumberInput>\n        <NumberInput id=\"top_offset\" value={config.top_offset} upChange={onChange}>Top offset</NumberInput>\n        <NumberInput id=\"maximum\" value={config.maximum} upChange={onChange}>Y maximum</NumberInput>\n    </>\n});","import React, { useCallback } from 'react';\nimport { BlocksList } from '../state/BlockState';\nimport { RANDOM_PATCH_FEATURE_CONFIG } from './FeatureDefaults';\nimport { useJsonEffect } from '../../hooks/form';\nimport { BlockStateProvider } from '../state/BlockStateProvider';\nimport { NumberInput, ConfInput } from '../../ui/Input';\n\nexport function RandomPatchFeature({configuration, onChange}) {\n\n    const config = useJsonEffect(configuration || RANDOM_PATCH_FEATURE_CONFIG, configuration, onChange);\n    const handleStateProviderChange = useCallback(function(state_provider) {\n        onChange({ ...config, state_provider });\n    }, [config, onChange]);\n    const handleWhitelistChange = useCallback(function(whitelist) {\n        onChange({ ...config, whitelist });\n    }, [config, onChange]);\n    const handleBlacklistChange = useCallback(function(blacklist) {\n        onChange({ ...config, blacklist });\n    }, [config, onChange]);\n    const handleValueChange = useCallback(function(value) {\n        onChange({ ...config, ...value });\n    }, [config, onChange]);\n    const handleCheckboxChange = useCallback(function(e) {\n        onChange({ ...config, [e.target.dataset.name]: e.target.checked });\n    }, [config, onChange]);\n\n    return <div>\n        <fieldset>\n            <legend>State provider</legend>\n            <BlockStateProvider block={config.state_provider} onChange={handleStateProviderChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Whitelist</legend>\n            <BlocksList list={config.whitelist} onChange={handleWhitelistChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Blacklist</legend>\n            <BlocksList list={config.blacklist} onChange={handleBlacklistChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Settings</legend>\n            <div className=\"form-group form-row\">\n                <NumberInput id=\"xspread\" value={config.xspread} upChange={handleValueChange}>X spread</NumberInput>\n                <NumberInput id=\"yspread\" value={config.yspread} upChange={handleValueChange}>Y spread</NumberInput>\n                <NumberInput id=\"zspread\" value={config.zspread} upChange={handleValueChange}>Z spread</NumberInput>\n                <NumberInput id=\"tries\" value={config.tries} upChange={handleValueChange}>Tries</NumberInput>\n            </div>\n            <div className=\"form-group form-row\">\n                <ConfInput id=\"need_water\" checked={config.need_water} onChange={handleCheckboxChange}>Need water</ConfInput>\n                <ConfInput id=\"project\" checked={config.project} onChange={handleCheckboxChange}>Project</ConfInput>\n                <ConfInput id=\"can_replace\" checked={config.can_replace} onChange={handleCheckboxChange}>Can replace</ConfInput>\n            </div>\n        </fieldset>\n    </div>;\n}","import React, { useCallback } from 'react';\nimport { ORE_FEATURE_CONFIG } from \"./FeatureDefaults\";\nimport { BlockPredicate } from '../state/BlockPredicate';\nimport { BlockState } from '../state/BlockState';\nimport { useJsonEffect } from '../../hooks/form';\nimport { NumberInput } from '../../ui/Input';\n\nexport function OreFeatureConfig({configuration, onChange}) {\n    const handlePredicateChange = useCallback(function(target) {\n        onChange({ ...configuration, target });\n    }, [configuration, onChange]);\n    const handleBlockChange = useCallback(function(state) {\n        onChange({ ...configuration, state });\n    }, [configuration, onChange]);\n    const handleValueChange = useCallback(function(value) {\n        onChange({ ...configuration, ...value });\n    }, [configuration, onChange]);\n    const config = useJsonEffect(configuration || ORE_FEATURE_CONFIG, configuration, onChange);\n\n    return <div>\n        <fieldset>\n            <legend>Target</legend>\n            <BlockPredicate target={config.target} onChange={handlePredicateChange} />\n        </fieldset>\n        <fieldset>\n            <legend>State</legend>\n            <BlockState block={config.state} onChange={handleBlockChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Settings</legend>\n            <NumberInput id=\"size\" value={config.size} upChange={handleValueChange}>Size</NumberInput>\n        </fieldset>\n    </div>;\n}","import React, { useCallback, useState } from 'react';\nimport { HUGE_FUNGUS_FEATURE_CONFIG } from './FeatureDefaults';\nimport { useJsonEffect } from '../../hooks/form';\nimport {  ConfInput } from '../../ui/Input';\nimport { BlockState } from '../state/BlockState';\n\nexport function HugeFungusFeature({ configuration = HUGE_FUNGUS_FEATURE_CONFIG, onChange }) {\n\n    const [config, setConfig] = useState(configuration);\n\n    const handleDecorStateChange = useCallback(function (decor_state) {\n        setConfig(config => ({ ...config, decor_state }));\n    }, []);\n    const handleHatStateChange = useCallback(function (hat_state) {\n        setConfig(config => ({ ...config, hat_state }));\n    }, []);\n    const handlePlantedChange = useCallback(function (e) {\n        const planted = e.target.checked;\n        setConfig(config => ({ ...config, planted }));\n    }, []);\n    const handleStemStateChange = useCallback(function (stem_state) {\n        setConfig(config => ({ ...config, stem_state }));\n    }, []);\n    const handleValidBaseBlockChange = useCallback(function (valid_base_block) {\n        setConfig(config => ({ ...config, valid_base_block }));\n    }, []);\n    useJsonEffect(config, configuration, onChange);\n\n    return <div>\n        <fieldset>\n            <legend>Composition</legend>\n            <label htmlFor=\"stem_state\">Stem</label>\n            <BlockState block={config.stem_state} className=\"\" inputId=\"stem_state\" onChange={handleStemStateChange} />\n            <label htmlFor=\"hat_state\">Hat</label>\n            <BlockState block={config.hat_state} className=\"\" inputId=\"hat_state\" onChange={handleHatStateChange} />\n            <label htmlFor=\"decor_state\">Decor</label>\n            <BlockState block={config.decor_state} className=\"\" inputId=\"decor_state\" onChange={handleDecorStateChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Configuration</legend>\n            <label htmlFor=\"valid_base_block\">Valid base block</label>\n            <BlockState block={config.valid_base_block} className=\"\" inputId=\"valid_base_block\" onChange={handleValidBaseBlockChange} />\n            <ConfInput id=\"planted\" checked={config.planted} onChange={handlePlantedChange}>Planted</ConfInput>\n        </fieldset>\n    </div>;\n}\n","import React, { useCallback, useState, useMemo } from 'react';\nimport { HUGE_FUNGUS_FEATURE_CONFIG } from './FeatureDefaults';\nimport { useJsonEffect, useBlocksOptions } from '../../hooks/form';\nimport {  ConfInput, NumberInput } from '../../ui/Input';\nimport { BlocksNamesList } from '../state/BlockState';\nimport { BlockSelect } from '../state/BlockPredicate';\n\nexport function SpringFeature({ configuration = HUGE_FUNGUS_FEATURE_CONFIG, onChange }) {\n\n    const [config, setConfig] = useState(configuration);\n\n    const handlRequiresBlockBelowChange = useCallback(function (e) {\n        const requires_block_below = e.target.checked;\n        setConfig(config => ({ ...config, requires_block_below }));\n    }, []);\n    const handleStateChange = useCallback(function (option) {\n        setConfig(config => ({ ...config, state: { Name: option.value, Properties: { falling: 'true' } } }));\n    }, []);\n    const handleValidBlocksChange = useCallback(function (valid_blocks) {\n        setConfig(config => ({ ...config, valid_blocks }));\n    }, []);\n    const handleValueChange = useCallback(function (value) {\n        setConfig(config => ({ ...config, ...value }));\n    }, []);\n    useJsonEffect(config, configuration, onChange);\n\n    const blocks = useBlocksOptions(false);\n    const filteredBlocks = useMemo(function () {\n        return blocks.filter(b => b.name === 'lava' || b.name === 'water')\n            .map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n    }, [blocks]);\n\n    return <div>\n        <fieldset>\n            <legend>Fluid</legend>\n            <div className=\"form-group\"><BlockSelect block={config.state.Name} onChange={handleStateChange} options={filteredBlocks} /></div>\n        </fieldset>\n        <fieldset>\n            <legend>Valid blocks</legend>\n            <BlocksNamesList list={config.valid_blocks} onChange={handleValidBlocksChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Configuration</legend>\n            <NumberInput id=\"rock_count\" value={config.rock_count} upChange={handleValueChange}>Rock count</NumberInput>\n            <NumberInput id=\"hole_count\" value={config.hole_count} upChange={handleValueChange}>Hole count</NumberInput>\n            <ConfInput id=\"requires_block_below\" checked={config.requires_block_below} onChange={handlRequiresBlockBelowChange}>Requires block below</ConfInput>\n        </fieldset>\n    </div>;\n}\n","import React, { useCallback, useMemo, useState } from 'react';\nimport Select from '../../ui/Select';\nimport { TreeFeatureConfig } from './TreeFeature';\nimport { Button } from '../../ui/Button';\nimport { DecoratorsList } from './Decorator';\nimport { buildDecorated, findDecorators } from '../../utils/data';\nimport { DECORATED_TREE_CONFIG, DECORATED_RANDOM_PATCH_CONFIG, DECORATED_ORE_FEATURE_CONFIG, DECORATED_HUGE_FUNGUS_CONFIG, DECORATED_SPRING_FEATURE_CONFIG } from './FeatureDefaults';\nimport { RandomPatchFeature } from './RandomPatchFeature';\nimport { OreFeatureConfig } from './OreFeature';\nimport { NamespacedKey } from '../NamespacedKey';\nimport { HugeFungusFeature } from './HugeFungusFeature';\nimport { SpringFeature } from './SpringFeature';\n\nexport function RawConfiguredFeature({data = DECORATED_TREE_CONFIG, onSave}) {\n\n    const [decorators_, feature_] = useMemo(() => findDecorators(data), [data]);\n\n    const [feature, setFeature] = useState(feature_);\n    const [decorators, setDecorators] = useState(decorators_);\n\n    const handleSelectChange = useCallback(function(option) {\n        const [decorators, feature] = findDecorators({ ...option.default });\n        setFeature(feature);\n        setDecorators(decorators);\n    }, []);\n\n    const handleFeatureChange = useCallback(function (config) {\n        setFeature(feature => ({ ...feature, config }));\n    }, []);\n\n    const handleDecoratorsChange = useCallback(function (decorators) {\n        setDecorators(decorators);\n    }, []);\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        const decorated = buildDecorated(feature, decorators, new FormData(e.target).get('key'));\n        decorated.index = data.index;\n        onSave(decorated);\n    }, [data.index, decorators, feature, onSave]);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'huge_fungus', label: 'Huge fungus', default: DECORATED_HUGE_FUNGUS_CONFIG },\n            { value: 'ore', label: 'Ore', default: DECORATED_ORE_FEATURE_CONFIG },\n            { value: 'spring_feature', label: 'Spring', default: DECORATED_SPRING_FEATURE_CONFIG },\n            { value: 'random_patch', label: 'Random patch', default: DECORATED_RANDOM_PATCH_CONFIG },\n            { value: 'tree', label: 'Tree', default: DECORATED_TREE_CONFIG }\n        ].map(o => {\n            o.value = 'minecraft:' + o.value;\n            return o;\n        });\n    }, []);\n\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit configured feature</h3>\n        <NamespacedKey example=\"concrete_tree\" type=\"features\" value={data.key} expectBreakage={typeof data.key !== 'undefined'} />\n        <div className=\"form-group\">\n            <label htmlFor=\"type\">Type</label>\n            <Select options={options} value={options.find(o => o.value === feature.type)} onChange={handleSelectChange} inputId=\"type\" />\n        </div>\n        <hr />\n        {feature.type === 'minecraft:huge_fungus' && <HugeFungusFeature configuration={feature.config} onChange={handleFeatureChange} />}\n        {feature.type === 'minecraft:ore' && <OreFeatureConfig configuration={feature.config} onChange={handleFeatureChange} />}\n        {feature.type === 'minecraft:spring_feature' && <SpringFeature configuration={feature.config} onChange={handleFeatureChange} />}\n        {feature.type === 'minecraft:random_patch' && <RandomPatchFeature configuration={feature.config} onChange={handleFeatureChange} />}\n        {feature.type === 'minecraft:tree' && <TreeFeatureConfig configuration={feature.config} onChange={handleFeatureChange} />}\n        <DecoratorsList data={decorators} key={feature.type} onChange={handleDecoratorsChange} />\n        <Button type=\"submit\">Save</Button>\n    </form>\n}\n","import JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\nimport { dataUpper } from \"./data\";\n\nconst DIMENSIONS_PATH = /^data\\/([a-z0-9._-]+)\\/(dimension|dimension_type)\\/([a-z0-9._-]+).json$/;\nconst WORLDGEN_PATH = /^data\\/([a-z0-9._-]+)\\/worldgen\\/(biome|configured_feature|configured_surface_builder|noise_settings)\\/([a-z0-9._-]+).json$/;\n\nconst LEGACY_PATH_DETECTION = /^data\\/minecraft\\/(dimension|dimension_type|worldgen)\\/?\\w*\\/([a-z0-9._-]+)\\/([a-z0-9._-]+).json$/;\nconst LEGACY_DIMENSIONS_PATH = /^data\\/minecraft\\/(dimension|dimension_type)\\/([a-z0-9._-]+)\\/([a-z0-9._-]+).json$/;\nconst LEGACY_WORLDGEN_PATH = /^data\\/minecraft\\/worldgen\\/(biome|configured_feature|configured_surface_builder|noise_settings)\\/([a-z0-9._-]+)\\/([a-z0-9._-]+).json$/;\n\n/**\n * Build zip in blob.\n * \n * @param {{ biomes: object[], dimensions: object[], dimension_types: object[], features: object[], noises: object[], surfaces: object[] }} custom \n */\nexport function buildZip(custom) {\n    const zip = new JSZip();\n    zip.file('pack.mcmeta', JSON.stringify({ pack: { pack_format: 5, description: 'Custom dimension' } }, null, 4));\n    const namespace = '%namespace%';\n    writeFile(zip, `data/${namespace}/dimension`, custom.dimensions);\n    writeFile(zip, `data/${namespace}/dimension_type`, custom.dimension_types);\n    writeFile(zip, `data/${namespace}/worldgen/biome`, custom.biomes);\n    writeFile(zip, `data/${namespace}/worldgen/configured_feature`, custom.features);\n    writeFile(zip, `data/${namespace}/worldgen/configured_surface_builder`, custom.surfaces);\n    writeFile(zip, `data/${namespace}/worldgen/noise_settings`, custom.noises);\n    zip.generateAsync({ type: 'blob' })\n        .then(function(content) {\n            saveAs(content, 'generated_datapack.zip');\n        });\n}\n\n/**\n * @param {File} file\n * @returns {Promise<[string, { biomes: object[], dimensions: object[], features: object[], surfaces: object[] }]>}\n */\nexport function readZip(file) {\n    return new Promise((resolve, reject) => {\n        if (file.type !== 'application/zip') {\n            reject(new Error('File is not a .zip'));\n        }\n\n        JSZip.loadAsync(file).then((zip) => {\n            extractDatapack(zip)\n                .then(resolve)\n                .catch(reject);\n        }).catch(reject);\n    });\n}\n\n/**\n * @param {JSZip} zip \n * @returns {Promise<string, object>}\n */\nfunction extractDatapack(zip) {\n    let mcmeta = false;\n    let namespace = 'test';\n    const data = {\n        biomes: [],\n        dimensions: [],\n        dimension_types: [],\n        features: [],\n        noises: [],\n        surfaces: []\n    };\n\n    return new Promise((resolve, reject) => {\n        const promises = [];\n        zip.forEach(function(path, entry) {\n            if (entry.dir) {\n                return;\n            }\n            if (entry.name === 'pack.mcmeta') {\n                mcmeta = true;\n                return;\n            }\n            const legacy = entry.name.match(LEGACY_PATH_DETECTION);\n            let regex = entry.name.match(DIMENSIONS_PATH) ? DIMENSIONS_PATH : WORLDGEN_PATH;\n            if (legacy) {\n                regex = entry.name.match(LEGACY_DIMENSIONS_PATH) ? LEGACY_DIMENSIONS_PATH : LEGACY_WORLDGEN_PATH;\n            }\n            promises.push(parseFile(legacy, regex, entry.name, zip.file(entry.name).async('text')));\n        });\n\n        if (!mcmeta) {\n            reject(new Error('Invalid datapack: no pack.mcmeta'));\n        }\n\n        Promise.all(promises).then(function(values) {\n            values.forEach(function(value) {\n                if (value === null) {\n                    return;\n                }\n\n                namespace = value.namespace;\n                value.data.index = data[value.type].length;\n                data[value.type].push(value.data);\n            });\n            resolve([namespace, data]);\n        }).catch(e => reject(e));\n    });\n}\n\nfunction getFolderType(folder) {\n    switch (folder) {\n        case 'configured_feature':\n            return 'features';\n        case 'configured_surface_builder':\n            return 'surfaces';\n        case 'noise_settings':\n            return 'noises';\n        default:\n            return folder + 's';\n    }\n}\n\n/**\n * Parse json file when it will be ready.\n * \n * @param {boolean} legacy\n * @param {RegExp} pathRegex \n * @param {string} filename \n * @param {Promise<string>} contentPromise \n * @returns {Promise<{namespace: string, data: object, type: string}>}\n */\nasync function parseFile(legacy, pathRegex, filename, contentPromise) {\n    const d = pathRegex.exec(filename);\n    if (d === null) {\n        return new Promise((success) => success(null)); // Skip file\n    }\n\n    return new Promise((resolve, reject) => {\n        contentPromise.then(content => {\n            const obj = JSON.parse(content);\n            const namespace = d[legacy ? 2 : 1];\n            const type = getFolderType(d[legacy ? 1 : 2]);\n            obj.key = namespace + ':' + d[3];\n            const data = dataUpper(type, obj);\n            resolve({ namespace, data, type });\n        }).catch(e => {\n            if (e.name !== 'SyntaxError') {\n                console.error(e);\n            }\n            reject(new Error(`Cannot read ${filename}:\\n${e.message}`));\n        });\n    });\n}\n\nfunction writeFile(zip, path, elements) {\n    if (elements.length < 1) {\n        return;\n    }\n\n    for (const el of elements) {\n        const w = {...el};\n        delete w.key;\n        delete w.index;\n\n        const [namespace, filename] = el.key.split(':');\n        zip.folder(path.replace('%namespace%', namespace))\n            .file(filename + '.json', JSON.stringify(w, null, 2));\n    }\n}","import React, { useCallback, useState } from 'react';\nimport { BlockState } from '../state/BlockState';\nimport { Button } from '../../ui/Button';\nimport { SURFACE_TYPES_OPTIONS, SURFACE_BUILDER } from './SurfaceBuilderDefaults';\nimport Select from '../../ui/Select';\nimport { NamespacedKey } from '../NamespacedKey';\n\nexport function SurfaceBuilder({data = SURFACE_BUILDER, onSave}) {\n    const [config, setConfig] = useState(data.config);\n\n    const handleTopMaterialChange = useCallback(function(top_material) {\n        setConfig(config => ({ ...config, top_material }));\n    }, []);\n    const handleUnderMaterialChange = useCallback(function(under_material) {\n        setConfig(config => ({ ...config, under_material }));\n    }, []);\n    const handleUnderwaterMaterialChange = useCallback(function(underwater_material) {\n        setConfig(config => ({ ...config, underwater_material }));\n    }, []);\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        onSave({\n            config,\n            type: formData.get('type'),\n            key: formData.get('key'),\n            index: data.index\n        });\n    }, [config, data.index, onSave]);\n\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit surface builder</h3>\n        <NamespacedKey example=\"blackstone\" type=\"surfaces\" value={data.key} expectBreakage={typeof data.key !== 'undefined'} />\n        \n        <div className=\"form-group\">\n            <label htmlFor=\"type\">Type</label>\n            <Select options={SURFACE_TYPES_OPTIONS} defaultValue={SURFACE_TYPES_OPTIONS.find(o => o.value === data.type)} name=\"type\" inputId=\"type\" />\n            <p className=\"help2\"><small className=\"text-muted\">The builder type defines the shape of the surface. For example, the <em>swamp</em> type will create puddles while the <em>badlands</em> types will create small rocky peaks; the <em>nether</em> types will add a mix of nether blocks and expose more of the underneath material.</small></p>\n        </div>\n        \n        <label htmlFor=\"top_material\">Top material</label>\n        <BlockState block={config.top_material} className=\"\" inputId=\"top_material\" onChange={handleTopMaterialChange} />\n        <label htmlFor=\"under_material\">Under material</label>\n        <BlockState block={config.under_material} className=\"\" inputId=\"under_material\" onChange={handleUnderMaterialChange} />\n        <label htmlFor=\"underwater_material\">Underwater material</label>\n        <BlockState block={config.underwater_material} className=\"\" inputId=\"underwater_material\" onChange={handleUnderwaterMaterialChange} />\n\n        <Button type=\"submit\">Save</Button>\n    </form>;\n}","import React, { useCallback, useEffect, useState } from 'react';\nimport { NumberInput } from '../../ui/Input';\nimport { useToggle } from '../../hooks/ui';\nimport { useCrud, CRUD } from '../../hooks/form';\nimport Select from '../../ui/Select';\nimport { STRUCTURES } from './NoiseDefaults';\nimport { Button } from '../../ui/Button';\n\nexport const Structures = React.memo(function ({ data, onChange }) {\n\n    const handleStrongholdChange = useCallback(function(stronghold) {\n        if (stronghold === false) {\n            onChange({ structures: data.structures });\n        } else {\n            onChange({ structures: data.structures, stronghold });\n        }\n    }, [data.structures, onChange]);\n    const handleStructuresChange = useCallback(function(structures) {\n        onChange({ ...data, structures });\n    }, [data, onChange]);\n\n    return <fieldset>\n        <legend>Structures</legend>\n        <Stronghold data={data.stronghold} onChange={handleStrongholdChange} />\n        <StructuresList data={data.structures} onChange={handleStructuresChange} />\n    </fieldset>\n});\n\nconst Stronghold = React.memo(function ({ data, onChange }) {\n\n    const [enabled, toggle] = useToggle(typeof data === 'object');\n    const [stronghold, setStronghold] = useState(data || { distance: 32, spread: 3, count: 128 });\n\n    const handleChange = useCallback(function(value) {\n        setStronghold(stronghold => ({ ...stronghold, ...value }));\n    }, [setStronghold]);\n\n    useEffect(function() {\n        if (data !== stronghold\n            || (enabled && typeof data === 'undefined')\n            || (!enabled && typeof data === 'object')) {\n                onChange(enabled ? stronghold : false);\n        }\n    }, [data, enabled, onChange, stronghold]);\n\n    return <div>\n        <div className=\"toggle-label\">Stronghold<Button cat=\"secondary\" onClick={toggle}>{enabled ? 'Disable' : 'Enable'}</Button></div>\n        {enabled && <div className=\"form-group form-row\">\n            <NumberInput id=\"distance\" defaultValue={stronghold.distance} upChange={handleChange} max=\"1023\">Distance</NumberInput>\n            <NumberInput id=\"spread\" defaultValue={stronghold.spread} upChange={handleChange} max=\"1023\">Spread</NumberInput>\n            <NumberInput id=\"count\" defaultValue={stronghold.count} upChange={handleChange} min=\"1\" max=\"4095\">Count</NumberInput>\n        </div>}\n    </div>\n});\n\nconst StructuresList = React.memo(function({ data, onChange }) {\n    const [visibility, toggle] = useToggle();\n    const [structures, dispatch] = useCrud(Object.entries(data).map(([type, d]) => ({ ...d, type })));\n\n    const handleAdd = useCallback(function(e) {\n        e.preventDefault();\n        dispatch({ type: CRUD.ADD, payload: {\n            type: 'minecraft:village',\n            spacing: 32,\n            separation: 8,\n            salt: 10387312\n        }, unshift: true });\n        if (!visibility) {\n            toggle();\n        }\n    }, [dispatch, toggle, visibility]);\n    const handleChange = useCallback(function(original, structure) {\n        dispatch({ type: CRUD.UPDATE, target: original, payload: structure });\n    }, [dispatch]);\n    const handleRemove = useCallback(function(structure) {\n        dispatch({ type: CRUD.REMOVE, payload: structure });\n    }, [dispatch]);\n\n    useEffect(function() {\n        const obj = {};\n        for (const structure of structures) {\n            obj[structure.type] = {\n                spacing: structure.spacing,\n                separation: structure.separation,\n                salt: structure.salt\n            };\n        }\n        onChange(obj);\n    }, [onChange, structures]);\n\n    return <div>\n        <div className=\"toggle-label\">\n            Structures\n            <div className=\"btn-group\">\n                <Button onClick={handleAdd}>Add</Button>\n                {structures.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{visibility ? 'Less...' : 'More...'}</Button>}\n            </div>\n        </div>\n        {visibility && structures.map((def, i) => \n            <Structure data={def} key={i} onChange={handleChange} onDelete={handleRemove} />\n        )}\n    </div>\n});\n\nconst Structure = React.memo(function ({ data, onChange, onDelete }) {\n\n    const handleTypeChange = useCallback(function(option) {\n        onChange(data, { ...data, type: option.value });\n    }, [data,  onChange]);\n    const handleSpacingChange = useCallback(function(value) {\n        const name = Object.keys(value)[0];\n        value = value[name];\n        if ((name === 'spacing' && value > data.separation)\n            || (name === 'separation' && value < data.spacing)) {\n            onChange(data, {...data, [name]: value});\n        } \n    }, [data,  onChange]);\n    const handleSaltChange = useCallback(function(salt) {\n        onChange(data, { ...data, salt });\n    }, [data,  onChange]);\n    const handleDelete = useCallback(function (e) {\n        e.preventDefault();\n        onDelete(data);\n    }, [data, onDelete]);\n\n    return <div>\n        <div className=\"form-group\">\n            <label>Type</label> : <Select options={STRUCTURES} value={STRUCTURES.find(s => s.value === data.type)} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"spacing\" value={data.spacing} upChange={handleSpacingChange} max=\"4096\">Spacing</NumberInput>\n            <NumberInput id=\"separation\" value={data.separation} upChange={handleSpacingChange} max=\"4096\">Separation</NumberInput>\n            <NumberInput id=\"salt\" value={data.salt} onChange={handleSaltChange} max={0x7FFFFFFF} style={{ width: '150px' }}>Salt</NumberInput>\n            <div className=\"form-inline\"><Button cat=\"danger\" onClick={handleDelete}>Delete</Button></div>\n        </div>\n        <hr /> \n    </div>\n});\n","import React, { useCallback, useState } from 'react';\nimport { BlockState } from '../state/BlockState';\nimport { Button } from '../../ui/Button';\nimport { useValueChange } from '../../hooks/form';\nimport { ConfInput, NumberInput } from '../../ui/Input';\nimport { OVERWORLD_NOISE } from './NoiseDefaults';\nimport { Structures } from './Structures';\nimport { NamespacedKey } from '../NamespacedKey';\n\nexport const NoiseSettings = React.memo(function ({ data = OVERWORLD_NOISE, onSave }) {\n\n    const [state, setState] = useState(data);\n\n    const handleSubmit = useCallback(function (e) {\n        e.preventDefault();\n        const formData = Object.fromEntries(new FormData(e.target));\n        const data = { ...state, ...formData };\n        Object.keys(formData).forEach(function (key) {\n            if (!isNaN(formData[key])) {\n                data[key] = parseFloat(formData[key]);\n            }\n        });\n        data.disable_mob_generation = formData.hasOwnProperty('disable_mob_generation');\n        onSave(data);\n    }, [onSave, state]);\n\n    const handleBlockChange = useCallback(function (name, s) {\n        setState(state => ({ ...state, [name]: s }));\n    }, []);\n    const handleStructuresChange = useCallback(function (structures) {\n        setState(state => ({ ...state, structures }));\n    }, []);\n    const handleNoiseChange = useCallback(function (noise) {\n        setState(state => ({ ...state, noise: { ...state.noise, ...noise } }));\n    }, []);\n\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit noise</h3>\n        <NamespacedKey example=\"epic\" type=\"noises\" value={data.key} expectBreakage={typeof data.key !== 'undefined'} />\n\n        <Structures data={data.structures} onChange={handleStructuresChange} />\n\n        <fieldset>\n            <legend>Defaults</legend>\n            <div className=\"form-group\">\n                <label>Block</label> : <BlockState block={state.default_block} onChange={state => handleBlockChange('default_block', state)} />\n            </div>\n            <div className=\"form-group\">\n                <label>Fluid</label> : <BlockState block={state.default_fluid} onChange={state => handleBlockChange('default_fluid', state)} />\n            </div>\n        </fieldset>\n\n        <fieldset>\n            <legend>Main</legend>\n            <div className=\"form-group form-row\">\n                <ConfInput name=\"bedrock_roof_position\" defaultValue={data.bedrock_roof_position}>Bedrock roof position</ConfInput>\n                <ConfInput name=\"bedrock_floor_position\" defaultValue={data.bedrock_floor_position}>Bedrock floor position</ConfInput>\n                <ConfInput name=\"sea_level\" defaultValue={data.sea_level} max={256}>Sea level</ConfInput>\n                <ConfInput name=\"disable_mob_generation\" defaultChecked={data.disable_mob_generation}>Disable mob generation</ConfInput>\n            </div>\n        </fieldset>\n\n        <NoiseConfig data={state.noise} onChange={handleNoiseChange} />\n\n        <Button type=\"submit\">Save</Button>\n    </form>;\n});\n\nconst NoiseConfig = React.memo(function ({ data, onChange }) {\n\n    const handleChange = useValueChange(onChange, data);\n    const handleSamplingChange = useCallback(function (sampling) {\n        onChange({ ...data, sampling: { ...data.sampling, ...sampling } });\n    }, [data, onChange]);\n    const handleTopSlideChange = useCallback(function (top_slide) {\n        onChange({ ...data, top_slide: { ...data.top_slide, ...top_slide } });\n    }, [data, onChange]);\n    const handleBottomSlideChange = useCallback(function (bottom_slide) {\n        onChange({ ...data, bottom_slide: { ...data.bottom_slide, ...bottom_slide } });\n    }, [data, onChange]);\n\n    return <fieldset>\n        <legend>Noise config (advanced)</legend>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"height\" value={data.height} upChange={onChange} min=\"0\" max=\"256\">Height</NumberInput>\n            <NumberInput id=\"size_horizontal\" value={data.size_horizontal} upChange={onChange} min=\"1\" max=\"4\">Size horizontal</NumberInput>\n            <NumberInput id=\"size_vertical\" value={data.size_vertical} upChange={onChange} min=\"1\" max=\"4\">Size vertical</NumberInput>\n            <NumberInput id=\"density_factor\" value={data.density_factor} upChange={onChange} step=\"0.01\">Density factor</NumberInput>\n            <NumberInput id=\"density_offset\" value={data.density_offset} upChange={onChange} min=\"-10000\" step=\"0.01\">Density offset</NumberInput>\n        </div>\n        <div className=\"form-group form-row\">\n            <ConfInput id=\"simplex_surface_noise\" checked={data.simplex_surface_noise} onChange={handleChange}>Simplex surface noise</ConfInput>\n            <ConfInput id=\"random_density_offset\" checked={data.random_density_offset} onChange={handleChange}>Random density offset</ConfInput>\n            <ConfInput id=\"island_noise_override\" checked={data.island_noise_override} onChange={handleChange}>Island noise override</ConfInput>\n            <ConfInput id=\"amplified\" checked={data.amplified} onChange={handleChange}>Amplified</ConfInput>\n        </div>\n\n        <NoiseSamplingConfig data={data.sampling} onChange={handleSamplingChange}>Sampling</NoiseSamplingConfig>\n        <SlideConfig data={data.top_slide} onChange={handleTopSlideChange}>Top slide</SlideConfig>\n        <SlideConfig data={data.bottom_slide} onChange={handleBottomSlideChange}>Bottom slide</SlideConfig>\n    </fieldset>\n});\n\nconst NoiseSamplingConfig = React.memo(function ({ children, data, onChange }) {\n\n    return <fieldset>\n        <legend>{children}</legend>\n        <div className=\"form-group form-row\">\n            <NumberInput name=\"xz_scale\" value={data.xz_scale} upChange={onChange}>XY scale</NumberInput>\n            <NumberInput name=\"y_scale\" value={data.y_scale} upChange={onChange}>Y scale</NumberInput>\n            <NumberInput name=\"xz_factor\" value={data.xz_factor} upChange={onChange}>XZ factor</NumberInput>\n            <NumberInput name=\"y_factor\" value={data.y_factor} upChange={onChange}>Y factor</NumberInput>\n        </div>\n    </fieldset>\n});\n\nconst SlideConfig = React.memo(function ({ children, data, onChange }) {\n\n    return <fieldset>\n        <legend>{children}</legend>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"target\" value={data.target} upChange={onChange} min={null}>Target</NumberInput>\n            <NumberInput id=\"size\" value={data.size} upChange={onChange} max=\"256\">Size</NumberInput>\n            <NumberInput id=\"offset\" value={data.offset} upChange={onChange} min={null}>Offset</NumberInput>\n        </div>\n    </fieldset>\n});\n","import React, { useContext } from 'react';\nimport { Biome } from './biome/Biome';\nimport { Button } from './../ui/Button';\nimport { MenuItem, NavBar } from './../ui/Menu';\nimport { Dimension } from './dimension/Dimension';\nimport { DataContext } from './../context/DataContext';\nimport { RawConfiguredFeature } from './feature/ConfiguredFeature';\nimport { capitalize } from '../utils/data';\nimport { buildZip } from '../utils/zip';\nimport { SurfaceBuilder } from './surface/SurfaceBuilder';\nimport { NoiseSettings } from './noise/NoiseSettings';\nimport { displayNamespacedKey } from '../utils/data';\nimport { useMenu } from '../hooks/ui';\n\nexport function Datapack() {\n    const context = useContext(DataContext);\n    const custom = context.custom;\n    const namespace = context.namespace;\n    const [page, index, setMenu] = useMenu();\n\n    const handleSave = function (type, data) {\n        const method = 'update' + (type === 'surface' ? 'SurfacesBuilder' : capitalize(type)) + 's'\n        custom[method](data);\n        setMenu(null);\n        window.scrollTo(0, 0);\n    }\n\n    return <div>\n        <NavBar>\n            <nav className=\"tabs\"><ul>\n                <MenuItem onClick={e => setMenu(e, 'stats')} active={page === 'stats'}>Stats</MenuItem>\n                <MenuItem onClick={e => setMenu(e, 'biome')} active={page === 'biome'}>Biome</MenuItem>\n                <MenuItem onClick={e => setMenu(e, 'surface')} active={page === 'surface'}>Surface builders</MenuItem>\n                <MenuItem onClick={e => setMenu(e, 'feature')} active={page === 'feature'}>Feature</MenuItem>\n                <MenuItem onClick={e => setMenu(e, 'dimension')} active={page === 'dimension'}>Dimension</MenuItem>\n                <MenuItem onClick={e => setMenu(e, 'noise')} active={page === 'noise'}>Noise</MenuItem>\n            </ul></nav>\n        </NavBar>\n        <div className=\"content\">\n            {page === 'biome' && <Biome onSave={biome => handleSave('biome', biome)} data={custom.biomes[index]} />}\n            {page === 'surface' && <SurfaceBuilder onSave={surface => handleSave('surface', surface)} data={custom.surfaces[index]} />}\n            {page === 'feature' && <RawConfiguredFeature onSave={feature => handleSave('feature', feature)} data={custom.features[index]} />}\n            {page === 'noise' && <NoiseSettings onSave={noise => handleSave('noise', noise)} data={custom.noises[index]} />}\n            {page === 'dimension' && <Dimension onSave={dimension => handleSave('dimension', dimension)} data={custom.dimensions[index]} />}\n            {page === 'stats' && <><h2>Datapack {namespace}</h2><Stats custom={custom} namespace={namespace} setPage={setMenu} /></>}\n        </div>\n    </div>\n}\n\nfunction Stats({custom, namespace, setPage}) {\n\n    const handleGenerateClick = function(e) {\n        e.preventDefault();\n        buildZip(custom);\n    }\n\n    const mayGenerate = Object.values(custom).some(content => {\n        if (Array.isArray(content)) {\n            return content.length;\n        }\n        return false;\n    });\n\n    return <div className=\"mtm\">\n        <StatsTitle data={custom.biomes} namespace={namespace} onClick={(e, i) => setPage(e, 'biome', i)}>custom biome</StatsTitle>\n        <StatsTitle data={custom.dimensions} namespace={namespace} onClick={(e, i) => setPage(e, 'dimension', i)}>custom dimension</StatsTitle>\n        <StatsTitle data={custom.features} namespace={namespace} onClick={(e, i) => setPage(e, 'feature', i)}>configured feature</StatsTitle>\n        <StatsTitle data={custom.surfaces} namespace={namespace} onClick={(e, i) => setPage(e, 'surface', i)}>configured surface builder</StatsTitle>\n        <StatsTitle data={custom.noises} namespace={namespace} onClick={(e, i) => setPage(e, 'noise', i)}>custom noise</StatsTitle>\n        {mayGenerate && <p><Button type=\"submit\" onClick={handleGenerateClick}>Generate</Button></p>}\n    </div>\n}\n\nfunction StatsTitle({ children, data, namespace, onClick }) {\n    return <>\n        <h5><strong>{data.length}</strong> {children}{data.length > 1 && 's'}</h5>\n        <ul>\n            {data.map((d, i) => {\n                const name = displayNamespacedKey(d.key, namespace);\n                return <li key={i}><a href=\"#edit\" onClick={(e) => onClick(e, i)}>{name}</a></li>\n            })}\n        </ul>\n    </>\n}","import React, { useState } from 'react';\nimport { Button } from '../ui/Button';\nimport { readZip } from '../utils/zip';\nimport { NavBar } from '../ui/Menu';\n\nexport function DatapackForm({onCreate}) {\n\n    const [error, setError] = useState(null);\n\n    const handleCreate = function(e) {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const namespace = data.get('namespace');\n        onCreate([namespace, undefined]);\n    };\n\n    const handleFile = function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const file = (e.dataTransfer || e.target).files[0];\n        readZip(file)\n            .then(onCreate)\n            .catch(error => {\n                console.error(error);\n                setError(error.message);\n            });\n    };\n    const handleDrag = function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n    };\n\n    return <div className=\"first-screen\" onDragStart={handleDrag} onDragEnter={handleDrag} onDragOver={handleDrag} onDrop={handleFile}>\n        <NavBar>\n            <h2>Dimension datapack generator</h2>\n        </NavBar>\n        <form className=\"content\" onSubmit={handleCreate}>\n            <div className=\"form-control\">\n                <label htmlFor=\"namespace\">Default namespace</label><br />\n                <input type=\"text\" name=\"namespace\" id=\"namespace\" required pattern=\"[a-z0-9._-]+\" autoCapitalize=\"none\" spellCheck=\"false\" autoComplete=\"off\" aria-describedby=\"namespaceHelp\" />\n                <p className=\"help2\"><small id=\"namespaceHelp\" className=\"form-text text-muted\">This differentiates the datapack from the vanilla functions. Namespaces and identifiers may only contain letters, numbers and <code>._-</code> characters. This namespace is not final, you can edit the vanilla dimensions in the following menus.</small></p>\n                <div className=\"actions\">\n                    <Button type=\"submit\">Create</Button>\n                    <input type=\"file\" name=\"load-existing-zip\" id=\"load-existing-zip\" accept=\".zip\" onChange={handleFile} tabIndex=\"0\" /><label htmlFor=\"load-existing-zip\" className=\"btn--info\">Use existing datapack</label>\n                </div>\n                <div className=\"mtm\">\n                    {error !== null && <div className=\"alert--danger\">{error}</div>}\n                    <p className=\"alert--warning\">\n                        This generator is currently built for 1.16.2 pre-1. As it is a beta, you might expect a few bugs.\n                    </p>\n                </div>\n            </div>\n        </form>\n    </div>\n}\n","import React, { useState } from 'react';\nimport './styles/App.scss';\nimport { Datapack } from './components/Datapack';\nimport { DataContextProvider } from './context/DataContext';\nimport { DatapackForm } from './components/DatapackForm';\n\nfunction App() {\n    const [data, setData] = useState(null);\n\n    return <>\n        {data !== null ?\n            <DataContextProvider namespace={data[0]} initial={data[1]}>\n                <Datapack />\n            </DataContextProvider>\n            :\n            <DatapackForm onCreate={setData} />\n        }\n    </>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nwindow.addEventListener('load', () => {\n    document.body.classList.remove('preload');\n});\n\nReactDOM.render(\n    <App />\n,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}