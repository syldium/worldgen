{"version":3,"sources":["components/biome/BiomeDefaults.js","components/biome/BiomeStarts.jsx","ui/Button.jsx","hooks/ui.js","utils/fetch.js","components/feature/FeatureDefaults.js","components/surface/SurfaceBuilderDefaults.js","components/noise/NoiseDefaults.js","components/dimension/DimensionDefaults.js","context/DataContext.jsx","utils/data.js","hooks/context.js","components/NamespacedKey.jsx","hooks/form.js","components/biome/BiomeSpawners.jsx","components/biome/Features.jsx","utils/color.js","components/biome/BiomeEffects.jsx","components/biome/Biome.jsx","ui/Menu.jsx","components/dimension/DimensionType.jsx","ui/NumberList.jsx","components/dimension/BiomeSource.jsx","components/dimension/DimensionGenerator.jsx","utils/hash.js","components/dimension/Dimension.jsx","ui/Input.jsx","components/state/BlockState.jsx","components/state/BlockStateProvider.jsx","components/feature/TreeFeature.jsx","components/feature/Decorator.jsx","components/feature/RandomPatchFeature.jsx","components/state/BlockPredicate.jsx","components/feature/OreFeature.jsx","components/feature/ConfiguredFeature.jsx","utils/zip.js","components/surface/SurfaceBuilder.jsx","components/noise/Structures.jsx","components/noise/NoiseSettings.jsx","components/Datapack.jsx","components/DatapackForm.jsx","App.js","serviceWorker.js","index.js"],"names":["EFFECTS","mood_sound","sound","tick_delay","block_search_extent","offset","sky_color","fog_color","water_color","water_fog_color","FEATURES","STARTS","SPAWNERS_AMBIENT","type","weight","minCount","maxCount","SPAWNERS_CREATURE","SPAWNERS_MONSTER","BiomeStarts","onChange","starts","useEffect","handleChange","useCallback","selectedOptions","map","option","value","options","useMemo","label","className","htmlFor","isMulti","id","defaultValue","filter","o","includes","Button","loading","cat","buttonProps","useToggle","initial","useState","status","setState","toggle","e","preventDefault","current","jsonFetch","url","a","fetch","headers","Accept","response","json","responseData","ok","VANILLA_FEATURES","TAGS_OPTIONS","tag","DECORATORS_OPTIONS","TREE_DECORATORS_OPTIONS","default","probability","ORE_FEATURE_CONFIG","target","predicate_type","state","Name","size","DECORATED_ORE_FEATURE_CONFIG","config","feature","decorator","bottom_offset","top_offset","maximum","count","TREE_FEATURE_CONFIG","heightmap","minimum_size","limit","lower_size","upper_size","decorators","trunk_provider","Properties","axis","leaves_provider","persistent","distance","foliage_placer","radius","height","trunk_placer","base_height","height_rand_a","height_rand_b","RANDOM_PATCH_FEATURE_CONFIG","can_replace","project","need_water","xspread","yspread","zspread","whitelist","snowy","blacklist","tries","state_provider","block_placer","DECORATED_RANDOM_PATCH_CONFIG","outer","inner","chance","DECORATED_TREE_CONFIG","extra_chance","extra_count","DECORATOR_EXTRA_COUNT_DEFAULTS","DECORATOR_DECORATED_DEFAULTS","DECORATOR_RANGE_DEFAULTS","VANILLA_SURFACE_BUILDERS","SURFACE_TYPES_OPTIONS","SURFACE_BUILDER","top_material","under_material","underwater_material","VANILLA_NOISES","STRUCTURES","OVERWORLD_NOISE","bedrock_roof_position","bedrock_floor_position","sea_level","disable_mob_generation","structures","stronghold","spread","spacing","separation","salt","noise","sampling","xz_scale","y_scale","xz_factor","y_factor","top_slide","bottom_slide","size_horizontal","size_vertical","density_factor","density_offset","simplex_surface_noise","random_density_offset","island_noise_override","amplified","default_block","default_fluid","level","DIMENSION","generator","seed","biome_source","biome","settings","VANILLA_DIMENSION_TYPES","NOISES_NAMES","MULTI_NOISE_BIOME_SOURCE","temperature_noise","firstOctave","amplitudes","humidity_noise","altitude_noise","weirdness_noise","biomes","DataContext","React","createContext","vanilla","blocks","dimensions","dimension_types","entities","features","noises","surfaces","custom","updateBiomes","updateDimensions","dimension","updateDimensionTypes","dimension_type","updateFeatures","updateNoises","updateSurfacesBuilders","surface_builder","namespace","DataContextProvider","children","setBiomes","setBlocks","setEntities","useData","customBiomes","then","entity","name","displayName","Provider","objectsEqual","b","Object","keys","length","every","p","displayNamespacedKey","key","defaultNamespace","startsWith","split","findDecorators","f","find","obj","unshift","hasOwnProperty","buildDecorated","decorated","forEach","i","dataUpper","group","data","effects","refitKeys","build","destKey","source","some","n","setData","updateData","object","stored","existing","findIndex","index","push","useKeyedListOptions","category","includeCustom","empty","context","useContext","keyed","struct","NamespacedKey","example","expectBreakage","mayReplaceVanilla","hidden","useRef","setKey","replace","handleKeyChange","toLowerCase","handleReplaceTargetChange","selected","handleKeyDown","form","dispatchEvent","Event","cancelable","handleToggle","inputValue","hiddenInputValue","style","width","Math","max","apply","dummyOnChange","console","log","required","pattern","placeholder","autoCapitalize","spellCheck","autoComplete","onKeyPress","ref","tabIndex","opacity","position","onClick","crudReducer","action","ADD","payload","UPDATE","arrayMove","Error","element","REMOVE","useCrud","useReducer","useCrudPreset","dispatch","add","CRUD","update","previous","oldIndex","newIndex","remove","useBlocksOptions","mapped","block","useValueChange","changeCallback","isNaN","parseFloat","dataset","checked","useJsonEffect","props","JSON","stringify","useKeyedOptionsState","multiple","Array","isArray","selection","setSelection","setSelectionFromOptions","BiomeSpawners","ambient","creature","misc","monster","water_ambient","water_creature","spawners","setSpawners","groupSpawners","SpawnGroup","visibility","text","handleAdd","original","spawner","handleRemove","values","def","SpawnDefinition","onDelete","memo","definition","setDefinition","field","parseInt","handleCountChange","selectedOption","min","prev","next","GenFeatures","levels","setLevels","handleLevelChange","priority","list","elements","GenFeaturesLevel","integerColorToHex","color","toString","padStart","BiomeEffects","colors","setColors","optional","toggleOption","handleColorChange","handleToggleChange","foliage_color","grass_color","Biome","onSave","handleStartsChange","handleEffectsChange","handleFeaturesChange","handleSpawnersChange","handleSubmit","formData","fromEntries","FormData","spawn_costs","carvers","air","onSubmit","BiomeCategory","BiomePrecipitation","precipitation","SurfaceBuilder","step","scale","downfall","depth","temperature","MenuItem","active","href","DimensionType","NumberList","numbers","val","pos","NumberInput","number","BiomeSource","setSource","handleSeedChange","handleTypeChange","handleCheckerboardSourceChange","handleFixedSourceChange","handleMultiSourceChange","s","SeedField","CheckerboardBiomeSource","FixedBiomeSource","MultiNoiseBiomeSource","setNumber","useNumber","setScale","isClearable","setBiome","advanced","toggleAdvanced","handleNoiseChange","handleAddClick","parameters","altitude","weirdness","humidity","handleDeleteClick","entry","BiomeSelection","biomesOptions","alignItems","PerlinNoiseParameters","str","toUpperCase","substr","objects","hasDuplicatedObjects","handleFirstOctaveChange","handleAmplitudesChange","handleBiomeChange","rainfall","handleParameterChange","DimensionGenerator","handleSettingsChange","handleBiomeSourceChange","Settings","setText","hash","imul","charCodeAt","hashCode","Dimension","handleGeneratorChange","get","ConfInput","attr","defaultChecked","uId","random","data-name","BlockState","states","properties","actual","getStateValue","handlePropertiesChange","flexGrow","BlockStateProperties","BlocksList","handleStateChange","filteredOptions","d","handlePropertyChange","handleCheckboxChange","handleNumberChange","selects","possible","num_values","BlockStateProvider","provider","setProvider","handleSimpleStateChange","handleWeighestStateChange","entries","filteredBlocks","WeightedStateProvider","handleWeightChange","v","TreeFeatureConfig","configuration","setConfig","handleTrunkProviderChange","handleLeavesProviderChange","handleFoliagePlacerChange","handleTrunkPlacerChange","handleDecoratorsChange","FoliagePlacer","placer","TrunkPlacer","TreeDecorators","handleValueChange","TreeDecorator","setDecorator","handleSelectChange","handleAlterGroundChange","handleProbabilityChange","CustomTag","indexOf","fontWeight","fontSize","display","DecoratorsList","shouldCancelStart","parentNode","classList","contains","SortableDecoratorsList","onSortEnd","SortableContainer","Decorator","SortableElement","handleConfigChange","ChanceDecorator","CountDecorator","ExtraCountDecorator","DecoratedDecorator","RangeDecorator","handleChanceChange","configured","RandomPatchFeature","handleStateProviderChange","handleWhitelistChange","handleBlacklistChange","BlockPredicate","predicate","setPredicate","handleBlockChange","handleTagChange","t","OreFeatureConfig","handlePredicateChange","RawConfiguredFeature","decorators_","feature_","setFeature","setDecorators","handleFeatureChange","DIMENSIONS_PATH","WORLDGEN_PATH","LEGACY_PATH_DETECTION","LEGACY_DIMENSIONS_PATH","LEGACY_WORLDGEN_PATH","readZip","file","Promise","resolve","reject","JSZip","loadAsync","zip","mcmeta","promises","path","dir","legacy","match","regex","parseFile","async","all","catch","extractDatapack","getFolderType","folder","pathRegex","filename","contentPromise","exec","success","content","parse","error","message","writeFile","el","w","handleTopMaterialChange","handleUnderMaterialChange","handleUnderwaterMaterialChange","Structures","handleStrongholdChange","handleStructuresChange","Stronghold","StructuresList","enabled","setStronghold","structure","Structure","handleSpacingChange","handleDelete","NoiseSettings","NoiseConfig","handleSamplingChange","handleTopSlideChange","handleBottomSlideChange","NoiseSamplingConfig","SlideConfig","Datapack","page","menu","setMenu","handleStatsClick","handleAddBiomeClick","handleAddDimensionClick","handleAddFeatureClick","handleAddNoiseClick","handleAddSurfaceBuilderClick","onBiomeSave","onDimensionSave","onFeatureSave","onNoiseSave","onSurfaceBuilderSave","editBiome","editDimension","editFeature","editNoise","editSurface","Stats","mayGenerate","StatsTitle","pack","pack_format","description","generateAsync","saveAs","buildZip","DatapackForm","onCreate","setError","handleFile","stopPropagation","dataTransfer","files","handleDrag","undefined","onDragStart","onDragEnter","onDragOver","onDrop","aria-describedby","accept","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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AAmB,CAC5B,OACA,YACA,cACA,sBACA,eACA,aACA,uBACA,QACA,uBACA,uBACA,eACA,mBACA,kBACA,YACA,4BACA,2BACA,iBACA,iBACA,gBACA,gBACA,gBACA,qBACA,kBACA,iBACA,gBACA,iBACA,gBACA,qBACA,aACA,YACA,YACA,cACA,kBACA,iBACA,eACA,YACA,YACA,WACA,eACA,SACA,QACA,aACA,YACA,YACA,cACA,YACA,mBACA,cACA,sBACA,eACA,cACA,SACA,qBACA,cACA,eACA,gBACA,uBACA,cACA,eACA,WACA,aACA,YACA,WACA,eACA,aACA,kBACA,uBACA,qBACA,sBACA,kBACA,gBACA,oBACA,mBACA,oBACA,qBACA,uBACA,sBACA,qBACA,oBACA,sBACA,qBACA,kBACA,oBACA,2BACA,cACA,qBACA,wBACA,mBACA,mBACA,qBACA,mBACA,eACA,sBACA,yBACA,yBACA,0BACA,4BACA,mBACA,wBACA,sBACA,wBACA,sBACA,uBACA,qBACA,uBACA,qBACA,uBACA,qBACA,YACA,gBACA,kBACA,oBACA,kBACA,oBACA,oBACA,iBACA,WACA,aACA,cACA,cACA,eACA,WACA,WACA,iBACA,WACA,eACA,cACA,YACA,eACA,cACA,mBACA,mBACA,gBACA,wBACA,eACA,uBACA,sBACA,oBACA,MACA,WACA,QACA,SACA,SACA,OACA,cACA,YACA,sBACA,mBACA,cACA,YACA,aACA,cACA,eACA,eACA,cACA,iBACA,gBACA,eACA,eACA,yBACA,kCACA,2BACA,+BACA,6BACA,wBACA,sBACA,mBACA,0BACA,gBACA,aACA,sBACA,iBACA,cACA,cACA,mBACA,oBACA,qBACA,cACA,eACA,oBACA,6BAGSC,EAAe,CACxB,cACA,QACA,sBACA,UACA,oBACA,uBACA,qBACA,OACA,WACA,gBACA,aACA,UACA,YACA,UACA,YACA,SACA,eACA,eACA,gBACA,QACA,gBACA,QACA,gBACA,oBACA,cACA,SACA,OACA,UACA,cACA,YACA,qBACA,oBA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","file":"static/js/main.cb3620d7.chunk.js","sourcesContent":["export const EFFECTS = {\n    mood_sound: {\n        sound: \"minecraft:ambient.cave\",\n        tick_delay: 6000,\n        block_search_extent: 8,\n        offset: 2.0\n    },\n    sky_color: 7907327,\n    fog_color: 12638463,\n    water_color: 4159204,\n    water_fog_color: 329011\n}\n\nexport const FEATURES = [\n    [],\n    [\n      \"minecraft:lake_water\",\n      \"minecraft:lake_lava\"\n    ],\n    [],\n    [\n      \"minecraft:monster_room\"\n    ],\n    [],\n    [],\n    [\n      \"minecraft:ore_dirt\",\n      \"minecraft:ore_gravel\",\n      \"minecraft:ore_granite\",\n      \"minecraft:ore_diorite\",\n      \"minecraft:ore_andesite\",\n      \"minecraft:ore_coal\",\n      \"minecraft:ore_iron\",\n      \"minecraft:ore_gold\",\n      \"minecraft:ore_redstone\",\n      \"minecraft:ore_diamond\",\n      \"minecraft:ore_lapis\",\n      \"minecraft:disk_sand\",\n      \"minecraft:disk_clay\",\n      \"minecraft:disk_gravel\"\n    ],\n    [],\n    [\n      \"minecraft:patch_tall_grass_2\",\n      \"minecraft:plain_vegetation\",\n      \"minecraft:flower_plain_decorated\",\n      \"minecraft:patch_grass_plain\",\n      \"minecraft:brown_mushroom_normal\",\n      \"minecraft:red_mushroom_normal\",\n      \"minecraft:patch_sugar_cane\",\n      \"minecraft:patch_pumpkin\",\n      \"minecraft:spring_water\",\n      \"minecraft:spring_lava\"\n    ],\n    [\n      \"minecraft:freeze_top_layer\"\n    ]\n]\n\nexport const STARTS = [\n    \"minecraft:village_plains\",\n    \"minecraft:pillager_outpost\",\n    \"minecraft:mineshaft\",\n    \"minecraft:stronghold\",\n    \"minecraft:ruined_portal\"\n]\n\nexport const SPAWNERS_AMBIENT = [\n    {\n        type: \"minecraft:bat\",\n        weight: 10,\n        minCount: 8,\n        maxCount: 8\n    }\n];\n\nexport const SPAWNERS_CREATURE = [\n    {\n        type: \"minecraft:sheep\",\n        weight: 12,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:pig\",\n        weight: 10,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:chicken\",\n        weight: 10,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:cow\",\n        weight: 8,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:horse\",\n        weight: 5,\n        minCount: 2,\n        maxCount: 6\n    },\n    {\n        type: \"minecraft:donkey\",\n        weight: 1,\n        minCount: 1,\n        maxCount: 3\n    }\n];\n\nexport const SPAWNERS_MONSTER = [\n    {\n        type: \"minecraft:spider\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:zombie\",\n        weight: 95,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:zombie_villager\",\n        weight: 5,\n        minCount: 1,\n        maxCount: 1\n    },\n    {\n        type: \"minecraft:skeleton\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:creeper\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:slime\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:enderman\",\n        weight: 10,\n        minCount: 1,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:witch\",\n        weight: 5,\n        minCount: 1,\n        maxCount: 1\n    },\n];","import React, { useCallback, useMemo, useEffect } from 'react';\nimport Select from 'react-select';\nimport { STARTS } from './BiomeDefaults';\n\nexport default function BiomeStarts({onChange, starts = STARTS}) {\n    useEffect(function () {\n        onChange(starts);\n    }, [onChange, starts]);\n\n    const handleChange = useCallback(function(selectedOptions) {\n        onChange(selectedOptions === null ? [] : selectedOptions.map(option => option.value));\n    }, [onChange]);\n\n    const options = useMemo(function() {\n        return [\n            \"pillager_outpost\",\n            \"mineshaft\",\n            \"mineshaft_mesa\",\n            \"mansion\",\n            \"jungle_pyramid\",\n            \"desert_pyramid\",\n            \"igloo\",\n            \"shipwreck\",\n            \"shipwreck_beached\",\n            \"swamp_hut\",\n            \"stronghold\",\n            \"monument\",\n            \"ocean_ruin_cold\",\n            \"ocean_ruin_warm\",\n            \"fortress\",\n            \"nether_fossil\",\n            \"end_city\",\n            \"buried_treasure\",\n            \"bastion_remnant\",\n            \"village_plains\",\n            \"village_desert\",\n            \"village_savanna\",\n            \"village_snovy\",\n            \"village_taiga\",\n            \"ruined_portal\",\n            \"ruined_portal_desert\",\n            \"ruined_portal_jungle\",\n            \"ruined_portal_swamp\",\n            \"ruined_portal_mountain\",\n            \"ruined_portal_ocean\",\n            \"ruined_portal_nether\"\n        ].map(option => ({ value: 'minecraft:' + option, label: 'minecraft:' + option }));\n    }, []);\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"starts\">Structures</label>\n        <Select isMulti id=\"starts\" options={options} onChange={handleChange} defaultValue={options.filter(o => starts.includes(o.value))} />\n    </div>;\n}","import React from 'react';\n\nexport function Button ({loading, cat = 'primary', ...buttonProps}) {\n    return <button className={`btn btn--${cat}`} {...buttonProps}></button>\n}\n","import { useState } from \"react\";\n\n/**\n * @param {boolean} initial \n * @returns {[boolean, function(): void]}\n */\nexport function useToggle(initial = false) {\n    const [status, setState] = useState(initial);\n    const toggle = function (e = null) {\n        if (typeof e === 'boolean') {\n            setState(e);\n            return;\n        }\n        if (e !== null) {\n            e.preventDefault();\n        }\n        setState(current => !current);\n    }\n    return [status, toggle];\n}","/**\n * @param {string} url\n * @param {object} options\n */\nexport async function jsonFetch(url, options) {\n    const response = await fetch(url, {\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        ...options\n    });\n\n    const responseData = await response.json();\n    if (response.ok) {\n        return responseData;\n    }\n    throw responseData;\n}","export const VANILLA_FEATURES = [\n    \"nope\",\n    \"end_spike\",\n    \"end_gateway\",\n    \"end_gateway_delayed\",\n    \"chorus_plant\",\n    \"end_island\",\n    \"end_island_decorated\",\n    \"delta\",\n    \"small_basalt_columns\",\n    \"large_basalt_columns\",\n    \"basalt_blobs\",\n    \"blackstone_blobs\",\n    \"glowstone_extra\",\n    \"glowstone\",\n    \"crimson_forest_vegetation\",\n    \"warped_forest_vegetation\",\n    \"nether_sprouts\",\n    \"twisting_vines\",\n    \"weeping_vines\",\n    \"basalt_pillar\",\n    \"seagrass_cold\",\n    \"seagrass_deep_cold\",\n    \"seagrass_normal\",\n    \"seagrass_river\",\n    \"seagrass_deep\",\n    \"seagrass_swamp\",\n    \"seagrass_warm\",\n    \"seagrass_deep_warm\",\n    \"sea_pickle\",\n    \"ice_spike\",\n    \"ice_patch\",\n    \"forest_rock\",\n    \"seagrass_simple\",\n    \"iceberg_packed\",\n    \"iceberg_blue\",\n    \"kelp_cold\",\n    \"kelp_warm\",\n    \"blue_ice\",\n    \"bamboo_light\",\n    \"bamboo\",\n    \"vines\",\n    \"lake_water\",\n    \"lake_lava\",\n    \"disk_clay\",\n    \"disk_gravel\",\n    \"disk_sand\",\n    \"freeze_top_layer\",\n    \"bonus_chest\",\n    \"void_start_platform\",\n    \"monster_room\",\n    \"desert_well\",\n    \"fossil\",\n    \"spring_lava_double\",\n    \"spring_lava\",\n    \"spring_delta\",\n    \"spring_closed\",\n    \"spring_closed_double\",\n    \"spring_open\",\n    \"spring_water\",\n    \"pile_hay\",\n    \"pile_melon\",\n    \"pile_snow\",\n    \"pile_ice\",\n    \"pile_pumpkin\",\n    \"patch_fire\",\n    \"patch_soul_fire\",\n    \"patch_brown_mushroom\",\n    \"patch_red_mushroom\",\n    \"patch_crimson_roots\",\n    \"patch_sunflower\",\n    \"patch_pumpkin\",\n    \"patch_taiga_grass\",\n    \"patch_berry_bush\",\n    \"patch_grass_plain\",\n    \"patch_grass_forest\",\n    \"patch_grass_badlands\",\n    \"patch_grass_savanna\",\n    \"patch_grass_normal\",\n    \"patch_grass_taiga\",\n    \"patch_grass_taiga_2\",\n    \"patch_grass_jungle\",\n    \"patch_dead_bush\",\n    \"patch_dead_bush_2\",\n    \"patch_dead_bush_badlands\",\n    \"patch_melon\",\n    \"patch_berry_sparse\",\n    \"patch_berry_decorated\",\n    \"patch_waterlilly\",\n    \"patch_tall_grass\",\n    \"patch_tall_grass_2\",\n    \"patch_large_fern\",\n    \"patch_cactus\",\n    \"patch_cactus_desert\",\n    \"patch_cactus_decorated\",\n    \"patch_sugar_cane_swamp\",\n    \"patch_sugar_cane_desert\",\n    \"patch_sugar_cane_badlands\",\n    \"patch_sugar_cane\",\n    \"brown_mushroom_nether\",\n    \"red_mushroom_nether\",\n    \"brown_mushroom_normal\",\n    \"red_mushroom_normal\",\n    \"brown_mushroom_taiga\",\n    \"red_mushroom_taiga\",\n    \"brown_mushroom_giant\",\n    \"red_mushroom_giant\",\n    \"brown_mushroom_swamp\",\n    \"red_mushroom_swamp\",\n    \"ore_magma\",\n    \"ore_soul_sand\",\n    \"ore_gold_deltas\",\n    \"ore_quartz_deltas\",\n    \"ore_gold_nether\",\n    \"ore_quartz_nether\",\n    \"ore_gravel_nether\",\n    \"ore_blackstone\",\n    \"ore_dirt\",\n    \"ore_gravel\",\n    \"ore_granite\",\n    \"ore_diorite\",\n    \"ore_andesite\",\n    \"ore_coal\",\n    \"ore_iron\",\n    \"ore_gold_extra\",\n    \"ore_gold\",\n    \"ore_redstone\",\n    \"ore_diamond\",\n    \"ore_lapis\",\n    \"ore_infested\",\n    \"ore_emerald\",\n    \"ore_debris_large\",\n    \"ore_debris_small\",\n    \"crimson_fungi\",\n    \"crimson_fungi_planted\",\n    \"warped_fungi\",\n    \"warped_fungi_planted\",\n    \"huge_brown_mushroom\",\n    \"huge_red_mushroom\",\n    \"oak\",\n    \"dark_oak\",\n    \"birch\",\n    \"acacia\",\n    \"spruce\",\n    \"pine\",\n    \"jungle_tree\",\n    \"fancy_oak\",\n    \"jungle_tree_no_vine\",\n    \"mega_jungle_tree\",\n    \"mega_spruce\",\n    \"mega_pine\",\n    \"swamp_tree\",\n    \"jungle_bush\",\n    \"oak_badlands\",\n    \"spruce_snovy\",\n    \"flower_warm\",\n    \"flower_default\",\n    \"flower_forest\",\n    \"flower_swamp\",\n    \"flower_plain\",\n    \"flower_plain_decorated\",\n    \"forest_flower_vegetation_common\",\n    \"forest_flower_vegetation\",\n    \"dark_forest_vegetation_brown\",\n    \"dark_forest_vegetation_red\",\n    \"warm_ocean_vegetation\",\n    \"forest_flower_trees\",\n    \"taiga_vegetation\",\n    \"trees_shattered_savanna\",\n    \"trees_savanna\",\n    \"birch_tall\",\n    \"trees_mountain_edge\",\n    \"trees_mountain\",\n    \"trees_water\",\n    \"birch_other\",\n    \"plain_vegetation\",\n    \"trees_jungle_edge\",\n    \"trees_giant_spruce\",\n    \"trees_giant\",\n    \"trees_jungle\",\n    \"bamboo_vegetation\",\n    \"mushroom_field_vegetation\"\n];\n\nexport const TAGS_OPTIONS = [\n    'acacia_logs',\n    'anvil',\n    'bamboo_plantable_on',\n    'banners',\n    'base_stone_nether',\n    'base_stone_overworld',\n    'beacon_base_blocks',\n    'beds',\n    'beehives',\n    'bee_growables',\n    'birch_logs',\n    'buttons',\n    'campfires',\n    'carpets',\n    'climbable',\n    'corals',\n    'coral_blocks',\n    'coral_plants',\n    'crimson_stems',\n    'crops',\n    'dark_oak_logs',\n    'doors',\n    'dragon_immune',\n    'enderman_holdable',\n    'fence_gates',\n    'fences',\n    'fire',\n    'flowers',\n    'flower_pots',\n    'gold_ores',\n    'guarded_by_piglins',\n    'hoglin_repellents',\n    'ice',\n    'impermeable',\n    'infiniburn_end',\n    'infiniburn_nether',\n    'infiniburn_overworld',\n    'jungle_logs',\n    'leaves',\n    'logs',\n    'logs_that_burn',\n    'mushroom_grow_block‌',\n    'non_flammable_wood',\n    'oak_logs',\n    'piglin_repellents',\n    'planks',\n    'portals',\n    'pressure_plates',\n    'prevent_mob_spawning_inside',\n    'rails',\n    'sand',\n    'saplings',\n    'shulker_boxes',\n    'signs',\n    'slabs',\n    'small_flowers',\n    'soul_fire_base_blocks',\n    'soul_speed_blocks',\n    'spruce_logs',\n    'stairs',\n    'standing_signs',\n    'stone_bricks',\n    'stone_pressure_plates',\n    'strider_warm_blocks',\n    'tall_flowers',\n    'trapdoors',\n    'underwater_bonemeals',\n    'unstable_bottom_center',\n    'valid_spawn',\n    'walls',\n    'wall_corals',\n    'wall_post_override',\n    'wall_signs',\n    'warped_stems',\n    'wart_blocks',\n    'wither_immune',\n    'wither_summon_base_blocks',\n    'wooden_buttons',\n    'wooden_doors',\n    'wooden_fences',\n    'wooden_pressure_plates',\n    'wooden_slabs',\n    'wooden_stairs',\n    'wooden_trapdoors',\n    'wool'\n].map(tag => ({ value: 'minecraft:' + tag, label: tag }));\n\nexport const DECORATORS_OPTIONS = [\n    { value: 'chance', label: 'Chance' },\n    { value: 'count', label: 'Count' },\n    { value: 'count_extra', label: 'Count extra' },\n    { value: 'count_multilayer', label: 'Count multi layer' },\n    { value: 'decorated', label: 'Decorated' },\n    { value: 'fire', label: 'Fire' },\n    { value: 'range', label: 'Range' },\n    { value: 'range_very_biased', label: 'Range very biased' },\n    { value: 'square', label: 'Square' }\n].map(o => {\n    o.value = 'minecraft:' + o.value;\n    return o;\n});\n\nexport const TREE_DECORATORS_OPTIONS = [\n    { value: 'alter_ground', label: 'Alter ground' },\n    { value: 'beehive', label: 'Beehive', default: { probability: 0.02 } },\n    { value: 'cocoa', label: 'Cocoa beans', default: { probability: 0.2 } },\n    { value: 'leave_vine', label: 'Leave vine' },\n    { value: 'trunk_vine', label: 'Trunk vine' }\n].map(o => {\n    o.value = 'minecraft:' + o.value;\n    return o;\n});\n\nexport const ORE_FEATURE_CONFIG = {\n    target: {\n        tag: \"minecraft:base_stone_overworld\",\n        predicate_type: \"minecraft:tag_match\"\n    },\n    state: {\n        Name: \"minecraft:gold_ore\"\n    },\n    size: 30\n};\n\nexport const DECORATED_ORE_FEATURE_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        feature: {\n                            config: ORE_FEATURE_CONFIG,\n                            type: \"minecraft:ore\"\n                        },\n                        decorator: {\n                            config: {\n                                bottom_offset: 0,\n                                top_offset: 0,\n                                maximum: 32\n                            },\n                            type: \"minecraft:range\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                },\n                decorator: {\n                    config: {},\n                    type: \"minecraft:square\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 2\n            },\n            type: \"minecraft:count\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const TREE_FEATURE_CONFIG = {\n    heightmap: \"OCEAN_FLOOR\",\n    minimum_size: {\n        limit: 1,\n        lower_size: 0,\n        upper_size: 1,\n        type: \"minecraft:two_layers_feature_size\"\n    },\n    decorators: [],\n    trunk_provider: {\n        state: {\n            Properties: {\n                axis: \"y\"\n            },\n            Name: \"minecraft:birch_log\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    leaves_provider: {\n        state: {\n            Properties: {\n                persistent: \"false\",\n                distance: \"7\"\n            },\n            Name: \"minecraft:birch_leaves\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    foliage_placer: {\n        radius: 2,\n        offset: 0,\n        height: 3,\n        type: \"minecraft:blob_foliage_placer\"\n    },\n    trunk_placer: {\n        base_height: 5,\n        height_rand_a: 2,\n        height_rand_b: 0,\n        type: \"minecraft:straight_trunk_placer\"\n    }\n};\n\nexport const RANDOM_PATCH_FEATURE_CONFIG = {\n    can_replace: false,\n    project: true,\n    need_water: false,\n    xspread: 7,\n    yspread: 3,\n    zspread: 7,\n    whitelist: [\n        {\n            Properties: {\n                snowy: \"false\"\n            },\n            Name: \"minecraft:grass_block\"\n        }\n    ],\n    blacklist: [],\n    tries: 64,\n    state_provider: {\n        state: {\n            Name: \"minecraft:pumpkin\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    block_placer: {\n        type: \"minecraft:simple_block_placer\"\n    }\n}\n\nexport const DECORATED_RANDOM_PATCH_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: RANDOM_PATCH_FEATURE_CONFIG,\n                    type: \"minecraft:random_patch\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:heightmap_spread_double\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                chance: 32\n            },\n            type: \"minecraft:chance\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_TREE_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: TREE_FEATURE_CONFIG,\n                    type: \"minecraft:tree\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:heightmap\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 10,\n                extra_chance: 0.1,\n                extra_count: 1\n            },\n            type: \"minecraft:count_extra\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATOR_EXTRA_COUNT_DEFAULTS = {\n    count: 10,\n    extra_chance: 0.1,\n    extra_count: 1\n}\n\nexport const DECORATOR_DECORATED_DEFAULTS = {\n    outer: {\n        config: {},\n        type: \"minecraft:square\"\n    },\n    inner: {\n        config: {},\n        type: \"minecraft:heightmap\"\n    }\n}\n\nexport const DECORATOR_RANGE_DEFAULTS = {\n    bottom_offset: 4,\n    top_offset: 0,\n    maximum: 64\n}\n","export const VANILLA_SURFACE_BUILDERS = [\n    { value: 'badlands', label: 'Badlands' },\n    { value: 'basalt_deltas', label: 'Basalt Deltas' },\n    { value: 'crimson_forest', label: 'Crimson forest' },\n    { value: 'deset', label: 'Desert' },\n    { value: 'end', label: 'End' },\n    { value: 'eroded_badlands', label: 'Eroded Badlands' },\n    { value: 'frozen_ocean', label: 'Frozen ocean' },\n    { value: 'full_sand', label: 'Full sand' },\n    { value: 'giant_tree_taiga', label: 'Giant tree taiga' },\n    { value: 'grass', label: 'Grass' },\n    { value: 'gravelly_mountain', label: 'Gravelly mountain' },\n    { value: 'ice_spikes', label: 'Ice spikes' },\n    { value: 'mountain', label: 'Mountain' },\n    { value: 'mycelium', label: 'Mycelium' },\n    { value: 'nether', label: 'Nether' },\n    { value: 'nope', label: 'Nope' },\n    { value: 'ocean_sand', label: 'Ocean sand' },\n    { value: 'shattered_savanna', label: 'Shattered savanna' },\n    { value: 'soul_sand_valley', label: 'Soul sand valley' },\n    { value: 'stone', label: 'Stone' },\n    { value: 'swamp', label: 'Swamp' },\n    { value: 'warped_forest', label: 'Warped forest' },\n    { value: 'wooded_badlands', label: 'Wooded badlands' },\n].map(option => {\n    option.value = 'minecraft:' + option.value;\n    return option;\n});\n\nexport const SURFACE_TYPES_OPTIONS = [\n    { value: 'default', label: 'Default' },\n    { value: 'mountain', label: 'Mountain' },\n    { value: 'shattered_savanna', label: 'Shattered savanna' },\n    { value: 'gravelly_mountain', label: 'Gravelly mountain' },\n    { value: 'giant_tree_taiga', label: 'Giant tree taiga' },\n    { value: 'swamp', label: 'Swamp' },\n    { value: 'badlands', label: 'Badlands' },\n    { value: 'wooded_badlands', label: 'Wooded badlands' },\n    { value: 'eroded_badlands', label: 'Eroded badlands' },\n    { value: 'frozen_ocean', label: 'Frozen ocean' },\n    { value: 'nether', label: 'Nether' },\n    { value: 'nether_forest', label: 'Nether forest' },\n    { value: 'soul_sand_valley', label: 'Soul sand valley' },\n    { value: 'basalt_deltas', label: 'Basalt deltas' },\n    { value: 'nope', label: 'Nope' }\n].map(option => {\n    option.value = 'minecraft:' + option.value;\n    return option;\n});\n\nexport const SURFACE_BUILDER = {\n    config: {\n        top_material: {\n            Properties: {\n                snowy: \"false\"\n            },\n            Name: \"minecraft:grass_block\"\n        },\n        under_material: {\n            Name: \"minecraft:dirt\"\n        },\n        underwater_material: {\n            Name: \"minecraft:gravel\"\n        }\n    },\n    type: \"minecraft:default\"\n}","export const VANILLA_NOISES = [\n    { value: 'minecraft:overworld', label: 'Overworld' },\n    { value: 'minecraft:nether', label: 'Nether' },\n    { value: 'minecraft:end', label: 'End' },\n    { value: 'minecraft:amplified', label: 'Amplified' },\n    { value: 'minecraft:caves', label: 'Caves' },\n    { value: 'minecraft:floating_islands', label: 'Floating islands' }\n];\n\nexport const STRUCTURES = [\n    \"ocean_ruin\",\n    \"bastion_remnant\",\n    \"fortress\",\n    \"nether_fossil\",\n    \"igloo\",\n    \"shipwreck\",\n    \"swamp_hut\",\n    \"jungle_pyramid\",\n    \"village\",\n    \"ruined_portal\",\n    \"endcity\",\n    \"buried_treasure\",\n    \"mansion\",\n    \"monument\",\n    \"stronghold\",\n    \"pillager_outpost\",\n    \"desert_pyramid\",\n    \"mineshaft\"\n].map(tag => ({ value: 'minecraft:' + tag, label: tag }));;\n\nexport const OVERWORLD_NOISE = {\n    bedrock_roof_position: -10,\n    bedrock_floor_position: 0,\n    sea_level: 63,\n    disable_mob_generation: false,\n    structures: {\n        stronghold: {\n            distance: 32,\n            spread: 3,\n            count: 128\n        },\n        structures: {\n            \"minecraft:ocean_ruin\": {\n                spacing: 20,\n                separation: 8,\n                salt: 14357621\n            },\n            \"minecraft:bastion_remnant\": {\n                spacing: 27,\n                separation: 4,\n                salt: 30084232\n            },\n            \"minecraft:fortress\": {\n                spacing: 27,\n                separation: 4,\n                salt: 30084232\n            },\n            \"minecraft:nether_fossil\": {\n                spacing: 2,\n                separation: 1,\n                salt: 14357921\n            },\n            \"minecraft:igloo\": {\n                spacing: 32,\n                separation: 8,\n                salt: 14357618\n            },\n            \"minecraft:shipwreck\": {\n                spacing: 24,\n                separation: 4,\n                salt: 165745295\n            },\n            \"minecraft:swamp_hut\": {\n                spacing: 32,\n                separation: 8,\n                salt: 14357620\n            },\n            \"minecraft:jungle_pyramid\": {\n                spacing: 32,\n                separation: 8,\n                salt: 14357619\n            },\n            \"minecraft:village\": {\n                spacing: 32,\n                separation: 8,\n                salt: 10387312\n            },\n            \"minecraft:ruined_portal\": {\n                spacing: 40,\n                separation: 15,\n                salt: 34222645\n            },\n            \"minecraft:endcity\": {\n                spacing: 20,\n                separation: 11,\n                salt: 10387313\n            },\n            \"minecraft:buried_treasure\": {\n                spacing: 1,\n                separation: 0,\n                salt: 0\n            },\n            \"minecraft:mansion\": {\n                spacing: 80,\n                separation: 20,\n                salt: 10387319\n            },\n            \"minecraft:monument\": {\n                spacing: 32,\n                separation: 5,\n                salt: 10387313\n            },\n            \"minecraft:stronghold\": {\n                spacing: 1,\n                separation: 0,\n                salt: 0\n            },\n            \"minecraft:pillager_outpost\": {\n                spacing: 32,\n                separation: 8,\n                salt: 165745296\n            },\n            \"minecraft:desert_pyramid\": {\n                spacing: 32,\n                separation: 8,\n                salt: 14357617\n            },\n            \"minecraft:mineshaft\": {\n                spacing: 1,\n                separation: 0,\n                salt: 0\n            }\n        }\n    },\n    noise: {\n        height: 256,\n        sampling: {\n            xz_scale: 1,\n            y_scale: 1,\n            xz_factor: 80.0,\n            y_factor: 160.0\n        },\n        top_slide: {\n            target: -10,\n            size: 3,\n            offset: 0\n        },\n        bottom_slide: {\n            target: -30,\n            size: 0,\n            offset: 0\n        },\n        size_horizontal: 1,\n        size_vertical: 2,\n        density_factor: 1.0,\n        density_offset: -0.47,\n        simplex_surface_noise: true,\n        random_density_offset: true,\n        island_noise_override: false,\n        amplified: false\n        \n    },\n    default_block: {\n        Name: \"minecraft:stone\"\n    },\n    default_fluid: {\n        Properties: {\n            level: \"0\"\n        },\n        Name: \"minecraft:water\"\n    }\n}\n","export const DIMENSION = {\n    generator: {\n        type: \"minecraft:noise\",\n        seed: 286956243,\n        biome_source: {\n            type: \"minecraft:fixed\",\n            seed: 286956243,\n            biome: \"minecraft:plains\"\n        },\n        settings: \"minecraft:overworld\"\n    },\n    type: \"minecraft:overworld\"\n}\n\nexport const VANILLA_DIMENSION_TYPES = [\n    { value: 'minecraft:overworld', label: 'Overworld' },\n    { value: 'minecraft:overworld_cave', label: 'Overworld caves' },\n    { value: 'minecraft:the_nether', label: 'The Nether' },\n    { value: 'minecraft:the_end', label: 'The End' },\n]\n\nexport const NOISES_NAMES = [\n    'temperature_noise',\n    'humidity_noise',\n    'altitude_noise',\n    'weirdness_noise'\n];\n\nexport const MULTI_NOISE_BIOME_SOURCE = {\n    type: 'minecraft:multi_noise',\n    seed: 286956243,\n    temperature_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    humidity_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    altitude_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    weirdness_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    biomes: []\n};\n\nexport const OVERWORLD_DIMENSION_TYPE = {\n    has_raids: true,\n    logical_height: 256,\n    infiniburn: \"minecraft:infiniburn_overworld\",\n    ambient_light: 0.0,\n    piglin_safe: false,\n    bed_works: true,\n    respawn_anchor_works: false,\n    ultrawarm: false,\n    natural: true,\n    shrunk: false,\n    has_skylight: true,\n    has_ceiling: false\n}\n\nexport const THE_NETHER_DIMENSION_TYPE = {\n    has_raids: false,\n    logical_height: 128,\n    infiniburn: \"minecraft:infiniburn_nether\",\n    ambient_light: 0.1,\n    piglin_safe: true,\n    bed_works: false,\n    respawn_anchor_works: true,\n    ultrawarm: true,\n    natural: false,\n    shrunk: true,\n    fixed_time: 18000,\n    has_skylight: false,\n    has_ceiling: true\n}\n\nexport const THE_END_DIMENSION_TYPE = {\n    has_raids: true,\n    logical_height: 256,\n    infiniburn: \"minecraft:infiniburn_end\",\n    ambient_light: 0.0,\n    piglin_safe: false,\n    bed_works: false,\n    respawn_anchor_works: false,\n    ultrawarm: false,\n    natural: false,\n    shrunk: false,\n    fixed_time: 6000,\n    has_skylight: false,\n    has_ceiling: false\n}\n","import React, { useState, useEffect } from 'react';\nimport { jsonFetch } from '../utils/fetch';\nimport { VANILLA_FEATURES } from '../components/feature/FeatureDefaults';\nimport { useData } from '../hooks/context';\nimport { VANILLA_SURFACE_BUILDERS } from '../components/surface/SurfaceBuilderDefaults';\nimport { VANILLA_NOISES } from '../components/noise/NoiseDefaults';\nimport { VANILLA_DIMENSION_TYPES } from '../components/dimension/DimensionDefaults';\n\nexport const DataContext = React.createContext({\n    vanilla: {\n        biomes: [],\n        blocks: [],\n        dimensions: [],\n        dimension_types: [],\n        entities: [],\n        features: [],\n        noises: [],\n        surfaces: []\n    },\n    custom: {\n        biomes: [],\n        dimensions: [],\n        dimension_types: [],\n        features: [],\n        noises: [],\n        surfaces: [],\n        updateBiomes: (biome) => {},\n        updateDimensions: (dimension) => {},\n        updateDimensionTypes: (dimension_type) => {},\n        updateFeatures: (feature) => {},\n        updateNoises: (noise) => {},\n        updateSurfacesBuilders: (surface_builder) => {}\n    },\n    namespace: ''\n});\n\nexport function DataContextProvider({children, namespace, initial = {}}) {\n    const [biomes, setBiomes] = useState([]);\n    const [blocks, setBlocks] = useState([]);\n    const [entities, setEntities] = useState([]);\n\n    const [customBiomes, updateBiomes] = useData(initial.biomes);\n    const [dimensions, updateDimensions] = useData(initial.dimensions);\n    const [dimension_types, updateDimensionTypes] = useData(initial.dimension_types);\n    const [features, updateFeatures] = useData(initial.features);\n    const [noises, updateNoises] = useData(initial.noises);\n    const [surfaces, updateSurfacesBuilders] = useData(initial.surfaces);\n\n    useEffect(() => {\n        (async function () {\n            jsonFetch('https://unpkg.com/minecraft-data@2.63.0/minecraft-data/data/pc/1.16.1/biomes.json')\n                .then(biomes => setBiomes(biomes));\n            jsonFetch('https://unpkg.com/minecraft-data@2.63.0/minecraft-data/data/pc/1.16.1/blocks.json')\n                .then(blocks => setBlocks(blocks));\n            jsonFetch('https://unpkg.com/minecraft-data@2.63.0/minecraft-data/data/pc/1.16.1/entities.json')\n                .then(entities => setEntities(entities.map(entity => ({ value: 'minecraft:' + entity.name, label: entity.displayName }))));\n        })();\n    }, []);\n\n    return <DataContext.Provider value={{\n        vanilla: {\n            biomes,\n            blocks,\n            dimensions: VANILLA_DIMENSION_TYPES.filter(o => !o.value.includes('cave')),\n            dimension_types: VANILLA_DIMENSION_TYPES,\n            entities,\n            features: VANILLA_FEATURES,\n            noises: VANILLA_NOISES,\n            surfaces: VANILLA_SURFACE_BUILDERS\n        },\n        custom: { biomes: customBiomes, dimensions, dimension_types, features, noises, surfaces,\n            updateBiomes, updateDimensions, updateDimensionTypes, updateFeatures, updateNoises, updateSurfacesBuilders },\n        namespace\n    }}>{children}</DataContext.Provider>\n}","import { MULTI_NOISE_BIOME_SOURCE, NOISES_NAMES } from './../components/dimension/DimensionDefaults';\n\n/**\n * @param {object} a \n * @param {object} b \n * @returns {boolean}\n */\nexport function objectsEqual(a, b) {\n    return Object.keys(a).length === Object.keys(b).length\n        && Object.keys(a).every(p => a[p] === b[p]);\n}\n\n/**\n * @param {string} str \n * @returns {string}\n */\nexport function capitalize(str) {\n    return str[0].toUpperCase() + str.substr(1);\n}\n\n/**\n * @param {string} key \n * @param {string} [defaultNamespace]\n * @returns {string}\n */\nexport function displayNamespacedKey(key, defaultNamespace) {\n    return key.startsWith(defaultNamespace + ':') ? key.split(':')[1] : key;\n}\n\nexport function getStateValue(state, properties = {}) {\n    const actual = properties[state.name];\n    switch (state.type) {\n        case 'bool':\n            return actual === 'true' ? 'true' : 'false';\n        case 'int':\n            return actual || 0;\n        default:\n            return actual || state.values[0];\n    }\n}\n\nexport function hasDuplicatedObjects(objects) {\n    for (const a of objects) {\n        for (const b of objects) {\n            if (a !== b && objectsEqual(a, b)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n/**\n * @param {object} feature Unserialized feature\n * @returns {{type: string, config: object}[]} Decorators list\n */\nexport function findDecorators(feature) {\n    const decorators = [];\n\n    let f = null;\n    (function find(obj) {\n        for (const key of Object.keys(obj)) {\n            if (key === 'decorator') {\n                decorators.unshift(obj[key]);\n                if (f === null && !obj.feature.hasOwnProperty('decorator')) {\n                    f = obj.feature;\n                }\n            } else if (typeof obj[key] === 'object') {\n                find(obj[key]);\n            }\n        }\n    }(feature));\n\n    if (f === null) {\n        f = {};\n    }\n    return [decorators, f];\n}\n\n/**\n * @param {object} feature \n * @param {{type: string, config: object}[]} decorators \n * @param {string} name\n * @returns {object} Decorated feature\n */\nexport function buildDecorated(feature, decorators, name) {\n    if (decorators.length < 1) {\n        return feature;\n    }\n\n    const decorated = { type: 'minecraft:decorated', key: name };\n    let current = decorated;\n    decorators.forEach((decorator, i) => {\n        const f = i === (decorators.length - 1) ? feature : { type: 'minecraft:decorated' };\n        current.config = {\n            feature: f,\n            decorator\n        };\n        current = f;\n        if (i < 1) {\n            f.name = name;\n        }\n    });\n    return decorated;\n}\n\n/**\n * Rename object keys.\n * \n * @param {object} obj \n * @param {object} map \n * @returns {object}\n */\nfunction refitKeys(obj, map) {\n    const build = {};\n    for (const key in obj) {\n        const destKey = map[key] || key;\n\n        let value = obj[key];\n        if (typeof value === 'object') {\n            value = refitKeys(value, map);\n        }\n        build[destKey] = value;\n    }\n    return build;\n}\n\n/**\n * @param {string} group \n * @param {object} data \n * @returns {object}\n */\nexport function dataUpper(group, data) {\n    switch (group) {\n        case 'biomes':\n            // 20w30a: sky_color into effects\n            if (data.hasOwnProperty('sky_color')) {\n                data.effects.sky_color = data.sky_color;\n            }\n            return data;\n        case 'features':\n            // 20w30a: name -> type\n            const [decorators, feature] = findDecorators(data);\n            if (!feature.hasOwnProperty('type')) {\n                feature.type = feature.name;\n                delete feature.name;\n                return buildDecorated(\n                    feature,\n                    decorators.map(decorator => refitKeys(decorator, { name: 'type' })),\n                    data.key\n                );\n            }\n            return data;\n        case 'dimensions':\n            // 20w30a: multi_noise: firstOctave and amplitudes parameters\n            const source = data.generator.biome_source;\n            if (source.type === 'minecraft:multi_noise' && NOISES_NAMES.some(n => !source.hasOwnProperty(n))) {\n                data.generator.biome_source = { ...MULTI_NOISE_BIOME_SOURCE, ...source };\n            }\n            return data;\n        default:\n            // 20w30a: name -> type\n            if (data.hasOwnProperty('name') && !data.hasOwnProperty('type')) {\n                data.type = data.name;\n            }\n            return data;\n    }\n}\n","import { useState, useContext, useMemo } from \"react\";\nimport { DataContext } from \"../context/DataContext\";\nimport { displayNamespacedKey } from \"../utils/data\";\n\n/**\n * @param {object[]} initial\n * @returns {[object[], function(object): void]} \n */\nexport function useData(initial = []) {\n    const [data, setData] = useState(initial);\n    const updateData = function(object) {\n        setData(stored => {\n            const existing = stored.findIndex(({key}) => object.key === key);\n            if (existing > -1 && existing !== object.index) {\n                object.index = stored.length;\n                object.key = object.key + '2';\n                stored.push(object);\n                return stored;\n            }\n\n            if (typeof object.index === 'undefined') {\n                object.index = stored.length;\n                stored.push(object);\n            } else {\n                stored[object.index] = object;\n            }\n            return stored;\n        });\n    }\n    return [data, updateData];\n}\n\n/**\n * @param {('biomes'|'dimensions'|'dimension_types'|'features'|'noises'|'surfaces')} category Data category\n * @param {boolean} [includeCustom]\n * @param {boolean} [empty]\n * @returns {{ value: string, label: string }[]} Options list for react-select\n */\nexport function useKeyedListOptions(category, includeCustom = true, empty = false) {\n    const context = useContext(DataContext);\n    return useMemo(function() {\n        if (empty) {\n            return [];\n        }\n\n        const options = includeCustom ? context.custom[category]\n            .map(keyed => {\n                const name = displayNamespacedKey(keyed.key, context.namespace);\n                return { value: keyed.key, label: '(Custom) ' + name };\n            }) : [];\n\n        let struct = null;\n        context.vanilla[category].forEach(keyed => {\n            if (struct === null) {\n                struct = keyed.hasOwnProperty('displayName') ? 1 : (keyed.hasOwnProperty('label') ? 2 : 3);\n            }\n            switch(struct) {\n                case 1: // displayName\n                    options.push({ value: 'minecraft:' + keyed.name, label: keyed.displayName });\n                    return;\n                case 2: // already option\n                    options.push(keyed);\n                    return;\n                default:\n                    options.push({ value: 'minecraft:' + keyed, label: keyed });\n            }\n        });\n        return options;\n    }, [category, context.custom, context.namespace, context.vanilla, empty, includeCustom]);\n}","import React, { useState, useCallback, useRef, useMemo, useContext, useEffect } from 'react';\nimport { useToggle } from '../hooks/ui';\nimport Select from 'react-select';\nimport { useKeyedListOptions } from '../hooks/context';\nimport { DataContext } from '../context/DataContext';\nimport { Button } from '../ui/Button';\n\nexport function NamespacedKey({ example = 'daily_resource', type, value = '', onChange, expectBreakage = false, mayReplaceVanilla = false }) {\n    // To trigger form submit\n    const hidden = useRef(null);\n\n    // Final namespaced key\n    const [key, setKey] = useState(value);\n\n    const options = useKeyedListOptions(type, false, !mayReplaceVanilla);\n\n    const defaultNamespace = useContext(DataContext).namespace;\n    const [replace, toggle] = useToggle(options.some(o => key === o.value));\n\n    // Adjust value with default namespace if needed\n    const handleKeyChange = useCallback(function (e) {\n        const value = e.target.value.toLowerCase();\n        if (value.includes(':')) {\n            setKey(value);\n        } else {\n            setKey(defaultNamespace + ':' + value);\n        }\n    }, [defaultNamespace, setKey]);\n\n    const handleReplaceTargetChange = useCallback((selected) => setKey(selected.value), [setKey]);\n\n    // Fire onChange\n    useEffect(function() {\n        if (typeof onChange === 'function' && key !== value) {\n            onChange(key);\n        }\n    }, [key, onChange, value]);\n\n    // Allow form submit by pressing enter\n    const handleKeyDown = useCallback(function (e) {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            const form = hidden.current.form;\n            if (form !== null) {\n                form.dispatchEvent(new Event('submit', { cancelable: true }));\n            }\n        }\n    }, []);\n\n    // Remove the \"minecraft:\" part when changing mode\n    const handleToggle = useCallback(function (e) {\n        if (replace && key.startsWith('minecraft:')) {\n            setKey(key => defaultNamespace + ':' + key.split(':')[1]);\n        }\n        toggle(e);\n    }, [defaultNamespace, key, setKey, replace, toggle]);\n\n    // Displayed input value - trim namespace if default\n    const inputValue = useMemo(function () {\n        if (key.startsWith(defaultNamespace + ':')) {\n            return key.split(':')[1];\n        }\n        return key;\n    }, [defaultNamespace, key]);\n\n    // Hidden input value - set to empty when nothing is selected (keeps the key from text mode)\n    const hiddenInputValue = useMemo(function () {\n        if (replace && !options.some(o => o.value === key)) {\n            return '';\n        }\n        return key;\n    }, [key, options, replace]);\n\n    // Adapt select width to its content\n    const style = useMemo(function () {\n        return { width: 8 * Math.max.apply(Math, options.map(o => o.label.length)) + 60 };\n    }, [options]);\n\n    const dummyOnChange = useCallback(console.log, []);\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"key\">{replace ? 'Replace' : 'Key'}</label> :\n        {replace && <div className=\"inbl mls\" id=\"key\" style={style}>\n            <Select options={options} value={options.find(o => key === o.value)} onChange={handleReplaceTargetChange} />\n        </div>}\n        {!replace && <div className=\"inbl mls\">\n            <input type=\"text\" id=\"key\" required pattern=\"^([\\w.-]+:[\\w.-]+)$|^[\\w.-]+$\" placeholder={`Example: ${example}`}\n                autoCapitalize=\"none\" spellCheck=\"false\" autoComplete=\"off\" value={inputValue}\n                onChange={handleKeyChange} onKeyPress={handleKeyDown} />\n        </div>}\n        <input type={replace ? 'text' : 'hidden'} name=\"key\" value={hiddenInputValue} onChange={dummyOnChange} ref={hidden}\n            required tabIndex=\"-1\" style={{ opacity: 0, height: 0, position: 'absolute' }} />\n        {mayReplaceVanilla && <Button cat=\"info mlm\" onClick={handleToggle}>{replace ? 'Create a new one' : 'Replace vanilla'}</Button>}\n        \n        {expectBreakage && value !== key &&\n            <p className=\"alert--warning\">Warning: changing the name of a resource may break other resources that depend on it.</p>\n        }\n        {!mayReplaceVanilla && !replace && key.startsWith('minecraft:') &&\n            <p className=\"alert--warning\">Warning: datapacks cannot currently replace vanilla {type}.</p>\n        }\n    </div>;\n}","import { useReducer, useState, useCallback, useEffect, useContext, useMemo } from \"react\";\nimport { useKeyedListOptions } from \"./context\";\nimport { DataContext } from \"../context/DataContext\";\nimport arrayMove from \"array-move\";\n\nfunction crudReducer(state, action) {\n    switch (action.type) {\n        case ADD:\n            if (action.unshift) {\n                return [action.payload, ...state];\n            }\n            return [...state, action.payload];\n        case UPDATE:\n            if (typeof action.target === 'number' && typeof action.payload === 'number') {\n                return arrayMove(state, action.target, action.payload);\n            }\n            if (typeof action.target === 'undefined') {\n                throw new Error('Cannot update an element without its previous state.');\n            }\n            return state.map(element => element === action.target ? action.payload : element);\n        case REMOVE:\n            return state.filter(element => element !== action.payload);\n        default:\n            return state;\n    }\n}\n\nexport function useCrud(data = []) {\n    return useReducer(crudReducer, data);\n}\n\n/**\n * @param {object[]} [data] \n * @param {object|function (object[]): object} [initial] \n * @returns {[object[], function (SyntheticEvent): void, function (number|object, number|object): void, function (SyntheticEvent, number): void}\n */\nexport function useCrudPreset(data = [], initial = {}, unshift = false) {\n    const [entities, dispatch] = useCrud(data);\n\n    const add = useCallback(function(e) {\n        e.preventDefault();\n        const n = typeof initial === 'function' ? initial(entities) : { ...initial };\n        dispatch({ type: CRUD.ADD, payload: n, unshift });\n    }, [dispatch, entities, initial, unshift]);\n    const update = useCallback(function(state, previous) {\n        if (state.hasOwnProperty('oldIndex') && state.hasOwnProperty('newIndex')) {\n            dispatch({ type: CRUD.UPDATE, target: state.oldIndex, payload: state.newIndex });\n            return;\n        }\n        dispatch({ type: CRUD.UPDATE, target: previous, payload: state });\n    }, [dispatch]);\n    const remove = useCallback(function(e, index) {\n        e.preventDefault();\n        dispatch({ type: CRUD.REMOVE, payload: entities[index] });\n    }, [dispatch, entities]);\n\n    return [entities, add, update, remove];\n}\n\nexport function useBlocksOptions(mapped = true) {\n    const blocks = useContext(DataContext).vanilla.blocks;\n    return useMemo(function() {\n        return mapped ? blocks.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName })): blocks;\n    }, [blocks, mapped]);\n}\n\n/**\n * @param {number} [initial] \n * @returns {function(SyntheticEvent|string|number): void} \n */\nexport function useNumber(initial = 0) {\n    const [n, setState] = useState(initial);\n    const setNumber = function(n) {\n        if (typeof n === 'object') {\n            n = n.target.value;\n        }\n        if (typeof n === 'string') {\n            n = isNaN(n) ? initial : parseInt(n);\n        }\n        setState(n);\n    }\n    return [n, setNumber];\n}\n\nexport function useValueChange(changeCallback, obj) {\n    return useCallback(function(e) {\n        if (e.target.type === 'checkbox') {\n            changeCallback({ ...obj, [e.target.dataset.name || e.target.id || e.target.name]: e.target.checked });\n            return;\n        }\n        const value = isNaN(e.target.value) ? e.target.value : parseFloat(e.target.value);\n        changeCallback({ ...obj, [e.target.dataset.name || e.target.id || e.target.name]: value });\n    }, [changeCallback, obj]);\n}\n\nexport function useJsonEffect(state, props, onChange) {\n    useEffect(() => {\n        if (JSON.stringify(state) !== JSON.stringify(props)) {\n            onChange(state, props);\n        }\n    }, [state, props, onChange]);\n}\n\n/**\n * Fast way to provide a list of options for react-select\n * and store selection as string (list).\n * \n * @param {('biomes'|'dimensions'|'dimension_types'|'features'|'noises'|'surfaces')} category Data category\n * @param {string|string[]} initial Initial selection\n * @param {boolean} [multiple]\n * @returns {[{ value: string, label: string }[], string|string[], function({ value: string }): void]} Options list, currently selected list and his updater\n */\nexport function useKeyedOptionsState(category, initial, multiple) {\n    const options = useKeyedListOptions(category); // Get options\n\n    // Default value for 'multiple' argument\n    if (typeof multiple === 'undefined') {\n        multiple = Array.isArray(initial);\n    }\n\n    // Enhanced use state - usage of options for default value if needed\n    const [selection, setSelection] = useState(initial || function() {\n        if (multiple) {\n            return options.length > 0 ? [options[0].value] : [];\n        }\n        return options.length > 0 ? options[0].value : '';\n    }());\n\n    // End chain react-select change handler\n    const setSelectionFromOptions = useCallback(function(selected) {\n        if (multiple) {\n            setSelection(selected === null ? [] : selected.map(o => o.value));\n        } else {\n            setSelection(selected.value);\n        }\n    }, [multiple]);\n\n    return [options, selection, setSelectionFromOptions];\n}\n\nconst ADD = 'ADD';\nconst UPDATE = 'UPDATE';\nconst REMOVE = 'REMOVE';\nexport const CRUD = { ADD, UPDATE, REMOVE };","import React, { useContext, useEffect, useMemo, useState, useCallback } from 'react';\nimport Select from 'react-select';\nimport { CRUD, useCrud } from \"../../hooks/form\";\nimport { useToggle } from '../../hooks/ui';\nimport { Button } from '../../ui/Button';\nimport { DataContext } from '../../context/DataContext';\nimport { SPAWNERS_AMBIENT, SPAWNERS_CREATURE, SPAWNERS_MONSTER } from './BiomeDefaults';\n\nexport function BiomeSpawners({onChange, data = { ambient: SPAWNERS_AMBIENT, creature: SPAWNERS_CREATURE, misc: [], monster: SPAWNERS_MONSTER, water_ambient: [], water_creature: [] }}) {\n\n    const entities = useContext(DataContext).vanilla.entities;\n    const [spawners, setSpawners] = useState(data);\n\n    const handleChange = useCallback(function(group, groupSpawners) {\n        setSpawners(function(spawners) {\n            const state = {\n                ...spawners,\n                [group]: groupSpawners\n            };\n            onChange(state);\n            return state;\n        });\n    }, [onChange]);\n\n    return <div>\n        <SpawnGroup group=\"ambient\" data={spawners.ambient} onChange={handleChange} entities={entities}>Ambient</SpawnGroup>\n        <SpawnGroup group=\"creature\" data={spawners.creature} onChange={handleChange} entities={entities}>Creature</SpawnGroup>\n        <SpawnGroup group=\"misc\" data={spawners.misc} onChange={handleChange} entities={entities}>Miscellaneous</SpawnGroup>\n        <SpawnGroup group=\"monster\" data={spawners.monster} onChange={handleChange} entities={entities}>Monster</SpawnGroup>\n        <SpawnGroup group=\"water_ambient\" data={spawners.water_ambient} onChange={handleChange} entities={entities}>Water ambient</SpawnGroup>\n        <SpawnGroup group=\"water_creature\" data={spawners.water_creature} onChange={handleChange} entities={entities}>Water creature</SpawnGroup>\n    </div>;\n}\n\nfunction SpawnGroup({children, entities, data = [], group, onChange}) {\n    const [visibility, toggle] = useToggle();\n    const text = visibility ? 'Less...' : 'More...';\n\n    const [spawners, dispatch] = useCrud(data);\n\n    const handleAdd = useCallback(function(e) {\n        e.preventDefault();\n        dispatch({ type: CRUD.ADD, payload: {\n            type: 'minecraft:cow',\n            weight: 1,\n            minCount: 1,\n            maxCount: 1,\n        }});\n        if (!visibility) {\n            toggle();\n        }\n    }, [dispatch, toggle, visibility]);\n\n    const handleChange = useCallback(function(original, spawner) {\n        dispatch({ type: CRUD.UPDATE, target: original, payload: spawner });\n    }, [dispatch]);\n\n    const handleRemove = useCallback(function(spawner) {\n        dispatch({ type: CRUD.REMOVE, payload: spawner });\n    }, [dispatch]);\n\n    useEffect(function() {\n        onChange(group, spawners);\n    }, [group, onChange, spawners]);\n\n    const values = [];\n    if (visibility) {\n        spawners.forEach((def, i) => {\n            const key = `${i}-${def.type}-${def.weight}-${def.minCount}-${def.maxCount}`;\n            values.push(<SpawnDefinition data={def} key={key} onChange={handleChange} onDelete={handleRemove} entities={entities} />);\n        });\n        return <div>\n            <div className=\"toggle-label\">\n                {children} \n                <div className=\"btn-group\">\n                    <Button onClick={handleAdd}>Add</Button>\n                    {spawners.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{text}</Button>} \n                </div>\n            </div>\n            {values}\n        </div>;\n    }\n    \n    return <div className=\"toggle-label\">\n        {children}\n        <div className=\"btn-group\">\n            {spawners.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{text}</Button>}\n            {(spawners.length < 1) && <Button onClick={handleAdd}>Add</Button>}\n        </div>\n    </div>;\n}\n\nconst SpawnDefinition = React.memo(function({entities, onChange, onDelete, data}) {\n\n    const [definition, setDefinition] = useState(data);\n\n    const handleChange = function(e) {\n        const field = typeof e.target === 'undefined' ? 'type' : e.target.id;\n        const value = typeof e.target === 'undefined' ? e.value : parseInt(e.target.value);\n        setDefinition(definition => ({\n            ...definition,\n            [field]: value\n        }));\n        onChange(data, {...data, [field]: value});\n    };\n\n    const handleCountChange = function(e) {\n        const value = parseInt(e.target.value);\n        if ((e.target.id === 'minCount' && value <= definition.maxCount)\n            || (e.target.id === 'maxCount' && value >= definition.minCount)) {\n            setDefinition(definition => ({\n                ...definition,\n                [e.target.id]: value\n            }));\n            onChange(data, {...data, [e.target.id]: value});\n        } \n    };\n\n    const handleDelete = function(e) {\n        e.preventDefault();\n        onDelete(data);\n    };\n\n    const selectedOption = useMemo(function() {\n        return entities.find(o => o.value === definition.type);\n    }, [definition.type, entities]);\n\n    return <div>\n        <div className=\"form-group\">\n            <label>Mob type</label> : <Select options={entities} value={selectedOption} onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <div className=\"form-inline\">\n                <label htmlFor=\"weight\">Weight</label> : <input type=\"number\" id=\"weight\" required value={definition.weight} onChange={handleChange} />\n            </div>\n            <div className=\"form-inline\">\n                <label htmlFor=\"minCount\">Min count</label> : <input type=\"number\" id=\"minCount\" min=\"0\" required value={definition.minCount} onChange={handleCountChange} />\n            </div>\n            <div className=\"form-inline\">\n                <label htmlFor=\"maxCount\">Max count</label> : <input type=\"number\" id=\"maxCount\" min=\"0\" required value={definition.maxCount} onChange={handleCountChange} />\n            </div>\n            <div className=\"form-inline\"><Button cat=\"danger\" onClick={handleDelete}>Delete</Button></div>\n        </div>\n        <hr /> \n    </div>\n}, function(prev, next) {\n    return prev.entities.length === next.entities.length && prev.data === next.data;\n});","import React, { useCallback, useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport { FEATURES } from './BiomeDefaults';\nimport { useKeyedListOptions } from '../../hooks/context';\n\nexport default function GenFeatures({ onChange, features = FEATURES }) {\n\n    const [levels, setLevels] = useState(features);\n\n    const handleLevelChange = useCallback(function(priority, list) {\n        setLevels(levels => {\n            levels[priority] = list;\n            return levels;\n        })\n        onChange(levels);\n    }, [levels, onChange]);\n\n    useEffect(function() {\n        onChange(levels);\n    }, [levels, onChange]);\n\n    const elements = [];\n    levels.forEach((level, i) => {\n        elements.push(<li key={i}><GenFeaturesLevel value={level} onChange={handleLevelChange} priority={i} /></li>);\n    });\n    return <div className=\"form-group\">\n        <label>Features</label>\n        <p className=\"help\"><small className=\"text-muted\">Each generation feature is associated with a priority. The higher the priority, the later the feature will be applied.</small></p>\n        <ol>{elements}</ol>\n    </div>;\n}\n\nfunction GenFeaturesLevel({ onChange, priority, value }) {\n    const options = useKeyedListOptions('features');\n\n    const handleChange = useCallback(function(selectedOptions) {\n        onChange(priority, selectedOptions === null ? [] : selectedOptions.map(option => option.value));\n    }, [onChange, priority]);\n\n    return <Select isMulti options={options} onChange={handleChange} defaultValue={options.filter(o => value.includes(o.value))} />;\n}","export function hexColorToInteger(color) {\n    return parseInt(color.replace(/^#/, ''), 16);\n}\n\nexport function integerColorToHex(color) {\n    return '#' + (color & 0xFFFFFF).toString(16).padStart(6, '0');\n}","import React, { useState, useEffect, useCallback } from 'react';\nimport { integerColorToHex, hexColorToInteger } from '../../utils/color';\nimport { EFFECTS } from './BiomeDefaults';\nimport { useToggle } from '../../hooks/ui';\n\nexport function BiomeEffects({effects = EFFECTS, onChange}) {\n\n    const [colors, setColors] = useState(effects);\n    const [optional, toggleOption] = useToggle(effects.hasOwnProperty('foliage_color') || effects.hasOwnProperty('grass_color'));\n\n    const handleColorChange = useCallback(function(e) {\n        const id = e.target.id;\n        const value = e.target.value;\n        setColors(colors => ({\n            ...colors,\n            [id]: hexColorToInteger(value)\n        }));\n    }, []);\n\n    const handleToggleChange = useCallback(function(e) {\n        toggleOption(e.target.checked);\n    }, [toggleOption]);\n\n    useEffect(function () {\n        const next = { ...colors };\n        if (!optional) {\n            delete next.foliage_color;\n            delete next.grass_color;\n        }\n        onChange(next);\n    }, [optional, colors, onChange]);\n\n    return <>\n        <div className=\"form-inline\">\n            <label htmlFor=\"sky_color\">Sky color</label> : <input type=\"color\" id=\"sky_color\" required value={integerColorToHex(colors.sky_color)} onChange={handleColorChange} />\n        </div>\n        <div className=\"form-inline\">\n            <label htmlFor=\"fog_color\">Fog color</label> : <input type=\"color\" id=\"fog_color\" value={integerColorToHex(colors.fog_color)} onChange={handleColorChange} />\n        </div>\n        <div className=\"form-inline\">\n            <label htmlFor=\"water_color\">Water color</label> : <input type=\"color\" id=\"water_color\" value={integerColorToHex(colors.water_color)} onChange={handleColorChange} />\n        </div>\n        <div className=\"form-inline\">\n            <label htmlFor=\"water_fog_color\">Water fog color</label> : <input type=\"color\" id=\"water_fog_color\" value={integerColorToHex(colors.water_fog_color)} onChange={handleColorChange} />\n        </div>\n        {optional && <>\n            <div className=\"form-inline\">\n                <label htmlFor=\"foliage_color\">Foliage color</label> : <input type=\"color\" id=\"foliage_color\" value={integerColorToHex(colors.foliage_color || 10387789)} onChange={handleColorChange} />\n            </div>\n            <div className=\"form-inline\">\n                <label htmlFor=\"grass_color\">Grass color</label> : <input type=\"color\" id=\"grass_color\" value={integerColorToHex(colors.grass_color || 9470285)} onChange={handleColorChange} />\n            </div>\n        </>}\n        <div className=\"form-inline\">\n            <label htmlFor=\"block-toggle\">Optionals</label> : <input type=\"checkbox\" id=\"block-toggle\" className=\"checkbox\" checked={optional} onChange={handleToggleChange} />\n        </div>\n    </>\n}","import React, { useCallback, useState } from 'react';\nimport BiomeStarts from './BiomeStarts';\nimport Select from 'react-select';\nimport { Button } from '../../ui/Button';\nimport { NamespacedKey } from '../NamespacedKey';\nimport { BiomeSpawners } from './BiomeSpawners';\nimport { STARTS } from './BiomeDefaults';\nimport GenFeatures from './Features';\nimport { BiomeEffects } from './BiomeEffects';\nimport { useKeyedListOptions } from '../../hooks/context';\n\nexport function Biome({data = {}, onSave}) {\n\n    const [state, setState] = useState(data || { starts: STARTS, spawners: []});\n\n    const handleStartsChange = useCallback(function(starts) {\n        setState(state => {\n            state.starts = starts;\n            return state;\n        });\n    }, []);\n\n    const handleEffectsChange = useCallback(function(effects) {\n        setState(state => {\n            state.effects = effects;\n            return state;\n        });\n    }, []);\n\n    const handleFeaturesChange = useCallback(function(features) {\n        setState(state => {\n            state.features = features;\n            return state;\n        });\n    }, []);\n\n    const handleSpawnersChange = useCallback(function(spawners) {\n        setState(state => {\n            state.spawners = spawners;\n            return state;\n        });\n    }, []);\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        const formData = Object.fromEntries(new FormData(e.target));\n        const data = { ...state, ...formData };\n        data.spawn_costs = {};\n        data.carvers =  {\n            air: [\n              \"minecraft:cave\",\n              \"minecraft:canyon\"\n            ]\n        }; // @todo\n        Object.keys(formData).forEach(function(key) {\n            if (!isNaN(formData[key])) {\n                data[key] = parseFloat(formData[key]);\n            }\n        });\n        onSave(data);\n    }, [onSave, state]);\n\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit biome</h3>\n        <NamespacedKey example=\"arctic\" type=\"biomes\" value={data.key} expectBreakage={typeof data.key !== 'undefined'} />\n\n        <fieldset>\n            <legend>Colors</legend>\n            <div className=\"form-row\">\n                <BiomeEffects effects={state.effects} onChange={handleEffectsChange} />\n            </div>\n        </fieldset>\n\n        <fieldset>\n            <BiomeCategory category={data.category} />\n            <BiomePrecipitation value={data.precipitation} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Generation</legend>\n            <SurfaceBuilder value={data.surface_builder} />\n            <BiomeStarts onChange={handleStartsChange} starts={state.starts} />\n            <GenFeatures features={state.features} onChange={handleFeaturesChange} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Creatures</legend>\n            <BiomeSpawners data={state.spawners} onChange={handleSpawnersChange} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Settings</legend>\n            <div className=\"form-group form-row\">\n                <div><label htmlFor=\"scale\">Scale</label> : <input type=\"number\" name=\"scale\" step=\"0.05\" required defaultValue={data.scale || 0.05} /></div>\n                <div><label htmlFor=\"downfall\">Downfall</label> : <input type=\"number\" name=\"downfall\" step=\"0.1\" required defaultValue={data.downfall || 0.4} /></div>\n                <div><label htmlFor=\"depth\">Depth</label> : <input type=\"number\" name=\"depth\" step=\"0.01\" required defaultValue={data.depth || 0.12} /></div>\n                <div><label htmlFor=\"temperature\">Temperature</label> : <input type=\"number\" name=\"temperature\" step=\"0.1\" required defaultValue={data.temperature || 0.8} /></div>\n                <p className=\"mts\"><small className=\"text-muted\">The <em>scale</em> parameter defines terrain amplitude, <em>downfall</em> controls grass and foliage color, <em>depth</em> is the difference from sea level, <em>temperature</em> controls some gameplay features like whether snow golems take damage. The default values are those of the plains biome.</small></p>\n            </div>\n        </fieldset>\n        <div className=\"form-group mlm mbm\">\n            <Button type=\"submit\">Save</Button>\n        </div>\n    </form>;\n}\n\nfunction BiomeCategory({category = 'plains'}) {\n\n    const options = [\n        { value: 'beach', label: 'Beach' },\n        { value: 'desert', label: 'Desert' },\n        { value: 'extreme_hills', label: 'Extreme hills' },\n        { value: 'forest', label: 'Forest' },\n        { value: 'icy', label: 'Icy' },\n        { value: 'jungle', label: 'Jungle' },\n        { value: 'mesa', label: 'Mesa' },\n        { value: 'nether', label: 'Nether' },\n        { value: 'none', label: 'None' },\n        { value: 'ocean', label: 'Ocean' },\n        { value: 'plains', label: 'Plains' },\n        { value: 'river', label: 'River' },\n        { value: 'savanna', label: 'Savanna' },\n        { value: 'swamp', label: 'Swamp' },\n        { value: 'taiga', label: 'Taiga' },\n        { value: 'the_end', label: 'The end' },\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"category\">Category</label>\n        <Select options={options} defaultValue={options.find(o => o.value === category)} name=\"category\" />\n    </div>;\n}\n\nfunction BiomePrecipitation({value = 'rain'}) {\n\n    const options = [\n        { value: 'none', label: 'None' },\n        { value: 'rain', label: 'Rain' },\n        { value: 'snow', label: 'Snow' }\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"precipitation\">Precipitation</label>\n        <Select options={options} defaultValue={options.find(o => o.value === value)} name=\"precipitation\" />\n    </div>;\n}\n\nfunction SurfaceBuilder({value = 'minecraft:grass'}) {\n    const options = useKeyedListOptions('surfaces');\n    return <div className=\"form-group\">\n        <label htmlFor=\"surface_builder\">Surface builder</label>\n        <Select options={options} defaultValue={options.find(o => o.value === value)} name=\"surface_builder\" />\n    </div>;\n}\n","import React from 'react';\n\nexport function MenuItem({active, children, onClick}) {\n    const className = 'tabs-menu-link' + (active ? ' is-active' : '');\n    return <a href=\"#_\" className={className} onClick={onClick}>{children}</a>\n}","import React from 'react';\nimport Select from 'react-select';\nimport { useKeyedListOptions } from '../../hooks/context';\n\nexport function DimensionType({type = 'minecraft:overworld'}) {\n    const options = useKeyedListOptions('dimension_types');\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"dimension-type\">Dimension type</label>\n        <Select name=\"dimension-type\" options={options} defaultValue={options.find(o => o.value === type) || options[0]} />\n    </div>;\n}\n","import React from 'react';\n\nexport const NumberList = React.memo(function ({ numbers = [], onChange }) {\n\n    const handleChange = function(val, pos) {\n        onChange(numbers.map((n, i) => i === pos ? val : n));\n    };\n\n    return <div className=\"flex-container\">\n        {numbers.map((n, i) => <NumberInput key={i} number={n} onChange={(n) => handleChange(n, i)} />)}\n    </div>\n});\n\nconst NumberInput = React.memo(function ({ number, onChange }) {\n    return <input type=\"number\" value={number} onChange={e => onChange(parseInt(e.target.value))} />\n});","import React, { useState, useCallback, useContext, useEffect } from 'react';\nimport Select from 'react-select';\nimport { SeedField } from './DimensionGenerator';\nimport { useKeyedListOptions } from '../../hooks/context';\nimport { useMemo } from 'react';\nimport { useCrud, CRUD, useNumber, useKeyedOptionsState } from '../../hooks/form';\nimport { useToggle } from '../../hooks/ui';\nimport { DataContext } from '../../context/DataContext';\nimport { Button } from '../../ui/Button';\nimport { capitalize, hasDuplicatedObjects } from '../../utils/data';\nimport { NumberList } from '../../ui/NumberList';\nimport { MULTI_NOISE_BIOME_SOURCE, NOISES_NAMES } from './DimensionDefaults';\n\nexport function BiomeSource({biome_source = { type: 'minecraft:fixed' }, onChange}) {\n    const [source, setSource] = useState(biome_source);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:checkerboard', label: 'Checkerboard' },\n            { value: 'minecraft:fixed', label: 'Fixed' },\n            { value: 'minecraft:multi_noise', label: 'Multi noise' },\n        ];\n    }, []);\n\n    const handleSeedChange = useCallback(function(seed) {\n        setSource(source => ({ ...source, seed }));\n    }, []);\n    const handleTypeChange = useCallback(function(option) {\n        setSource(source => ({ type: option.value, seed: source.seed }));\n    }, []);\n    const handleCheckerboardSourceChange = useCallback(function(settings) {\n        setSource(source => ({ ...source, ...settings }));\n    }, []);\n    const handleFixedSourceChange = useCallback(function(biome) {\n        setSource(source => ({ ...source, biome }));\n    }, []);\n    const handleMultiSourceChange = useCallback(function(s) {\n        setSource(source => ({ ...source, ...s }));\n    }, []);\n\n    useEffect(() => onChange(source), [onChange, source]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === source.type);\n    }, [options, source.type]);\n\n    return <fieldset>\n        <legend>Biome source</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"biome-source-type\">Type</label><Select id=\"biome-source-type\" options={options} value={selected} onChange={handleTypeChange} />\n        </div>\n        <SeedField value={source.seed} onChange={handleSeedChange} />\n        <hr />\n        {source.type === 'minecraft:checkerboard' && <CheckerboardBiomeSource source={source} onChange={handleCheckerboardSourceChange} />}\n        {source.type === 'minecraft:fixed' && <FixedBiomeSource source={source.biome} onChange={handleFixedSourceChange} />}\n        {source.type === 'minecraft:multi_noise' && <MultiNoiseBiomeSource source={source} onChange={handleMultiSourceChange} />}\n    </fieldset>\n}\n\nconst CheckerboardBiomeSource = React.memo(function({source, onChange}) {\n    const [options, biomes, setBiomes] = useKeyedOptionsState('biomes', source.biomes, true);\n    const [scale, setScale] = useNumber(source.scale);\n\n    useEffect(() => onChange({ biomes, scale }), [biomes, onChange, scale]);\n\n    return <div className=\"form-group\">\n        <div className=\"form-group\">\n            <label htmlFor=\"biomes\">Biomes</label><Select options={options} isMulti isClearable={false} value={options.filter(o => biomes.includes(o.value))} onChange={setBiomes} id=\"biomes\" />\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"scale\">Scale (squares of 2<sup>scale</sup> chunks) : </label><input type=\"number\" id=\"scale\" value={scale} onChange={setScale} min=\"0\" />\n        </div>\n        {biomes.length < 1 && <p className=\"alert--warning\">Warning: a dimension must contain at least one biome!</p>}\n    </div>;\n});\n\nconst FixedBiomeSource = React.memo(function({source = 'minecraft:plains', onChange}) {\n    const [options, biome, setBiome] = useKeyedOptionsState('biomes', source);\n    useEffect(() => onChange(biome), [biome, onChange]);\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"fixed-biome\">Biome</label><Select options={options} value={options.find(o => o.value === biome)} onChange={setBiome} />\n    </div>;\n});\n\nconst MultiNoiseBiomeSource = React.memo(function({source = MULTI_NOISE_BIOME_SOURCE, onChange}) {\n    const options = useKeyedListOptions('biomes');\n    const [biomes, dispatch] = useCrud(source.biomes);\n\n    const [advanced, toggleAdvanced] = useToggle();\n    const handleNoiseChange = useCallback(function(type, noise) {\n        onChange(({ ...source, [type]: noise }));\n    }, [source, onChange]);\n\n    const handleAddClick = useCallback(function(e) {\n        e.preventDefault();\n        dispatch({ type: CRUD.ADD, payload: { biome: 'minecraft:plains', parameters: {\n            altitude: 0,\n            weirdness: 0,\n            offset: 0,\n            temperature: 0.8,\n            humidity: 0.4\n        } } });\n    }, [dispatch]);\n    const handleChange = useCallback(function(state, previous) {\n        dispatch({ type: CRUD.UPDATE, target: previous, payload: state });\n    }, [dispatch]);\n    const handleDeleteClick = useCallback(function(e, index) {\n        e.preventDefault();\n        dispatch({ type: CRUD.REMOVE, payload: biomes[index] });\n    }, [biomes, dispatch]);\n\n    const vanilla = useContext(DataContext).vanilla.biomes;\n    const custom = useContext(DataContext).custom.biomes;\n    const namespace = useContext(DataContext).namespace;\n    useEffect(function() {\n        for (const noise of NOISES_NAMES) {\n            if (typeof source[noise] === 'undefined') {\n                onChange({ ...MULTI_NOISE_BIOME_SOURCE, ...source, biomes });\n                return;\n            }\n        }\n        if (biomes !== source.biomes) {\n            onChange({ ...source, biomes });\n        }\n    }, [biomes, onChange, source]);\n\n    const values = [];\n    biomes.forEach((entry, i) => {\n        const key = i;\n        values.push(<BiomeSelection namespace={namespace} vanilla={vanilla} custom={custom} biomesOptions={options} entry={entry} key={key} onChange={handleChange}><Button cat=\"danger\" onClick={(e) => handleDeleteClick(e, i)}>Delete</Button></BiomeSelection>);\n    });\n    return <>\n        <div className=\"flex-container\" style={{ alignItems: 'baseline' }}>\n            <h5>Biomes list</h5>\n            <Button onClick={handleAddClick} cat=\"primary mlm\">Add biome</Button>\n            <Button onClick={toggleAdvanced} cat=\"secondary\">Advanced</Button>\n        </div>\n        {advanced && <div className=\"grid-2-small-1 has-gutter mbm\">\n            {NOISES_NAMES\n                .map(noise => <PerlinNoiseParameters\n                    key={noise}\n                    noise={source[noise] || MULTI_NOISE_BIOME_SOURCE[noise]}\n                    onChange={(n) => handleNoiseChange(noise, n)}>{capitalize(noise.replace('_', ' '))}</PerlinNoiseParameters>)}\n        </div>}\n        {values}\n        {hasDuplicatedObjects(biomes.map(biome => biome.parameters)) && <p className=\"alert--warning\">Warning: every biome must have a unique combination of parameters!</p>}\n    </>;\n});\n\nconst PerlinNoiseParameters = React.memo(function({children, noise = { firstOctave: -7, amplitudes: [1, 1] }, onChange}) {\n\n    const handleFirstOctaveChange = useCallback(function(e) {\n        onChange({ ...noise, firstOctave: parseInt(e.target.value) });\n    }, [noise, onChange]);\n    const handleAmplitudesChange = useCallback(function(amplitudes) {\n        onChange({ ...noise, amplitudes });\n    }, [noise, onChange]);\n\n    return <fieldset>\n        <legend>{children}</legend>\n        <div className=\"form-group form-row\">\n            <div><label>First octave</label> : <input type=\"number\" name=\"firstOctave\" defaultValue={noise.firstOctave} onChange={handleFirstOctaveChange} /></div>\n            <div className=\"form-row\"><div><label>Amplitudes</label> : </div><NumberList numbers={noise.amplitudes} onChange={handleAmplitudesChange} /></div>\n        </div>\n    </fieldset>;\n});\n\nconst BiomeSelection = React.memo(function({namespace, vanilla, custom, biomesOptions, entry, onChange, children}) {\n    const [selection, setSelection] = useState(entry);\n\n    const handleBiomeChange = useCallback(function(option) {\n        const biome = option.value;\n        const data = (vanilla.find(b => 'minecraft:' + b.name === biome) || custom.find(b => namespace + ':' + b.key === biome) || { rainfall: 0, temperature: 0 });\n        setSelection(selection => {\n            const parameters = {\n                altitude: selection.parameters.altitude || 0,\n                weirdness: selection.parameters.weirdness || 0,\n                offset: selection.parameters.offset || 0,\n                temperature: data.temperature || 0.8,\n                humidity: data.rainfall || 0.4\n            };\n            return { biome, parameters };\n        });\n    }, [custom, namespace, vanilla]);\n\n    const handleParameterChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = e.target.value;\n        setSelection(selection => {\n            const parameters = { ...selection.parameters, [name]: parseFloat(value) };\n            return { biome: selection.biome, parameters };\n        });\n    }, []);\n\n    useEffect(() => onChange(selection, entry), [entry, onChange, selection]);\n\n    const selected = useMemo(function() {\n        return biomesOptions.find(o => o.value === selection.biome);\n    }, [biomesOptions, selection.biome]);\n    return <div className=\"form-group\">\n        <Select options={biomesOptions} value={selected} onChange={handleBiomeChange} />\n        <div className=\"form-group form-row\">\n            <div><label>Altitude</label> : <input type=\"number\" id=\"altitude\" value={selection.parameters.altitude} onChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\" /></div>\n            <div><label>Weirdness</label> : <input type=\"number\" id=\"weirdness\" value={selection.parameters.weirdness} onChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\" /></div>\n            <div><label>Offset</label> : <input type=\"number\" id=\"offset\" value={selection.parameters.offset} onChange={handleParameterChange} step=\"0.1\" min=\"0\" max=\"1\"  /></div>\n            <div><label>Temperature</label> : <input type=\"number\" id=\"temperature\" value={selection.parameters.temperature} onChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\" /></div>\n            <div><label>Humidity</label> : <input type=\"number\" id=\"humidity\" value={selection.parameters.humidity} onChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\" /></div>\n            {children}\n        </div>\n    </div>\n});\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { BiomeSource } from './BiomeSource';\nimport { hashCode } from './../../utils/hash';\nimport Select from 'react-select';\nimport { useKeyedListOptions } from '../../hooks/context';\n\nexport function DimensionGenerator({generator, onChange}) {\n    \n    const [data, setData] = useState(generator);\n\n    const handleSeedChange = useCallback(function(seed) {\n        setData(data => {\n            data.seed = seed;\n            return data;\n        });\n        onChange(data);\n    }, [data, onChange]);\n\n    const handleSettingsChange = useCallback(function(settings) {\n        setData(data => {\n            data.settings = settings;\n            return data;\n        });\n        onChange(data);\n    }, [data, onChange]);\n\n    const handleBiomeSourceChange = useCallback(function(biome_source) {\n        setData(data => {\n            data.biome_source = biome_source;\n            return data;\n        });\n        onChange(data);\n    }, [data, onChange]);\n\n    useEffect(function () {\n        onChange(data);\n    }, [data, onChange]);\n\n    return <fieldset>\n        <legend>Noise dimension generator</legend>\n        <div className=\"form-group\">\n            <SeedField value={data.seed} onChange={handleSeedChange} />\n            <Settings settings={data.settings} onChange={handleSettingsChange} />\n            <BiomeSource biome_source={data.biome_source} onChange={handleBiomeSourceChange} />\n        </div>\n    </fieldset>;\n}\n\nexport const SeedField = React.memo(function({onChange, value = 286956243}) {\n    const [text, setText] = useState(value);\n\n    const handleChange = function(e) {\n        const value = e.target.value;\n        setText(value);\n        onChange(isNaN(value) ? hashCode(value) : parseInt(value));\n    };\n\n    return <div className=\"form-group\">\n        <label>Seed</label> : <input type=\"text\" value={text} onChange={handleChange} />\n    </div>\n});\n\nconst Settings = React.memo(function({onChange, settings = 'minecraft:overworld'}) {\n    const handleChange = useCallback(function(option) {\n        onChange(option.value);\n    }, [onChange]);\n\n    const options = useKeyedListOptions('noises');\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"settings\">Settings</label><Select options={options} defaultValue={options.find(o => o.value === settings)} onChange={handleChange} />\n    </div>;\n});","export function hashCode(s) {\n    let hash;\n    for (let i = 0; i < s.length; i++) { \n        hash = Math.imul(31, hash) + s.charCodeAt(i) | 0;\n    }\n    return hash;\n}","import React, { useCallback, useState } from 'react';\nimport { DimensionType } from './DimensionType';\nimport { DimensionGenerator } from './DimensionGenerator';\nimport { Button } from '../../ui/Button';\nimport { DIMENSION } from './DimensionDefaults';\nimport { NamespacedKey } from '../NamespacedKey';\n\nexport function Dimension({data = DIMENSION, onSave}) {\n\n    const [state, setState] = useState(data);\n\n    const handleGeneratorChange = useCallback(function(generator) {\n        setState(s => {\n            s.generator = generator;\n            return s;\n        });\n    }, []);\n\n    const handleSubmit = function (e) {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        const data = {...state};\n        data.key = formData.get('key');\n        data.type = formData.get('dimension-type');\n        onSave(data);\n    }\n\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit dimension</h3>\n        <NamespacedKey example=\"blue_dimension\" type=\"dimensions\" value={data.key} mayReplaceVanilla={true} />\n        <DimensionType type={state.type} />\n        <fieldset>\n            <legend>Generator configuration</legend>\n            <DimensionGenerator generator={state.generator} onChange={handleGeneratorChange} />\n        </fieldset>\n        <div className=\"form-group mlm mbm\">\n            <Button type=\"submit\">Save</Button>\n        </div>\n    </form>\n}","import React from 'react';\n\nexport const ConfInput = React.memo(function ({\n    attr,\n    checked, defaultChecked,\n    children,\n    name, id,\n    onChange,\n    value, defaultValue,\n    min, max, step,\n    className, style\n}) {\n\n    const uId = name || Math.random().toString(36).substr(2, 5) + '-' + id;\n\n    if (typeof checked !== 'undefined' || typeof defaultChecked !== 'undefined') {\n        return <div className={className}>\n            <label htmlFor={uId}>{children}</label> : <input type=\"checkbox\" data-name={name || id} name={name} id={uId} className=\"checkbox\" {...{ ...attr, checked, defaultChecked, onChange, value, style }} />\n        </div>\n    }\n    return <div className={className}>\n        <label htmlFor={uId}>{children}</label> : <input type={isNaN(typeof value === 'undefined' ? defaultValue : value) ? 'text' : 'number'} data-name={name || id} name={name} id={uId} {...{ ...attr, onChange, value, defaultValue, min, max, step, style }} />\n    </div>\n});","import React, { useCallback, useContext, useMemo } from \"react\";\nimport Select from \"react-select\";\nimport { DataContext } from \"../../context/DataContext\";\nimport { Button } from '../../ui/Button';\nimport { getStateValue } from \"../../utils/data\";\nimport { useEffect } from \"react\";\nimport { useCrudPreset, useBlocksOptions } from \"../../hooks/form\";\nimport { ConfInput } from \"../../ui/Input\";\n\nexport const BlockState = React.memo(function ({ block = {}, children, name, onChange, options }) {\n    const context = useContext(DataContext);\n\n    const handleTypeChange = useCallback(function (option) {\n        const Name = option.value;\n        const Properties = {};\n        (context.vanilla.blocks.find(b => 'minecraft:' + b.name === Name) || { states: [] }).states.forEach(state => {\n            Properties[state.name] = getStateValue(state);\n        })\n        if (Object.keys(Properties).length > 0) {\n            onChange({ Name, Properties });\n        } else {\n            onChange({ Name });\n        }\n    }, [context.vanilla.blocks, onChange]);\n    const handlePropertiesChange = useCallback(function (Properties) {\n        onChange({ ...block, Properties });\n    }, [block, onChange]);\n\n    const blocks = useMemo(function () {\n        if (typeof options === 'undefined') {\n            return context.vanilla.blocks.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n        }\n        return options;\n    }, [context.vanilla.blocks, options]);\n\n    const selected = useMemo(function () {\n        return blocks.find(o => o.value === block.Name);\n    }, [blocks, block.Name]);\n\n    return <div className=\"form-group\">\n        <div className=\"form-row\">\n            <div style={{ flexGrow: 1 }}><Select options={blocks} value={selected} name={name} onChange={handleTypeChange} /></div>\n            {children}\n        </div>\n        <BlockStateProperties block={block.Name} properties={block.Properties} onChange={handlePropertiesChange} />\n    </div>;\n});\n\nexport const BlocksList = React.memo(function ({ list, onChange }) {\n    const options = useBlocksOptions();\n\n    const [blocks, handleAdd, handleChange, handleRemove] = useCrudPreset(list, function (blocks) {\n        // Get the first non taken block name\n        return { Name: (options.find(o => !blocks.some(b => b.Name === o.value)) || { value: 'minecraft:stone' }).value };\n    });\n\n    const handleStateChange = useCallback(function (state, i) {\n        handleChange(state, blocks[i]);\n    }, [blocks, handleChange]);\n\n    useEffect(() => {\n        if (blocks !== list) {\n            onChange(blocks);\n        }\n    }, [blocks, list, onChange]);\n\n    return <div className=\"form-group\">\n        {blocks.map((block, i) => {\n            const filteredOptions = options.filter(o => o.value === block.Name || !blocks.some(d => d.Name === o.value));\n            return <BlockState block={block} options={filteredOptions} key={block.Name} onChange={state => handleStateChange(state, i)}>\n                <Button cat=\"danger mlm\" onClick={(e) => handleRemove(e, i)}>Remove</Button>\n            </BlockState>\n        })}\n        <Button onClick={handleAdd}>Add block</Button>\n    </div>;\n});\n\nfunction BlockStateProperties({ block, children, onChange, properties = {} }) {\n    const states = (useContext(DataContext).vanilla.blocks.find(b => 'minecraft:' + b.name === block) || { states: [] }).states;\n\n    const handlePropertyChange = useCallback(function (option) {\n        onChange({ ...properties, [option.name]: option.value });\n    }, [onChange, properties]);\n    const handleCheckboxChange = useCallback(function (e) {\n        const value = e.target.checked.toString();\n        onChange({ ...properties, [e.target.dataset.name]: value });\n    }, [onChange, properties]);\n    const handleNumberChange = useCallback(function (e) {\n        const value = e.target.value;\n        if (value !== '' && !isNaN(value)) {\n            onChange({ ...properties, [e.target.dataset.name]: value });\n        }\n    }, [onChange, properties]);\n\n    const selects = [];\n    states.forEach(possible => {\n        switch (possible.type) {\n            case 'bool':\n                selects.push(\n                    <ConfInput key={possible.name} id={possible.name}\n                        checked={properties[possible.name] === 'true'}\n                        onChange={handleCheckboxChange}>\n                            {possible.name}\n                    </ConfInput>\n                );\n                break;\n            case 'int':\n                selects.push(\n                    <ConfInput key={possible.name} id={possible.name}\n                        value={properties[possible.name] || 0} onChange={handleNumberChange}\n                        min=\"0\" max={possible.num_values - 1}>\n                            {possible.name}\n                    </ConfInput>\n                );\n                break;\n            default:\n                const options = possible.values.map(value => ({ value, name: possible.name, label: value }));\n                const defaultValue = options.find(o => o.value === properties[possible.name]) || options[0];\n                selects.push(<div key={possible.name}>\n                    <label>{possible.name}</label> : <div className=\"inbl\">\n                        <Select options={options} value={defaultValue} onChange={handlePropertyChange} />\n                    </div>\n                </div>);\n        }\n    });\n    return <div className=\"form-group form-row\">\n        {selects}{children}\n    </div>;\n}","import React, { useState, useCallback, useMemo } from \"react\";\nimport Select from \"react-select\";\nimport { Button } from '../../ui/Button';\nimport { ConfInput } from '../../ui/Input';\nimport { useEffect } from \"react\";\nimport { useJsonEffect, useCrudPreset, useBlocksOptions } from \"../../hooks/form\";\nimport { BlockState } from \"./BlockState\";\n\nexport const BlockStateProvider = React.memo(function({block = { type: 'minecraft:simple_state_provider' }, onChange}) {\n    const [provider, setProvider] = useState(block);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:forest_flower_provider', label: 'Forest flower provider' },\n            { value: 'minecraft:plain_flower_provider', label: 'Plain flower provider' },\n            { value: 'minecraft:simple_state_provider', label: 'Simple state provider' },\n            { value: 'minecraft:rotated_block_provider', label: 'Rotated block provider' },\n            { value: 'minecraft:weighted_state_provider', label: 'Weighted state provider' }\n        ];\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        setProvider({ type: option.value });\n    }, []);\n\n    const handleSimpleStateChange = useCallback(function(state) {\n        setProvider(provider => ({ ...provider, state }));\n    }, []);\n\n    const handleWeighestStateChange = useCallback(function(entries) {\n        setProvider(provider => ({ ...provider, entries }));\n    }, []);\n\n    useJsonEffect(provider, block, onChange);\n\n    const blocks = useBlocksOptions(false);\n    const filteredBlocks = useMemo(function () {\n        const filtered = provider.type === 'minecraft:rotated_block_provider' ?\n            blocks.filter(b => b.states.some(state => state.name === 'axis')) : blocks;\n        return filtered.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n    }, [blocks, provider.type]);\n\n    return <div>\n        <label>Provider type</label>\n        <Select options={options} value={options.find(o => o.value === provider.type)} onChange={handleTypeChange} />\n        {(provider.type === 'minecraft:simple_state_provider' || provider.type === 'minecraft:rotated_block_provider') && <BlockState block={provider.state} options={filteredBlocks} onChange={handleSimpleStateChange} />}\n        {provider.type === 'minecraft:weighted_state_provider' && <WeightedStateProvider entries={provider.entries} onChange={handleWeighestStateChange} />}\n    </div>\n});\n\n\nconst WeightedStateProvider = React.memo(function({entries = [], onChange}) {\n    const options = useBlocksOptions();\n\n    const [blocks, handleAdd, handleChange, handleRemove] = useCrudPreset(entries, function(blocks) {\n        // Get the first non taken block name\n        return { data: { Name: (options.find(o => !blocks.some(b => b.data.Name === o.value)) || { value: 'minecraft:stone' }).value } };\n    });\n\n    const handleStateChange = useCallback(function(state, i) {\n        handleChange({ ...blocks[i], data: state }, blocks[i]);\n    }, [blocks, handleChange]);\n    const handleWeightChange = useCallback(function(e, i) {\n        const value = e.target.value;\n        if (value !== '' && !isNaN(value)) {\n            const v = parseInt(value);\n            if (v === 1) {\n                handleChange({ data: blocks[i].data }, blocks[i]);\n            } else {\n                handleChange({ weight: v, data: blocks[i].data }, blocks[i]);\n            }\n        }\n    }, [blocks, handleChange]);\n\n    useEffect(() => {\n        if (blocks !== entries) {\n            onChange(blocks);\n        }\n    }, [blocks, entries, onChange]);\n\n    return <div className=\"form-group\">\n        {blocks.map((block, i) => {\n            const filteredOptions = options.filter(o => o.value === block.data.Name || !blocks.some(d => d.data.Name === o.value));\n            return <BlockState block={block.data} options={filteredOptions} key={block.data.Name} onChange={state => handleStateChange(state, i)}>\n                <ConfInput id=\"weight\" value={block.weight || 1} onChange={e => handleWeightChange(e, i)} className=\"mlm\">Weight</ConfInput>\n                <Button cat=\"danger mlm\" onClick={(e) => handleRemove(e, i)}>Remove</Button>\n            </BlockState>\n        })}\n        <Button onClick={handleAdd}>Add block</Button>\n    </div>;\n});","import React, { useCallback, useMemo, useState, useEffect } from 'react';\nimport { BlockStateProvider } from '../state/BlockStateProvider';\nimport Select from 'react-select';\nimport { TREE_DECORATORS_OPTIONS, TREE_FEATURE_CONFIG } from './FeatureDefaults';\nimport { useJsonEffect, useCrud, CRUD } from '../../hooks/form';\nimport { ConfInput } from '../../ui/Input';\nimport { Button } from '../../ui/Button';\n\nexport function TreeFeatureConfig({configuration = TREE_FEATURE_CONFIG, onChange}) {\n\n    const [config, setConfig] = useState(configuration);\n\n    const handleTrunkProviderChange = useCallback(function(trunk_provider) {\n        setConfig(config => ({ ...config, trunk_provider }));\n    }, []);\n    const handleLeavesProviderChange = useCallback(function(leaves_provider) {\n        setConfig(config => ({ ...config, leaves_provider }));\n    }, []);\n    const handleFoliagePlacerChange = useCallback(function(foliage_placer) {\n        setConfig(config => ({ ...config, foliage_placer }));\n    }, []);\n    const handleTrunkPlacerChange = useCallback(function(trunk_placer) {\n        setConfig(config => ({ ...config, trunk_placer }));\n    }, []);\n    const handleDecoratorsChange = useCallback(function(decorators) {\n        setConfig(config => ({ ...config, decorators }));\n    }, []);\n    useJsonEffect(config, configuration, onChange);\n\n    return <div>\n        <fieldset>\n            <legend>Trunk provider</legend>\n            <BlockStateProvider block={config.trunk_provider} onChange={handleTrunkProviderChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Leaves provider</legend>\n            <BlockStateProvider block={config.leaves_provider} onChange={handleLeavesProviderChange} />\n        </fieldset>\n        <FoliagePlacer placer={config.foliage_placer} onChange={handleFoliagePlacerChange} />\n        <TrunkPlacer placer={config.trunk_placer} onChange={handleTrunkPlacerChange} />\n        <TreeDecorators data={configuration.decorators} onChange={handleDecoratorsChange}></TreeDecorators>\n    </div>;\n}\n\nconst FoliagePlacer = React.memo(function({placer, onChange}) {\n    const [data, setData] = useState(placer);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'blob_foliage_placer', label: 'Blob foliage placer' },\n            { value: 'fancy_foliage_placer', label: 'Fancy foliage placer' }\n        ].map(o => {\n            o.value = 'minecraft:' + o.value;\n            return o;\n        });\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        const type = option.value;\n        setData(data => ({ ...data, type }));\n    }, []);\n\n    const handleValueChange = useCallback(function(e) {\n        const name = e.target.dataset.name;\n        const value = e.target.value;\n        if (value !== '' && !isNaN(value)) {\n            setData(data => {\n                const n = { ...data, [name]: parseInt(value) };\n                onChange(n);\n                return n;\n            });\n        }\n    }, [onChange]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === data.type) || options[0];\n    }, [options, data.type]);\n\n    return <fieldset>\n        <legend>Foliage placer</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"foliage_placer_type\">Type</label>\n            <Select options={options} name=\"foliage_placer_type\" value={selected} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <ConfInput id=\"radius\" value={placer.radius} onChange={handleValueChange} min=\"0\" max=\"8\">Radius</ConfInput>\n            <ConfInput id=\"offset\" value={placer.offset} onChange={handleValueChange} min=\"0\" max=\"8\">Offset</ConfInput>\n            {(data.type === 'minecraft:blob_foliage_placer' ||\n                data.type === 'minecraft:bush_foliage_placer' ||\n                data.type === 'minecraft:fancy_foliage_placer' ||\n                data.type === 'minecraft:jungle_foliage_placer'\n            ) && <ConfInput id=\"height\" value={placer.height} onChange={handleValueChange} min=\"0\" max=\"16\">Height</ConfInput>}\n        </div>\n    </fieldset>\n});\n\nconst TrunkPlacer = React.memo(function({placer, onChange}) {\n    const [data, setData] = useState(placer);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'straight_trunk_placer', label: 'Straight trunk placer' },\n            { value: 'forking_trunk_placer', label: 'Forking trunk placer' },\n            { value: 'giant_trunk_placer', label: 'Giant trunk placer' },\n            { value: 'mega_jungle_trunk_placer', label: 'Mega jungle trunk placer' },\n            { value: 'dark_oak_trunk_placer', label: 'Dark oak trunk placer' },\n            { value: 'fancy_trunk_placer', label: 'Fancy trunk placer' }\n        ].map(o => {\n            o.value = 'minecraft:' + o.value;\n            return o;\n        });\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        const type = option.value;\n        setData(data => ({ ...data, type }));\n    }, []);\n\n    const handleValueChange = useCallback(function(e) {\n        const name = e.target.dataset.name;\n        const value = e.target.value;\n        if (value !== '' && !isNaN(value)) {\n            setData(data => {\n                const n = { ...data, [name]: parseInt(value) };\n                onChange(n);\n                return n;\n            });\n        }\n    }, [onChange]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === data.type) || options[0];\n    }, [data.type, options]);\n\n    return <fieldset>\n        <legend>Trunk placer</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"foliage_placer_type\">Type</label>\n            <Select options={options} name=\"foliage_placer_type\" defaultValue={selected} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <ConfInput id=\"base_height\" value={placer.base_height} onChange={handleValueChange} min=\"0\" max=\"32\">Base height</ConfInput>\n            <ConfInput id=\"height_rand_a\" value={placer.height_rand_a} onChange={handleValueChange} min=\"0\" max=\"24\">First height rand</ConfInput>\n            <ConfInput id=\"height_rand_b\" value={placer.height_rand_b} onChange={handleValueChange} min=\"0\" max=\"24\">Second height rand</ConfInput>\n        </div>\n    </fieldset>\n});\n\nconst TreeDecorators = React.memo(function({data, onChange}) {\n    const [decorators, dispatch] = useCrud(data);\n\n    const handleAddClick = useCallback(function(e) {\n        e.preventDefault();\n        const decorator = TREE_DECORATORS_OPTIONS.find(o => !decorators.some(d => d.type === o.value));\n        if (typeof decorator !== 'undefined') {\n            dispatch({ type: CRUD.ADD, payload: { type: decorator.value } });\n        }\n    }, [decorators, dispatch]);\n    const handleChange = useCallback(function(decorator, previous) {\n        dispatch({ type: CRUD.UPDATE, target: previous, payload: decorator });\n    }, [dispatch]);\n    const handleDeleteClick = useCallback(function(e, index) {\n        e.preventDefault();\n        dispatch({ type: CRUD.REMOVE, payload: decorators[index] });\n    }, [decorators, dispatch]);\n    useJsonEffect(decorators.map(decorator => {\n        delete decorator.index;\n        return decorator;\n    }), data, onChange);\n    \n    return <fieldset>\n        <legend>Tree decorators {decorators.length < 5 && <Button onClick={handleAddClick}>Add decorator</Button>}</legend>\n        {decorators.map((decorator, i) => {\n            const options = TREE_DECORATORS_OPTIONS.filter(o => o.value === decorator.type || !decorators.some(d => d.type === o.value));\n            return <TreeDecorator data={decorator }key={decorator.type} onChange={handleChange} options={options}>\n                <Button cat=\"danger mlm\" onClick={(e) => handleDeleteClick(e, i)}>Remove</Button>\n            </TreeDecorator>\n        })}\n    </fieldset>\n});\n\nconst TreeDecorator = React.memo(function({children, data, options, onChange}) {\n    const [decorator, setDecorator] = useState(data);\n\n    const handleSelectChange = useCallback(function(option) {\n        setDecorator({ type: option.value, ...option.default });\n    }, []);\n    const handleAlterGroundChange = useCallback(function(provider) {\n        setDecorator(decorator => ({ type: decorator.type, provider }));\n    }, []);\n    const handleProbabilityChange = useCallback(function(e) {\n        const value = e.target.value;\n        if (value !== '' && !isNaN(value)) {\n            const probability = parseFloat(value);\n            setDecorator(decorator => ({ type: decorator.type, probability }));\n        }\n    }, []);\n    useEffect(() => {\n        if (decorator !== data) {\n            onChange(decorator, data);\n        }\n    }, [data, decorator, onChange]);\n\n    const CustomTag = ['minecraft:leave_vine', 'minecraft:trunk_vine'].indexOf(decorator.type) < 0 ? 'fieldset' : 'div';\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === decorator.type);\n    }, [decorator.type, options]);\n    return <CustomTag>\n        <legend style={{ fontWeight: 'normal', fontSize: 'inherit' }}>\n            <div style={{ width: '200px', display: 'inline-block' }}><Select options={options} value={selected} onChange={handleSelectChange} /></div>\n            {children}\n        </legend>\n        <div className=\"form-group\">\n            {decorator.type === 'minecraft:alter_ground' && <BlockStateProvider block={decorator.provider} onChange={handleAlterGroundChange} />}\n            {(decorator.type === 'minecraft:beehive' || decorator.type === 'minecraft:cocoa') && <ConfInput id=\"probability\" value={decorator.probability} onChange={handleProbabilityChange} min=\"0\" max=\"1\" step=\"0.05\">Probability</ConfInput>}\n        </div>\n    </CustomTag>\n});","import React, { useCallback, useState, useMemo, useEffect } from 'react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport { useCrudPreset, useJsonEffect } from '../../hooks/form';\nimport { Button } from '../../ui/Button';\nimport Select from 'react-select';\nimport { DECORATORS_OPTIONS, DECORATOR_EXTRA_COUNT_DEFAULTS, DECORATOR_DECORATED_DEFAULTS, DECORATOR_RANGE_DEFAULTS } from './FeatureDefaults';\nimport { ConfInput } from '../../ui/Input';\n\nexport const DecoratorsList = React.memo(function({data, onChange}) {\n    const [decorators, handleAdd, handleChange, handleRemove] = useCrudPreset(data, function(decorators) {\n        // Get the first non taken decorator\n        return { type: (DECORATORS_OPTIONS.filter(o => !decorators.some(d => d.type === o.value))[0] || { value: 'minecraft:count' }).value };\n    });\n    useJsonEffect(decorators, data, onChange);\n\n    const shouldCancelStart = useCallback(function(e) {\n        return !e.target.parentNode.classList.contains('sortable-item');\n    }, []);\n    \n    return <fieldset>\n        <legend>Decorators wrappers {DECORATORS_OPTIONS.length > decorators.length && <Button onClick={handleAdd}>Add decorator</Button>}</legend>\n        <SortableDecoratorsList decorators={decorators} handleChange={handleChange} handleRemove={handleRemove}\n            onSortEnd={handleChange} shouldCancelStart={shouldCancelStart} />\n    </fieldset>\n});\n\nconst SortableDecoratorsList = SortableContainer(function({decorators, handleChange, handleRemove}) {\n    return <ol className=\"sortable-container\">\n        {decorators.map((decorator, index) => {\n            const options = DECORATORS_OPTIONS.filter(o => decorator.type === o.value || !decorators.some(d => d.type === o.value));\n            return <Decorator key={decorator.type} data={decorator} index={index} onChange={handleChange} options={options}>\n                <Button cat=\"danger mlm\" onClick={(e) => handleRemove(e, index)}>Remove</Button>\n            </Decorator>\n        })}\n    </ol>\n});\n\nconst Decorator = React.memo(SortableElement(function({children, data = { type: 'minecraft:count' }, onChange, options}) {\n    const [decorator, setDecorator] = useState(data);\n\n    const handleSelectChange = useCallback(function(option) {\n        setDecorator({ type: option.value });\n    }, []);\n    const handleConfigChange = useCallback(function(config) {\n        setDecorator(decorator => ({ type: decorator.type, config }));\n    }, []);\n    useJsonEffect(decorator, data, onChange);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === decorator.type);\n    }, [decorator.type, options]);\n    return <li className=\"sortable-item\">\n        <div className=\"form-group form-row\">\n            <div style={{ flexGrow: 1 }}><Select options={options} value={selected} onChange={handleSelectChange} /></div>\n            {children}\n        </div>\n        <div className=\"form-group form-row\">\n            {decorator.type === 'minecraft:chance' && <ChanceDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.type === 'minecraft:count' || decorator.type === 'minecraft:fire' || decorator.type === 'minecraft:count_multilayer') && <CountDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {decorator.type === 'minecraft:count_extra' && <ExtraCountDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.type === 'minecraft:decorated' || decorator.type === 'minecraft:square') && <DecoratedDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.type === 'minecraft:range' || decorator.type === 'minecraft:range_very_biased') && <RangeDecorator config={decorator.config} onChange={handleConfigChange} />}\n        </div>\n    </li>;\n}));\n\nconst ChanceDecorator = React.memo(function({config = {}, onChange}) {\n    const handleChanceChange = useCallback(function(e) {\n        const value = e.target.value;\n        if (value !== '' && !isNaN(value)) {\n            onChange({ chance: parseInt(value) });\n        }\n    }, [onChange]);\n    useEffect(() => {\n        if (typeof data === 'undefined') {\n            onChange({ chance: 32 });\n        }\n    }, [onChange]);\n\n    return <ConfInput id=\"chance\" value={config.chance || 32} onChange={handleChanceChange}>Chance</ConfInput>\n});\n\nconst CountDecorator = React.memo(function({config = {}, onChange}) {\n    const handleCountChange = useCallback(function(e) {\n        const value = e.target.value;\n        if (value !== '' && !isNaN(value)) {\n            onChange({ count: parseInt(value) });\n        }\n    }, [onChange]);\n    useEffect(() => {\n        if (typeof data === 'undefined') {\n            onChange({ count: 25 });\n        }\n    }, [onChange]);\n\n    return <ConfInput id=\"count\" value={config.count || 25} onChange={handleCountChange}>Count</ConfInput>\n});\n\nconst ExtraCountDecorator = React.memo(function({config, onChange}) {\n    const [configured, setConfig] = useState(config || DECORATOR_EXTRA_COUNT_DEFAULTS);\n\n    const handleNumberChange = useCallback(function(e) {\n        const value = e.target.value;\n        if (value !== '' && !isNaN(value)) {\n            setConfig(configured => ({ ...configured, [e.target.dataset.name]: parseFloat(value) }));\n        }\n    }, []);\n    useJsonEffect(configured, config, onChange);\n\n    return <>\n        <ConfInput id=\"count\" value={configured.count} onChange={handleNumberChange}>Count</ConfInput>\n        <ConfInput id=\"extra_chance\" value={configured.extra_chance} onChange={handleNumberChange} step=\"0.05\">Extra chance</ConfInput>\n        <ConfInput id=\"extra_count\" value={configured.extra_count} onChange={handleNumberChange}>Extra count</ConfInput>\n    </>\n});\n\nconst DecoratedDecorator = React.memo(function({config, onChange}) {\n    useEffect(() => {\n        if (typeof config === 'undefined') {\n            onChange(DECORATOR_DECORATED_DEFAULTS);\n        }\n    }, [config, onChange]);\n    return <div></div>;\n});\n\nconst RangeDecorator = React.memo(function({config, onChange}) {\n    const [configured, setConfig] = useState(config || DECORATOR_RANGE_DEFAULTS);\n\n    const handleNumberChange = useCallback(function(e) {\n        const value = e.target.value;\n        if (value !== '' && !isNaN(value)) {\n            setConfig(configured => ({ ...configured, [e.target.dataset.name]: parseInt(value) }));\n        }\n    }, []);\n    useJsonEffect(configured, config, onChange);\n\n    return <>\n        <ConfInput id=\"bottom_offset\" value={configured.bottom_offset} onChange={handleNumberChange}>Bottom offset</ConfInput>\n        <ConfInput id=\"top_offset\" value={configured.top_offset} onChange={handleNumberChange}>Top offset</ConfInput>\n        <ConfInput id=\"maximum\" value={configured.maximum} onChange={handleNumberChange}>Y maximum</ConfInput>\n    </>\n});","import React, { useCallback, useState } from 'react';\nimport { BlocksList } from '../state/BlockState';\nimport { RANDOM_PATCH_FEATURE_CONFIG } from './FeatureDefaults';\nimport { useJsonEffect } from '../../hooks/form';\nimport { BlockStateProvider } from '../state/BlockStateProvider';\n\nexport function RandomPatchFeature({configuration = RANDOM_PATCH_FEATURE_CONFIG, onChange}) {\n\n    const [config, setConfig] = useState(configuration);\n\n    const handleStateProviderChange = useCallback(function(state_provider) {\n        setConfig(config => ({ ...config, state_provider }));\n    }, []);\n    const handleWhitelistChange = useCallback(function(whitelist) {\n        setConfig(config => ({ ...config, whitelist }));\n    }, []);\n    const handleBlacklistChange = useCallback(function(blacklist) {\n        setConfig(config => ({ ...config, blacklist }));\n    }, []);\n    const handleValueChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = parseInt(e.target.value);\n        setConfig(config => ({ ...config, [name]: value }));\n    }, []);\n    const handleCheckboxChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = e.target.checked;\n        setConfig(config => ({ ...config, [name]: value }));\n    }, []);\n    useJsonEffect(config, configuration, onChange);\n\n    return <div>\n        <fieldset>\n            <legend>State provider</legend>\n            <BlockStateProvider block={config.state_provider} onChange={handleStateProviderChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Whitelist</legend>\n            <BlocksList list={config.whitelist} onChange={handleWhitelistChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Blacklist</legend>\n            <BlocksList list={config.blacklist} onChange={handleBlacklistChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Settings</legend>\n            <div className=\"form-group form-row\">\n                <div><label htmlFor=\"xspread\">X spread</label> : <input type=\"number\" id=\"xspread\" value={config.xspread} onChange={handleValueChange} /></div>\n                <div><label htmlFor=\"yspread\">Y spread</label> : <input type=\"number\" id=\"yspread\" value={config.yspread} onChange={handleValueChange} /></div>\n                <div><label htmlFor=\"zspread\">Z spread</label> : <input type=\"number\" id=\"zspread\" value={config.zspread} onChange={handleValueChange} /></div>\n                <div><label htmlFor=\"tries\">Tries</label> : <input type=\"number\" id=\"tries\" value={config.tries} onChange={handleValueChange} /></div>\n            </div>\n            <div className=\"form-group form-row\">\n                <div><label htmlFor=\"need_water\">Need water</label> : <input type=\"checkbox\" className=\"checkbox\" id=\"need_water\" checked={config.need_water} onChange={handleCheckboxChange} /></div>\n                <div><label htmlFor=\"project\">Project</label> : <input type=\"checkbox\" className=\"checkbox\" id=\"project\" checked={config.project} onChange={handleCheckboxChange} /></div>\n                <div><label htmlFor=\"can_replace\">Can replace</label> : <input type=\"checkbox\" className=\"checkbox\" id=\"can_replace\" checked={config.can_replace} onChange={handleCheckboxChange} /></div>\n            </div>\n        </fieldset>\n    </div>;\n}","import React, { useState, useCallback, useMemo, useContext, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport { DataContext } from \"../../context/DataContext\";\nimport { TAGS_OPTIONS } from \"../feature/FeatureDefaults\";\n\nexport const BlockPredicate = React.memo(function({target, onChange}) {\n    const [predicate, setPredicate] = useState(target);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:block_match', label: 'Block match' },\n            { value: 'minecraft:tag_match', label: 'Tag match' }\n        ];\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        setPredicate({ predicate_type: option.value });\n    }, []);\n    const handleBlockChange = useCallback(function(option) {\n        setPredicate(predicate => ({ ...predicate, block: option.value }));\n    }, []);\n    const handleTagChange = useCallback(function(option) {\n        setPredicate(predicate => ({ ...predicate, tag: option.value }));\n    }, []);\n    useEffect(() => onChange(predicate), [onChange, predicate]);\n\n    const context = useContext(DataContext);\n    const blocks = useMemo(function() {\n        return context.vanilla.blocks.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n    }, [context.vanilla.blocks]);\n\n    return <div>\n        <label>Predicate type</label>\n        <Select options={options} value={options.find(o => o.value === predicate.predicate_type)} onChange={handleTypeChange} />\n        {(predicate.predicate_type === 'minecraft:block_match') && <Select options={blocks} value={blocks.find(b => b.value === predicate.block)} onChange={handleBlockChange} />}\n        {(predicate.predicate_type === 'minecraft:tag_match') && <Select options={TAGS_OPTIONS} value={TAGS_OPTIONS.find(t => t.value === predicate.tag)} onChange={handleTagChange} />}\n    </div>;\n});","import React, { useCallback, useState } from 'react';\nimport { ORE_FEATURE_CONFIG } from \"./FeatureDefaults\";\nimport { BlockPredicate } from '../state/BlockPredicate';\nimport { BlockState } from '../state/BlockState';\nimport { useJsonEffect } from '../../hooks/form';\n\nexport function OreFeatureConfig({configuration = ORE_FEATURE_CONFIG, onChange}) {\n    const [config, setConfig] = useState(configuration);\n\n    const handlePredicateChange = useCallback(function(target) {\n        setConfig(config => ({ ...config, target }));\n    }, []);\n    const handleBlockChange = useCallback(function(state) {\n        setConfig(config => ({ ...config, state }));\n    }, []);\n    const handleValueChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = parseInt(e.target.value);\n        setConfig(config => ({ ...config, [name]: value }));\n    }, []);\n    useJsonEffect(config, configuration, onChange);\n\n    return <div>\n        <fieldset>\n            <legend>Target</legend>\n            <BlockPredicate target={config.target} onChange={handlePredicateChange} />\n        </fieldset>\n        <fieldset>\n            <legend>State</legend>\n            <BlockState block={config.state} onChange={handleBlockChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Settings</legend>\n            <div className=\"form-group\">\n                <label htmlFor=\"size\">Size</label> : <input type=\"number\" id=\"size\" value={config.size} onChange={handleValueChange} />\n            </div>\n        </fieldset>\n    </div>;\n}","import React, { useCallback, useMemo } from 'react';\nimport Select from 'react-select';\nimport { useState } from 'react';\nimport { TreeFeatureConfig } from './TreeFeature';\nimport { Button } from '../../ui/Button';\nimport { DecoratorsList } from './Decorator';\nimport { buildDecorated, findDecorators } from '../../utils/data';\nimport { DECORATED_TREE_CONFIG, DECORATED_RANDOM_PATCH_CONFIG, DECORATED_ORE_FEATURE_CONFIG } from './FeatureDefaults';\nimport { RandomPatchFeature } from './RandomPatchFeature';\nimport { OreFeatureConfig } from './OreFeature';\nimport { NamespacedKey } from '../NamespacedKey';\n\nexport function RawConfiguredFeature({data = DECORATED_TREE_CONFIG, onSave}) {\n\n    const [decorators_, feature_] = useMemo(() => findDecorators(data), [data]);\n\n    const [feature, setFeature] = useState(feature_);\n    const [decorators, setDecorators] = useState(decorators_);\n\n    const handleSelectChange = useCallback(function(option) {\n        const [decorators, feature] = findDecorators({ ...option.default });\n        setFeature(feature);\n        setDecorators(decorators);\n    }, []);\n\n    const handleFeatureChange = useCallback(function (config) {\n        setFeature(feature => ({ ...feature, config }));\n    }, []);\n\n    const handleDecoratorsChange = useCallback(function (decorators) {\n        setDecorators(decorators);\n    }, []);\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        const decorated = buildDecorated(feature, decorators, new FormData(e.target).get('key'));\n        decorated.index = data.index;\n        onSave(decorated);\n    }, [data.index, decorators, feature, onSave]);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'ore', label: 'Ore', default: DECORATED_ORE_FEATURE_CONFIG },\n            { value: 'random_patch', label: 'Random patch', default: DECORATED_RANDOM_PATCH_CONFIG },\n            { value: 'tree', label: 'Tree', default: DECORATED_TREE_CONFIG }\n        ].map(o => {\n            o.value = 'minecraft:' + o.value;\n            return o;\n        });\n    }, []);\n\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit configured feature</h3>\n        <NamespacedKey example=\"concrete_tree\" type=\"features\" value={data.key} expectBreakage={typeof data.key !== 'undefined'} />\n        <div className=\"form-group\">\n            <label htmlFor=\"type\">Type</label>\n            <Select options={options} value={options.find(o => o.value === feature.type)} onChange={handleSelectChange} />\n        </div>\n        <hr />\n        {feature.type === 'minecraft:ore' && <OreFeatureConfig configuration={feature.config} onChange={handleFeatureChange} />}\n        {feature.type === 'minecraft:random_patch' && <RandomPatchFeature configuration={feature.config} onChange={handleFeatureChange} />}\n        {feature.type === 'minecraft:tree' && <TreeFeatureConfig configuration={feature.config} onChange={handleFeatureChange} />}\n        <DecoratorsList data={decorators} key={feature.type} onChange={handleDecoratorsChange} />\n        <div className=\"form-group mlm mbm\">\n            <Button type=\"submit\">Save</Button>\n        </div>\n    </form>\n}\n","import JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\nimport { dataUpper } from \"./data\";\n\nconst DIMENSIONS_PATH = /^data\\/([a-z0-9._-]+)\\/(dimension|dimension_type)\\/([a-z0-9._-]+).json$/;\nconst WORLDGEN_PATH = /^data\\/([a-z0-9._-]+)\\/worldgen\\/(biome|configured_feature|configured_surface_builder|noise_settings)\\/([a-z0-9._-]+).json$/;\n\nconst LEGACY_PATH_DETECTION = /^data\\/minecraft\\/(dimension|dimension_type|worldgen)\\/?\\w*\\/([a-z0-9._-]+)\\/([a-z0-9._-]+).json$/;\nconst LEGACY_DIMENSIONS_PATH = /^data\\/minecraft\\/(dimension|dimension_type)\\/([a-z0-9._-]+)\\/([a-z0-9._-]+).json$/;\nconst LEGACY_WORLDGEN_PATH = /^data\\/minecraft\\/worldgen\\/(biome|configured_feature|configured_surface_builder|noise_settings)\\/([a-z0-9._-]+)\\/([a-z0-9._-]+).json$/;\n\n/**\n * Build zip in blob.\n * \n * @param {{ biomes: object[], dimensions: object[], dimension_types: object[], features: object[], noises: object[], surfaces: object[] }} custom \n */\nexport function buildZip(custom) {\n    const zip = new JSZip();\n    zip.file('pack.mcmeta', JSON.stringify({ pack: { pack_format: 5, description: 'Custom dimension' } }, null, 4));\n    const namespace = '%namespace%';\n    writeFile(zip, `data/${namespace}/dimension`, custom.dimensions);\n    writeFile(zip, `data/${namespace}/dimension_type`, custom.dimension_types);\n    writeFile(zip, `data/${namespace}/worldgen/biome`, custom.biomes);\n    writeFile(zip, `data/${namespace}/worldgen/configured_feature`, custom.features);\n    writeFile(zip, `data/${namespace}/worldgen/configured_surface_builder`, custom.surfaces);\n    writeFile(zip, `data/${namespace}/worldgen/noise_settings`, custom.noises);\n    zip.generateAsync({ type: 'blob' })\n        .then(function(content) {\n            saveAs(content, 'generated_datapack.zip');\n        });\n}\n\n/**\n * @param {File} file\n * @returns {Promise<[string, { biomes: object[], dimensions: object[], features: object[], surfaces: object[] }]>}\n */\nexport function readZip(file) {\n    return new Promise((resolve, reject) => {\n        if (file.type !== 'application/zip') {\n            reject(new Error('File is not a .zip'));\n        }\n\n        JSZip.loadAsync(file).then((zip) => {\n            extractDatapack(zip)\n                .then(resolve)\n                .catch(reject);\n        }).catch(reject);\n    });\n}\n\n/**\n * @param {JSZip} zip \n * @returns {Promise<string, object>}\n */\nfunction extractDatapack(zip) {\n    let mcmeta = false;\n    let namespace = 'test';\n    const data = {\n        biomes: [],\n        dimensions: [],\n        dimension_types: [],\n        features: [],\n        noises: [],\n        surfaces: []\n    };\n\n    return new Promise((resolve, reject) => {\n        const promises = [];\n        zip.forEach(function(path, entry) {\n            if (entry.dir) {\n                return;\n            }\n            if (entry.name === 'pack.mcmeta') {\n                mcmeta = true;\n                return;\n            }\n            const legacy = entry.name.match(LEGACY_PATH_DETECTION);\n            let regex = entry.name.match(DIMENSIONS_PATH) ? DIMENSIONS_PATH : WORLDGEN_PATH;\n            if (legacy) {\n                regex = entry.name.match(LEGACY_DIMENSIONS_PATH) ? LEGACY_DIMENSIONS_PATH : LEGACY_WORLDGEN_PATH;\n            }\n            promises.push(parseFile(legacy, regex, entry.name, zip.file(entry.name).async('text')));\n        });\n\n        if (!mcmeta) {\n            reject(new Error('Invalid datapack: no pack.mcmeta'));\n        }\n\n        Promise.all(promises).then(function(values) {\n            values.forEach(function(value) {\n                if (value === null) {\n                    return;\n                }\n\n                namespace = value.namespace;\n                value.data.index = data[value.type].length;\n                data[value.type].push(value.data);\n            });\n            resolve([namespace, data]);\n        }).catch(e => reject(e));\n    });\n}\n\nfunction getFolderType(folder) {\n    switch (folder) {\n        case 'configured_feature':\n            return 'features';\n        case 'configured_surface_builder':\n            return 'surfaces';\n        case 'noise_settings':\n            return 'noises';\n        default:\n            return folder + 's';\n    }\n}\n\n/**\n * Parse json file when it will be ready.\n * \n * @param {boolean} legacy\n * @param {RegExp} pathRegex \n * @param {string} filename \n * @param {Promise<string>} contentPromise \n * @returns {Promise<{namespace: string, data: object, type: string}>}\n */\nasync function parseFile(legacy, pathRegex, filename, contentPromise) {\n    const d = pathRegex.exec(filename);\n    if (d === null) {\n        return new Promise((success) => success(null)); // Skip file\n    }\n\n    return new Promise((resolve, reject) => {\n        contentPromise.then(content => {\n            const obj = JSON.parse(content);\n            const namespace = d[legacy ? 2 : 1];\n            const type = getFolderType(d[legacy ? 1 : 2]);\n            obj.key = namespace + ':' + d[3];\n            const data = dataUpper(type, obj);\n            resolve({ namespace, data, type });\n        }).catch(e => {\n            if (e.name !== 'SyntaxError') {\n                console.error(e);\n            }\n            reject(new Error(`Cannot read ${filename}:\\n${e.message}`));\n        });\n    });\n}\n\nfunction writeFile(zip, path, elements) {\n    if (elements.length < 1) {\n        return;\n    }\n\n    for (const el of elements) {\n        const w = {...el};\n        delete w.key;\n        delete w.index;\n\n        const [namespace, filename] = el.key.split(':');\n        zip.folder(path.replace('%namespace%', namespace))\n            .file(filename + '.json', JSON.stringify(w, null, 2));\n    }\n}","import React, { useCallback, useState } from 'react';\nimport { BlockState } from '../state/BlockState';\nimport { Button } from '../../ui/Button';\nimport { SURFACE_TYPES_OPTIONS, SURFACE_BUILDER } from './SurfaceBuilderDefaults';\nimport Select from 'react-select';\nimport { NamespacedKey } from '../NamespacedKey';\n\nexport function SurfaceBuilder({data = SURFACE_BUILDER, onSave}) {\n    const [config, setConfig] = useState(data.config);\n\n    const handleTopMaterialChange = useCallback(function(top_material) {\n        setConfig(config => ({ ...config, top_material }));\n    }, []);\n    const handleUnderMaterialChange = useCallback(function(under_material) {\n        setConfig(config => ({ ...config, under_material }));\n    }, []);\n    const handleUnderwaterMaterialChange = useCallback(function(underwater_material) {\n        setConfig(config => ({ ...config, underwater_material }));\n    }, []);\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        onSave({\n            config,\n            type: formData.get('type'),\n            key: formData.get('key'),\n            index: data.index\n        });\n    }, [config, data.index, onSave]);\n\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit surface builder</h3>\n        <NamespacedKey example=\"blackstone\" type=\"surfaces\" value={data.key} expectBreakage={typeof data.key !== 'undefined'} />\n        <div className=\"form-group\">\n            <label htmlFor=\"type\">Type</label> : <Select options={SURFACE_TYPES_OPTIONS} defaultValue={SURFACE_TYPES_OPTIONS.find(o => o.value === data.type)} name=\"type\" />\n            <p><small className=\"text-muted\">The builder type defines the shape of the surface. For example, the <em>swamp</em> type will create puddles while the <em>badlands</em> types will create small rocky peaks; the <em>nether</em> types will add a mix of nether blocks and expose more of the underneath material.</small></p>\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"top_material\">Top material</label> : <BlockState block={config.top_material} name=\"top_material\" onChange={handleTopMaterialChange} />\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"under_material\">Under material</label> : <BlockState block={config.under_material} name=\"under_material\" onChange={handleUnderMaterialChange} />\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"sea_lantern\">Underwater material</label> : <BlockState block={config.underwater_material} name=\"underwater_material\" onChange={handleUnderwaterMaterialChange} />\n        </div>\n        <div className=\"form-group mlm mbm\">\n            <Button type=\"submit\">Save</Button>\n        </div>\n    </form>;\n}","import React, { useCallback, useEffect, useState } from 'react';\nimport { ConfInput } from '../../ui/Input';\nimport { useToggle } from '../../hooks/ui';\nimport { useCrud, CRUD } from '../../hooks/form';\nimport Select from 'react-select';\nimport { STRUCTURES } from './NoiseDefaults';\nimport { Button } from '../../ui/Button';\n\nexport const Structures = React.memo(function ({ data, onChange }) {\n\n    const handleStrongholdChange = useCallback(function(stronghold) {\n        if (stronghold === false) {\n            onChange({ structures: data.structures });\n        } else {\n            onChange({ structures: data.structures, stronghold });\n        }\n    }, [data.structures, onChange]);\n    const handleStructuresChange = useCallback(function(structures) {\n        onChange({ ...data, structures });\n    }, [data, onChange]);\n\n    return <fieldset>\n        <legend>Structures</legend>\n        <Stronghold data={data.stronghold} onChange={handleStrongholdChange} />\n        <StructuresList data={data.structures} onChange={handleStructuresChange} />\n    </fieldset>\n});\n\nconst Stronghold = React.memo(function ({ data, onChange }) {\n\n    const [enabled, toggle] = useToggle(typeof data === 'object');\n    const [stronghold, setStronghold] = useState(data || { distance: 32, spread: 3, count: 128 });\n\n    const handleChange = useCallback(function(e) {\n        e.preventDefault();\n        const name = e.target.dataset.name;\n        const value = parseInt(e.target.value);\n        setStronghold(stronghold => ({ ...stronghold, [name]: value }));\n    }, [setStronghold]);\n\n    useEffect(function() {\n        if (data !== stronghold\n            || (enabled && typeof data === 'undefined')\n            || (!enabled && typeof data === 'object')) {\n                onChange(enabled ? stronghold : false);\n        }\n    }, [data, enabled, onChange, stronghold]);\n\n    return <div>\n        <div className=\"toggle-label\">Stronghold<Button cat=\"secondary\" onClick={toggle}>{enabled ? 'Disable' : 'Enable'}</Button></div>\n        {enabled && <div className=\"form-group form-row\">\n            <ConfInput id=\"distance\" defaultValue={stronghold.distance} onChange={handleChange} min=\"0\" max=\"1023\">Distance</ConfInput>\n            <ConfInput id=\"spread\" defaultValue={stronghold.spread} onChange={handleChange} min=\"0\" max=\"1023\">Spread</ConfInput>\n            <ConfInput id=\"count\" defaultValue={stronghold.count} onChange={handleChange} min=\"1\" max=\"4095\">Count</ConfInput>\n        </div>}\n    </div>\n});\n\nconst StructuresList = React.memo(function({ data, onChange }) {\n    const [visibility, toggle] = useToggle();\n    const [structures, dispatch] = useCrud(Object.entries(data).map(([type, d]) => ({ ...d, type })));\n\n    const handleAdd = useCallback(function(e) {\n        e.preventDefault();\n        dispatch({ type: CRUD.ADD, payload: {\n            type: 'minecraft:village',\n            spacing: 32,\n            separation: 8,\n            salt: 10387312\n        }, unshift: true });\n        if (!visibility) {\n            toggle();\n        }\n    }, [dispatch, toggle, visibility]);\n    const handleChange = useCallback(function(original, structure) {\n        dispatch({ type: CRUD.UPDATE, target: original, payload: structure });\n    }, [dispatch]);\n    const handleRemove = useCallback(function(structure) {\n        dispatch({ type: CRUD.REMOVE, payload: structure });\n    }, [dispatch]);\n\n    useEffect(function() {\n        const obj = {};\n        for (const structure of structures) {\n            obj[structure.type] = {\n                spacing: structure.spacing,\n                separation: structure.separation,\n                salt: structure.salt\n            };\n        }\n        onChange(obj);\n    }, [onChange, structures]);\n\n    return <div>\n        <div className=\"toggle-label\">\n            Structures\n            <div className=\"btn-group\">\n                <Button onClick={handleAdd}>Add</Button>\n                {structures.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{visibility ? 'Less...' : 'More...'}</Button>}\n            </div>\n        </div>\n        {visibility && structures.map((def, i) => \n            <Structure data={def} key={i} onChange={handleChange} onDelete={handleRemove} />\n        )}\n    </div>\n});\n\nconst Structure = React.memo(function ({ data, onChange, onDelete }) {\n\n    const handleChange = useCallback(function(e) {\n        const field = typeof e.target === 'undefined' ? 'type' : e.target.dataset.name;\n        const value = typeof e.target === 'undefined' ? e.value : parseInt(e.target.value);\n        onChange(data, { ...data, [field]: value });\n    }, [data,  onChange]);\n    const handleSpacingChange = useCallback(function(e) {\n        const name = e.target.dataset.name;\n        const value = parseInt(e.target.value);\n        if ((name === 'spacing' && value > data.separation)\n            || (e.target.dataset.name === 'separation' && value < data.spacing)) {\n            onChange(data, {...data, [name]: value});\n        } \n    }, [data,  onChange]);\n    const handleDelete = useCallback(function (e) {\n        e.preventDefault();\n        onDelete(data);\n    }, [data, onDelete]);\n\n    return <div>\n        <div className=\"form-group\">\n            <label>Type</label> : <Select options={STRUCTURES} value={STRUCTURES.find(s => s.value === data.type)} onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <ConfInput id=\"spacing\" value={data.spacing} onChange={handleSpacingChange} min=\"0\" max=\"4096\">Spacing</ConfInput>\n            <ConfInput id=\"separation\" value={data.separation} onChange={handleSpacingChange} min=\"0\" max=\"4096\">Spacing</ConfInput>\n            <ConfInput id=\"salt\" value={data.salt} onChange={handleChange} min=\"0\" max={0x7FFFFFFF} style={{ width: '150px' }}>Spacing</ConfInput>\n            <div className=\"form-inline\"><Button cat=\"danger\" onClick={handleDelete}>Delete</Button></div>\n        </div>\n        <hr /> \n    </div>\n});\n","import React, { useCallback, useState } from 'react';\nimport { BlockState } from '../state/BlockState';\nimport { Button } from '../../ui/Button';\nimport { useValueChange } from '../../hooks/form';\nimport { ConfInput } from '../../ui/Input';\nimport { OVERWORLD_NOISE } from './NoiseDefaults';\nimport { Structures } from './Structures';\nimport { NamespacedKey } from '../NamespacedKey';\n\nexport const NoiseSettings = React.memo(function ({ data = OVERWORLD_NOISE, onSave }) {\n\n    const [state, setState] = useState(data);\n\n    const handleSubmit = useCallback(function (e) {\n        e.preventDefault();\n        const formData = Object.fromEntries(new FormData(e.target));\n        const data = { ...state, ...formData };\n        Object.keys(formData).forEach(function (key) {\n            if (!isNaN(formData[key])) {\n                data[key] = parseFloat(formData[key]);\n            }\n        });\n        data.disable_mob_generation = formData.hasOwnProperty('disable_mob_generation');\n        onSave(data);\n    }, [onSave, state]);\n\n    const handleBlockChange = useCallback(function (name, s) {\n        setState(state => ({ ...state, [name]: s }));\n    }, []);\n    const handleStructuresChange = useCallback(function (structures) {\n        setState(state => ({ ...state, structures }));\n    }, []);\n    const handleNoiseChange = useCallback(function (noise) {\n        setState(state => ({ ...state, noise }));\n    }, []);\n\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit noise</h3>\n        <NamespacedKey example=\"epic\" type=\"noises\" value={data.key} expectBreakage={typeof data.key !== 'undefined'} />\n\n        <Structures data={data.structures} onChange={handleStructuresChange} />\n\n        <fieldset>\n            <legend>Defaults</legend>\n            <div className=\"form-group\">\n                <label>Block</label> : <BlockState block={state.default_block} onChange={state => handleBlockChange('default_block', state)} />\n            </div>\n            <div className=\"form-group\">\n                <label>Fluid</label> : <BlockState block={state.default_fluid} onChange={state => handleBlockChange('default_fluid', state)} />\n            </div>\n        </fieldset>\n\n        <fieldset>\n            <legend>Main</legend>\n            <div className=\"form-group form-row\">\n                <ConfInput name=\"bedrock_roof_position\" defaultValue={data.bedrock_roof_position}>Bedrock roof position</ConfInput>\n                <ConfInput name=\"bedrock_floor_position\" defaultValue={data.bedrock_floor_position}>Bedrock floor position</ConfInput>\n                <ConfInput name=\"sea_level\" defaultValue={data.sea_level} min=\"0\" max=\"256\">Sea level</ConfInput>\n                <ConfInput name=\"disable_mob_generation\" defaultChecked={data.disable_mob_generation}>Disable mob generation</ConfInput>\n            </div>\n        </fieldset>\n\n        <NoiseConfig data={data.noise} onChange={handleNoiseChange} />\n\n        <div className=\"form-group mlm mbm\">\n            <Button type=\"submit\">Save</Button>\n        </div>\n    </form>;\n});\n\nconst NoiseConfig = React.memo(function ({ data, onChange }) {\n\n    const handleChange = useValueChange(onChange, data);\n    const handleSamplingChange = useCallback(function (sampling) {\n        onChange({ ...data, sampling });\n    }, [data, onChange]);\n    const handleTopSlideChange = useCallback(function (top_slide) {\n        onChange({ ...data, top_slide });\n    }, [data, onChange]);\n    const handleBottomSlideChange = useCallback(function (bottom_slide) {\n        onChange({ ...data, bottom_slide });\n    }, [data, onChange]);\n\n    return <fieldset>\n        <legend>Noise config (advanced)</legend>\n        <div className=\"form-group form-row\">\n            <ConfInput id=\"height\" defaultValue={data.height} onChange={handleChange} min=\"0\" max=\"256\">Height</ConfInput>\n            <ConfInput id=\"size_horizontal\" defaultValue={data.size_horizontal} onChange={handleChange} min=\"1\" max=\"4\">Size horizontal</ConfInput>\n            <ConfInput id=\"size_vertical\" defaultValue={data.size_vertical} onChange={handleChange} min=\"1\" max=\"4\">Size vertical</ConfInput>\n            <ConfInput id=\"density_factor\" defaultValue={data.density_factor} onChange={handleChange} step=\"0.01\">Density factor</ConfInput>\n            <ConfInput id=\"density_offset\" defaultValue={data.density_offset} onChange={handleChange} step=\"0.01\">Density offset</ConfInput>\n        </div>\n        <div className=\"form-group form-row\">\n            <ConfInput id=\"simplex_surface_noise\" defaultChecked={data.simplex_surface_noise} onChange={handleChange}>Simplex surface noise</ConfInput>\n            <ConfInput id=\"random_density_offset\" defaultChecked={data.random_density_offset} onChange={handleChange}>Random density offset</ConfInput>\n            <ConfInput id=\"island_noise_override\" defaultChecked={data.island_noise_override} onChange={handleChange}>Island noise override</ConfInput>\n            <ConfInput id=\"amplified\" defaultChecked={data.amplified} onChange={handleChange}>Amplified</ConfInput>\n        </div>\n\n        <NoiseSamplingConfig data={data.sampling} onChange={handleSamplingChange}>Sampling</NoiseSamplingConfig>\n        <SlideConfig data={data.top_slide} onChange={handleTopSlideChange}>Top slide</SlideConfig>\n        <SlideConfig data={data.bottom_slide} onChange={handleBottomSlideChange}>Bottom slide</SlideConfig>\n    </fieldset>\n});\n\nconst NoiseSamplingConfig = React.memo(function ({ children, data, onChange }) {\n\n    const handleChange = useValueChange(onChange, data);\n\n    return <fieldset>\n        <legend>{children}</legend>\n        <div className=\"form-group form-row\">\n            <ConfInput name=\"xz_scale\" defaultValue={data.xz_scale} onChange={handleChange}>XY scale</ConfInput>\n            <ConfInput name=\"y_scale\" defaultValue={data.y_scale} onChange={handleChange}>Y scale</ConfInput>\n            <ConfInput name=\"xz_factor\" defaultValue={data.xz_factor} onChange={handleChange}>XZ factor</ConfInput>\n            <ConfInput name=\"y_factor\" defaultValue={data.y_factor} onChange={handleChange}>Y factor</ConfInput>\n        </div>\n    </fieldset>\n});\n\nconst SlideConfig = React.memo(function ({ children, data, onChange }) {\n\n    const handleChange = useValueChange(onChange, data);\n\n    return <fieldset>\n        <legend>{children}</legend>\n        <div className=\"form-group form-row\">\n            <ConfInput id=\"target\" defaultValue={data.target} onChange={handleChange}>Target</ConfInput>\n            <ConfInput id=\"size\" defaultValue={data.size} onChange={handleChange}>Size</ConfInput>\n            <ConfInput id=\"offset\" defaultValue={data.offset} onChange={handleChange}>Offset</ConfInput>\n        </div>\n    </fieldset>\n});\n","import React, { useCallback, useState, useContext } from 'react';\nimport { Biome } from './biome/Biome';\nimport { Button } from './../ui/Button';\nimport { MenuItem } from './../ui/Menu';\nimport { Dimension } from './dimension/Dimension';\nimport { DataContext } from './../context/DataContext';\nimport { RawConfiguredFeature } from './feature/ConfiguredFeature';\nimport { buildZip } from '../utils/zip';\nimport { SurfaceBuilder } from './surface/SurfaceBuilder';\nimport { NoiseSettings } from './noise/NoiseSettings';\nimport { displayNamespacedKey } from '../utils/data';\n\nexport function Datapack() {\n    const context = useContext(DataContext);\n    const custom = context.custom;\n    const namespace = context.namespace;\n    const [menu, setMenu] = useState({page: 'stats'});\n\n    const handleStatsClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'stats'});\n    }, []);\n    const handleAddBiomeClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'biome'});\n    }, []);\n    const handleAddDimensionClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'dimension'});\n    }, []);\n    const handleAddFeatureClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'feature'});\n    }, []);\n    const handleAddNoiseClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'noise'});\n    }, []);\n    const handleAddSurfaceBuilderClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'surface'});\n    }, []);\n\n    const onBiomeSave = useCallback(function(biome) {\n        custom.updateBiomes(biome);\n        setMenu({page: 'stats'});\n    }, [custom]);\n    const onDimensionSave = useCallback(function(dimension) {\n        custom.updateDimensions(dimension);\n        setMenu({page: 'stats'});\n    }, [custom]);\n    const onFeatureSave = useCallback(function(feature) {\n        custom.updateFeatures(feature);\n        setMenu({page: 'stats'});\n    }, [custom]);\n    const onNoiseSave = useCallback(function(noise) {\n        custom.updateNoises(noise);\n        setMenu({page: 'stats'});\n    }, [custom]);\n    const onSurfaceBuilderSave = useCallback(function(surface_builder) {\n        custom.updateSurfacesBuilders(surface_builder);\n        setMenu({page: 'stats'});\n    }, [custom]);\n\n    const editBiome = useCallback(function(index) {\n        setMenu({page: 'biome', index});\n    }, []);\n    const editDimension = useCallback(function(index) {\n        setMenu({page: 'dimension', index});\n    }, []);\n    const editFeature = useCallback(function(index) {\n        setMenu({page: 'feature', index});\n    }, []);\n    const editNoise = useCallback(function(index) {\n        setMenu({page: 'noise', index});\n    }, []);\n    const editSurface = useCallback(function(index) {\n        setMenu({page: 'surface', index});\n    }, []);\n\n    return <div>\n        <h2>Datapack {namespace}</h2>\n        <div className=\"tabs\"><nav className=\"tabs-menu\">\n            <MenuItem onClick={handleStatsClick} active={menu.page === 'stats'}>Stats</MenuItem>\n            <MenuItem onClick={handleAddBiomeClick} active={menu.page === 'biome'}>Biome</MenuItem>\n            <MenuItem onClick={handleAddSurfaceBuilderClick} active={menu.page === 'surface'}>Surfaces builder</MenuItem>\n            <MenuItem onClick={handleAddFeatureClick} active={menu.page === 'feature'}>Feature</MenuItem>\n            <MenuItem onClick={handleAddDimensionClick} active={menu.page === 'dimension'}>Dimension</MenuItem>\n            <MenuItem onClick={handleAddNoiseClick} active={menu.page === 'noise'}>Noise</MenuItem>\n        </nav></div>\n        {menu.page === 'biome' && <Biome onSave={onBiomeSave} data={custom.biomes[menu.index]} />}\n        {menu.page === 'surface' && <SurfaceBuilder onSave={onSurfaceBuilderSave} data={custom.surfaces[menu.index]} />}\n        {menu.page === 'feature' && <RawConfiguredFeature onSave={onFeatureSave} data={custom.features[menu.index]} />}\n        {menu.page === 'noise' && <NoiseSettings onSave={onNoiseSave} data={custom.noises[menu.index]} />}\n        {menu.page === 'dimension' && <Dimension onSave={onDimensionSave} data={custom.dimensions[menu.index]} />}\n        {menu.page === 'stats' && <Stats custom={custom} namespace={namespace} editBiome={editBiome} editDimension={editDimension} editFeature={editFeature} editNoise={editNoise} editSurface={editSurface} />}\n    </div>\n}\n\nfunction Stats({custom, namespace, editBiome, editDimension, editFeature, editNoise, editSurface}) {\n\n    const handleBiomeClick = function(e, index) {\n        e.preventDefault();\n        editBiome(index);\n    }\n    const handleDimensionClick = function(e, index) {\n        e.preventDefault();\n        editDimension(index);\n    }\n    const handleFeatureClick = function(e, index) {\n        e.preventDefault();\n        editFeature(index);\n    }\n    const handleNoiseClick = function(e, index) {\n        e.preventDefault();\n        editNoise(index);\n    }\n    const handleSurfaceClick = function(e, index) {\n        e.preventDefault();\n        editSurface(index);\n    }\n\n    const handleGenerateClick = function(e) {\n        e.preventDefault();\n        buildZip(custom);\n    }\n\n    const mayGenerate = Object.values(custom).some(content => {\n        if (Array.isArray(content)) {\n            return content.length;\n        }\n        return false;\n    });\n\n    return <div className=\"mtm\">\n        <StatsTitle data={custom.biomes} namespace={namespace} onClick={handleBiomeClick}>custom biome</StatsTitle>\n        <StatsTitle data={custom.dimensions} namespace={namespace} onClick={handleDimensionClick}>custom dimension</StatsTitle>\n        <StatsTitle data={custom.features} namespace={namespace} onClick={handleFeatureClick}>configured feature</StatsTitle>\n        <StatsTitle data={custom.surfaces} namespace={namespace} onClick={handleSurfaceClick}>configured surface builder</StatsTitle>\n        <StatsTitle data={custom.noises} namespace={namespace} onClick={handleNoiseClick}>custom noise</StatsTitle>\n        {mayGenerate && <p><Button onClick={handleGenerateClick}>Generate</Button></p>}\n    </div>\n}\n\nfunction StatsTitle({ children, data, namespace, onClick }) {\n    return <>\n        <h5><strong>{data.length}</strong> {children}{data.length > 1 && 's'}</h5>\n        <ul>\n            {data.map((d, i) => {\n                const name = displayNamespacedKey(d.key, namespace);\n                return <li key={i}><a href=\"#edit\" onClick={(e) => onClick(e, i)}>{name}</a></li>\n            })}\n        </ul>\n    </>\n}","import React, { useState } from 'react';\nimport { Button } from '../ui/Button';\nimport { readZip } from '../utils/zip';\n\nexport function DatapackForm({onCreate}) {\n\n    const [error, setError] = useState(null);\n\n    const handleCreate = function(e) {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const namespace = data.get('namespace');\n        onCreate([namespace, undefined]);\n    };\n\n    const handleFile = function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const file = (e.dataTransfer || e.target).files[0];\n        readZip(file)\n            .then(onCreate)\n            .catch(error => {\n                console.error(error);\n                setError(error.message);\n            });\n    };\n    const handleDrag = function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n    };\n\n    return <form onSubmit={handleCreate} onDragStart={handleDrag} onDragEnter={handleDrag} onDragOver={handleDrag} onDrop={handleFile}>\n        <h2>Create a new dimension datapack</h2>\n        <div className=\"form-group\">\n            <label htmlFor=\"namespace\">Default namespace</label> : <input type=\"text\" name=\"namespace\" id=\"namespace\" required pattern=\"[a-z0-9._-]+\" className=\"form-control\" aria-describedby=\"namespaceHelp\" />\n            <p><small id=\"namespaceHelp\" className=\"form-text text-muted\">This differentiates the datapack from the vanilla functions. Namespaces and identifiers may only contain letters, numbers and <code>._-</code> characters. This namespace is not final, you can edit the vanilla dimensions in the following menus.</small></p>\n        </div>\n        <div className=\"flex-container\">\n            <Button type=\"submit\">Create</Button>\n            <input type=\"file\" name=\"load-existing-zip\" id=\"load-existing-zip\" accept=\".zip\" onChange={handleFile} /><label htmlFor=\"load-existing-zip\" className=\"btn--info\">Use existing datapack</label>\n        </div>\n        {error !== null && <div className=\"mtl\">\n            <div className=\"alert--danger\">{error}</div>\n        </div>}\n        <div className=\"mtl\">\n            <div className=\"alert--warning\">\n                This generator as well as the in-game functionality is unstable. Use this tool with caution.<br />\n                Currently built for pre-release 1. Datapacks created in snapshots will be converted to work in this pre-release.\n            </div>\n        </div>\n    </form>\n}","import React, { useState } from 'react';\nimport './../node_modules/knacss/css/knacss.css';\nimport './App.css';\nimport { Datapack } from './components/Datapack';\nimport { DataContextProvider } from './context/DataContext';\nimport { DatapackForm } from './components/DatapackForm';\n\nfunction App() {\n    const [data, setData] = useState(null);\n\n    return <>\n        {data !== null ? <DataContextProvider namespace={data[0]} initial={data[1]}><Datapack /></DataContextProvider> : <DatapackForm onCreate={setData} />}\n    </>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}