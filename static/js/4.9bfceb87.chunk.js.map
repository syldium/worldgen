{"version":3,"sources":["../node_modules/java-random/lib/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","viewers/biome_multi_noise/PerlinSamplers.js","utils/hash.js","viewers/biome_multi_noise/MultiNoiseDimension.js","components/dimension/MultiNoiseBiomeSource.jsx","ui/NumberList.jsx","components/dimension/BiomeSource.jsx","components/dimension/FlatChunkSettings.jsx","components/dimension/DimensionGenerator.jsx","components/dimension/Dimension.jsx"],"names":["p2_32","p2_53","Math","pow","m2_16","c1","c0","module","exports","seedval","s2","s1","s0","nextNextGaussian","ints","longs","doubles","haveNextNextGaussian","_next","carry","r0","r1","r2","next_signed","bits","next","checkIsNumber","n","TypeError","checkIsPositiveInt","r","RangeError","setSeed","nextInt","bound","undefined","val","nextLong","BigInt","Error","msb","lsb","nextDouble","checkStreamSize","streamSize","Number","MAX_SAFE_INTEGER","forever","functions","nextBoolean","nextFloat","nextGaussian","v1","v2","s","multiplier","sqrt","log","f","Object","assign","value","defineProperties","this","floor","random","instance","Constructor","_classCallCheck","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","prototype","DoublePerlinSampler","settings","firstSampler","OctaveSimplexNoise","secondSampler","amplitude","createAmplitude","amplitudes","a","INT_MAX_VALUE","b","INT_MIN_VALUE","forEach","index","min","max","x","y","z","d","e","sample","firstOctave","sampler","PerlinNoiseSampler","j","k","octaveSamplers","Array","l","consumeRandom","m","random2","Random","lacunarity","persistence","bl","noise","originY","originX","originZ","permutations","buildPermutationsTable","Uint8Array","rx","ry","rz","fx","fy","fz","dx","dy","dz","fadeX","perlinFade","fadeY","fadeZ","t","_sample","sectionX","sectionY","sectionZ","localX","localY","localZ","fadeLocalX","fadeLocalY","fadeLocalZ","getGradient","grad","g","h","o","p","q","lerp3","hash","count","c","hashCode","imul","charCodeAt","MultiNoiseDimension","source","biomes","temperatureNoise","seed","temperature_noise","humidityNoise","humidity_noise","altitudeNoise","altitude_noise","weirdnessNoise","weirdness_noise","biomeX","biomeY","biomeZ","temperature","humidity","altitude","weirdness","current","minDistance","biome","distance","getDistanceToBiome","parameters","image","scale","every","offsetX","offsetY","width","height","buffer","ArrayBuffer","data","buf8","Uint8ClampedArray","data32","Uint32Array","endX","endY","biomesColors","getBiomesColors","color","getBiomeAt","set","offset","MultiNoiseRepresentation","React","memo","useToggle","auto","toggle","useState","setScale","reference","useRef","render","useCallback","canvas","ctx","getContext","alpha","img","createImageData","putImageData","handleClick","preventDefault","handleScaleChange","parseInt","useEffect","className","style","display","alignItems","ref","htmlFor","type","id","onChange","checked","Button","onClick","justifyContent","entries","map","marginLeft","marginRight","backgroundColor","integerColorToHex","verticalAlign","NumberList","children","numbers","step","handleChange","pos","BiomeSource","options","useMemo","label","handleSeedChange","handleTypeChange","option","handleFixedSourceChange","selected","find","Select","inputId","SeedField","CheckerboardBiomeSource","FixedBiomeSource","MultiNoiseBiomeSource","VanillaLayeredBiomeSource","useKeyedListOptions","handleBiomesChange","selection","isArray","isMulti","isClearable","filter","includes","required","defaultValue","inline","MULTI_NOISE_BIOME_SOURCE","useCrudPreset","handleAdd","handleRemove","advanced","toggleAdvanced","handleNoiseChange","vanilla","useContext","DataContext","custom","namespace","NOISES_NAMES","values","entry","push","BiomeSelection","biomesOptions","cat","PerlinNoiseParameters","capitalize","replace","hasDuplicatedObjects","handleLegacyBiomeToggle","legacy_biome_init_layer","handleLargeBiomesToggle","large_biomes","handleFirstOctaveChange","handleAmplitudesChange","margin","handleBiomeChange","name","rainfall","handleParameterChange","upChange","FlatChunkSettings","useJsonEffect","structures","layers","block","handleLayersChange","handleStructuresChange","handleLakesToggle","lakes","GeneratorLayers","config","Structures","shouldCancelStart","parentNode","classList","contains","handleReversedSort","oldIndex","newIndex","SortableLayersList","onRemove","onSortEnd","SortableContainer","layer","Layer","reverse","SortableElement","handleHeightChange","handleBlockChange","DimensionGenerator","generator","previousGenerator","setPreviousGenerator","handleChunkGeneratorChange","DIMENSION","handleSettingsChange","handleBiomeSourceChange","biome_source","fontWeight","fontSize","CHUNK_GENERATOR_TYPES","text","setText","isNaN","Dimension","onSave","state","setState","handleGeneratorChange","handleSubmit","fromEntries","FormData","onSubmit","NamespacedKey","example","onSelectLoad","dimension","JsonViewer","DimensionType"],"mappings":"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","file":"static/js/4.9bfceb87.chunk.js","sourcesContent":["//\n// An almost complete implementation in JS of the `java.util.Random`\n// class from J2SE, designed to so far as possible produce the same\n// output sequences as the Java original when supplied with the same\n// seed.\n//\n\nconst p2_16\t= 0x0000000010000;\nconst p2_24\t= 0x0000001000000;\nconst p2_27\t= 0x0000008000000;\nconst p2_31\t= 0x0000080000000;\nconst p2_32\t= 0x0000100000000;\nconst p2_48\t= 0x1000000000000;\nconst p2_53\t= Math.pow(2, 53);\t// NB: exceeds Number.MAX_SAFE_INTEGER\n\nconst m2_16\t= 0xffff;\n\n//\n// multiplicative term for the PRNG\n//\nconst [c2, c1, c0] = [0x0005, 0xdeec, 0xe66d];\n\nmodule.exports = class JavaRandom {\n\n\tconstructor(seedval) {\n\n\t\tlet\ts2, s1, s0;\n\t\tlet\tnextNextGaussian;\n\t\tlet\thaveNextNextGaussian = false;\n\n\t\t//\n\t\t// 53-bit safe version of\n\t\t// seed = (seed * 0x5DEECE66DL + 0xBL) & ((1L << 48) - 1)\n\t\t//\n\t\tconst _next = () => {\n\n\t\t\tlet carry = 0xb;\n\n\t\t\tlet r0 = (s0 * c0) + carry;\n\t\t\tcarry = r0 >>> 16;\n\t\t\tr0 &= m2_16;\n\n\t\t\tlet r1 = (s1 * c0 + s0 * c1) + carry;\n\t\t\tcarry = r1 >>> 16;\n\t\t\tr1 &= m2_16;\n\n\t\t\tlet r2 = (s2 * c0 + s1 * c1 + s0 * c2) + carry;\n\t\t\tr2 &= m2_16;\n\n\t\t\t[s2, s1, s0] = [r2, r1, r0];\n\n\t\t\treturn s2 * p2_16 + s1;\n\t\t}\n\n\t\tconst next_signed = (bits) => {\n\t\t\treturn _next() >> (32 - bits);\n\t\t}\n\n\t\tconst next = (bits) => {\n\t\t\treturn _next() >>> (32 - bits);\n\t\t}\n\n\t\tconst checkIsNumber = (n) => {\n\t\t\tif (typeof n !== 'number') {\n\t\t\t\tthrow TypeError();\n\t\t\t}\n\t\t}\n\n\t\tconst checkIsPositiveInt = (n, r = 0x7fffffff) => {\n\t\t\tcheckIsNumber(n);\n\t\t\tif (n < 0 || n > r) {\n\t\t\t\tthrow RangeError();\n\t\t\t}\n\t\t}\n\n\t\t//\n\t\t// 53-bit safe version of\n\t\t// seed = (seed ^ 0x5DEECE66DL) & ((1L << 48) - 1)\n\t\t//\n\t\tfunction setSeed(n) {\n\t\t\tcheckIsNumber(n);\n\t\t\ts0 =         ((n) & m2_16) ^ c0;\n\t\t\ts1 = ((n / p2_16) & m2_16) ^ c1;\n\t\t\ts2 = ((n / p2_32) & m2_16) ^ c2;\n\t\t}\n\n\t\tfunction nextInt(bound) {\n\t\t\tif (bound === undefined) {\n\t\t\t\treturn next_signed(32);\n\t\t\t}\n\n\t\t\tcheckIsPositiveInt(bound);\n\n\t\t\t// special case if bound is a power of two\n\t\t\tif ((bound & -bound) === bound) {\n\t\t\t\tlet r = next(31) / p2_31;\n\t\t\t\treturn ~~(bound * r);\n\t\t\t}\n\n\t\t\tvar bits, val;\n\t\t\tdo {\n\t\t\t\tbits = next(31);\n\t\t\t\tval = bits % bound;\n\t\t\t} while (bits - val + (bound - 1) < 0);\n\t\t\treturn val;\n\t\t}\n\n\t\tfunction nextLong() {\n\t\t\tif (typeof BigInt !== 'function') {\n\t\t\t\tthrow Error('BigInt unsupported');\n\t\t\t}\n\t\t\tlet msb = BigInt(next_signed(32));\n\t\t\tlet lsb = BigInt(next_signed(32));\n\t\t\tconst p2_32n = BigInt(p2_32);\n\t\t\treturn msb * p2_32n + lsb;\n\t\t}\n\n\t\tfunction nextBoolean() {\n\t\t\treturn next(1) != 0;\n\t\t}\n\n\t\tfunction nextFloat() {\n\t\t\treturn next(24) / p2_24;\n\t\t}\n\n\t\tfunction nextDouble() {\n\t\t\treturn (p2_27 * next(26) + next(27)) / p2_53;\n\t\t}\n\n\t\tfunction nextGaussian() {\n\t\t\tif (haveNextNextGaussian) {\n\t\t\t\thaveNextNextGaussian = false;\n\t\t\t\treturn nextNextGaussian;\n\t\t\t} else {\n\t\t\t\tlet v1, v2, s;\n\t\t\t\tdo {\n\t\t\t\t\tv1 = 2 * nextDouble() - 1.0;\n\t\t\t\t\tv2 = 2 * nextDouble() - 1.0;\n\t\t\t\t\ts = v1 * v1 + v2 * v2;\n\t\t\t\t} while (s >= 1 || s === 0);\n\t\t\t\tlet multiplier = Math.sqrt(-2 * Math.log(s) / s);\n\t\t\t\tnextNextGaussian = v2 * multiplier;\n\t\t\t\thaveNextNextGaussian = true;\n\t\t\t\treturn v1 * multiplier;\n\t\t\t}\n\t\t}\n\n\t\t//\n\t\t// stream functions replaced with JS generators\n\t\t//\n\t\tfunction checkStreamSize(streamSize)\n\t\t{\n\t\t\tif (streamSize === undefined) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tcheckIsPositiveInt(streamSize, Number.MAX_SAFE_INTEGER);\n\n\t\t\treturn streamSize;\n\t\t}\n\n\t\tfunction* ints(streamSize) {\n\t\t\tstreamSize = checkStreamSize(streamSize);\n\t\t\tlet forever = streamSize === undefined;\n\t\t\twhile (forever || (streamSize-- > 0)) {\n\t\t\t\tyield nextInt();\n\t\t\t}\n\t\t}\n\n\t\tfunction* longs(streamSize) {\n\t\t\tstreamSize = checkStreamSize(streamSize);\n\t\t\tlet forever = streamSize === undefined;\n\t\t\twhile (forever || (streamSize-- > 0)) {\n\t\t\t\tyield nextLong();\n\t\t\t}\n\t\t}\n\n\t\tfunction* doubles(streamSize) {\n\t\t\tstreamSize = checkStreamSize(streamSize);\n\t\t\tlet forever = streamSize === undefined;\n\t\t\twhile (forever || (streamSize-- > 0)) {\n\t\t\t\tyield nextDouble();\n\t\t\t}\n\t\t}\n\n\t\t// list of functions to export, using ES6 scoped-variable keys\n\t\tconst functions = {\n\t\t\tsetSeed,\n\t\t\tnextInt, nextBoolean,\n\t\t\tnextFloat, nextDouble, nextGaussian,\n\t\t\tints, doubles\n\t\t};\n\n\t\t// add BigInt support if available\n\t\tif (typeof BigInt === 'function') {\n\t\t\tObject.assign(functions, {\n\t\t\t\tnextLong, longs\n\t\t\t});\n\t\t}\n\n\t\t// convert into Property Descriptors\n\t\tfor (let f in functions) {\n\t\t\tfunctions[f] = { value: functions[f] };\n\t\t}\n\n\t\t// add them to the current object\n\t\tObject.defineProperties(this, functions);\n\n\t\t// perform seed initialisation\n\t\tif (seedval === undefined) {\n\t\t\tseedval = Math.floor(Math.random() * p2_48); \n\t\t}\n\t\tsetSeed(seedval);\n\t}\n};\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import { INT_MAX_VALUE, INT_MIN_VALUE, grad, lerp3, perlinFade } from '../../utils/math';\n\nimport Random from 'java-random';\n\nexport class DoublePerlinSampler {\n    /**\n     * @param {JavaRandom} random \n     * @param {{ firstOctave: number, amplitudes: number[] }} settings \n     */\n    constructor(random, settings) {\n        this.firstSampler = new OctaveSimplexNoise(random, settings);\n        this.secondSampler = new OctaveSimplexNoise(random, settings);\n        this.amplitude = this.createAmplitude(settings.amplitudes);\n    }\n\n    /**\n     * @param {number[]} amplitudes \n     * @returns {number}\n     */\n    createAmplitude(amplitudes) {\n        let a = INT_MAX_VALUE;\n        let b = INT_MIN_VALUE;\n        amplitudes.forEach((n, index) => {\n            if (n !== 0) {\n                a = Math.min(a, index);\n                b = Math.max(b, index);\n            }\n        });\n        return (1/6) / (0.1 * (1.0 + 1.0 / (b - a + 1)));\n    }\n\n    /**\n     * @param {number} x \n     * @param {number} y \n     * @param {number} z \n     */\n    sample(x, y, z) {\n        const d = x * 1.0181268882175227;\n        const e = y * 1.0181268882175227;\n        const f = z * 1.0181268882175227;\n        return (this.firstSampler.sample(x, y, z) + this.secondSampler.sample(d, e, f)) * this.amplitude;\n    }\n}\n\nclass OctaveSimplexNoise {\n\n    /**\n     * @param {Random} random \n     * @param {number[]} octaves \n     */\n    constructor(random, { firstOctave, amplitudes }) {\n        this.amplitudes = amplitudes;\n        const sampler = new PerlinNoiseSampler(random);\n        const j = amplitudes.length;\n        const k = -firstOctave;\n        this.octaveSamplers = new Array(j);\n\n        if (k >= 0 && k < j) {\n            const d = amplitudes[k];\n            if (d !== 0.0) {\n                this.octaveSamplers[k] = sampler;\n            }\n        }\n\n        for (let l = k - 1; l >= 0; --l) {\n            if (l < j) {\n                if (this.amplitudes[l] !== 0.0) {\n                    this.octaveSamplers[l] = new PerlinNoiseSampler(random);\n                } else {\n                    consumeRandom(random, 262);\n                }\n            } else {\n                consumeRandom(random, 262);\n            }\n        }\n\n        if (k < j - 1) {\n            const m = sampler.sample(0.0, 0.0, 0.0, 0.0, 0.0) * 9.223372036854776E18;\n            const random2 = new Random(m);\n\n            for (let n = k + 1; n < j; ++n) {\n                if (n >= 0) {\n                    if (this.amplitudes[n] !== 0.0) {\n                        this.octaveSamplers[n] = new PerlinNoiseSampler(random2);\n                    } else {\n                        consumeRandom(random, 262);\n                    }\n                } else {\n                    consumeRandom(random, 262);\n                }\n            }\n        }\n\n        this.lacunarity = Math.pow(2.0, -k);\n        this.persistence = Math.pow(2.0, j - 1) / (Math.pow(2.0, j) - 1.0);\n    }\n\n    /**\n     * @param {number} x \n     * @param {number} y \n     * @param {number} z \n     * @param {number} d \n     * @param {number} e \n     * @param {boolean} bl \n     */\n    sample(x, y, z, d = 0.0, e = 0.0, bl = false) {\n        let noise = 0.0;\n        let lacunarity = this.lacunarity;\n        let persistence = this.persistence;\n\n        this.octaveSamplers.forEach((sampler, i) => {\n            if (typeof sampler === 'object') {\n                noise += this.amplitudes[i] * sampler.sample(\n                    x * lacunarity, bl ? -sampler.originY : y * lacunarity,\n                    z * lacunarity,\n                    d * lacunarity, e * lacunarity) * persistence;\n                lacunarity *= 2.0;\n                persistence /= 2.0;\n            }\n        });\n        return noise;\n    }\n}\n\nclass PerlinNoiseSampler {\n\n    /**\n     * @param {Random} random \n     */\n    constructor(random) {\n        this.originX = random.nextDouble() * 256;\n        this.originY = random.nextDouble() * 256;\n        this.originZ = random.nextDouble() * 256;\n        this.permutations = this.buildPermutationsTable(random);\n    }\n\n    /**\n     * @param {Random} random \n     */\n    buildPermutationsTable(random) {\n        const permutations = new Uint8Array(256);\n        for (let j = 0; j < 256; ++j) {\n            permutations[j] = j;\n        }\n        for (let j = 0; j < 256; ++j) {\n            const k = random.nextInt(256 - j);\n            const b = permutations[j];\n            permutations[j] = permutations[j + k];\n            permutations[j + k] = b;\n        }\n        return permutations;\n    }\n\n    /**\n     * @param {number} x \n     * @param {number} y \n     * @param {number} z \n     * @param {number} d \n     * @param {number} e \n     * @returns {number}\n     */\n    sample(x, y, z, d, e) {\n        const rx = x + this.originX;\n        const ry = y + this.originY;\n        const rz = z + this.originZ;\n        const fx = Math.floor(rx);\n        const fy = Math.floor(ry);\n        const fz = Math.floor(rz);\n\n        const dx = rx - fx;\n        const dy = ry - fy;\n        const dz = rz - fz;\n        const fadeX = perlinFade(dx);\n        const fadeY = perlinFade(dy);\n        const fadeZ = perlinFade(dz);\n\n        const t = d === 0 ? 0 : Math.floor(Math.min(e, dy) / d) * d;\n        return this._sample(fx, fy, fz, dx, dy - t, dz, fadeX, fadeY, fadeZ);\n    }\n\n    /**\n     * @param {number} sectionX \n     * @param {number} sectionY \n     * @param {number} sectionZ \n     * @param {number} localX \n     * @param {number} localY \n     * @param {number} localZ \n     * @param {number} fadeLocalX \n     * @param {number} fadeLocalY \n     * @param {number} fadeLocalZ \n     * @returns {number}\n     */\n    _sample(sectionX, sectionY, sectionZ, localX, localY, localZ, fadeLocalX, fadeLocalY, fadeLocalZ) {\n        const i = this.getGradient(sectionX) + sectionY;\n        const j = this.getGradient(i) + sectionZ;\n        const k = this.getGradient(i + 1) + sectionZ;\n        const l = this.getGradient(sectionX + 1) + sectionY;\n        const m = this.getGradient(l) + sectionZ;\n        const n = this.getGradient(l + 1) + sectionZ;\n        const d = grad(this.getGradient(j), localX, localY, localZ);\n        const e = grad(this.getGradient(m), localX - 1.0, localY, localZ);\n        const f = grad(this.getGradient(k), localX, localY - 1.0, localZ);\n        const g = grad(this.getGradient(n), localX - 1.0, localY - 1.0, localZ);\n        const h = grad(this.getGradient(j + 1), localX, localY, localZ - 1.0);\n        const o = grad(this.getGradient(m + 1), localX - 1.0, localY, localZ - 1.0);\n        const p = grad(this.getGradient(k + 1), localX, localY - 1.0, localZ - 1.0);\n        const q = grad(this.getGradient(n + 1), localX - 1.0, localY - 1.0, localZ - 1.0);\n        return lerp3(fadeLocalX, fadeLocalY, fadeLocalZ, d, e, f, g, h, o, p, q);\n    }\n\n    getGradient(hash) {\n        return this.permutations[hash & 255];\n    }\n}\n\n/**\n * @param {Random} random \n * @param {number} count\n */\nfunction consumeRandom(random, count) {\n    for (let c = 0; c < count; c++) {\n        random.nextInt();\n    }\n}\n","export function hashCode(s) {\n    let hash;\n    for (let i = 0; i < s.length; i++) { \n        hash = Math.imul(31, hash) + s.charCodeAt(i) | 0;\n    }\n    return hash;\n}","import { DoublePerlinSampler } from './PerlinSamplers';\nimport { hashCode } from '../../utils/hash';\nimport Random from 'java-random';\n\n/**\n * @typedef Biome\n * @type {object}\n * @property {string} biome Biome name \n * @property {{\n        temperature: number,\n        humidity: number,\n        altitude: number,\n        weirdness: number,\n        offset: number\n    }} parameters Noise point parameters\n */\n\nexport class MultiNoiseDimension {\n\n    /**\n     * @param {{\n            temperature_noise: { firstOctave: number, amplitudes: number[] },\n            humidity_noise: { firstOctave: number, amplitudes: number[] },\n            altitude_noise: { firstOctave: number, amplitudes: number[] },\n            weirdness_noise: { firstOctave: number, amplitudes: number[] },\n            seed: number,\n            biomes: Biome[]\n        }} source\n    */\n    constructor(source) {\n        this.biomes = source.biomes;\n\n        this.temperatureNoise = new DoublePerlinSampler(new Random(source.seed), source.temperature_noise);\n        this.humidityNoise = new DoublePerlinSampler(new Random(source.seed + 1), source.humidity_noise);\n        this.altitudeNoise = new DoublePerlinSampler(new Random(source.seed + 2), source.altitude_noise);\n        this.weirdnessNoise = new DoublePerlinSampler(new Random(source.seed + 3), source.weirdness_noise);\n    }\n\n    /**\n     * Get biome for the given block position.\n     * \n     * @param {number} x \n     * @param {number} y \n     * @param {number} z \n     * @returns {Biome}\n     */\n    getBiomeAt(x, y, z) {\n        const biomeX = x >> 2;\n        const biomeY = y >> 2;\n        const biomeZ = z >> 2;\n\n        // Calculate a noise point using perlin noise samplers\n        const temperature = this.temperatureNoise.sample(biomeX, biomeY, biomeZ);\n        const humidity = this.humidityNoise.sample(biomeX, biomeY, biomeZ);\n        const altitude = this.altitudeNoise.sample(biomeX, biomeY, biomeZ);\n        const weirdness = this.weirdnessNoise.sample(biomeX, biomeY, biomeZ);\n\n        // Determine the biome with the parameters closest to the current noise point\n        let current = null;\n        let minDistance = Number.MAX_SAFE_INTEGER;\n        for (const biome of this.biomes) {\n            const distance = this.getDistanceToBiome(temperature, humidity, altitude, weirdness, biome.parameters);\n            if (distance < minDistance) {\n                current = biome;\n                minDistance = distance;\n            }\n        }\n        \n        return current;\n    }\n\n    /**\n     * Fill the image data with biome positions\n     * \n     * @param {ImageData} image \n     * @param {number} [scale] exponential\n     * @param {number} [every] x % every === 0 ? compute : use previous data\n     * @param {number} [offsetX] \n     * @param {number} [offsetY] \n     */\n    createImageData(image, scale = 4, every = 2, offsetX = 0, offsetY = 0) {\n        const width = image.width;\n        const height = image.height;\n        const buffer = new ArrayBuffer(image.data.length);\n        const buf8 = new Uint8ClampedArray(buffer);\n        const data32 = new Uint32Array(buffer);\n\n        const endX = offsetX + width;\n        const endY = offsetY + height;\n\n        const biomesColors = MultiNoiseDimension.getBiomesColors(this.biomes);\n\n        let color = null;\n        for (let x = offsetX; x < endX; x += 1) {\n            for (let y = offsetY; y < endY; y += 1) {\n                if (x % every === 0) {\n                    if (y % every === 0) {\n                        const biome = this.getBiomeAt(x << scale, 0, y << scale);\n                        color = biomesColors[biome.biome];\n                    }\n                    data32[y * width + x] = (255 << 24) | color;\n                } else {\n                    data32[y * width + x] = data32[y * width + x - 1];\n                }\n            }\n        }\n        image.data.set(buf8);\n    }\n\n    /**\n     * Calculates the distance from this noise point to another one.\n     * \n     * @param {number} temperature \n     * @param {number} humidity \n     * @param {number} altitude \n     * @param {number} weirdness \n     * @param {{ temperature: number, humidity: number, altitude: number, weirdness: number, offset: number }} parameters \n     */\n    getDistanceToBiome(temperature, humidity, altitude, weirdness, parameters) {\n        return (temperature - parameters.temperature) ** 2\n            + (humidity - parameters.humidity) ** 2\n            + (altitude - parameters.altitude) ** 2\n            + (weirdness - parameters.weirdness) ** 2\n            + (0 - parameters.offset) ** 2;\n    }\n\n    /**\n     * @param {Biome[]} biomes \n     * @returns {object}\n     */\n    static getBiomesColors(biomes = []) {\n        const biomesColors = {};\n        for (const biome of biomes) {\n            biomesColors[biome.biome] = hashCode(biome.biome);\n        }\n        return biomesColors;\n    }\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\n\nimport { Button } from '../../ui/Button';\nimport { MultiNoiseDimension } from '../../viewers/biome_multi_noise/MultiNoiseDimension';\nimport { integerColorToHex } from '../../utils/color';\nimport { useToggle } from '../../hooks/ui';\n\nexport const MultiNoiseRepresentation = React.memo(function ({ source }) {\n\n    const [auto, toggle] = useToggle();\n    const [scale, setScale] = useState(4);\n    const reference = useRef(null);\n\n    const render = useCallback(function () {\n        if ((source.biomes || []).length < 1) {\n            return;\n        }\n        const canvas = reference.current;\n        const ctx = canvas.getContext('2d', { alpha: false });\n        const img = ctx.createImageData(canvas.width, canvas.height);\n        const dimension = new MultiNoiseDimension(source);\n        dimension.createImageData(img, scale);\n        ctx.putImageData(img, 0, 0);\n    }, [scale, source]);\n\n    const handleClick = useCallback(function (e) {\n        e.preventDefault();\n        render();\n    }, [render]);\n\n    const handleScaleChange = useCallback(function (e) {\n        setScale(parseInt(e.target.value));\n    }, []);\n\n    useEffect(function () {\n        if (auto) {\n            render();\n        }\n    }, [auto, render]);\n\n    return <fieldset>\n        <legend>Preview</legend>\n        <div className=\"form-row\">\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <canvas height=\"128\" width=\"384\" ref={reference} moz-opaque=\"true\"></canvas>\n            </div>\n            <div>\n                <label htmlFor=\"scale\">Scale</label> : <input type=\"range\" id=\"scale\" min=\"1\" max=\"8\" value={scale} onChange={handleScaleChange} /> ({1 << scale} block/px)<br />\n                <label htmlFor=\"auto-update\">Auto update (affects performance)</label> : <input type=\"checkbox\" className=\"checkbox\" checked={auto} onChange={toggle} id=\"auto-update\" /><br />\n                {(source.biomes || []).length > 0 && !auto && <Button onClick={handleClick}>Render</Button>}\n            </div>\n        </div>\n        <ul className=\"form-group form-row\" style={{ justifyContent: 'start' }}>\n            {Object.entries(MultiNoiseDimension.getBiomesColors(source.biomes)).map(([biome, color]) => {\n                const b = (color >> 16) & 0xFF;\n                const g = (color >> 8) & 0xFF;\n                const r = color & 0xFF;\n                return <li key={biome} style={{ display: 'inline', marginLeft: '8px', marginRight: '4px' }}>\n                    <div style={{\n                        backgroundColor: integerColorToHex(((r << 16) | (g << 8) | b)),\n                        width: '32px', height: '16px',\n                        display: 'inline-block',\n                        marginRight: '0.5rem',\n                        verticalAlign: 'middle'\n                    }}></div>\n                    {biome}\n                </li>\n            })}\n        </ul>\n    </fieldset>\n});\n","import { NumberInput } from './Input';\nimport React from 'react';\n\nexport const NumberList = React.memo(function ({ children, numbers = [], onChange, step }) {\n\n    const handleChange = function(val, pos) {\n        onChange(numbers.map((n, i) => i === pos ? val : n));\n    };\n\n    return <div className=\"form-row\">\n        <label>{children}</label>&nbsp;:&nbsp;{numbers.map((n, i) => <NumberInput key={i} step={step} value={n} onChange={(n) => handleChange(n, i)} />)}\n    </div>\n});\n","import { ConfInput, NumberInput } from '../../ui/Input';\nimport { MULTI_NOISE_BIOME_SOURCE, NOISES_NAMES } from './DimensionDefaults';\nimport { capitalize, hasDuplicatedObjects } from '../../utils/data';\nimport React, { useCallback, useContext, useEffect } from 'react';\n\nimport { Button } from '../../ui/Button';\nimport { DataContext } from '../../context/DataContext';\nimport { MultiNoiseRepresentation } from './MultiNoiseBiomeSource';\nimport { NumberList } from '../../ui/NumberList';\nimport { SeedField } from './DimensionGenerator';\nimport { useCrudPreset } from '../../hooks/form';\nimport { useKeyedListOptions } from '../../hooks/context';\nimport { useMemo } from 'react';\nimport { useToggle } from '../../hooks/ui';\nimport Select from '../../ui/Select';\n\nexport const BiomeSource = React.memo(function({source = { type: 'minecraft:fixed' }, onChange}) {\n\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:checkerboard', label: 'Checkerboard' },\n            { value: 'minecraft:fixed', label: 'Fixed' },\n            { value: 'minecraft:multi_noise', label: 'Multi noise' },\n            { value: 'minecraft:the_end', label: 'The end' },\n            { value: 'minecraft:vanilla_layered', label: 'Vanilla layered' }\n        ];\n    }, []);\n\n    const handleChange = useCallback(function(settings) {\n        onChange(({ ...source, ...settings }));\n    }, [onChange, source]);\n    const handleSeedChange = useCallback(function(seed) {\n        onChange(({ ...source, seed }));\n    }, [onChange, source]);\n    const handleTypeChange = useCallback(function(option) {\n        onChange(({ seed: source.seed, type: option.value }));\n    }, [onChange, source.seed]);\n    const handleFixedSourceChange = useCallback(function(biome) {\n        onChange(({ ...source, biome }));\n    }, [onChange, source]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === source.type);\n    }, [options, source.type]);\n\n    return <fieldset>\n        <legend>Biome source</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"biome-source-type\">Type</label><Select inputId=\"biome-source-type\" options={options} value={selected} onChange={handleTypeChange} />\n        </div>\n        <SeedField value={source.seed} onChange={handleSeedChange} />\n        <hr />\n        {source.type === 'minecraft:checkerboard' && <CheckerboardBiomeSource source={source} onChange={handleChange} />}\n        {source.type === 'minecraft:fixed' && <FixedBiomeSource biome={source.biome} onChange={handleFixedSourceChange} />}\n        {source.type === 'minecraft:multi_noise' && <MultiNoiseBiomeSource source={source} onChange={handleChange} />}\n        {source.type === 'minecraft:vanilla_layered' && <VanillaLayeredBiomeSource source={source} onChange={handleChange} />}\n    </fieldset>\n});\n\nconst CheckerboardBiomeSource = React.memo(function({source, onChange}) {\n    const options = useKeyedListOptions('biomes');\n    const handleBiomesChange = useCallback(function(selection) {\n        onChange({ ...source, biomes: selection === null ? [] : selection.map(o => o.value) });\n    }, [onChange, source]);\n    const handleScaleChange = useCallback(function(scale) {\n        onChange({ ...source, scale });\n    }, [onChange, source]);\n\n    const biomes = useMemo(() => source.biomes || (options.length > 0 ? [options[0].value] : []), [options, source.biomes]);\n    useEffect(() => {\n        if (!Array.isArray(source.biomes)) {\n            onChange({ biomes, scale: source.scale || 2 });\n        }\n    }, [biomes, source.biomes, source.scale, onChange]);\n\n    return <div className=\"form-group\">\n        <div className=\"form-group\">\n            <label htmlFor=\"biomes\">Biomes</label><Select options={options} isMulti isClearable={false} value={options.filter(o => biomes.includes(o.value))} onChange={handleBiomesChange} id=\"biomes\" />\n        </div>\n        <div className=\"form-group\">\n            <NumberInput id=\"scale\" value={source.scale} onChange={handleScaleChange} max={62} required={false} defaultValue={2}>Scale (squares of 2<sup>scale</sup> chunks)</NumberInput>\n        </div>\n        {biomes.length < 1 && <p className=\"alert--warning\">Warning: a dimension must contain at least one biome!</p>}\n    </div>;\n});\n\nexport const FixedBiomeSource = React.memo(function({biome = 'minecraft:plains', inline = false, onChange}) {\n    const options = useKeyedListOptions('biomes');\n    const handleBiomesChange = useCallback(function(option) {\n        onChange(option.value);\n    }, [onChange]);\n\n    return <div className={inline ? 'form-row flex-grow' : 'form-group'}>\n        <label htmlFor=\"fixed-biome\">Biome{inline && ' :'}&nbsp;</label><div className={inline ? 'flex-grow' : undefined}><Select options={options} value={options.find(o => o.value === biome)} onChange={handleBiomesChange} /></div>\n    </div>;\n});\n\nconst MultiNoiseBiomeSource = React.memo(function({source = MULTI_NOISE_BIOME_SOURCE, onChange}) {\n    const options = useKeyedListOptions('biomes');\n    const [biomes, handleAdd, handleChange, handleRemove] = useCrudPreset(biomes => onChange({ ...source, biomes }), source.biomes, { biome: 'minecraft:plains', parameters: {\n        altitude: 0,\n        weirdness: 0,\n        offset: 0,\n        temperature: 0.8,\n        humidity: 0.4\n    } });\n\n    const [advanced, toggleAdvanced] = useToggle();\n    const handleNoiseChange = useCallback(function(type, noise) {\n        onChange(({ ...source, [type]: noise }));\n    }, [source, onChange]);\n\n    const vanilla = useContext(DataContext).vanilla.biomes;\n    const custom = useContext(DataContext).custom.biomes;\n    const namespace = useContext(DataContext).namespace;\n    useEffect(function() {\n        for (const noise of NOISES_NAMES) {\n            if (typeof source[noise] === 'undefined') {\n                onChange({ ...MULTI_NOISE_BIOME_SOURCE, ...source, biomes });\n                return;\n            }\n        }\n    }, [biomes, onChange, source]);\n\n    const values = [];\n    biomes.forEach((entry, i) => {\n        values.push(<BiomeSelection namespace={namespace} vanilla={vanilla} custom={custom} biomesOptions={options} entry={entry} key={i} onChange={handleChange}><Button cat=\"danger\" onClick={e => handleRemove(e, i)}>Delete</Button></BiomeSelection>);\n    });\n    return <>\n        <div className=\"flex-container\" style={{ alignItems: 'baseline' }}>\n            <h4>\n                Biomes list\n                <Button onClick={handleAdd} cat=\"primary mls\">Add biome</Button>\n                <Button onClick={toggleAdvanced} cat=\"secondary\">Advanced</Button>\n            </h4>\n        </div>\n        {advanced && <div className=\"grid-2-small-1 has-gutter mbm\">\n            {NOISES_NAMES\n                .map(noise => <PerlinNoiseParameters\n                    key={noise}\n                    noise={source[noise] || MULTI_NOISE_BIOME_SOURCE[noise]}\n                    onChange={(n) => handleNoiseChange(noise, n)}>{capitalize(noise.replace('_', ' '))}</PerlinNoiseParameters>)}\n        </div>}\n        {values}\n        {hasDuplicatedObjects(biomes.map(biome => biome.parameters)) && <p className=\"alert--warning\">Warning: every biome must have a unique combination of parameters!</p>}\n        <MultiNoiseRepresentation source={source} />\n    </>;\n});\n\nconst VanillaLayeredBiomeSource = React.memo(function({source, onChange}) {\n    const handleLegacyBiomeToggle = useCallback(function(e) {\n        onChange({ ...source, legacy_biome_init_layer: e.target.checked });\n    }, [onChange, source]);\n    const handleLargeBiomesToggle = useCallback(function(e) {\n        onChange({ ...source, large_biomes: e.target.checked });\n    }, [onChange, source]);\n\n    return <div className=\"form-row\">\n        <ConfInput checked={source.legacy_biome_init_layer || false} onChange={handleLegacyBiomeToggle}>Legacy biome init layer</ConfInput>\n        <ConfInput checked={source.large_biomes || false} onChange={handleLargeBiomesToggle}>Large biomes</ConfInput>\n    </div>;\n});\n\nconst PerlinNoiseParameters = React.memo(function({children, noise = { firstOctave: -7, amplitudes: [1, 1] }, onChange}) {\n\n    const handleFirstOctaveChange = useCallback(function(firstOctave) {\n        onChange({ ...noise, firstOctave });\n    }, [noise, onChange]);\n    const handleAmplitudesChange = useCallback(function(amplitudes) {\n        onChange({ ...noise, amplitudes });\n    }, [noise, onChange]);\n\n    return <fieldset style={{ margin: 0 }}>\n        <legend>{children}</legend>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"firstOctave\" value={noise.firstOctave} onChange={handleFirstOctaveChange} min={-1000}>First octave</NumberInput>\n            <NumberList numbers={noise.amplitudes} step={0.1} onChange={handleAmplitudesChange}>Amplitudes</NumberList>\n        </div>\n    </fieldset>;\n});\n\nconst BiomeSelection = React.memo(function({namespace, vanilla, custom, biomesOptions, entry, onChange, children}) {\n    const handleBiomeChange = useCallback(function(option) {\n        const biome = option.value;\n        const data = (vanilla.find(b => 'minecraft:' + b.name === biome) || custom.find(b => namespace + ':' + b.key === biome) || { rainfall: 0, temperature: 0 });\n        const parameters = {\n            altitude: entry.parameters.altitude || 0,\n            weirdness: entry.parameters.weirdness || 0,\n            offset: entry.parameters.offset || 0,\n            temperature: data.temperature || 0.8,\n            humidity: data.rainfall || 0.4\n        };\n        onChange({ biome, parameters }, entry);\n    }, [entry, custom, namespace, onChange, vanilla]);\n\n    const handleParameterChange = useCallback(function(value) {\n        onChange({ biome: entry.biome, parameters: { ...entry.parameters, ...value } }, entry);\n    }, [entry, onChange]);\n\n    const selected = useMemo(function() {\n        return biomesOptions.find(o => o.value === entry.biome);\n    }, [biomesOptions, entry.biome]);\n    return <div className=\"form-group\">\n        <Select options={biomesOptions} value={selected} onChange={handleBiomeChange} />\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"altitude\" value={entry.parameters.altitude} upChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\">Altitude</NumberInput>\n            <NumberInput id=\"weirdness\" value={entry.parameters.weirdness} upChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\">Weirdness</NumberInput>\n            <NumberInput id=\"offset\" value={entry.parameters.offset} upChange={handleParameterChange} step=\"0.1\" max=\"1\">Offset</NumberInput>\n            <NumberInput id=\"temperature\" value={entry.parameters.temperature} upChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\">Temperature</NumberInput>\n            <NumberInput id=\"humidity\" value={entry.parameters.humidity} upChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\">Humidity</NumberInput>\n            {children}\n        </div>\n    </div>\n});\n","import { ConfInput, NumberInput } from '../../ui/Input';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport { useCrudPreset, useJsonEffect } from '../../hooks/form';\nimport React, { useCallback } from 'react';\n\nimport { BlockSelect } from '../state/BlockPredicate';\nimport { Button } from '../../ui/Button';\nimport { FixedBiomeSource } from './BiomeSource';\nimport { Structures } from '../noise/Structures';\n\nexport const FlatChunkSettings = React.memo(function ({ settings, onChange }) {\n\n    settings = useJsonEffect(settings || {\n        structures: {\n            structures: []\n        },\n        layers: [\n            { block: 'minecraft:bedrock', height: 1 },\n            { block: 'minecraft:sandstone', height: 70 }\n        ],\n        biome: 'minecraft:plains'\n    }, settings, onChange);\n\n    const handleBiomeChange = useCallback(function (biome) {\n        onChange({ ...settings, biome });\n    }, [settings, onChange]);\n    const handleLayersChange = useCallback(function (layers) {\n        onChange({ ...settings, layers });\n    }, [settings, onChange]);\n    const handleStructuresChange = useCallback(function (structures) {\n        onChange({ ...settings, structures });\n    }, [settings, onChange]);\n    const handleLakesToggle = useCallback(function (e) {\n        onChange({ ...settings, lakes: e.target.checked });\n    }, [settings, onChange]);\n\n    return <div className=\"form-group\">\n        <div className=\"form-group form-row\">\n            <FixedBiomeSource biome={settings.biome} inline={true} onChange={handleBiomeChange} />\n            <ConfInput className=\"mls\" checked={settings.lakes || false} onChange={handleLakesToggle}>Lakes</ConfInput>\n        </div>\n        <GeneratorLayers config={settings.layers} onChange={handleLayersChange} />\n        <Structures data={settings.structures} onChange={handleStructuresChange} />\n    </div>\n});\n\nconst GeneratorLayers = React.memo(function ({ config, onChange }) {\n    const [layers, handleAdd, handleChange, handleRemove] = useCrudPreset(onChange, config, { block: 'minecraft:grass_block', height: 1 });\n\n    const shouldCancelStart = useCallback(function (e) {\n        return !e.target.parentNode.classList.contains('sortable-item');\n    }, []);\n\n    const handleReversedSort = useCallback(function ({ oldIndex, newIndex }) {\n        handleChange({ oldIndex: layers.length - 1 - oldIndex, newIndex: layers.length - 1 - newIndex });\n    }, [layers, handleChange]);\n\n    return <fieldset>\n        <legend>Layers <Button onClick={handleAdd}>Add layer</Button></legend>\n        <SortableLayersList layers={layers} onChange={handleChange} onRemove={handleRemove} onSortEnd={handleReversedSort} shouldCancelStart={shouldCancelStart} />\n    </fieldset>\n});\n\nconst SortableLayersList = SortableContainer(React.memo(function ({ layers, onChange, onRemove }) {\n    let key = 0;\n    return <ol className=\"sortable-container\">\n        {layers.map((layer, index) => {\n            key += layer.height + 1;\n            return <Layer i={index} index={layers.length - 1 - index} key={key} layer={layer} onChange={onChange} onRemove={onRemove} />\n        }).reverse()}\n    </ol>\n}));\n\nconst Layer = SortableElement(React.memo(function ({ i, layer, onChange, onRemove }) {\n    const handleHeightChange = useCallback(function (height, layer) {\n        onChange({ ...layer, height }, layer);\n    }, [onChange]);\n    const handleBlockChange = useCallback(function (block, layer) {\n        onChange({ ...layer, block }, layer);\n    }, [onChange]);\n\n    return <div className=\"sortable-item\"><div className=\"form-group form-row\">\n        <div className=\"flex-grow\"><BlockSelect block={layer.block} onChange={option => handleBlockChange(option.value, layer)} /></div>\n        <NumberInput id=\"height\" className=\"mls\" value={layer.height} max={256} onChange={height => handleHeightChange(height, layer)}>Height</NumberInput>\n        <Button cat=\"danger mlm\" onClick={e => onRemove(e, i)}>Remove</Button>\n    </div></div>\n}));\n","import { CHUNK_GENERATOR_TYPES, DIMENSION } from './DimensionDefaults';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport { BiomeSource } from './BiomeSource';\nimport { ConfInput } from '../../ui/Input';\nimport { FlatChunkSettings } from './FlatChunkSettings';\nimport { NoiseGenerator } from '../noise/NoiseSettings';\nimport { hashCode } from './../../utils/hash';\nimport Select from '../../ui/Select';\n\nexport function DimensionGenerator({generator, onChange}) {\n\n    const [previousGenerator, setPreviousGenerator] = useState({ type: null });\n\n    const handleChunkGeneratorChange = useCallback(function(option) {\n        if (option.value === previousGenerator.type) {\n            onChange(previousGenerator);\n        } else if (option.value === 'minecraft:noise') {\n            onChange(DIMENSION.generator);\n        } else {\n            onChange({ type: option.value });\n        }\n        setPreviousGenerator(generator);\n    }, [generator, previousGenerator, onChange]);\n\n    const handleSeedChange = useCallback(function(seed) {\n        onChange({ ...generator, seed });\n    }, [generator, onChange]);\n    const handleSettingsChange = useCallback(function(settings) {\n        onChange({ ...generator, settings });\n    }, [generator, onChange]);\n    const handleBiomeSourceChange = useCallback(function(biome_source) {\n        onChange({ ...generator, biome_source });\n    }, [generator, onChange]);\n\n    return <fieldset>\n        <legend style={{ fontWeight: 'normal', width: '28ch', fontSize: '1.05rem' }}><Select options={CHUNK_GENERATOR_TYPES} value={CHUNK_GENERATOR_TYPES.find(o => generator.type === o.value)} onChange={handleChunkGeneratorChange} /></legend>\n        <div className=\"form-group\">\n            {generator.type === 'minecraft:noise' && <>\n                <SeedField value={generator.seed} onChange={handleSeedChange} />\n                <NoiseGenerator settings={generator.settings} onChange={handleSettingsChange} />\n                <BiomeSource source={generator.biome_source} onChange={handleBiomeSourceChange} />\n            </>}\n            {generator.type === 'minecraft:flat' &&\n                <FlatChunkSettings settings={generator.settings} onChange={handleSettingsChange} />\n            }\n        </div>\n    </fieldset>;\n}\n\nexport const SeedField = React.memo(function({onChange, value}) {\n    const [text, setText] = useState(value || 286956243);\n\n    const handleChange = useCallback(function(e) {\n        const value = e.target.value;\n        setText(value);\n        onChange(isNaN(value) ? hashCode(value) : parseInt(value));\n    }, [onChange]);\n\n    useEffect(() => {\n        if (typeof value !== 'number') {\n            onChange(286956243);\n        }\n    }, [onChange, value]);\n\n    return <div className=\"form-group\">\n        <ConfInput type=\"text\" id=\"seed\" value={text} onChange={handleChange}>Seed</ConfInput>\n    </div>\n});\n","import React, { useCallback, useState } from 'react';\n\nimport { Button } from '../../ui/Button';\nimport { DIMENSION } from './DimensionDefaults';\nimport { DimensionGenerator } from './DimensionGenerator';\nimport { DimensionType } from './DimensionType';\nimport { JsonViewer } from '../../ui/JsonViewer';\nimport { NamespacedKey } from '../NamespacedKey';\n\nexport function Dimension({data = DIMENSION, onSave}) {\n\n    const [state, setState] = useState(data);\n\n    const handleTypeChange = useCallback(function(type) {\n        setState(state => ({ ...state, type }));\n    }, []);\n    const handleGeneratorChange = useCallback(function(generator) {\n        setState(state => ({ ...state, generator }));\n    }, []);\n\n    const handleVanillaSelect = function(dimension) {\n        if (state.generator.type === 'minecraft:noise') {\n            dimension.generator.seed = state.generator.seed;\n            dimension.generator.biome_source.seed = state.generator.biome_source.seed;\n        } else {\n            dimension.generator.seed = 286956243;\n            dimension.generator.biome_source.seed = 286956243;\n        }\n        setState(dimension);\n    };\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        onSave({\n            ...state,\n            ...Object.fromEntries(new FormData(e.target))\n        });\n    }, [onSave, state])\n\n    return <form onSubmit={handleSubmit}>\n        <NamespacedKey example=\"blue_dimension\" type=\"dimensions\" value={data.key} onSelectLoad={handleVanillaSelect}>\n            dimension\n            <JsonViewer data={state} />\n        </NamespacedKey>\n        <DimensionType type={state.type} onChange={handleTypeChange} />\n        <DimensionGenerator generator={state.generator} onChange={handleGeneratorChange} />\n        <Button type=\"submit\">Save</Button>\n    </form>\n}\n\nexport default Dimension;\n"],"sourceRoot":""}