{"version":3,"file":"static/js/292.69d02e29.chunk.js","mappings":"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","sources":["components/biome/BiomeDefaults.js","components/biome/BiomeEffects.jsx","components/biome/BiomeSpawners.jsx","components/biome/BiomeStarts.jsx","components/biome/Features.jsx","components/biome/Biome.jsx"],"sourcesContent":["export const EFFECTS = {\n    mood_sound: {\n        sound: \"minecraft:ambient.cave\",\n        tick_delay: 6000,\n        block_search_extent: 8,\n        offset: 2.0\n    },\n    sky_color: 7907327,\n    fog_color: 12638463,\n    water_color: 4159204,\n    water_fog_color: 329011\n}\n\nexport const FEATURES = [\n    [],\n    [\n        \"minecraft:lake_water\",\n        \"minecraft:lake_lava\"\n    ],\n    [],\n    [\n        \"minecraft:monster_room\"\n    ],\n    [],\n    [],\n    [\n        \"minecraft:ore_dirt\",\n        \"minecraft:ore_gravel\",\n        \"minecraft:ore_granite\",\n        \"minecraft:ore_diorite\",\n        \"minecraft:ore_andesite\",\n        \"minecraft:ore_coal\",\n        \"minecraft:ore_iron\",\n        \"minecraft:ore_gold\",\n        \"minecraft:ore_redstone\",\n        \"minecraft:ore_diamond\",\n        \"minecraft:ore_lapis\",\n        \"minecraft:disk_sand\",\n        \"minecraft:disk_clay\",\n        \"minecraft:disk_gravel\"\n    ],\n    [],\n    [\n        \"minecraft:patch_tall_grass_2\",\n        \"minecraft:plain_vegetation\",\n        \"minecraft:flower_plain_decorated\",\n        \"minecraft:patch_grass_plain\",\n        \"minecraft:brown_mushroom_normal\",\n        \"minecraft:red_mushroom_normal\",\n        \"minecraft:patch_sugar_cane\",\n        \"minecraft:patch_pumpkin\",\n        \"minecraft:spring_water\",\n        \"minecraft:spring_lava\"\n    ],\n    [\n        \"minecraft:freeze_top_layer\"\n    ]\n]\n\nexport const STARTS = [\n    \"minecraft:village_plains\",\n    \"minecraft:pillager_outpost\",\n    \"minecraft:mineshaft\",\n    \"minecraft:stronghold\",\n    \"minecraft:ruined_portal\"\n]\n\nconst SPAWNERS_AMBIENT = [\n    {\n        type: \"minecraft:bat\",\n        weight: 10,\n        minCount: 8,\n        maxCount: 8\n    }\n];\n\nconst SPAWNERS_CREATURE = [\n    {\n        type: \"minecraft:sheep\",\n        weight: 12,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:pig\",\n        weight: 10,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:chicken\",\n        weight: 10,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:cow\",\n        weight: 8,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:horse\",\n        weight: 5,\n        minCount: 2,\n        maxCount: 6\n    },\n    {\n        type: \"minecraft:donkey\",\n        weight: 1,\n        minCount: 1,\n        maxCount: 3\n    }\n];\n\nconst SPAWNERS_MONSTER = [\n    {\n        type: \"minecraft:spider\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:zombie\",\n        weight: 95,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:zombie_villager\",\n        weight: 5,\n        minCount: 1,\n        maxCount: 1\n    },\n    {\n        type: \"minecraft:skeleton\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:creeper\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:slime\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:enderman\",\n        weight: 10,\n        minCount: 1,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:witch\",\n        weight: 5,\n        minCount: 1,\n        maxCount: 1\n    },\n];\n\nexport const SPAWNERS_DEFAULTS = {\n    ambient: SPAWNERS_AMBIENT,\n    creature: SPAWNERS_CREATURE,\n    misc: [],\n    monster: SPAWNERS_MONSTER,\n    water_ambient: [],\n    water_creature: []\n};\n\nexport const BIOME_DEFAULTS = {\n    effects: EFFECTS,\n    carvers: {\n        air: [\n            \"minecraft:cave\",\n            \"minecraft:canyon\"\n        ]\n    },\n    starts: STARTS,\n    features: FEATURES,\n    spawners: SPAWNERS_DEFAULTS,\n    category: \"plains\",\n    precipitation: \"rain\",\n    surface_builder: \"minecraft:grass\",\n    scale: 0.05,\n    downfall: 0.4,\n    depth: 0.12,\n    temperature: 0.8,\n    player_spawn_friendly: true,\n    spawn_costs: {}\n}\n\nexport const PARTICLES = [\n    'ambient_entity_effect',\n    'angry_villager',\n    'ash',\n    'barrier',\n    'block',\n    'bubble',\n    'bubble_column_up',\n    'bubble_pop',\n    'campfire_cosy_smoke',\n    'campfire_signal_smoke',\n    'cloud',\n    'composter',\n    'crimson_spore',\n    'crit',\n    'current_down',\n    'damage_indicator',\n    'dolphin',\n    'dragon_breath',\n    'dripping_honey',\n    'dripping_lava',\n    'dripping_obsidian_tear',\n    'dripping_water',\n    'dust',\n    'effect',\n    'elder_guardian',\n    'enchant',\n    'enchanted_hit',\n    'end_rod',\n    'entity_effect',\n    'explosion',\n    'explosion_emitter',\n    'falling_dust',\n    'falling_honey',\n    'falling_lava',\n    'falling_nectar',\n    'falling_obsidian_tear',\n    'falling_water',\n    'firework',\n    'fishing',\n    'flame',\n    'flash',\n    'happy_villager',\n    'heart',\n    'instant_effect',\n    'item',\n    'item_slime',\n    'item_snowball',\n    'landing_honey',\n    'landing_lava',\n    'landing_obsidian_tear',\n    'large_smoke',\n    'lava',\n    'mycelium',\n    'nautilus',\n    'note',\n    'poof',\n    'portal',\n    'rain',\n    'reverse_portal',\n    'smoke',\n    'sneeze',\n    'soul',\n    'soul_fire_flame',\n    'spit',\n    'splash',\n    'squid_ink',\n    'sweep_attack',\n    'totem_of_undying',\n    'underwater',\n    'warped_spore',\n    'white_ash',\n    'witch'\n].map(particle => ({ value: 'minecraft:' + particle, label: particle }));\n\nexport const PARTICLE_DEFAULTS = {\n    options: {\n        type: \"minecraft:crimson_spore\"\n    },\n    probability: 0.015\n}\n","import { ColorInput, ConfInput, NumberInput } from '../../ui/Input';\nimport { PARTICLES, PARTICLE_DEFAULTS } from './BiomeDefaults';\nimport React, { useCallback, useContext, useState } from 'react';\n\nimport { BlockState } from '../state/BlockState';\nimport { DataContext } from '../../context/DataContext';\nimport { useJsonEffect } from '../../hooks/form';\nimport Select from '../../ui/Select';\n\nexport const BiomeEffects = React.memo(function ({ effects, onChange }) {\n\n    const [blockColor, setBlockColor] = useState(effects);\n    const [particle, setParticle] = useState(effects.particle);\n\n    const sounds = useContext(DataContext).vanilla.sounds;\n\n    const handleColorChange = useCallback(function (color) {\n        onChange({ ...effects, ...color });\n    }, [effects, onChange]);\n\n    const handleBlockColorChange = useCallback(function (color) {\n        onChange({ ...effects, ...color });\n        setBlockColor({ ...blockColor, ...color });\n    }, [blockColor, effects, onChange]);\n    const handleAmbientSoundChange = useCallback(function (option) {\n        if (option === null) {\n            onChange((({ ambient_sound, ...effects }) => effects)(effects));\n        } else {\n            onChange({ ...effects, ambient_sound: option.value });\n        }\n    }, [effects, onChange]);\n    const handleMoodSoundChange = useCallback(function (mood_sound) {\n        if (mood_sound === null) {\n            onChange((({ mood_sound, ...effects }) => effects)(effects));\n        } else {\n            if (typeof effects.mood_sound === 'undefined') {\n                onChange({\n                    ...effects, mood_sound: {\n                        tick_delay: 6000,\n                        block_search_extent: 8,\n                        offset: 2.0, ...mood_sound\n                    }\n                });\n            } else {\n                onChange({ ...effects, mood_sound: { ...effects.mood_sound, ...mood_sound } });\n            }\n        }\n    }, [effects, onChange]);\n    const handleParticleChange = useCallback(function (particle) {\n        onChange({ ...effects, particle });\n        setParticle(particle);\n    }, [effects, onChange]);\n\n    const handleBlockColorToggle = useCallback(function (e) {\n        if (e.target.checked) {\n            onChange({ ...effects, foliage_color: blockColor.foliage_color || 10387789, grass_color: blockColor.grass_color || 9470285 });\n        } else {\n            onChange((({ foliage_color, grass_color, ...effects }) => effects)(effects));\n        }\n    }, [blockColor, effects, onChange]);\n    const handleParticleToggle = useCallback(function (e) {\n        if (e.target.checked) {\n            onChange({ ...effects, particle: particle || PARTICLE_DEFAULTS });\n        } else {\n            onChange((({ particle, ...effects }) => effects)(effects));\n        }\n    }, [onChange, effects, particle]);\n\n    const blockColorChecked = effects.hasOwnProperty('foliage_color') || effects.hasOwnProperty('grass_color');\n    const particleChecked = effects.hasOwnProperty('particle');\n\n    return <>\n        <fieldset>\n            <legend>Biome effects</legend>\n            <div className=\"form-group form-row\">\n                <ColorInput id=\"sky_color\" value={effects.sky_color} upChange={handleColorChange}>Sky color</ColorInput>\n                <ColorInput id=\"fog_color\" value={effects.fog_color} upChange={handleColorChange}>Fog color</ColorInput>\n                <ColorInput id=\"water_color\" value={effects.water_color} upChange={handleColorChange}>Water color</ColorInput>\n                <ColorInput id=\"water_fog_color\" value={effects.water_fog_color} upChange={handleColorChange}>Water fog color</ColorInput>\n                {blockColorChecked && <>\n                    <ColorInput id=\"foliage_color\" value={effects.foliage_color || 10387789} upChange={handleBlockColorChange}>Foliage color</ColorInput>\n                    <ColorInput id=\"grass_color\" value={effects.grass_color || 9470285} upChange={handleBlockColorChange}>Grass color</ColorInput>\n                </>}\n                <ConfInput id=\"block-toggle\" checked={blockColorChecked} onChange={handleBlockColorToggle}>Optionals</ConfInput>\n                <ConfInput id=\"particle\" checked={particleChecked} onChange={handleParticleToggle}>Particle</ConfInput>\n            </div>\n            {particleChecked && <ParticleEffect particle={effects.particle} onChange={handleParticleChange} />}\n        </fieldset>\n        <fieldset>\n            <legend>Optionals sounds</legend>\n            <div className=\"form-group form-row\">\n                Ambient :\n            <div style={{ flexGrow: 0.95, flexShrink: 1 }}><Select options={sounds} value={sounds.find(o => effects.ambient_sound === o.value)} onChange={handleAmbientSoundChange} isClearable={true} /></div>\n            </div>\n            <MoodSound options={sounds} sound={effects.mood_sound} onChange={handleMoodSoundChange} />\n        </fieldset>\n    </>\n});\n\nconst MoodSound = React.memo(function ({ onChange, options, sound }) {\n    const handleSoundChange = useCallback(function (option) {\n        onChange(option === null ? null : { sound: option.value });\n    }, [onChange]);\n\n    return <>\n        <div className=\"form-group form-row\">\n            Mood :\n            <div style={{ flexGrow: 0.95, flexShrink: 1 }}><Select options={options} value={options.find(o => (sound || {}).sound === o.value)} onChange={handleSoundChange} isClearable={true} /></div>\n        </div>\n        {typeof sound === 'object' && <div className=\"form-row\" style={{ marginTop: '0.5rem' }}>\n            <NumberInput id=\"tick_delay\" value={sound.tick_delay} upChange={onChange} className=\"mls\">Tick delay</NumberInput>\n            <NumberInput id=\"block_search_extent\" value={sound.block_search_extent} upChange={onChange} className=\"mls\">Block search extent</NumberInput>\n            <NumberInput id=\"offset\" value={sound.offset} upChange={onChange} step={0.1} className=\"mls\">Offset</NumberInput>\n        </div>}\n    </>\n});\n\nconst ParticleEffect = React.memo(function ({ onChange, particle }) {\n\n    particle = useJsonEffect(particle || PARTICLE_DEFAULTS, particle, onChange);\n    const handleTypeChange = useCallback(function (option) {\n        onChange({ ...particle, options: { type: option.value } });\n    }, [particle, onChange]);\n    const handleBlockChange = useCallback(function (block) {\n        onChange({ ...particle, options: { ...particle.options, ...block } });\n    }, [particle, onChange]);\n    const handleColorChange = useCallback(function (color) {\n        onChange({ ...particle, options: { ...particle.options, ...color } });\n    }, [particle, onChange]);\n    const handleScaleChange = useCallback(function (scale) {\n        onChange({ ...particle, options: { ...particle.options, scale } });\n    }, [particle, onChange]);\n    const handleProbabilityChange = useCallback(function (probability) {\n        onChange({ ...particle, probability });\n    }, [particle, onChange]);\n\n    const o = particle.options;\n    return <div className=\"form-group form-row\">\n        <div style={{ flexGrow: 0.95, flexShrink: 1 }}><Select options={PARTICLES} value={PARTICLES.find(op => o.type === op.value)} onChange={handleTypeChange} /></div>\n        {(o.type === 'minecraft:block' || o.type === 'minecraft:falling_dust') && <div style={{ flexGrow: 1 }}><BlockState block={o} onChange={handleBlockChange} /></div>}\n        {o.type === 'minecraft:dust' && <>\n            <DustColor r={o.r} g={o.g} b={o.b} onChange={handleColorChange} />\n            <NumberInput id=\"scale\" value={o.scale} onChange={handleScaleChange} defaultValue=\"1\" step=\"0.1\" className=\"mls\">Scale</NumberInput>\n        </>}\n        <NumberInput id=\"probability\" value={particle.probability} onChange={handleProbabilityChange} step=\"0.005\" className=\"mlm\">Probability</NumberInput>\n    </div>\n});\n\nconst DustColor = React.memo(function ({ r, g, b, onChange }) {\n    const handleColorChange = useCallback(function (color) {\n        const r = ((color >> 16) & 0xFF) / 0xFF;\n        const g = ((color >> 8) & 0xFF) / 0xFF;\n        const b = (color & 0xFF) / 0xFF;\n        onChange({ r, g, b });\n    }, [onChange]);\n\n    let value = undefined;\n    if (typeof r === 'number' && typeof g === 'number' && typeof b === 'number') {\n        r = (r * 0xFF) & 0xFF;\n        g = (g * 0xFF) & 0xFF;\n        b = (b * 0xFF) & 0xFF;\n        value = ((r << 16) | (g << 8) | b);\n    }\n\n    return <ColorInput value={value} defaultValue={0x38470} onChange={handleColorChange} className=\"mls\">Color</ColorInput>\n});\n","import { useCrudPreset, useJsonEffect } from \"../../hooks/form\";\nimport React, { useCallback, useContext, useMemo } from 'react';\n\nimport { Button } from '../../ui/Button';\nimport { DataContext } from '../../context/DataContext';\nimport { NumberInput } from '../../ui/Input';\nimport { SPAWNERS_DEFAULTS } from './BiomeDefaults';\nimport { useToggle } from '../../hooks/ui';\nimport Select from '../../ui/Select';\n\nexport const BiomeSpawners = React.memo(function({onChange, data}) {\n\n    const spawners = useJsonEffect(data || SPAWNERS_DEFAULTS, data, onChange);\n    const entities = useContext(DataContext).vanilla.entities;\n\n    const handleChange = useCallback(function(group, groupSpawners) {\n        onChange({ ...spawners, [group]: groupSpawners });\n    }, [spawners, onChange]);\n\n    return <div>\n        <SpawnGroup group=\"ambient\" data={spawners.ambient} onChange={handleChange} entities={entities}>Ambient</SpawnGroup>\n        <SpawnGroup group=\"creature\" data={spawners.creature} onChange={handleChange} entities={entities}>Creature</SpawnGroup>\n        <SpawnGroup group=\"misc\" data={spawners.misc} onChange={handleChange} entities={entities}>Miscellaneous</SpawnGroup>\n        <SpawnGroup group=\"monster\" data={spawners.monster} onChange={handleChange} entities={entities}>Monster</SpawnGroup>\n        <SpawnGroup group=\"water_ambient\" data={spawners.water_ambient} onChange={handleChange} entities={entities}>Water ambient</SpawnGroup>\n        <SpawnGroup group=\"water_creature\" data={spawners.water_creature} onChange={handleChange} entities={entities}>Water creature</SpawnGroup>\n    </div>;\n});\n\nconst SpawnGroup = React.memo(function({children, entities, data = [], group, onChange}) {\n    const [visibility, toggle] = useToggle();\n    const text = visibility ? 'Less...' : 'More...';\n\n    const [spawners, insert, handleChange, handleRemove] = useCrudPreset(spawners => onChange(group, spawners), data, function(spawners) {\n        // Get the first non taken entity\n        return { type: (entities.filter(o => !spawners.some(s => s.type === o.value))[0] || { value: 'minecraft:cow' }).value, minCount: 1, maxCount: 1, weight: 1 };\n    }, true);\n\n    const handleAdd = useCallback(function(e) {\n        insert(e);\n        if (!visibility) {\n            toggle();\n        }\n    }, [insert, toggle, visibility]);\n\n    if (visibility) {\n        return <div>\n            <div className=\"toggle-label\">\n                {children}\n                <div className=\"btn-group\">\n                    {entities.length > spawners.length && <Button onClick={handleAdd}>Add</Button>}\n                    {spawners.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{text}</Button>} \n                </div>\n            </div>\n            {spawners.map((spawner, index) => {\n                const options = entities.filter(o => spawner.type === o.value || !spawners.some(s => s.type === o.value));\n                return <SpawnDefinition data={spawner} key={spawner.type} onChange={handleChange} onDelete={handleRemove} index={index} options={options} />;\n            })}\n        </div>;\n    }\n    \n    return <div className=\"toggle-label\">\n        {children}\n        <div className=\"btn-group\">\n            {spawners.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{text}</Button>}\n            {(spawners.length < 1) && <Button onClick={handleAdd}>Add</Button>}\n        </div>\n    </div>;\n});\n\nconst SpawnDefinition = React.memo(function({data, index, options, onChange, onDelete}) {\n\n    const handleTypeChange = useCallback(function(option) {\n        onChange({ ...data, type: option.value }, data);\n    }, [data, onChange]);\n    const handleValueChange = useCallback(function(value) {\n        onChange({ ...data, ...value }, data);\n    }, [data, onChange]);\n    const handleCountChange = function(count) {\n        const name = Object.keys(count)[0];\n        const value = count[name];\n        if ((name === 'minCount' && value <= data.maxCount)\n            || (name === 'maxCount' && value >= data.minCount)) {\n                onChange({ ...data, [name]: value }, data);\n        } \n    };\n    const handleDelete = useCallback(function(e) {\n        onDelete(e, index);\n    }, [index, onDelete]);\n\n    const selectedOption = useMemo(function() {\n        return options.find(o => o.value === data.type);\n    }, [data.type, options]);\n\n    return <div>\n        <div className=\"form-group\">\n            <label>Mob type</label> : <Select options={options} value={selectedOption} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"weight\" value={data.weight} upChange={handleValueChange}>Weight</NumberInput>\n            <NumberInput id=\"minCount\" value={data.minCount} max={data.maxCount} upChange={handleCountChange}>Min count</NumberInput>\n            <NumberInput id=\"maxCount\" value={data.maxCount} min={data.minCount} upChange={handleCountChange}>Max count</NumberInput>\n            <div className=\"form-inline\"><Button cat=\"danger\" onClick={handleDelete}>Delete</Button></div>\n        </div>\n        <hr /> \n    </div>\n});\n","import React, { useCallback, useMemo } from 'react';\n\nimport { STARTS } from './BiomeDefaults';\nimport { useJsonEffect } from '../../hooks/form';\nimport Select from '../../ui/Select';\n\nexport const BiomeStarts = React.memo(function({onChange, starts}) {\n    starts = useJsonEffect(starts || STARTS, starts, onChange);\n\n    const handleChange = useCallback(function(selectedOptions) {\n        onChange(selectedOptions === null ? [] : selectedOptions.map(option => option.value));\n    }, [onChange]);\n\n    const options = useMemo(function() {\n        return [\n            \"pillager_outpost\",\n            \"mineshaft\",\n            \"mineshaft_mesa\",\n            \"mansion\",\n            \"jungle_pyramid\",\n            \"desert_pyramid\",\n            \"igloo\",\n            \"shipwreck\",\n            \"shipwreck_beached\",\n            \"swamp_hut\",\n            \"stronghold\",\n            \"monument\",\n            \"ocean_ruin_cold\",\n            \"ocean_ruin_warm\",\n            \"fortress\",\n            \"nether_fossil\",\n            \"end_city\",\n            \"buried_treasure\",\n            \"bastion_remnant\",\n            \"village_plains\",\n            \"village_desert\",\n            \"village_savanna\",\n            \"village_snovy\",\n            \"village_taiga\",\n            \"ruined_portal\",\n            \"ruined_portal_desert\",\n            \"ruined_portal_jungle\",\n            \"ruined_portal_swamp\",\n            \"ruined_portal_mountain\",\n            \"ruined_portal_ocean\",\n            \"ruined_portal_nether\"\n        ].map(option => ({ value: 'minecraft:' + option, label: 'minecraft:' + option }));\n    }, []);\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"starts\">Structures</label>\n        <Select isMulti id=\"starts\" options={options} onChange={handleChange} value={options.filter(o => starts.includes(o.value))} />\n    </div>;\n});\n","import React, { useCallback } from 'react';\n\nimport { FEATURES } from './BiomeDefaults';\nimport { useJsonEffect } from '../../hooks/form';\nimport { useKeyedListOptions } from '../../hooks/context';\nimport Select from '../../ui/Select';\n\nexport const GenFeatures = React.memo(function({ onChange, features }) {\n\n    const handleLevelChange = useCallback(function(priority, list) {\n        onChange(features.map((level, p) => priority === p ? list : level));\n    }, [features, onChange]);\n    useJsonEffect(features || FEATURES, features, onChange);\n\n    return <div className=\"form-group\">\n        <label>Features</label>\n        <p className=\"help\"><small className=\"text-muted\">Each generation feature is associated with a priority. The higher the priority, the later the feature will be applied.</small></p>\n        <ol>\n            {features.map((level, i) =>\n                <li key={i}><GenFeaturesLevel value={level} onChange={handleLevelChange} priority={i} /></li>\n            )}\n        </ol>\n    </div>;\n});\n\nexport const GenFeaturesLevel = React.memo(function({ onChange, priority, value }) {\n    const options = useKeyedListOptions('features');\n\n    const handleChange = useCallback(function(selectedOptions) {\n        onChange(priority, selectedOptions === null ? [] : selectedOptions.map(option => option.value));\n    }, [onChange, priority]);\n\n    return <Select isMulti options={options} onChange={handleChange} defaultValue={options.filter(o => value.includes(o.value))} />;\n});\n","import { ConfInput, NumberInput } from '../../ui/Input';\nimport React, { useCallback, useState } from 'react';\n\nimport { BIOME_DEFAULTS } from './BiomeDefaults';\nimport { BiomeEffects } from './BiomeEffects';\nimport { BiomeSpawners } from './BiomeSpawners';\nimport { BiomeStarts } from './BiomeStarts';\nimport { Button } from '../../ui/Button';\nimport { ConfiguredCarver } from '../carver/ConfiguredCarver';\nimport { GenFeatures } from './Features';\nimport { INT_MIN_VALUE } from '../../utils/math';\nimport { JsonViewer } from '../../ui/JsonViewer';\nimport { NamespacedKey } from '../NamespacedKey';\nimport { useKeyedListOptions } from '../../hooks/context';\nimport Select from '../../ui/Select';\n\nexport function Biome({data = BIOME_DEFAULTS, onSave}) {\n\n    const [state, setState] = useState(data);\n\n    const handleCarversChange = useCallback(function(carvers) {\n        setState(state => ({ ...state, carvers }));\n    }, []);\n    const handleStartsChange = useCallback(function(starts) {\n        setState(state => ({ ...state, starts }));\n    }, []);\n    const handleEffectsChange = useCallback(function(effects) {\n        setState(state => ({ ...state, effects }));\n    }, []);\n    const handleFeaturesChange = useCallback(function(features) {\n        setState(state => ({ ...state, features }));\n    }, []);\n    const handleSpawnersChange = useCallback(function(spawners) {\n        setState(state => ({ ...state, spawners }));\n    }, []);\n    const handleSurfaceBuilderChange = useCallback(function(option) {\n        setState(state => ({ ...state, surface_builder: option.value }));\n    }, []);\n    const handlePrecipitationChange = useCallback(function(option) {\n        setState(state => ({ ...state, precipitation: option.value }));\n    }, []);\n    const handleCategoryChange = useCallback(function(option) {\n        setState(state => ({ ...state, category: option.value }));\n    }, []);\n    const handleChange = useCallback(function(value) {\n        setState(state => ({ ...state, ...value }));\n    }, []);\n    const handleSpawnFriendlyChange = useCallback(function(e) {\n        const player_spawn_friendly = e.target.checked;\n        setState(state => ({ ...state, player_spawn_friendly }));\n    }, []);\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        const formData = Object.fromEntries(new FormData(e.target));\n        onSave({ ...state, ...formData });\n    }, [onSave, state]);\n\n    return <form onSubmit={handleSubmit}>\n        <NamespacedKey example=\"arctic\" type=\"biomes\" value={state.key} expectBreakage={typeof data.key !== 'undefined'} onSelectLoad={setState}>\n            biome\n            <JsonViewer data={state} />\n        </NamespacedKey>\n\n        <BiomeEffects effects={state.effects} onChange={handleEffectsChange} />\n\n        <fieldset>\n            <BiomeCategory category={state.category} onChange={handleCategoryChange} />\n            <BiomePrecipitation value={state.precipitation} onChange={handlePrecipitationChange} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Generation</legend>\n            <SurfaceBuilder value={state.surface_builder} onChange={handleSurfaceBuilderChange} />\n            <BiomeStarts starts={state.starts} onChange={handleStartsChange} />\n            <GenFeatures features={state.features} onChange={handleFeaturesChange} />\n        </fieldset>\n\n        <ConfiguredCarver carvers={state.carvers} onChange={handleCarversChange} />\n\n        <fieldset>\n            <legend>Creatures</legend>\n            <BiomeSpawners data={state.spawners} onChange={handleSpawnersChange} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Settings</legend>\n            <div className=\"form-group form-row\">\n                <ConfInput id=\"player_spawn_friendly\" checked={typeof state.player_spawn_friendly === 'boolean' ? state.player_spawn_friendly : true} onChange={handleSpawnFriendlyChange}>Player spawn friendly</ConfInput>\n                <NumberInput id=\"creature_spawn_probability\" value={state.creature_spawn_probability} defaultValue={0.1} step={0.1} required={false} upChange={handleChange}>Creature spawn probability</NumberInput>\n            </div>\n            <div className=\"form-group form-row\">\n                <NumberInput id=\"scale\" value={state.scale || 0.05} min={INT_MIN_VALUE} step={0.05} upChange={handleChange}>Scale</NumberInput>\n                <NumberInput id=\"downfall\" value={state.downfall || 0.4} min={INT_MIN_VALUE} step={0.1} upChange={handleChange}>Downfall</NumberInput>\n                <NumberInput id=\"depth\" value={state.depth || 0.12} min={INT_MIN_VALUE} step={0.01} upChange={handleChange}>Depth</NumberInput>\n                <NumberInput id=\"temperature\" value={state.temperature || 0.8} min={INT_MIN_VALUE} step={0.1} upChange={handleChange}>Temperature</NumberInput>\n                <p className=\"mts\"><small className=\"text-muted\">The <em>scale</em> parameter defines terrain amplitude, <em>downfall</em> controls grass and foliage color, <em>depth</em> is the difference from sea level, <em>temperature</em> controls some gameplay features like whether snow golems take damage. The default values are those of the plains biome.</small></p>\n            </div>\n        </fieldset>\n        <Button type=\"submit\">Save</Button>\n    </form>;\n}\n\nconst BiomeCategory = React.memo(function({ category = 'plains', onChange }) {\n\n    const options = [\n        { value: 'beach', label: 'Beach' },\n        { value: 'desert', label: 'Desert' },\n        { value: 'extreme_hills', label: 'Extreme hills' },\n        { value: 'forest', label: 'Forest' },\n        { value: 'icy', label: 'Icy' },\n        { value: 'jungle', label: 'Jungle' },\n        { value: 'mesa', label: 'Mesa' },\n        { value: 'nether', label: 'Nether' },\n        { value: 'none', label: 'None' },\n        { value: 'ocean', label: 'Ocean' },\n        { value: 'plains', label: 'Plains' },\n        { value: 'river', label: 'River' },\n        { value: 'savanna', label: 'Savanna' },\n        { value: 'swamp', label: 'Swamp' },\n        { value: 'taiga', label: 'Taiga' },\n        { value: 'the_end', label: 'The end' },\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"category\">Category</label>\n        <Select options={options} value={options.find(o => o.value === category)} onChange={onChange} />\n    </div>;\n});\n\nconst BiomePrecipitation = React.memo(function({ onChange, value = 'rain' }) {\n\n    const options = [\n        { value: 'none', label: 'None' },\n        { value: 'rain', label: 'Rain' },\n        { value: 'snow', label: 'Snow' }\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"precipitation\">Precipitation</label>\n        <Select options={options} value={options.find(o => o.value === value)} onChange={onChange} />\n    </div>;\n});\n\nconst SurfaceBuilder = React.memo(function({ onChange, value = 'minecraft:grass' }) {\n    const options = useKeyedListOptions('surfaces');\n    return <div className=\"form-group\">\n        <label htmlFor=\"surface_builder\">Surface builder</label>\n        <Select options={options} value={options.find(o => o.value === value)} onChange={onChange} />\n    </div>;\n});\n\nexport default Biome;\n"],"names":["FEATURES","STARTS","SPAWNERS_DEFAULTS","ambient","type","weight","minCount","maxCount","creature","misc","monster","water_ambient","water_creature","BIOME_DEFAULTS","effects","mood_sound","sound","tick_delay","block_search_extent","offset","sky_color","fog_color","water_color","water_fog_color","carvers","air","starts","features","spawners","category","precipitation","surface_builder","scale","downfall","depth","temperature","player_spawn_friendly","spawn_costs","PARTICLES","map","particle","value","label","PARTICLE_DEFAULTS","options","probability","BiomeEffects","React","onChange","useState","blockColor","setBlockColor","setParticle","sounds","useContext","DataContext","vanilla","handleColorChange","useCallback","color","handleBlockColorChange","handleAmbientSoundChange","option","ambient_sound","handleMoodSoundChange","handleParticleChange","handleBlockColorToggle","e","target","checked","foliage_color","grass_color","handleParticleToggle","blockColorChecked","hasOwnProperty","particleChecked","className","id","upChange","ParticleEffect","style","flexGrow","flexShrink","Select","find","o","isClearable","MoodSound","handleSoundChange","marginTop","step","useJsonEffect","handleTypeChange","handleBlockChange","block","handleScaleChange","handleProbabilityChange","op","BlockState","DustColor","r","g","b","defaultValue","undefined","BiomeSpawners","data","entities","handleChange","group","groupSpawners","SpawnGroup","children","useToggle","visibility","toggle","text","useCrudPreset","filter","some","s","insert","handleRemove","handleAdd","length","Button","onClick","cat","spawner","index","SpawnDefinition","onDelete","handleValueChange","handleCountChange","count","name","Object","keys","handleDelete","selectedOption","useMemo","max","min","BiomeStarts","selectedOptions","htmlFor","isMulti","includes","GenFeatures","handleLevelChange","priority","list","level","p","i","GenFeaturesLevel","useKeyedListOptions","Biome","onSave","state","setState","handleCarversChange","handleStartsChange","handleEffectsChange","handleFeaturesChange","handleSpawnersChange","handleSurfaceBuilderChange","handlePrecipitationChange","handleCategoryChange","handleSpawnFriendlyChange","handleSubmit","preventDefault","formData","fromEntries","FormData","onSubmit","NamespacedKey","example","key","expectBreakage","onSelectLoad","JsonViewer","BiomeCategory","BiomePrecipitation","SurfaceBuilder","ConfiguredCarver","creature_spawn_probability","required","INT_MIN_VALUE"],"sourceRoot":""}