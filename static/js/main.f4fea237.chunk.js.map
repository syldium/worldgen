{"version":3,"sources":["components/biome/BiomeDefaults.js","components/biome/BiomeStarts.jsx","ui/Button.jsx","hooks/ui.js","utils/fetch.js","components/feature/FeatureDefaults.js","hooks/context.js","context/DataContext.jsx","components/biome/BiomeSpawners.jsx","components/biome/Features.jsx","utils/color.js","components/biome/BiomeEffects.jsx","components/biome/Biome.jsx","ui/Menu.jsx","components/dimension/DimensionType.jsx","hooks/form.js","utils/data.js","components/dimension/BiomeSource.jsx","components/dimension/DimensionDefaults.js","components/dimension/DimensionGenerator.jsx","utils/hash.js","components/dimension/Dimension.jsx","components/state/BlockState.jsx","components/feature/TreeFeature.jsx","components/feature/ConfiguredFeature.jsx","utils/zip.js","components/Datapack.jsx","components/DatapackForm.jsx","App.js","serviceWorker.js","index.js"],"names":["EFFECTS","mood_sound","sound","tick_delay","block_search_extent","offset","fog_color","water_color","water_fog_color","FEATURES","STARTS","SPAWNERS_AMBIENT","type","weight","minCount","maxCount","SPAWNERS_CREATURE","SPAWNERS_MONSTER","BiomeStarts","onChange","starts","useEffect","handleChange","useCallback","selectedOptions","map","option","value","options","useMemo","label","className","htmlFor","isMulti","id","defaultValue","filter","o","includes","Button","loading","cat","buttonProps","useToggle","initial","useState","status","setState","toggle","e","preventDefault","current","jsonFetch","url","a","fetch","headers","Accept","response","json","responseData","ok","VANILLA_FEATURES","TREE_FEATURE_CONFIG","heightmap","minimum_size","limit","lower_size","upper_size","decorators","trunk_provider","state","Properties","axis","Name","leaves_provider","persistent","distance","foliage_placer","radius","height","trunk_placer","base_height","height_rand_a","height_rand_b","useData","data","setData","object","stored","i","findIndex","key","push","useKeyedListOptions","category","context","useContext","DataContext","custom","keyed","namespace","hasDisplayName","vanilla","forEach","hasOwnProperty","name","displayName","React","createContext","biomes","blocks","entities","features","dimensions","updateBiomes","biome","updateDimensions","dimension","updateFeatures","feature","DataContextProvider","children","setBiomes","setBlocks","setEntities","customBiomes","then","entity","Provider","spawnersReducer","action","payload","spawner","target","BiomeSpawners","ambient","creature","misc","monster","water_ambient","water_creature","spawners","setSpawners","group","groupSpawners","SpawnGroup","visibility","text","useReducer","dispatch","handleAdd","original","handleRemove","values","def","SpawnDefinition","onDelete","onClick","length","memo","definition","setDefinition","field","parseInt","handleCountChange","selectedOption","find","required","min","prev","next","GenFeatures","levels","setLevels","handleLevelChange","priority","list","elements","level","GenFeaturesLevel","hexColorToInteger","color","replace","integerColorToHex","toString","padStart","BiomeEffects","effects","colors","setColors","handleColorChange","persist","Biome","onSave","handleStartsChange","handleEffectsChange","handleFeaturesChange","handleSpawnersChange","handleSubmit","formData","Object","fromEntries","FormData","spawn_costs","carvers","air","sky_color","keys","isNaN","parseFloat","onSubmit","pattern","placeholder","BiomeCategory","BiomePrecipitation","precipitation","SurfaceBuilder","surface_builder","step","scale","downfall","depth","temperature","MenuItem","active","href","DimensionType","crudReducer","ADD","UPDATE","element","REMOVE","useCrud","CRUD","objectsEqual","b","every","p","BiomeSource","biome_source","source","setSource","handleSeedChange","seed","handleTypeChange","handleFixedSourceChange","handleMultiSourceChange","selected","SeedField","FixedBiomeSource","MultiNoiseBiomeSource","setBiome","parametersWarning","toggleWarningVisibility","handleAddClick","parameters","previous","handleDeleteClick","index","hasDuplicated","objects","hasDuplicatedObjects","entry","BiomeSelection","biomesOptions","selection","setSelection","handleBiomeChange","rainfall","altitude","weirdness","humidity","handleParameterChange","FIXED_GENERATOR","settings","DimensionGenerator","generator","handleSettingsChange","handleBiomeSourceChange","Settings","setText","s","hash","Math","imul","charCodeAt","hashCode","Dimension","handleGeneratorChange","get","BlockStateProvider","block","provider","setProvider","handleSimpleStateChange","handleWeighestStateChange","entries","BlockState","WeightedStateProvider","states","properties","actual","getStateValue","handlePropertiesChange","BlockStateProperties","setProperties","handlePropertyChange","handleCheckboxChange","checked","handleNumberChange","selects","possible","max","num_values","TreeFeatureConfig","configuration","config","setConfig","handleTrunkProviderChange","handleLeavesProviderChange","handleFoliagePlacerChange","handleTrunkPlacerChange","FoliagePlacer","placer","TrunkPlacer","handleValueChange","n","ConfiguredFeature","setName","configure","handleSelectChange","handleConfigurationChange","disabled","writeFile","zip","path","folder","el","w","console","log","file","JSON","stringify","Datapack","page","menu","setMenu","handleStatsClick","handleAddBiomeClick","handleAddDimensionClick","handleAddFeatureClick","onBiomeSave","onDimensionSave","onFeatureSave","editBiome","editDimension","editFeature","Stats","handleBiomeClick","dim","handleDimensionClick","handleFeatureClick","JSZip","pack","pack_format","description","generateAsync","content","saveAs","buildZip","DatapackForm","onCreate","aria-describedby","App","setNamespace","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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aACA,uBACA,QACA,uBACA,uBACA,eACA,mBACA,kBACA,YACA,4BACA,2BACA,iBACA,iBACA,gBACA,gBACA,gBACA,qBACA,kBACA,iBACA,gBACA,iBACA,gBACA,qBACA,aACA,YACA,YACA,cACA,kBACA,iBACA,eACA,YACA,YACA,WACA,eACA,SACA,QACA,aACA,YACA,YACA,cACA,YACA,mBACA,cACA,sBACA,eACA,cACA,SACA,qBACA,cACA,eACA,gBACA,uBACA,cACA,eACA,WACA,aACA,YACA,WACA,eACA,aACA,kBACA,uBACA,qBACA,sBACA,kBACA,gBACA,oBACA,mBACA,oBACA,qBACA,uBACA,sBACA,qBACA,oBACA,sBACA,qBACA,kBACA,oBACA,2BACA,cACA,qBACA,wBACA,mBACA,mBACA,qBACA,mBACA,eACA,sBACA,yBACA,yBACA,0BACA,4BACA,mBACA,wBACA,sBACA,wBACA,sBACA,uBACA,qBACA,uBACA,qBACA,uBACA,qBACA,YACA,gBACA,kBACA,oBACA,kBACA,oBACA,oBACA,iBACA,WACA,aACA,cACA,cACA,eACA,WACA,WACA,iBACA,WACA,eACA,cACA,YACA,eACA,cACA,mBACA,mBACA,gBACA,wBACA,eACA,uBACA,sBACA,oBACA,MACA,WACA,QACA,SACA,SACA,OACA,cACA,YACA,sBACA,mBACA,cACA,YACA,aACA,cACA,eACA,eACA,cACA,iBACA,gBACA,eACA,eACA,yBACA,kCACA,2BACA,+BACA,6BACA,wBACA,sBACA,mBACA,0BACA,gBACA,aACA,sBACA,iBACA,cACA,cACA,mBACA,oBACA,qBACA,cACA,eACA,oBACA,6BAGSC,EAAsB,CAC/BC,UAAW,cACXC,aAAc,CACVC,MAAO,EACPC,WAAY,EACZC,WAAY,EACZxD,KAAM,qCAEVyD,WAAY,GACZC,eAAgB,CACZC,MAAO,CACHC,WAAY,CACRC,KAAM,KAEVC,KAAM,uBAEV9D,KAAM,mCAEV+D,gBAAiB,CACbJ,MAAO,CACHC,WAAY,CACRI,WAAY,QACZC,SAAU,K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","file":"static/js/main.f4fea237.chunk.js","sourcesContent":["export const EFFECTS = {\n    mood_sound: {\n        sound: \"minecraft:ambient.cave\",\n        tick_delay: 6000,\n        block_search_extent: 8,\n        offset: 2.0\n    },\n    fog_color: 12638463,\n    water_color: 4159204,\n    water_fog_color: 329011\n}\n\nexport const FEATURES = [\n    [],\n    [\n      \"minecraft:lake_water\",\n      \"minecraft:lake_lava\"\n    ],\n    [],\n    [\n      \"minecraft:monster_room\"\n    ],\n    [],\n    [],\n    [\n      \"minecraft:ore_dirt\",\n      \"minecraft:ore_gravel\",\n      \"minecraft:ore_granite\",\n      \"minecraft:ore_diorite\",\n      \"minecraft:ore_andesite\",\n      \"minecraft:ore_coal\",\n      \"minecraft:ore_iron\",\n      \"minecraft:ore_gold\",\n      \"minecraft:ore_redstone\",\n      \"minecraft:ore_diamond\",\n      \"minecraft:ore_lapis\",\n      \"minecraft:disk_sand\",\n      \"minecraft:disk_clay\",\n      \"minecraft:disk_gravel\"\n    ],\n    [],\n    [\n      \"minecraft:patch_tall_grass_2\",\n      \"minecraft:plain_vegetation\",\n      \"minecraft:flower_plain_decorated\",\n      \"minecraft:patch_grass_plain\",\n      \"minecraft:brown_mushroom_normal\",\n      \"minecraft:red_mushroom_normal\",\n      \"minecraft:patch_sugar_cane\",\n      \"minecraft:patch_pumpkin\",\n      \"minecraft:spring_water\",\n      \"minecraft:spring_lava\"\n    ],\n    [\n      \"minecraft:freeze_top_layer\"\n    ]\n]\n\nexport const STARTS = [\n    \"minecraft:village_plains\",\n    \"minecraft:pillager_outpost\",\n    \"minecraft:mineshaft\",\n    \"minecraft:stronghold\",\n    \"minecraft:ruined_portal\"\n]\n\nexport const SPAWNERS_AMBIENT = [\n    {\n        type: \"minecraft:bat\",\n        weight: 10,\n        minCount: 8,\n        maxCount: 8\n    }\n];\n\nexport const SPAWNERS_CREATURE = [\n    {\n        type: \"minecraft:sheep\",\n        weight: 12,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:pig\",\n        weight: 10,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:chicken\",\n        weight: 10,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:cow\",\n        weight: 8,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:horse\",\n        weight: 5,\n        minCount: 2,\n        maxCount: 6\n    },\n    {\n        type: \"minecraft:donkey\",\n        weight: 1,\n        minCount: 1,\n        maxCount: 3\n    }\n];\n\nexport const SPAWNERS_MONSTER = [\n    {\n        type: \"minecraft:spider\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:zombie\",\n        weight: 95,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:zombie_villager\",\n        weight: 5,\n        minCount: 1,\n        maxCount: 1\n    },\n    {\n        type: \"minecraft:skeleton\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:creeper\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:slime\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:enderman\",\n        weight: 10,\n        minCount: 1,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:witch\",\n        weight: 5,\n        minCount: 1,\n        maxCount: 1\n    },\n];","import React, { useCallback, useMemo, useEffect } from 'react';\nimport Select from 'react-select';\nimport { STARTS } from './BiomeDefaults';\n\nexport default function BiomeStarts({onChange, starts = STARTS}) {\n    useEffect(function () {\n        onChange(starts);\n    }, [onChange, starts]);\n\n    const handleChange = useCallback(function(selectedOptions) {\n        onChange(selectedOptions === null ? [] : selectedOptions.map(option => option.value));\n    }, [onChange]);\n\n    const options = useMemo(function() {\n        return [\n            \"pillager_outpost\",\n            \"mineshaft\",\n            \"mineshaft_mesa\",\n            \"mansion\",\n            \"jungle_pyramid\",\n            \"desert_pyramid\",\n            \"igloo\",\n            \"shipwreck\",\n            \"shipwreck_beached\",\n            \"swamp_hut\",\n            \"stronghold\",\n            \"monument\",\n            \"ocean_ruin_cold\",\n            \"ocean_ruin_warm\",\n            \"fortress\",\n            \"nether_fossil\",\n            \"end_city\",\n            \"buried_treasure\",\n            \"bastion_remnant\",\n            \"village_plains\",\n            \"village_desert\",\n            \"village_savanna\",\n            \"village_snovy\",\n            \"village_taiga\",\n            \"ruined_portal\",\n            \"ruined_portal_desert\",\n            \"ruined_portal_jungle\",\n            \"ruined_portal_swamp\",\n            \"ruined_portal_mountain\",\n            \"ruined_portal_ocean\",\n            \"ruined_portal_nether\"\n        ].map(option => ({ value: 'minecraft:' + option, label: 'minecraft:' + option }));\n    }, []);\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"starts\">Structures</label>\n        <Select isMulti id=\"starts\" options={options} onChange={handleChange} defaultValue={options.filter(o => starts.includes(o.value))} />\n    </div>;\n}","import React from 'react';\n\nexport function Button ({loading, cat = 'primary', ...buttonProps}) {\n    return <button className={`btn btn--${cat}`} {...buttonProps}></button>\n}\n","import { useState } from \"react\";\n\n/**\n * @param {boolean} initial \n * @returns {[boolean, function(): void]}\n */\nexport function useToggle(initial = false) {\n    const [status, setState] = useState(initial);\n    const toggle = function (e = false) {\n        if (e !== false) {\n            e.preventDefault();\n        }\n        setState(current => !current);\n    }\n    return [status, toggle];\n}","/**\n * @param {string} url\n * @param {object} options\n */\nexport async function jsonFetch(url, options) {\n    const response = await fetch(url, {\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        ...options\n    });\n\n    const responseData = await response.json();\n    if (response.ok) {\n        return responseData;\n    }\n    throw responseData;\n}","export const VANILLA_FEATURES = [\n    \"nope\",\n    \"end_spike\",\n    \"end_gateway\",\n    \"end_gateway_delayed\",\n    \"chorus_plant\",\n    \"end_island\",\n    \"end_island_decorated\",\n    \"delta\",\n    \"small_basalt_columns\",\n    \"large_basalt_columns\",\n    \"basalt_blobs\",\n    \"blackstone_blobs\",\n    \"glowstone_extra\",\n    \"glowstone\",\n    \"crimson_forest_vegetation\",\n    \"warped_forest_vegetation\",\n    \"nether_sprouts\",\n    \"twisting_vines\",\n    \"weeping_vines\",\n    \"basalt_pillar\",\n    \"seagrass_cold\",\n    \"seagrass_deep_cold\",\n    \"seagrass_normal\",\n    \"seagrass_river\",\n    \"seagrass_deep\",\n    \"seagrass_swamp\",\n    \"seagrass_warm\",\n    \"seagrass_deep_warm\",\n    \"sea_pickle\",\n    \"ice_spike\",\n    \"ice_patch\",\n    \"forest_rock\",\n    \"seagrass_simple\",\n    \"iceberg_packed\",\n    \"iceberg_blue\",\n    \"kelp_cold\",\n    \"kelp_warm\",\n    \"blue_ice\",\n    \"bamboo_light\",\n    \"bamboo\",\n    \"vines\",\n    \"lake_water\",\n    \"lake_lava\",\n    \"disk_clay\",\n    \"disk_gravel\",\n    \"disk_sand\",\n    \"freeze_top_layer\",\n    \"bonus_chest\",\n    \"void_start_platform\",\n    \"monster_room\",\n    \"desert_well\",\n    \"fossil\",\n    \"spring_lava_double\",\n    \"spring_lava\",\n    \"spring_delta\",\n    \"spring_closed\",\n    \"spring_closed_double\",\n    \"spring_open\",\n    \"spring_water\",\n    \"pile_hay\",\n    \"pile_melon\",\n    \"pile_snow\",\n    \"pile_ice\",\n    \"pile_pumpkin\",\n    \"patch_fire\",\n    \"patch_soul_fire\",\n    \"patch_brown_mushroom\",\n    \"patch_red_mushroom\",\n    \"patch_crimson_roots\",\n    \"patch_sunflower\",\n    \"patch_pumpkin\",\n    \"patch_taiga_grass\",\n    \"patch_berry_bush\",\n    \"patch_grass_plain\",\n    \"patch_grass_forest\",\n    \"patch_grass_badlands\",\n    \"patch_grass_savanna\",\n    \"patch_grass_normal\",\n    \"patch_grass_taiga\",\n    \"patch_grass_taiga_2\",\n    \"patch_grass_jungle\",\n    \"patch_dead_bush\",\n    \"patch_dead_bush_2\",\n    \"patch_dead_bush_badlands\",\n    \"patch_melon\",\n    \"patch_berry_sparse\",\n    \"patch_berry_decorated\",\n    \"patch_waterlilly\",\n    \"patch_tall_grass\",\n    \"patch_tall_grass_2\",\n    \"patch_large_fern\",\n    \"patch_cactus\",\n    \"patch_cactus_desert\",\n    \"patch_cactus_decorated\",\n    \"patch_sugar_cane_swamp\",\n    \"patch_sugar_cane_desert\",\n    \"patch_sugar_cane_badlands\",\n    \"patch_sugar_cane\",\n    \"brown_mushroom_nether\",\n    \"red_mushroom_nether\",\n    \"brown_mushroom_normal\",\n    \"red_mushroom_normal\",\n    \"brown_mushroom_taiga\",\n    \"red_mushroom_taiga\",\n    \"brown_mushroom_giant\",\n    \"red_mushroom_giant\",\n    \"brown_mushroom_swamp\",\n    \"red_mushroom_swamp\",\n    \"ore_magma\",\n    \"ore_soul_sand\",\n    \"ore_gold_deltas\",\n    \"ore_quartz_deltas\",\n    \"ore_gold_nether\",\n    \"ore_quartz_nether\",\n    \"ore_gravel_nether\",\n    \"ore_blackstone\",\n    \"ore_dirt\",\n    \"ore_gravel\",\n    \"ore_granite\",\n    \"ore_diorite\",\n    \"ore_andesite\",\n    \"ore_coal\",\n    \"ore_iron\",\n    \"ore_gold_extra\",\n    \"ore_gold\",\n    \"ore_redstone\",\n    \"ore_diamond\",\n    \"ore_lapis\",\n    \"ore_infested\",\n    \"ore_emerald\",\n    \"ore_debris_large\",\n    \"ore_debris_small\",\n    \"crimson_fungi\",\n    \"crimson_fungi_planted\",\n    \"warped_fungi\",\n    \"warped_fungi_planted\",\n    \"huge_brown_mushroom\",\n    \"huge_red_mushroom\",\n    \"oak\",\n    \"dark_oak\",\n    \"birch\",\n    \"acacia\",\n    \"spruce\",\n    \"pine\",\n    \"jungle_tree\",\n    \"fancy_oak\",\n    \"jungle_tree_no_vine\",\n    \"mega_jungle_tree\",\n    \"mega_spruce\",\n    \"mega_pine\",\n    \"swamp_tree\",\n    \"jungle_bush\",\n    \"oak_badlands\",\n    \"spruce_snovy\",\n    \"flower_warm\",\n    \"flower_default\",\n    \"flower_forest\",\n    \"flower_swamp\",\n    \"flower_plain\",\n    \"flower_plain_decorated\",\n    \"forest_flower_vegetation_common\",\n    \"forest_flower_vegetation\",\n    \"dark_forest_vegetation_brown\",\n    \"dark_forest_vegetation_red\",\n    \"warm_ocean_vegetation\",\n    \"forest_flower_trees\",\n    \"taiga_vegetation\",\n    \"trees_shattered_savanna\",\n    \"trees_savanna\",\n    \"birch_tall\",\n    \"trees_mountain_edge\",\n    \"trees_mountain\",\n    \"trees_water\",\n    \"birch_other\",\n    \"plain_vegetation\",\n    \"trees_jungle_edge\",\n    \"trees_giant_spruce\",\n    \"trees_giant\",\n    \"trees_jungle\",\n    \"bamboo_vegetation\",\n    \"mushroom_field_vegetation\"\n];\n\nexport const TREE_FEATURE_CONFIG = {\n    heightmap: \"OCEAN_FLOOR\",\n    minimum_size: {\n        limit: 1,\n        lower_size: 0,\n        upper_size: 1,\n        type: \"minecraft:two_layers_feature_size\"\n    },\n    decorators: [],\n    trunk_provider: {\n        state: {\n            Properties: {\n                axis: \"y\"\n            },\n            Name: \"minecraft:birch_log\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    leaves_provider: {\n        state: {\n            Properties: {\n                persistent: \"false\",\n                distance: \"7\"\n            },\n            Name: \"minecraft:birch_leaves\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    foliage_placer: {\n        radius: 2,\n        offset: 0,\n        height: 3,\n        type: \"minecraft:blob_foliage_placer\"\n    },\n    trunk_placer: {\n        base_height: 5,\n        height_rand_a: 2,\n        height_rand_b: 0,\n        type: \"minecraft:straight_trunk_placer\"\n    }\n};\n","import { useState, useContext } from \"react\";\nimport { DataContext } from \"../context/DataContext\";\n\n/**\n * @returns {[object[], function(object): void]} \n */\nexport function useData() {\n    const [data, setData] = useState([]);\n    const updateData = function(object) {\n        setData(stored => {\n            const i = stored.findIndex(({key}) => key === object.key);\n            if (i < 0) {\n                stored.push(object);\n            } else {\n                stored[i] = object;\n            }\n            return stored;\n        });\n    }\n    return [data, updateData];\n}\n\n/**\n * @param {('biomes'|'blocks'|'features')} category Data category\n * @returns {{ value: string, label: string }[]} Options list for react-select\n */\nexport function useKeyedListOptions(category) {\n    const context = useContext(DataContext);\n    const options = context.custom[category]\n        .map(keyed => ({ value: context.namespace + ':' + keyed.key, label: '(Custom) ' + keyed.key }));\n\n    let hasDisplayName = null;\n    context.vanilla[category].forEach(keyed => {\n        if (hasDisplayName === null) {\n            hasDisplayName = keyed.hasOwnProperty('displayName');\n        }\n        if (hasDisplayName) {\n            options.push({ value: 'minecraft:' + keyed.name, label: keyed.displayName });\n        } else {\n            options.push({ value: 'minecraft:' + keyed, label: keyed });\n        }\n    });\n    return options;\n}","import React, { useState, useEffect } from 'react';\nimport { jsonFetch } from '../utils/fetch';\nimport { VANILLA_FEATURES } from '../components/feature/FeatureDefaults';\nimport { useData } from '../hooks/context';\n\nexport const DataContext = React.createContext({\n    vanilla: {\n        biomes: [],\n        blocks: [],\n        entities: [],\n        features: []\n    },\n    custom: {\n        biomes: [],\n        dimensions: [],\n        features: [],\n        updateBiomes: (biome) => {},\n        updateDimensions: (dimension) => {},\n        updateFeatures: (feature) => {}\n    },\n    namespace: ''\n});\n\nexport function DataContextProvider({children, namespace}) {\n    const [biomes, setBiomes] = useState([]);\n    const [blocks, setBlocks] = useState([]);\n    const [entities, setEntities] = useState([]);\n\n    const [customBiomes, updateBiomes] = useData();\n    const [dimensions, updateDimensions] = useData();\n    const [features, updateFeatures] = useData();\n\n    useEffect(() => {\n        (async function () {\n            jsonFetch('https://unpkg.com/minecraft-data@2.62.1/minecraft-data/data/pc/1.16.1/biomes.json')\n                .then(biomes => setBiomes(biomes));\n            jsonFetch('https://unpkg.com/minecraft-data@2.62.1/minecraft-data/data/pc/1.16.1/blocks.json')\n                .then(blocks => setBlocks(blocks));\n            jsonFetch('https://unpkg.com/minecraft-data@2.62.1/minecraft-data/data/pc/1.16.1/entities.json')\n                .then(entities => setEntities(entities.map(entity => ({ value: 'minecraft:' + entity.name, label: entity.displayName }))));\n        })();\n    }, []);\n\n    return <DataContext.Provider value={{\n        vanilla: { biomes, blocks, entities, features: VANILLA_FEATURES },\n        custom: { biomes: customBiomes, dimensions, features, updateBiomes, updateDimensions, updateFeatures },\n        namespace\n    }}>{children}</DataContext.Provider>\n}","import React, { useContext, useReducer, useEffect, useMemo, useState, useCallback } from 'react';\nimport Select from 'react-select';\nimport { useToggle } from '../../hooks/ui';\nimport { Button } from '../../ui/Button';\nimport { DataContext } from '../../context/DataContext';\nimport { SPAWNERS_AMBIENT, SPAWNERS_CREATURE, SPAWNERS_MONSTER } from './BiomeDefaults';\n\nconst ADD_SPAWNER = 'ADD_SPAWNER';\nconst UPDATE_SPAWNER = 'UPDATE_SPAWNER';\nconst REMOVE_SPAWNER = 'REMOVE_SPAWNER';\n\nfunction spawnersReducer(state, action) {\n    switch (action.type) {\n        case ADD_SPAWNER:\n            return [...state, action.payload];\n        case UPDATE_SPAWNER:\n          return state.map(spawner => spawner === action.target ? action.payload : spawner);\n        case REMOVE_SPAWNER:\n          return state.filter(spawner => spawner !== action.payload);\n        default:\n          return state;\n    }\n}\n\nexport function BiomeSpawners({onChange, data = { ambient: SPAWNERS_AMBIENT, creature: SPAWNERS_CREATURE, misc: [], monster: SPAWNERS_MONSTER, water_ambient: [], water_creature: [] }}) {\n\n    const entities = useContext(DataContext).vanilla.entities;\n    const [spawners, setSpawners] = useState(data);\n\n    const handleChange = useCallback(function(group, groupSpawners) {\n        setSpawners(function(spawners) {\n            const state = {\n                ...spawners,\n                [group]: groupSpawners\n            };\n            onChange(state);\n            return state;\n        });\n    }, [onChange]);\n\n    return <div>\n        <SpawnGroup group=\"ambient\" data={spawners.ambient} onChange={handleChange} entities={entities}>Ambient</SpawnGroup>\n        <SpawnGroup group=\"creature\" data={spawners.creature} onChange={handleChange} entities={entities}>Creature</SpawnGroup>\n        <SpawnGroup group=\"misc\" data={spawners.misc} onChange={handleChange} entities={entities}>Miscellaneous</SpawnGroup>\n        <SpawnGroup group=\"monster\" data={spawners.monster} onChange={handleChange} entities={entities}>Monster</SpawnGroup>\n        <SpawnGroup group=\"water_ambient\" data={spawners.water_ambient} onChange={handleChange} entities={entities}>Water ambient</SpawnGroup>\n        <SpawnGroup group=\"water_creature\" data={spawners.water_creature} onChange={handleChange} entities={entities}>Water creature</SpawnGroup>\n    </div>;\n}\n\nfunction SpawnGroup({children, entities, data = [], group, onChange}) {\n    const [visibility, toggle] = useToggle();\n    const text = visibility ? 'Less...' : 'More...';\n\n    const [spawners, dispatch] = useReducer(spawnersReducer, data);\n\n    const handleAdd = useCallback(function(e) {\n        e.preventDefault();\n        dispatch({ type: ADD_SPAWNER, payload: {\n            type: 'minecraft:cow',\n            weight: 1,\n            minCount: 1,\n            maxCount: 1,\n        }});\n        if (!visibility) {\n            toggle();\n        }\n    }, [toggle, visibility]);\n\n    const handleChange = useCallback(function(original, spawner) {\n        dispatch({ type: UPDATE_SPAWNER, target: original, payload: spawner });\n    }, []);\n\n    const handleRemove = useCallback(function(spawner) {\n        dispatch({ type: REMOVE_SPAWNER, payload: spawner });\n    }, []);\n\n    useEffect(function() {\n        onChange(group, spawners);\n    }, [group, onChange, spawners]);\n\n    const values = [];\n    if (visibility) {\n        spawners.forEach((def, i) => {\n            const key = `${i}-${def.type}-${def.weight}-${def.minCount}-${def.maxCount}`;\n            values.push(<SpawnDefinition data={def} key={key} onChange={handleChange} onDelete={handleRemove} entities={entities} />);\n        });\n        return <div>\n            <div className=\"toggle-label\">\n                {children} \n                <div className=\"btn-group\">\n                    <Button onClick={handleAdd}>Add</Button>\n                    {spawners.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{text}</Button>} \n                </div>\n            </div>\n            {values}\n        </div>;\n    }\n    \n    return <div className=\"toggle-label\">\n        {children}\n        <div className=\"btn-group\">\n            {spawners.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{text}</Button>}\n            {(spawners.length < 1) && <Button onClick={handleAdd}>Add</Button>}\n        </div>\n    </div>;\n}\n\nconst SpawnDefinition = React.memo(function({entities, onChange, onDelete, data}) {\n\n    const [definition, setDefinition] = useState(data);\n\n    const handleChange = function(e) {\n        const field = typeof e.target === 'undefined' ? 'type' : e.target.id;\n        const value = typeof e.target === 'undefined' ? e.value : parseInt(e.target.value);\n        setDefinition(definition => ({\n            ...definition,\n            [field]: value\n        }));\n        onChange(data, {...data, [field]: value});\n    };\n\n    const handleCountChange = function(e) {\n        const value = parseInt(e.target.value);\n        if ((e.target.id === 'minCount' && value <= definition.maxCount)\n            || (e.target.id === 'maxCount' && value >= definition.minCount)) {\n            setDefinition(definition => ({\n                ...definition,\n                [e.target.id]: value\n            }));\n            onChange(data, {...data, [e.target.id]: value});\n        } \n    };\n\n    const handleDelete = function(e) {\n        e.preventDefault();\n        onDelete(data);\n    };\n\n    const selectedOption = useMemo(function() {\n        return entities.find(o => o.value === definition.type);\n    }, [definition.type, entities]);\n\n    return <div>\n        <div className=\"form-group\">\n            <label>Mob type</label> : <Select options={entities} value={selectedOption} onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <div className=\"form-inline\">\n                <label htmlFor=\"weight\">Weight</label> : <input type=\"number\" id=\"weight\" required value={definition.weight} onChange={handleChange} />\n            </div>\n            <div className=\"form-inline\">\n                <label htmlFor=\"minCount\">Min count</label> : <input type=\"number\" id=\"minCount\" min=\"0\" required value={definition.minCount} onChange={handleCountChange} />\n            </div>\n            <div className=\"form-inline\">\n                <label htmlFor=\"maxCount\">Max count</label> : <input type=\"number\" id=\"maxCount\" min=\"0\" required value={definition.maxCount} onChange={handleCountChange} />\n            </div>\n            <div className=\"form-inline\"><Button cat=\"danger\" onClick={handleDelete}>Delete</Button></div>\n        </div>\n        <hr /> \n    </div>\n}, function(prev, next) {\n    return prev.entities.length === next.entities.length && prev.data === next.data;\n});","import React, { useCallback, useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport { FEATURES } from './BiomeDefaults';\nimport { useKeyedListOptions } from '../../hooks/context';\n\nexport default function GenFeatures({ onChange, features = FEATURES }) {\n\n    const [levels, setLevels] = useState(features);\n\n    const handleLevelChange = useCallback(function(priority, list) {\n        setLevels(levels => {\n            levels[priority] = list;\n            return levels;\n        })\n        onChange(levels);\n    }, [levels, onChange]);\n\n    useEffect(function() {\n        onChange(levels);\n    }, [levels, onChange]);\n\n    const elements = [];\n    levels.forEach((level, i) => {\n        elements.push(<li key={i}><GenFeaturesLevel value={level} onChange={handleLevelChange} priority={i} /></li>);\n    });\n    return <div className=\"form-group\">\n        <label>Features</label>\n        <p className=\"help\"><small className=\"text-muted\">Each generation feature is associated with a priority. The higher the priority, the later the feature will be applied.</small></p>\n        <ol>{elements}</ol>\n    </div>;\n}\n\nfunction GenFeaturesLevel({ onChange, priority, value }) {\n    const options = useKeyedListOptions('features');\n    const features = value;\n\n    const handleChange = useCallback(function(selectedOptions) {\n        onChange(priority, selectedOptions === null ? [] : selectedOptions.map(option => option.value));\n    }, [onChange, priority]);\n\n    return <Select isMulti options={options} onChange={handleChange} defaultValue={options.filter(o => features.includes(o.value))} />;\n}","export function hexColorToInteger(color) {\n    return parseInt(color.replace(/^#/, ''), 16);\n}\n\nexport function integerColorToHex(color) {\n    return '#' + (color & 0xFFFFFF).toString(16).padStart(6, '0');\n}","import React, { useState, useEffect } from 'react';\nimport { integerColorToHex, hexColorToInteger } from '../../utils/color';\nimport { EFFECTS } from './BiomeDefaults';\n\nexport function BiomeEffects({effects = EFFECTS, onChange}) {\n\n    const [colors, setColors] = useState(effects);\n\n    const handleColorChange = function(e) {\n        e.persist();\n        setColors(colors => ({\n            ...colors,\n            [e.target.id]: hexColorToInteger(e.target.value)\n        }));\n        onChange(colors);\n    };\n\n    useEffect(function () {\n        onChange(colors);\n    }, [colors, onChange]);\n\n    return <>\n        <div className=\"form-inline\">\n            <label htmlFor=\"fog_color\">Fog color</label> : <input type=\"color\" id=\"fog_color\" value={integerColorToHex(colors.fog_color)} onChange={handleColorChange} />\n        </div>\n        <div className=\"form-inline\">\n            <label htmlFor=\"water_color\">Water color</label> : <input type=\"color\" id=\"water_color\" value={integerColorToHex(colors.water_color)} onChange={handleColorChange} />\n        </div>\n        <div className=\"form-inline\">\n            <label htmlFor=\"water_fog_color\">Water fog color</label> : <input type=\"color\" id=\"water_fog_color\" value={integerColorToHex(colors.water_fog_color)} onChange={handleColorChange} />\n        </div>\n    </>\n}","import React, { useCallback, useState } from 'react';\nimport BiomeStarts from './BiomeStarts';\nimport Select from 'react-select';\nimport { Button } from '../../ui/Button';\nimport { BiomeSpawners } from './BiomeSpawners';\nimport { STARTS } from './BiomeDefaults';\nimport GenFeatures from './Features';\nimport { hexColorToInteger, integerColorToHex } from '../../utils/color';\nimport { BiomeEffects } from './BiomeEffects';\n\nexport function Biome({data = {}, onSave}) {\n\n    const [state, setState] = useState(data || { starts: STARTS, spawners: []});\n\n    const handleStartsChange = useCallback(function(starts) {\n        setState(state => {\n            state.starts = starts;\n            return state;\n        });\n    }, []);\n\n    const handleEffectsChange = useCallback(function(effects) {\n        setState(state => {\n            state.effects = effects;\n            return state;\n        });\n    }, []);\n\n    const handleFeaturesChange = useCallback(function(features) {\n        setState(state => {\n            state.features = features;\n            return state;\n        });\n    }, []);\n\n    const handleSpawnersChange = useCallback(function(spawners) {\n        setState(state => {\n            state.spawners = spawners;\n            return state;\n        });\n    }, []);\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        const formData = Object.fromEntries(new FormData(e.target));\n        const data = { ...formData, ...state };\n        data.spawn_costs = {};\n        data.carvers =  {\n            air: [\n              \"minecraft:cave\",\n              \"minecraft:canyon\"\n            ]\n        }; // @todo\n        data.sky_color = hexColorToInteger(formData.sky_color);\n        Object.keys(formData).forEach(function(key) {\n            if (!isNaN(formData[key])) {\n                data[key] = parseFloat(formData[key]);\n            }\n        });\n        onSave(data);\n    }, [onSave, state]);\n\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit biome</h3>\n        <div className=\"form-group\">\n            <label htmlFor=\"key\">Identifier</label> : <input type=\"text\" name=\"key\" id=\"key\" required pattern=\"[a-z0-9._-]+\" placeholder=\"Ex. : my-biome\" defaultValue={data.key} />\n        </div>\n\n        <fieldset>\n            <legend>Colors</legend>\n            <div className=\"form-row\">\n                <div className=\"form-inline\"><label htmlFor=\"sky_color\">Sky color</label> : <input type=\"color\" name=\"sky_color\" required defaultValue={integerColorToHex(data.sky_color || 7907327)} /></div>\n                <BiomeEffects effects={state.effects} onChange={handleEffectsChange} />\n            </div>\n        </fieldset>\n\n        <fieldset>\n            <BiomeCategory category={data.category} />\n            <BiomePrecipitation value={data.precipitation} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Generation</legend>\n            <SurfaceBuilder value={data.surface_builder} />\n            <BiomeStarts onChange={handleStartsChange} starts={state.starts} />\n            <GenFeatures features={state.features} onChange={handleFeaturesChange} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Creatures</legend>\n            <BiomeSpawners data={state.spawners} onChange={handleSpawnersChange} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Settings</legend>\n            <div className=\"form-group form-row\">\n                <div><label htmlFor=\"scale\">Scale</label> : <input type=\"number\" name=\"scale\" step=\"0.05\" required defaultValue={data.scale || 0.05} /></div>\n                <div><label htmlFor=\"downfall\">Downfall</label> : <input type=\"number\" name=\"downfall\" step=\"0.1\" required defaultValue={data.downfall || 0.4} /></div>\n                <div><label htmlFor=\"depth\">Depth</label> : <input type=\"number\" name=\"depth\" step=\"0.01\" required defaultValue={data.depth || 0.12} /></div>\n                <div><label htmlFor=\"temperature\">Temperature</label> : <input type=\"number\" name=\"temperature\" step=\"0.1\" required defaultValue={data.temperature || 0.8} /></div>\n                <p className=\"mts\"><small className=\"text-muted\">The <em>scale</em> parameter defines terrain amplitude, <em>downfall</em> controls grass and foliage color, <em>depth</em> is the difference from sea level, <em>temperature</em> controls some gameplay features like whether snow golems take damage. The default values are those of the plains biome.</small></p>\n            </div>\n        </fieldset>\n        <div className=\"form-group mlm mbm\">\n            <Button type=\"submit\">Save</Button>\n        </div>\n    </form>;\n}\n\nfunction BiomeCategory({category = 'plains'}) {\n\n    const options = [\n        { value: 'beach', label: 'Beach' },\n        { value: 'desert', label: 'Desert' },\n        { value: 'extreme_hills', label: 'Extreme hills' },\n        { value: 'icy', label: 'Icy' },\n        { value: 'jungle', label: 'Jungle' },\n        { value: 'mesa', label: 'Mesa' },\n        { value: 'nether', label: 'Nether' },\n        { value: 'none', label: 'None' },\n        { value: 'ocean', label: 'Ocean' },\n        { value: 'plains', label: 'Plains' },\n        { value: 'river', label: 'River' },\n        { value: 'savanna', label: 'Savanna' },\n        { value: 'swamp', label: 'Swamp' },\n        { value: 'taiga', label: 'Taiga' },\n        { value: 'the_end', label: 'The end' },\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"category\">Category</label>\n        <Select options={options} defaultValue={options.find(o => o.value === category)} name=\"category\" />\n    </div>;\n}\n\nfunction BiomePrecipitation({value = 'rain'}) {\n\n    const options = [\n        { value: 'none', label: 'None' },\n        { value: 'rain', label: 'Rain' },\n        { value: 'snow', label: 'Snow' }\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"precipitation\">Precipitation</label>\n        <Select options={options} defaultValue={options.find(o => o.value === value)} name=\"precipitation\" />\n    </div>;\n}\n\nfunction SurfaceBuilder({value = 'minecraft:grass'}) {\n\n    const options = [\n        { value: 'badlands', label: 'Badlands' },\n        { value: 'basalt_deltas', label: 'Basalt Deltas' },\n        { value: 'crimson_forest', label: 'Crimson forest' },\n        { value: 'deset', label: 'Desert' },\n        { value: 'end', label: 'End' },\n        { value: 'eroded_badlands', label: 'Eroded Badlands' },\n        { value: 'frozen_ocean', label: 'Frozen ocean' },\n        { value: 'full_sand', label: 'Full sand' },\n        { value: 'giant_tree_taiga', label: 'Giant tree taiga' },\n        { value: 'grass', label: 'Grass' },\n        { value: 'gravelly_mountain', label: 'Gravelly mountain' },\n        { value: 'ice_spikes', label: 'Ice spikes' },\n        { value: 'mountain', label: 'Mountain' },\n        { value: 'mycelium', label: 'Mycelium' },\n        { value: 'nether', label: 'Nether' },\n        { value: 'nope', label: 'Nope' },\n        { value: 'ocean_sand', label: 'Ocean sand' },\n        { value: 'shattered_savanna', label: 'Shattered savanna' },\n        { value: 'soul_sand_valley', label: 'Soul sand valley' },\n        { value: 'stone', label: 'Stone' },\n        { value: 'swamp', label: 'Swamp' },\n        { value: 'warped_forest', label: 'Warped forest' },\n        { value: 'wooded_badlands', label: 'Wooded badlands' },\n    ].map(option => {\n        option.value = 'minecraft:' + option.value;\n        return option;\n    });\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"surface_builder\">Surface builder</label>\n        <Select options={options} defaultValue={options.find(o => o.value === value)} name=\"surface_builder\" />\n    </div>;\n}","import React from 'react';\n\nexport function MenuItem({active, children, onClick}) {\n    const className = 'tabs-menu-link' + (active ? ' is-active' : '');\n    return <a href=\"#_\" className={className} onClick={onClick}>{children}</a>\n}","import React from 'react';\nimport Select from 'react-select';\n\nexport function DimensionType({type = 'minecraft:overworld'}) {\n    const options = [\n        { value: 'minecraft:overworld', label: 'Overworld' },\n        { value: 'minecraft:overworld_cave', label: 'Overworld caves' },\n        { value: 'minecraft:the_nether', label: 'The Nether' },\n        { value: 'minecraft:the_end', label: 'The End' },\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"dimension-type\">Dimension type</label>\n        <Select name=\"dimension-type\" options={options} defaultValue={options.find(o => o.value === type)} />\n    </div>;\n}","import { useReducer } from \"react\";\n\nfunction crudReducer(state, action) {\n    switch (action.type) {\n        case ADD:\n            return [...state, action.payload];\n        case UPDATE:\n          return state.map(element => element === action.target ? action.payload : element);\n        case REMOVE:\n          return state.filter(element => element !== action.payload);\n        default:\n          return state;\n    }\n}\n\nexport function useCrud(data = []) {\n    return useReducer(crudReducer, data);\n}\n\nconst ADD = 'ADD';\nconst UPDATE = 'UPDATE';\nconst REMOVE = 'REMOVE';\nexport const CRUD = { ADD, UPDATE, REMOVE };","export function objectsEqual(a, b) {\n    return Object.keys(a).length === Object.keys(b).length \n        && Object.keys(a).every(p => a[p] === b[p]);\n}\n\nexport function getStateValue(state, properties = {}) {\n    const actual = properties[state.name];\n    switch(state.type) {\n        case 'bool':\n            return actual === 'true' ? 'true' : 'false';\n        case 'int':\n            return actual || 0;\n        default:\n            return actual || state.values[0];\n    }\n}\n\nexport function hasDuplicatedObjects(objects) {\n    for (const a of objects) {\n        for (const b of objects) {\n            if (a !== b && objectsEqual(a, b)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}","import React, { useState, useCallback, useContext, useEffect } from 'react';\nimport Select from 'react-select';\nimport { SeedField } from './DimensionGenerator';\nimport { useKeyedListOptions } from '../../hooks/context';\nimport { useMemo } from 'react';\nimport { useCrud, CRUD } from '../../hooks/form';\nimport { useToggle } from '../../hooks/ui';\nimport { DataContext } from '../../context/DataContext';\nimport { Button } from '../../ui/Button';\nimport { hasDuplicatedObjects } from '../../utils/data';\n\nexport function BiomeSource({biome_source = { type: 'minecraft:fixed' }, onChange}) {\n    const [source, setSource] = useState(biome_source);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:fixed', label: 'Fixed' },\n            { value: 'minecraft:multi_noise', label: 'Multi noise' },\n        ];\n    }, []);\n\n    const handleSeedChange = useCallback(function(seed) {\n        setSource(source => ({ ...source, seed }));\n    }, []);\n    const handleTypeChange = useCallback(function(option) {\n        setSource(source => ({ type: option.value, seed: source.seed }));\n    }, []);\n    const handleFixedSourceChange = useCallback(function(biome) {\n        setSource(source => ({ ...source, biome }));\n    }, []);\n    const handleMultiSourceChange = useCallback(function(biomes) {\n        setSource(source => ({ ...source, biomes }));\n    }, []);\n\n    useEffect(() => onChange(source), [onChange, source]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === source.type);\n    }, [options, source.type]);\n\n    return <fieldset>\n        <legend>Biome source</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"biome-source-type\">Type</label><Select id=\"biome-source-type\" options={options} value={selected} onChange={handleTypeChange} />\n        </div>\n        <SeedField value={source.seed} onChange={handleSeedChange} />\n        <hr />\n        {source.type === 'minecraft:fixed' && <FixedBiomeSource source={source.biome} onChange={handleFixedSourceChange} />}\n        {source.type === 'minecraft:multi_noise' && <MultiNoiseBiomeSource source={source.biomes} onChange={handleMultiSourceChange} />}\n    </fieldset>\n}\n\nconst FixedBiomeSource = React.memo(function({source = 'minecraft:plains', onChange}) {\n    const options = useKeyedListOptions('biomes');\n    const [biome, setBiome] = useState(source);\n\n    const handleBiomeChange = function(biome) {\n        setBiome(biome.value);\n    }\n    useEffect(() => onChange(biome), [biome, onChange]);\n    \n    return <div className=\"form-group\">\n        <label htmlFor=\"fixed-biome\">Biome</label><Select options={options} defaultValue={options.find(o => o.value === biome)} onChange={handleBiomeChange} />\n    </div>;\n});\n\nconst MultiNoiseBiomeSource = React.memo(function({source, onChange}) {\n    const options = useKeyedListOptions('biomes');\n    const [biomes, dispatch] = useCrud(source);\n    const [parametersWarning, toggleWarningVisibility] = useToggle();\n\n    const handleAddClick = useCallback(function(e) {\n        e.preventDefault();\n        dispatch({ type: CRUD.ADD, payload: { biome: 'minecraft:plains', parameters: {} } });\n    }, [dispatch]);\n    const handleChange = useCallback(function(state, previous) {\n        dispatch({ type: CRUD.UPDATE, target: previous, payload: state });\n    }, [dispatch]);\n    const handleDeleteClick = useCallback(function(e, index) {\n        e.preventDefault();\n        dispatch({ type: CRUD.REMOVE, payload: biomes[index] });\n    }, [biomes, dispatch]);\n\n    const vanilla = useContext(DataContext).vanilla.biomes;\n    const custom = useContext(DataContext).custom.biomes;\n    const namespace = useContext(DataContext).namespace;\n    useEffect(function() {\n        const hasDuplicated = hasDuplicatedObjects(biomes.map(biome => biome.parameters));\n        onChange(biomes);\n        if (hasDuplicated && !parametersWarning) {\n            toggleWarningVisibility();\n        } else if (!hasDuplicated && parametersWarning) {\n            toggleWarningVisibility();\n        }\n    }, [biomes, onChange, parametersWarning, toggleWarningVisibility]);\n\n    const values = [];\n    biomes.forEach((entry, i) => {\n        const key = i;\n        values.push(<BiomeSelection namespace={namespace} vanilla={vanilla} custom={custom} biomesOptions={options} entry={entry} key={key} onChange={handleChange}><Button cat=\"danger\" onClick={(e) => handleDeleteClick(e, i)}>Delete</Button></BiomeSelection>);\n    });\n    return <div className=\"form-group\">\n        {values}\n        <Button onClick={handleAddClick}>Add biome</Button>\n        {parametersWarning && <p className=\"alert--warning\">Warning: every biome must have a unique combination of parameters!</p>}\n    </div>;\n});\n\nconst BiomeSelection = React.memo(function({namespace, vanilla, custom, biomesOptions, entry, onChange, children}) {\n    const [selection, setSelection] = useState(entry);\n\n    const handleBiomeChange = useCallback(function(option) {\n        const biome = option.value;\n        const data = (vanilla.find(b => 'minecraft:' + b.name === biome) || custom.find(b => namespace + ':' + b.key === biome) || { rainfall: 0, temperature: 0 });\n        setSelection(selection => {\n            const parameters = {\n                altitude: selection.parameters.altitude || 0,\n                weirdness: selection.parameters.weirdness || 0,\n                offset: selection.parameters.offset || 0,\n                temperature: data.temperature,\n                humidity: data.rainfall || 0\n            };\n            return { biome, parameters };\n        });\n    }, [custom, namespace, vanilla]);\n\n    const handleParameterChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = e.target.value;\n        setSelection(selection => {\n            const parameters = { ...selection.parameters, [name]: parseFloat(value) };\n            return { biome: selection.biome, parameters };\n        });\n    }, []);\n\n    useEffect(() => onChange(selection, entry), [entry, onChange, selection]);\n\n    const selected = useMemo(function() {\n        return biomesOptions.find(o => o.value === selection.biome);\n    }, [biomesOptions, selection.biome]);\n    return <div className=\"form-group\">\n        <Select options={biomesOptions} value={selected} onChange={handleBiomeChange} />\n        <div className=\"form-group form-row\">\n            <div><label>Altitude</label> : <input type=\"number\" id=\"altitude\" value={selection.parameters.altitude || 0} onChange={handleParameterChange} step=\"0.1\" /></div>\n            <div><label>Weirdness</label> : <input type=\"number\" id=\"weirdness\" value={selection.parameters.weirdness || 0} onChange={handleParameterChange} step=\"0.1\" /></div>\n            <div><label>Offset</label> : <input type=\"number\" id=\"offset\" value={selection.parameters.offset || 0} onChange={handleParameterChange} step=\"0.1\" /></div>\n            <div><label>Temperature</label> : <input type=\"number\" id=\"temperature\" value={selection.parameters.temperature || 0.8} onChange={handleParameterChange} step=\"0.1\" /></div>\n            <div><label>Humidity</label> : <input type=\"number\" id=\"humidity\" value={selection.parameters.humidity || 0.4} onChange={handleParameterChange} step=\"0.1\" /></div>\n            {children}\n        </div>\n    </div>\n});","export const FIXED_GENERATOR = {\n    type: 'minecraft:noise',\n    seed: 286956243,\n    biome_source: {\n        type: 'minecraft:fixed',\n        seed: 286956243,\n        biome: 'minecraft:plains',\n    },\n    settings: 'minecraft:overworld'\n}","import React, { useState, useCallback, useEffect } from 'react';\nimport { BiomeSource } from './BiomeSource';\nimport { FIXED_GENERATOR } from './DimensionDefaults';\nimport { hashCode } from './../../utils/hash';\nimport Select from 'react-select';\n\nexport function DimensionGenerator({generator = FIXED_GENERATOR, onChange}) {\n\n    const [data, setData] = useState(generator);\n\n    const handleSeedChange = useCallback(function(seed) {\n        setData(data => {\n            data.seed = seed;\n            return data;\n        });\n        onChange(data);\n    }, [data, onChange]);\n\n    const handleSettingsChange = useCallback(function(settings) {\n        setData(data => {\n            data.settings = settings;\n            return data;\n        });\n        onChange(data);\n    }, [data, onChange]);\n\n    const handleBiomeSourceChange = useCallback(function(biome_source) {\n        setData(data => {\n            data.biome_source = biome_source;\n            return data;\n        });\n        onChange(data);\n    }, [data, onChange]);\n\n    useEffect(function () {\n        onChange(data);\n    }, [data, onChange]);\n\n    return <fieldset>\n        <legend>Noise dimension generator</legend>\n        <div className=\"form-group\">\n            <SeedField value={data.seed} onChange={handleSeedChange} />\n            <Settings settings={data.settings} onChange={handleSettingsChange} />\n            <BiomeSource biome_source={data.biome_source} onChange={handleBiomeSourceChange} />\n        </div>\n    </fieldset>;\n}\n\nexport const SeedField = React.memo(function({onChange, value = '286956243'}) {\n    const [text, setText] = useState(value);\n\n    const handleChange = function(e) {\n        const value = e.target.value;\n        setText(value);\n        onChange(isNaN(value) ? hashCode(value) : value);\n    };\n\n    return <div className=\"form-group\">\n        <label>Seed</label> : <input type=\"text\" value={text} onChange={handleChange} />\n    </div>\n});\n\nconst Settings = React.memo(function({onChange, settings = 'minecraft:overworld'}) {\n    const handleChange = useCallback(function(option) {\n        onChange(option.value);\n    }, [onChange]);\n\n    const options = [\n        { value: 'minecraft:overworld', label: 'Overworld' },\n        { value: 'minecraft:nether', label: 'Nether' },\n        { value: 'minecraft:end', label: 'End' },\n        { value: 'minecraft:amplified', label: 'Amplified' },\n        { value: 'minecraft:caves', label: 'Caves' },\n        { value: 'minecraft:floating_islands', label: 'Floating islands' }\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"settings\">Settings</label><Select options={options} defaultValue={options.find(o => o.value === settings)} onChange={handleChange} />\n    </div>;\n});","export function hashCode(s) {\n    let hash;\n    for (let i = 0; i < s.length; i++) { \n        hash = Math.imul(31, hash) + s.charCodeAt(i) | 0;\n    }\n    return hash;\n}","import React, { useCallback, useState } from 'react';\nimport { DimensionType } from './DimensionType';\nimport { DimensionGenerator } from './DimensionGenerator';\nimport { Button } from '../../ui/Button';\n\nexport function Dimension({data = {}, onSave}) {\n\n    const [state, setState] = useState(data);\n\n    const handleGeneratorChange = useCallback(function(generator) {\n        setState(s => {\n            s.generator = generator;\n            return s;\n        });\n    }, []);\n\n    const handleSubmit = function (e) {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        const data = {...state};\n        data.key = formData.get('key');\n        data.type = formData.get('dimension-type');\n        onSave(data);\n    }\n\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit dimension</h3>\n        <div className=\"form-group\">\n            <label htmlFor=\"key\">Identifier</label> : <input type=\"text\" name=\"key\" id=\"key\" required pattern=\"[a-z0-9._-]+\" placeholder=\"Ex. : blue-dim\" defaultValue={data.key} />\n        </div>\n        <DimensionType type={data.type} />\n        <fieldset>\n            <legend>Generator configuration</legend>\n            <DimensionGenerator data={data.generator} onChange={handleGeneratorChange} />\n        </fieldset>\n        <div className=\"form-group mlm mbm\">\n            <Button type=\"submit\">Save</Button>\n        </div>\n    </form>\n}","import React, { useState, useCallback, useContext, useMemo } from \"react\";\nimport Select from \"react-select\";\nimport { DataContext } from \"../../context/DataContext\";\nimport { Button } from '../../ui/Button';\nimport { getStateValue } from \"../../utils/data\";\nimport { useEffect } from \"react\";\nimport { CRUD, useCrud } from \"../../hooks/form\";\n\nexport const BlockStateProvider = React.memo(function({block = { type: 'minecraft:simple_state_provider' }, onChange}) {\n    const [provider, setProvider] = useState(block);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:simple_state_provider', label: 'Simple state provider' },\n            { value: 'minecraft:weighted_state_provider', label: 'Weighted state provider' }\n        ];\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        setProvider({ type: option.value });\n    }, []);\n\n    const handleSimpleStateChange = useCallback(function(state) {\n        setProvider(provider => ({ ...provider, state }));\n    }, []);\n\n    const handleWeighestStateChange = useCallback(function(entries) {\n        setProvider(provider => ({ ...provider, entries }));\n    }, []);\n\n    useEffect(() => onChange(provider), [onChange, provider]);\n\n    return <div>\n        <label>Type</label>\n        <Select options={options} value={options.find(o => o.value === provider.type)} onChange={handleTypeChange} />\n        {(provider.type === 'minecraft:simple_state_provider' || provider.type === 'minecraft:rotated_block_provider') && <BlockState block={provider.state} onChange={handleSimpleStateChange} />}\n        {provider.type === 'minecraft:weighted_state_provider' && <WeightedStateProvider entries={(provider.entries || []).map(entry => entry.data)} onChange={handleWeighestStateChange} />}\n    </div>\n});\n\nexport const BlockState = React.memo(function({block = {}, children, onChange}) {\n    const context = useContext(DataContext);\n    const [data, setData] = useState(block);\n\n    const handleTypeChange = useCallback(function(option) {\n        const Name = option.value;\n        const Properties = {};\n        (context.vanilla.blocks.find(b => 'minecraft:' + b.name === Name) || { states: [] }).states.forEach(state => {\n            Properties[state.name] = getStateValue(state);\n        })\n        setData({ Name, Properties });\n    }, [context.vanilla.blocks]);\n    const handlePropertiesChange = useCallback(function(Properties) {\n        setData(data => ({ ...data, Properties }))\n    }, []);\n    useEffect(() => onChange(data, block), [onChange, data, block]);\n\n    const options = useMemo(function() {\n        return context.vanilla.blocks.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n    }, [context.vanilla.blocks]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === data.Name);\n    }, [options, data.Name]);\n\n    return <div className=\"form-group\">\n        <Select options={options} value={selected} onChange={handleTypeChange} />\n        <BlockStateProperties block={data.Name} Properties={block.Properties} onChange={handlePropertiesChange}>{children}</BlockStateProperties>\n    </div>;\n});\n\nconst WeightedStateProvider = React.memo(function({entries = [], onChange}) {\n    const [blocks, dispatch] = useCrud(entries);\n\n    const handleAddClick = useCallback(function(e) {\n        e.preventDefault();\n        dispatch({ type: CRUD.ADD, payload: { Name: 'minecraft:stone', Properties: {} } });\n    }, [dispatch]);\n    const handleChange = useCallback(function(state, previous) {\n        dispatch({ type: CRUD.UPDATE, target: previous, payload: state });\n    }, [dispatch]);\n    const handleDeleteClick = useCallback(function(e, index) {\n        e.preventDefault();\n        dispatch({ type: CRUD.REMOVE, payload: blocks[index] });\n    }, [blocks, dispatch]);\n\n    useEffect(() => onChange(blocks.map(data => ({ data }))), [blocks, onChange]);\n\n    const values = [];\n    blocks.forEach((entry, i) => {\n        const key = i;\n        values.push(<BlockState block={entry} key={key} onChange={handleChange}><Button cat=\"danger\" onClick={(e) => handleDeleteClick(e, i)}>Delete</Button></BlockState>);\n    });\n\n    return <div className=\"form-group\">{values}<Button onClick={handleAddClick}>Add</Button></div>;\n});\n\nfunction BlockStateProperties({block, children, onChange, Properties = {}}) {\n    const states = (useContext(DataContext).vanilla.blocks.find(b => 'minecraft:' + b.name === block) || { states: [] }).states;\n    const [properties, setProperties] = useState(Properties);\n\n    const handlePropertyChange = useCallback(function(option) {\n        setProperties(properties => ({ ...properties, [option.name]: option.value }));\n    }, []);\n    const handleCheckboxChange = useCallback(function(e) {\n        const value = e.target.checked.toString();\n        setProperties(properties => ({ ...properties, [e.target.id]: value }));\n    }, []);\n    const handleNumberChange = useCallback(function(e) {\n        const value = e.target.value;\n        setProperties(properties => ({ ...properties, [e.target.id]: value }));\n    }, []);\n    useEffect(() => onChange(properties), [onChange, properties]);\n\n    const selects = [];\n    states.forEach(possible => {\n        switch(possible.type) {\n            case 'bool':\n                selects.push(<div key={possible.name}>\n                    <label>{possible.name}</label> : <input type=\"checkbox\" id={possible.name} className=\"checkbox\" checked={Properties[possible.name] === 'true'} onChange={handleCheckboxChange} />\n                </div>);\n                break;\n            case 'int':\n                selects.push(<div key={possible.name}>\n                    <label>{possible.name}</label> : <input type=\"number\" id={possible.name} value={Properties[possible.name] || 0} onChange={handleNumberChange} min=\"0\" max={possible.num_values - 1} />\n                </div>);\n                break;\n            default:\n                const options = possible.values.map(value => ({ value, name: possible.name, label: value }));\n                const defaultValue = options.find(o => o.value === Properties[possible.name]) || options[0];\n                selects.push(<div key={possible.name}>\n                    <label>{possible.name}</label> : <div className=\"inbl\"><Select options={options} value={defaultValue} onChange={handlePropertyChange} /></div>\n                </div>);\n        }\n    });\n    return <div className=\"form-group form-row\">\n        {selects}{children}\n    </div>;\n}","import React, { useCallback, useMemo, useState, useEffect } from 'react';\nimport { BlockStateProvider } from '../state/BlockState';\nimport Select from 'react-select';\nimport { TREE_FEATURE_CONFIG } from './FeatureDefaults';\n\nexport function TreeFeatureConfig({configuration = TREE_FEATURE_CONFIG, onChange}) {\n\n    const [config, setConfig] = useState(configuration);\n\n    const handleTrunkProviderChange = useCallback(function(trunk_provider) {\n        setConfig(config => ({ ...config, trunk_provider }));\n    }, []);\n    const handleLeavesProviderChange = useCallback(function(leaves_provider) {\n        setConfig(config => ({ ...config, leaves_provider }));\n    }, []);\n    const handleFoliagePlacerChange = useCallback(function(foliage_placer) {\n        setConfig(config => ({ ...config, foliage_placer }));\n    }, []);\n    const handleTrunkPlacerChange = useCallback(function(trunk_placer) {\n        setConfig(config => ({ ...config, trunk_placer }));\n    }, []);\n\n    useEffect(function() {\n        onChange(config);\n    }, [config, onChange]);\n\n    return <div>\n        <fieldset>\n            <legend>Trunk provider</legend>\n            <BlockStateProvider block={config.trunk_provider} onChange={handleTrunkProviderChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Leaves provider</legend>\n            <BlockStateProvider block={config.leaves_provider} onChange={handleLeavesProviderChange} />\n        </fieldset>\n        <FoliagePlacer placer={config.foliage_placer} onChange={handleFoliagePlacerChange} />\n        <TrunkPlacer placer={config.trunk_placer} onChange={handleTrunkPlacerChange} />\n    </div>;\n}\n\nconst FoliagePlacer = React.memo(function({placer, onChange}) {\n    const [data, setData] = useState(placer);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'blob_foliage_placer', label: 'Blob foliage placer' },\n            { value: 'fancy_foliage_placer', label: 'Fancy foliage placer' }\n        ].map(o => {\n            o.value = 'minecraft:' + o.value;\n            return o;\n        });\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        const type = option.value;\n        setData(data => ({ ...data, type }));\n    }, []);\n\n    const handleValueChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = parseInt(e.target.value);\n        setData(data => {\n            const n = { ...data, [name]: value };\n            onChange(n);\n            return n;\n        });\n    }, [onChange]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === data.type) || options[0];\n    }, [options, data.type]);\n\n    return <fieldset>\n        <legend>Foliage placer</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"foliage_placer_type\">Type</label>\n            <Select options={options} name=\"foliage_placer_type\" value={selected} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <div><label htmlFor=\"radius\">Radius</label> : <input type=\"number\" id=\"radius\" value={data.radius} onChange={handleValueChange} /></div>\n            <div><label htmlFor=\"offset\">Offset</label> : <input type=\"number\" id=\"offset\" value={data.offset} onChange={handleValueChange} /></div>\n            {(data.type === 'minecraft:blob_foliage_placer' ||\n                data.type === 'minecraft:bush_foliage_placer' ||\n                data.type === 'minecraft:fancy_foliage_placer' ||\n                data.type === 'minecraft:jungle_foliage_placer'\n            ) && <div><label htmlFor=\"height\">Height</label> : <input type=\"number\" id=\"height\" value={data.height} onChange={handleValueChange} /></div>}\n        </div>\n    </fieldset>\n});\n\nconst TrunkPlacer = React.memo(function({placer, onChange}) {\n    const [data, setData] = useState(placer);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'straight_trunk_placer', label: 'Straight trunk placer' },\n            { value: 'forking_trunk_placer', label: 'Forking trunk placer' },\n            { value: 'giant_trunk_placer', label: 'Giant trunk placer' },\n            { value: 'mega_jungle_trunk_placer', label: 'Mega jungle trunk placer' },\n            { value: 'dark_oak_trunk_placer', label: 'Dark oak trunk placer' },\n            { value: 'fancy_trunk_placer', label: 'Fancy trunk placer' }\n        ].map(o => {\n            o.value = 'minecraft:' + o.value;\n            return o;\n        });\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        const type = option.value;\n        setData(data => ({ ...data, type }));\n    }, []);\n\n    const handleValueChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = parseInt(e.target.value);\n        setData(data => {\n            const n = { ...data, [name]: value };\n            onChange(n);\n            return n;\n        });\n    }, [onChange]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === data.type) || options[0];\n    }, [data.type, options]);\n\n    return <fieldset>\n        <legend>Trunk placer</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"foliage_placer_type\">Type</label>\n            <Select options={options} name=\"foliage_placer_type\" defaultValue={selected} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <div><label htmlFor=\"base_height\">Base height</label> : <input type=\"number\" id=\"base_height\" min=\"0\" max=\"32\" value={placer.base_height} onChange={handleValueChange} /></div>\n            <div><label htmlFor=\"height_rand_a\">First height rand</label> : <input type=\"number\" id=\"height_rand_a\" min=\"0\" max=\"24\" value={placer.height_rand_a} onChange={handleValueChange} /></div>\n            <div><label htmlFor=\"height_rand_b\">Second height rand</label> : <input type=\"number\" id=\"height_rand_b\" min=\"0\" max=\"24\" value={placer.height_rand_b} onChange={handleValueChange} /></div>\n        </div>\n    </fieldset>\n});","import React, { useCallback, useMemo } from 'react';\nimport Select from 'react-select';\nimport { useState } from 'react';\nimport { TreeFeatureConfig } from './TreeFeature';\nimport { Button } from '../../ui/Button';\n\nexport function ConfiguredFeature({data = { }, onSave}) {\n    const [name, setName] = useState(data.name || 'minecraft:tree');\n    const [configuration, configure] = useState(data);\n\n    const handleSelectChange = useCallback(function(option) {\n        setName(option.value);\n    }, []);\n    const handleConfigurationChange = useCallback(function(config) {\n        configure(configuration => {\n            configuration.config = config\n            return configuration;\n        });\n    }, []);\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        const data = {...configuration, name};\n        data.key = new FormData(e.target).get('key');\n        onSave(data);\n    }, [configuration, name, onSave]);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'no_op', label: 'No op' },\n            { value: 'chorus_plant', label: 'Chorus plant' },\n            { value: 'void_start_platform', label: 'Void start platform' },\n            { value: 'desert_well', label: 'Desert well' },\n            { value: 'fossil', label: 'Fossil' },\n            { value: 'ice_spike', label: 'Ice spike' },\n            { value: 'glowstone_blob', label: 'Glowstone blob' },\n            { value: 'freeze_top_layer', label: 'Freeze top layer' },\n            { value: 'vines', label: 'Vines' },\n            { value: 'monster_room', label: 'Monster room' },\n            { value: 'blue_ice', label: 'Blue ice' },\n            { value: 'end_island', label: 'End island' },\n            { value: 'kelp', label: 'Kelp' },\n            { value: 'coral_tree', label: 'Coral tree' },\n            { value: 'coral_mushroom', label: 'Coral mushroom' },\n            { value: 'coral_claw', label: 'Coral claw' },\n            { value: 'weeping_vines', label: 'Weeping vines' },\n            { value: 'twisting_vines', label: 'Twisting vines' },\n            { value: 'bonus_chest', label: 'Bonus chest' },\n            { value: 'basalt_pillar', label: 'Basalt pillar' },\n            { value: 'tree', label: 'Tree' },\n            { value: 'flower', label: 'Flower' },\n            { value: 'random_patch', label: 'Random patch' },\n            { value: 'block_pile', label: 'Block pile' },\n            { value: 'nether_forest_vegetation', label: 'Nether forest vegetation' },\n            { value: 'spring_feature', label: 'Spring feature' },\n            { value: 'emerald_ore', label: 'Emerald ore' },\n            { value: 'huge_red_mushroom', label: 'Huge red mushroom' },\n            { value: 'huge_brown_mushroom', label: 'Huge brown mushroom' },\n            { value: 'iceberg', label: 'Iceberg' },\n            { value: 'forest_rock', label: 'Forest rock' },\n            { value: 'lake', label: 'Lake' },\n            { value: 'disk', label: 'Disk' },\n            { value: 'ice_patch', label: 'Ice patch' },\n            { value: 'ore', label: 'Ore' },\n            { value: 'no_surface_ore', label: 'No surface ore' },\n            { value: 'end_spike', label: 'End spike' },\n            { value: 'end_gateway', label: 'End gateway' },\n            { value: 'seagrass', label: 'Seagrass' },\n            { value: 'bamboo', label: 'Bamboo' },\n            { value: 'sea_pickle', label: 'Sea pickle' },\n            { value: 'simple_block', label: 'Simple block' },\n            { value: 'huge_fungus', label: 'Huge fungus' },\n            { value: 'basalt_columns', label: 'Basalt columns' },\n            { value: 'delta_feature', label: 'Delta feature' },\n            { value: 'netherrack_replace_blobs', label: 'Netherrack replace blobs' },\n            { value: 'fill_layer', label: 'Fill layer' },\n            { value: 'random_selector', label: 'Random selector' },\n            { value: 'simple_random_selector', label: 'Simple random selector' },\n            { value: 'random_boolean_selector', label: 'Random boolean selector' },\n            { value: 'decorated', label: 'Decorated' },\n            { value: 'decorated_flower', label: 'Decorated flower' }\n        ].map(o => {\n            o.value = 'minecraft:' + o.value;\n            return o;\n        });\n    }, []);\n\n    const disabled = name !== 'minecraft:tree';\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit configured feature</h3>\n        <div className=\"form-group\">\n            <label htmlFor=\"key\">Identifier</label> : <input type=\"text\" name=\"key\" id=\"key\" required pattern=\"[a-z0-9._-]+\" placeholder=\"Ex. : prismarine-tree\" defaultValue={data.key} />\n        </div>\n        <label htmlFor=\"name\">Type</label>\n        <Select options={options} value={options.find(o => o.value === name)} onChange={handleSelectChange} name=\"name\" />\n        <hr />\n\n        {name === 'minecraft:tree' && <TreeFeatureConfig configuration={configuration.config} onChange={handleConfigurationChange} />}\n        {disabled && <p className=\"text-muted\">Coming soon...</p>}\n\n        <div className=\"form-group mlm mbm\">\n            <Button type=\"submit\" disabled={disabled}>Save</Button>\n        </div>\n    </form>;\n}","import JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\n\nexport function buildZip(namespace, biomes, dimensions, features) {\n    const zip = new JSZip();\n    zip.file('pack.mcmeta', JSON.stringify({ pack: { pack_format: 5, description: 'Custom dimension' } }, null, 4));\n    writeFile(zip, `data/minecraft/dimension/${namespace}`, dimensions);\n    writeFile(zip, `data/minecraft/worldgen/biome/${namespace}`, biomes);\n    writeFile(zip, `data/minecraft/worldgen/configured_feature/${namespace}`, features);\n    zip.generateAsync({ type: 'blob' })\n        .then(function(content) {\n            saveAs(content, 'generated_datapack.zip');\n        });\n}\n\nfunction writeFile(zip, path, elements) {\n    if (elements.length < 0) {\n        return;\n    }\n    const folder = zip.folder(path);\n    for (const el of elements) {\n        const w = {...el};\n        delete w.key;\n        console.log(w);\n        folder.file(el.key + '.json', JSON.stringify(w, null, 2));\n    }\n}","import React, { useCallback, useState, useContext } from 'react';\nimport { Biome } from './biome/Biome';\nimport { Button } from './../ui/Button';\nimport { MenuItem } from './../ui/Menu';\nimport { Dimension } from './dimension/Dimension';\nimport { DataContext } from './../context/DataContext';\nimport { ConfiguredFeature } from './feature/ConfiguredFeature';\nimport { buildZip } from '../utils/zip';\n\nexport function Datapack() {\n    const context = useContext(DataContext);\n    const custom = context.custom;\n    const namespace = context.namespace;\n    const [menu, setMenu] = useState({page: 'stats'});\n\n    const handleStatsClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'stats'});\n    }, []);\n    const handleAddBiomeClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'biome'});\n    }, []);\n    const handleAddDimensionClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'dimension'});\n    }, []);\n    const handleAddFeatureClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'feature'});\n    }, []);\n\n    const onBiomeSave = useCallback(function(biome) {\n        custom.updateBiomes(biome);\n        setMenu({page: 'stats'});\n    }, [custom]);\n    const onDimensionSave = useCallback(function(dimension) {\n        custom.updateDimensions(dimension);\n        setMenu({page: 'stats'});\n    }, [custom]);\n    const onFeatureSave = useCallback(function(feature) {\n        custom.updateFeatures(feature);\n        setMenu({page: 'stats'});\n    }, [custom]);\n\n    const editBiome = useCallback(function(index) {\n        setMenu({page: 'biome', index});\n    }, []);\n    const editDimension = useCallback(function(index) {\n        setMenu({page: 'dimension', index});\n    }, []);\n    const editFeature = useCallback(function(index) {\n        setMenu({page: 'feature', index});\n    }, []);\n\n    return <div>\n        <h2>Datapack {namespace}</h2>\n        <div className=\"tabs\"><nav className=\"tabs-menu\">\n            <MenuItem onClick={handleStatsClick} active={menu.page === 'stats'}>Stats</MenuItem>\n            <MenuItem onClick={handleAddBiomeClick} active={menu.page === 'biome'}>Biome</MenuItem>\n            <MenuItem onClick={handleAddFeatureClick} active={menu.page === 'feature'}>Feature</MenuItem>\n            <MenuItem onClick={handleAddDimensionClick} active={menu.page === 'dimension'}>Dimension</MenuItem>\n        </nav></div>\n        {menu.page === 'biome' && <Biome onSave={onBiomeSave} data={custom.biomes[menu.index]} />}\n        {menu.page === 'feature' && <ConfiguredFeature onSave={onFeatureSave} data={custom.features[menu.index]} />}\n        {menu.page === 'dimension' && <Dimension onSave={onDimensionSave} data={custom.dimensions[menu.index]} />}\n        {menu.page === 'stats' && <Stats biomes={custom.biomes} dimensions={custom.dimensions} features={custom.features} namespace={namespace} editBiome={editBiome} editDimension={editDimension} editFeature={editFeature} />}\n    </div>\n}\n\nfunction Stats({biomes, dimensions, features, namespace, editBiome, editDimension, editFeature}) {\n\n    const handleBiomeClick = function(e, index) {\n        e.preventDefault();\n        editBiome(index);\n    }\n    const handleDimensionClick = function(e, index) {\n        e.preventDefault();\n        editDimension(index);\n    }\n    const handleFeatureClick = function(e, index) {\n        e.preventDefault();\n        editFeature(index);\n    }\n\n    const handleGenerateClick = function(e) {\n        e.preventDefault();\n        buildZip(namespace, biomes, dimensions, features);\n    }\n\n    return <div className=\"mtm\">\n        <h5><strong>{biomes.length}</strong> custom biomes</h5>\n        <ul>{biomes.map((biome, i) => <li key={i}><a href=\"#edit-biome\" onClick={(e) => handleBiomeClick(e, i)}>{biome.key}</a></li>)}</ul>\n        \n        <h5><strong>{dimensions.length}</strong> custom dimensions</h5>\n        <ul>{dimensions.map((dim, i) => <li key={i}><a href=\"#edit-dimension\" onClick={(e) => handleDimensionClick(e, i)}>{dim.key}</a></li>)}</ul>\n        \n        <h5><strong>{features.length}</strong> configured features</h5>\n        <ul>{features.map((feature, i) => <li key={i}><a href=\"#edit-feature\" onClick={(e) => handleFeatureClick(e, i)}>{feature.key}</a></li>)}</ul>\n\n        {dimensions.length > 0 &&\n            <p><Button onClick={handleGenerateClick}>Generate</Button></p>\n        }\n    </div>\n}","import React from 'react';\nimport { Button } from '../ui/Button';\n\nexport function DatapackForm({onCreate}) {\n\n    const handleCreate = function(e) {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const namespace = data.get('namespace');\n        onCreate(namespace);\n    };\n\n    return <form onSubmit={handleCreate}>\n        <h2>Create a new dimension datapack</h2>\n        <div className=\"form-group\">\n            <label htmlFor=\"namespace\">Namespace</label> : <input type=\"text\" name=\"namespace\" id=\"namespace\" required pattern=\"[a-z0-9._-]+\" className=\"form-control\" aria-describedby=\"namespaceHelp\" />\n            <p><small id=\"namespaceHelp\" className=\"form-text text-muted\">This differentiates the datapack from the vanilla functions. Namespaces and identifiers may only contain letters, numbers and <code>._-</code> characters.</small></p>\n        </div>\n        <Button type=\"submit\">Create</Button>\n        <div className=\"mtl\">\n            <div className=\"alert--warning\">This generator as well as the in-game functionality is unstable. Use this tool with caution.</div>\n        </div>\n    </form>\n}","import React, { useState } from 'react';\nimport './../node_modules/knacss/css/knacss.css';\nimport './App.css';\nimport { Datapack } from './components/Datapack';\nimport { DataContextProvider } from './context/DataContext';\nimport { DatapackForm } from './components/DatapackForm';\n\nfunction App() {\n    const [namespace, setNamespace] = useState(null);\n\n    return <>\n        {namespace !== null ? <DataContextProvider namespace={namespace}><Datapack /></DataContextProvider> : <DatapackForm onCreate={setNamespace} />}\n    </>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}