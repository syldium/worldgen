{"version":3,"sources":["components/biome/BiomeDefaults.js","components/biome/BiomeStarts.jsx","ui/Button.jsx","utils/fetch.js","components/feature/FeatureDefaults.js","components/surface/SurfaceBuilderDefaults.js","context/DataContext.jsx","hooks/context.js","hooks/form.js","hooks/ui.js","components/biome/BiomeSpawners.jsx","components/biome/Features.jsx","utils/color.js","components/biome/BiomeEffects.jsx","components/biome/Biome.jsx","ui/Menu.jsx","components/dimension/DimensionType.jsx","components/dimension/DimensionDefaults.js","utils/data.js","ui/NumberList.jsx","components/dimension/BiomeSource.jsx","components/dimension/DimensionGenerator.jsx","utils/hash.js","components/dimension/Dimension.jsx","components/state/BlockState.jsx","components/feature/TreeFeature.jsx","components/feature/Decorator.jsx","components/feature/RandomPatchFeature.jsx","components/state/BlockPredicate.jsx","components/feature/OreFeature.jsx","components/feature/ConfiguredFeature.jsx","utils/zip.js","components/surface/SurfaceBuilder.jsx","components/Datapack.jsx","components/DatapackForm.jsx","App.js","serviceWorker.js","index.js"],"names":["EFFECTS","mood_sound","sound","tick_delay","block_search_extent","offset","sky_color","fog_color","water_color","water_fog_color","FEATURES","STARTS","SPAWNERS_AMBIENT","type","weight","minCount","maxCount","SPAWNERS_CREATURE","SPAWNERS_MONSTER","BiomeStarts","onChange","starts","useEffect","handleChange","useCallback","selectedOptions","map","option","value","options","useMemo","label","className","htmlFor","isMulti","id","defaultValue","filter","o","includes","Button","loading","cat","buttonProps","jsonFetch","url","a","fetch","headers","Accept","response","json","responseData","ok","VANILLA_FEATURES","TAGS_OPTIONS","tag","DECORATORS_OPTIONS","ORE_FEATURE_CONFIG","target","predicate_type","state","Name","size","DECORATED_ORE_FEATURE_CONFIG","config","feature","decorator","bottom_offset","top_offset","maximum","count","TREE_FEATURE_CONFIG","heightmap","minimum_size","limit","lower_size","upper_size","decorators","trunk_provider","Properties","axis","leaves_provider","persistent","distance","foliage_placer","radius","height","trunk_placer","base_height","height_rand_a","height_rand_b","RANDOM_PATCH_FEATURE_CONFIG","can_replace","project","need_water","xspread","yspread","zspread","whitelist","snowy","blacklist","tries","state_provider","block_placer","DECORATED_RANDOM_PATCH_CONFIG","outer","inner","chance","DECORATED_TREE_CONFIG","extra_chance","extra_count","DECORATOR_EXTRA_COUNT_DEFAULTS","DECORATOR_DECORATED_DEFAULTS","DECORATOR_RANGE_DEFAULTS","VANILLA_SURFACE_BUILDERS","SURFACE_TYPES_OPTIONS","SURFACE_BUILDER","top_material","under_material","underwater_material","DataContext","React","createContext","vanilla","biomes","blocks","entities","features","surfaces","custom","dimensions","updateBiomes","biome","updateDimensions","dimension","updateFeatures","updateSurfacesBuilders","surface_builder","namespace","DataContextProvider","children","initial","useState","setBiomes","setBlocks","setEntities","useData","customBiomes","then","entity","name","displayName","Provider","data","setData","updateData","object","stored","i","findIndex","key","push","useKeyedListOptions","category","context","useContext","keyed","struct","forEach","hasOwnProperty","crudReducer","action","ADD","unshift","payload","UPDATE","element","REMOVE","useCrud","useReducer","useKeyedOptionsState","multiple","Array","isArray","length","selection","setSelection","setSelectionFromOptions","selected","CRUD","useToggle","status","setState","toggle","e","preventDefault","current","BiomeSpawners","ambient","creature","misc","monster","water_ambient","water_creature","spawners","setSpawners","group","groupSpawners","SpawnGroup","visibility","text","dispatch","handleAdd","original","spawner","handleRemove","values","def","SpawnDefinition","onDelete","onClick","memo","definition","setDefinition","field","parseInt","handleCountChange","selectedOption","find","required","min","prev","next","GenFeatures","levels","setLevels","handleLevelChange","priority","list","elements","level","GenFeaturesLevel","integerColorToHex","color","toString","padStart","BiomeEffects","effects","colors","setColors","optional","toggleOption","handleColorChange","replace","handleToggleChange","checked","foliage_color","grass_color","Biome","onSave","handleStartsChange","handleEffectsChange","handleFeaturesChange","handleSpawnersChange","handleSubmit","formData","Object","fromEntries","FormData","spawn_costs","carvers","air","keys","isNaN","parseFloat","onSubmit","pattern","placeholder","BiomeCategory","BiomePrecipitation","precipitation","SurfaceBuilder","step","scale","downfall","depth","temperature","MenuItem","active","href","DimensionType","DIMENSION","generator","seed","biome_source","settings","MULTI_NOISE_BIOME_SOURCE","temperature_noise","firstOctave","amplitudes","humidity_noise","altitude_noise","weirdness_noise","objectsEqual","b","every","p","findDecorators","f","obj","buildDecorated","decorated","dataUpper","refitKeys","build","destKey","source","NumberList","numbers","val","pos","n","NumberInput","number","BiomeSource","setSource","handleSeedChange","handleTypeChange","handleCheckerboardSourceChange","handleFixedSourceChange","handleMultiSourceChange","s","SeedField","CheckerboardBiomeSource","FixedBiomeSource","MultiNoiseBiomeSource","setNumber","useNumber","setScale","isClearable","setBiome","advanced","toggleAdvanced","handleNoiseChange","noise","handleAddClick","parameters","altitude","weirdness","humidity","previous","handleDeleteClick","index","entry","BiomeSelection","biomesOptions","style","alignItems","PerlinNoiseParameters","str","toUpperCase","substr","objects","hasDuplicatedObjects","handleFirstOctaveChange","handleAmplitudesChange","handleBiomeChange","rainfall","handleParameterChange","max","DimensionGenerator","handleSettingsChange","handleBiomeSourceChange","Settings","setText","hash","Math","imul","charCodeAt","hashCode","Dimension","handleGeneratorChange","get","BlockStateProvider","block","provider","setProvider","handleSimpleStateChange","handleWeighestStateChange","entries","BlockState","WeightedStateProvider","states","properties","actual","getStateValue","handlePropertiesChange","BlockStateProperties","BlocksList","setProperties","handlePropertyChange","handleCheckboxChange","handleNumberChange","selects","possible","num_values","TreeFeatureConfig","configuration","setConfig","handleTrunkProviderChange","handleLeavesProviderChange","handleFoliagePlacerChange","handleTrunkPlacerChange","FoliagePlacer","placer","TrunkPlacer","handleValueChange","DecoratorsList","some","d","Decorator","setDecorator","handleSelectChange","handleConfigChange","ChanceDecorator","CountDecorator","ExtraCountDecorator","DecoratedDecorator","RangeDecorator","setChance","handleChanceChange","setCount","configured","RandomPatchFeature","handleStateProviderChange","handleWhitelistChange","handleBlacklistChange","BlockPredicate","predicate","setPredicate","handleBlockChange","handleTagChange","t","OreFeatureConfig","handlePredicateChange","RawConfiguredFeature","default","handleSave","document","getElementById","alert","ConfiguredFeature","deco","configure","setDecorators","handleConfigurationChange","handleDecoratorsChange","handleSaveClick","DIMENSIONS_PATH","WORLDGEN_PATH","LEGACY_PATH_DETECTION","LEGACY_DIMENSIONS_PATH","LEGACY_WORLDGEN_PATH","readZip","file","Promise","resolve","reject","Error","JSZip","loadAsync","zip","mcmeta","promises","path","dir","legacy","match","regex","exec","parseFile","async","all","catch","extractDatapack","getFolderType","folder","pathRegex","filename","contentPromise","success","content","JSON","parse","console","error","message","writeFile","el","w","stringify","handleTopMaterialChange","handleUnderMaterialChange","handleUnderwaterMaterialChange","Datapack","page","menu","setMenu","handleStatsClick","handleAddBiomeClick","handleAddDimensionClick","handleAddFeatureClick","handleAddSurfaceBuilderClick","onBiomeSave","onDimensionSave","onFeatureSave","onSurfaceBuilderSave","editBiome","editDimension","editFeature","editSurface","Stats","mayGenerate","handleBiomeClick","dim","handleDimensionClick","handleFeatureClick","surface","handleSurfaceClick","pack","pack_format","description","generateAsync","saveAs","buildZip","DatapackForm","onCreate","setError","undefined","aria-describedby","accept","files","App","Boolean","window","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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A,YACA,WACA,eACA,SACA,QACA,aACA,YACA,YACA,cACA,YACA,mBACA,cACA,sBACA,eACA,cACA,SACA,qBACA,cACA,eACA,gBACA,uBACA,cACA,eACA,WACA,aACA,YACA,WACA,eACA,aACA,kBACA,uBACA,qBACA,sBACA,kBACA,gBACA,oBACA,mBACA,oBACA,qBACA,uBACA,sBACA,qBACA,oBACA,sBACA,qBACA,kBACA,oBACA,2BACA,cACA,qBACA,wBACA,mBACA,mBACA,qBACA,mBACA,eACA,sBACA,yBACA,yBACA,0BACA,4BACA,mBACA,wBACA,sBACA,wBACA,sBACA,uBACA,qBACA,uBACA,qBACA,uBACA,qBACA,YACA,gBACA,kBACA,oBACA,kBACA,oBACA,oBACA,iBACA,WACA,aACA,cACA,cACA,eACA,WACA,WACA,iBACA,WACA,eACA,cACA,YACA,eACA,cACA,mBACA,mBACA,gBACA,wBACA,eACA,uBACA,sBACA,oBACA,MACA,WACA,QACA,SACA,SACA,OACA,cACA,YACA,sBACA,mBACA,cACA,YACA,aACA,cACA,eACA,eACA,cACA,iBACA,gBACA,eACA,eACA,yBACA,kCACA,2BACA,+BACA,6BACA,wBACA,sBACA,mBACA,0BACA,gBACA,aACA,sBACA,iBACA,cACA,cACA,mBACA,oBACA,qBACA,cACA,eACA,oBACA,6BAGSC,EAAe,CACxB,cACA,QACA,sBACA,UACA,oBACA,uBACA,qBACA,OACA,WACA,gBACA,aACA,UACA,YACA,UACA,YACA,SACA,eACA,eACA,gBACA,QACA,gBACA,QACA,gBACA,oBACA,cACA,SACA,OACA,UACA,cACA,YACA,qBACA,oBACA,MACA,cACA,iBACA,oBACA,uBACA,cACA,SACA,OACA,iBACA,4BACA,qBACA,WACA,oBACA,SACA,UACA,kBACA,8BACA,QACA,OACA,WACA,gBACA,QACA,QACA,gBACA,wBACA,oBACA,cACA,SACA,iBACA,eACA,wBACA,sBACA,eACA,YACA,uBACA,yBACA,cACA,QACA,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","file":"static/js/main.95aaa261.chunk.js","sourcesContent":["export const EFFECTS = {\n    mood_sound: {\n        sound: \"minecraft:ambient.cave\",\n        tick_delay: 6000,\n        block_search_extent: 8,\n        offset: 2.0\n    },\n    sky_color: 7907327,\n    fog_color: 12638463,\n    water_color: 4159204,\n    water_fog_color: 329011\n}\n\nexport const FEATURES = [\n    [],\n    [\n      \"minecraft:lake_water\",\n      \"minecraft:lake_lava\"\n    ],\n    [],\n    [\n      \"minecraft:monster_room\"\n    ],\n    [],\n    [],\n    [\n      \"minecraft:ore_dirt\",\n      \"minecraft:ore_gravel\",\n      \"minecraft:ore_granite\",\n      \"minecraft:ore_diorite\",\n      \"minecraft:ore_andesite\",\n      \"minecraft:ore_coal\",\n      \"minecraft:ore_iron\",\n      \"minecraft:ore_gold\",\n      \"minecraft:ore_redstone\",\n      \"minecraft:ore_diamond\",\n      \"minecraft:ore_lapis\",\n      \"minecraft:disk_sand\",\n      \"minecraft:disk_clay\",\n      \"minecraft:disk_gravel\"\n    ],\n    [],\n    [\n      \"minecraft:patch_tall_grass_2\",\n      \"minecraft:plain_vegetation\",\n      \"minecraft:flower_plain_decorated\",\n      \"minecraft:patch_grass_plain\",\n      \"minecraft:brown_mushroom_normal\",\n      \"minecraft:red_mushroom_normal\",\n      \"minecraft:patch_sugar_cane\",\n      \"minecraft:patch_pumpkin\",\n      \"minecraft:spring_water\",\n      \"minecraft:spring_lava\"\n    ],\n    [\n      \"minecraft:freeze_top_layer\"\n    ]\n]\n\nexport const STARTS = [\n    \"minecraft:village_plains\",\n    \"minecraft:pillager_outpost\",\n    \"minecraft:mineshaft\",\n    \"minecraft:stronghold\",\n    \"minecraft:ruined_portal\"\n]\n\nexport const SPAWNERS_AMBIENT = [\n    {\n        type: \"minecraft:bat\",\n        weight: 10,\n        minCount: 8,\n        maxCount: 8\n    }\n];\n\nexport const SPAWNERS_CREATURE = [\n    {\n        type: \"minecraft:sheep\",\n        weight: 12,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:pig\",\n        weight: 10,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:chicken\",\n        weight: 10,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:cow\",\n        weight: 8,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:horse\",\n        weight: 5,\n        minCount: 2,\n        maxCount: 6\n    },\n    {\n        type: \"minecraft:donkey\",\n        weight: 1,\n        minCount: 1,\n        maxCount: 3\n    }\n];\n\nexport const SPAWNERS_MONSTER = [\n    {\n        type: \"minecraft:spider\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:zombie\",\n        weight: 95,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:zombie_villager\",\n        weight: 5,\n        minCount: 1,\n        maxCount: 1\n    },\n    {\n        type: \"minecraft:skeleton\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:creeper\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:slime\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:enderman\",\n        weight: 10,\n        minCount: 1,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:witch\",\n        weight: 5,\n        minCount: 1,\n        maxCount: 1\n    },\n];","import React, { useCallback, useMemo, useEffect } from 'react';\nimport Select from 'react-select';\nimport { STARTS } from './BiomeDefaults';\n\nexport default function BiomeStarts({onChange, starts = STARTS}) {\n    useEffect(function () {\n        onChange(starts);\n    }, [onChange, starts]);\n\n    const handleChange = useCallback(function(selectedOptions) {\n        onChange(selectedOptions === null ? [] : selectedOptions.map(option => option.value));\n    }, [onChange]);\n\n    const options = useMemo(function() {\n        return [\n            \"pillager_outpost\",\n            \"mineshaft\",\n            \"mineshaft_mesa\",\n            \"mansion\",\n            \"jungle_pyramid\",\n            \"desert_pyramid\",\n            \"igloo\",\n            \"shipwreck\",\n            \"shipwreck_beached\",\n            \"swamp_hut\",\n            \"stronghold\",\n            \"monument\",\n            \"ocean_ruin_cold\",\n            \"ocean_ruin_warm\",\n            \"fortress\",\n            \"nether_fossil\",\n            \"end_city\",\n            \"buried_treasure\",\n            \"bastion_remnant\",\n            \"village_plains\",\n            \"village_desert\",\n            \"village_savanna\",\n            \"village_snovy\",\n            \"village_taiga\",\n            \"ruined_portal\",\n            \"ruined_portal_desert\",\n            \"ruined_portal_jungle\",\n            \"ruined_portal_swamp\",\n            \"ruined_portal_mountain\",\n            \"ruined_portal_ocean\",\n            \"ruined_portal_nether\"\n        ].map(option => ({ value: 'minecraft:' + option, label: 'minecraft:' + option }));\n    }, []);\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"starts\">Structures</label>\n        <Select isMulti id=\"starts\" options={options} onChange={handleChange} defaultValue={options.filter(o => starts.includes(o.value))} />\n    </div>;\n}","import React from 'react';\n\nexport function Button ({loading, cat = 'primary', ...buttonProps}) {\n    return <button className={`btn btn--${cat}`} {...buttonProps}></button>\n}\n","/**\n * @param {string} url\n * @param {object} options\n */\nexport async function jsonFetch(url, options) {\n    const response = await fetch(url, {\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        ...options\n    });\n\n    const responseData = await response.json();\n    if (response.ok) {\n        return responseData;\n    }\n    throw responseData;\n}","export const VANILLA_FEATURES = [\n    \"nope\",\n    \"end_spike\",\n    \"end_gateway\",\n    \"end_gateway_delayed\",\n    \"chorus_plant\",\n    \"end_island\",\n    \"end_island_decorated\",\n    \"delta\",\n    \"small_basalt_columns\",\n    \"large_basalt_columns\",\n    \"basalt_blobs\",\n    \"blackstone_blobs\",\n    \"glowstone_extra\",\n    \"glowstone\",\n    \"crimson_forest_vegetation\",\n    \"warped_forest_vegetation\",\n    \"nether_sprouts\",\n    \"twisting_vines\",\n    \"weeping_vines\",\n    \"basalt_pillar\",\n    \"seagrass_cold\",\n    \"seagrass_deep_cold\",\n    \"seagrass_normal\",\n    \"seagrass_river\",\n    \"seagrass_deep\",\n    \"seagrass_swamp\",\n    \"seagrass_warm\",\n    \"seagrass_deep_warm\",\n    \"sea_pickle\",\n    \"ice_spike\",\n    \"ice_patch\",\n    \"forest_rock\",\n    \"seagrass_simple\",\n    \"iceberg_packed\",\n    \"iceberg_blue\",\n    \"kelp_cold\",\n    \"kelp_warm\",\n    \"blue_ice\",\n    \"bamboo_light\",\n    \"bamboo\",\n    \"vines\",\n    \"lake_water\",\n    \"lake_lava\",\n    \"disk_clay\",\n    \"disk_gravel\",\n    \"disk_sand\",\n    \"freeze_top_layer\",\n    \"bonus_chest\",\n    \"void_start_platform\",\n    \"monster_room\",\n    \"desert_well\",\n    \"fossil\",\n    \"spring_lava_double\",\n    \"spring_lava\",\n    \"spring_delta\",\n    \"spring_closed\",\n    \"spring_closed_double\",\n    \"spring_open\",\n    \"spring_water\",\n    \"pile_hay\",\n    \"pile_melon\",\n    \"pile_snow\",\n    \"pile_ice\",\n    \"pile_pumpkin\",\n    \"patch_fire\",\n    \"patch_soul_fire\",\n    \"patch_brown_mushroom\",\n    \"patch_red_mushroom\",\n    \"patch_crimson_roots\",\n    \"patch_sunflower\",\n    \"patch_pumpkin\",\n    \"patch_taiga_grass\",\n    \"patch_berry_bush\",\n    \"patch_grass_plain\",\n    \"patch_grass_forest\",\n    \"patch_grass_badlands\",\n    \"patch_grass_savanna\",\n    \"patch_grass_normal\",\n    \"patch_grass_taiga\",\n    \"patch_grass_taiga_2\",\n    \"patch_grass_jungle\",\n    \"patch_dead_bush\",\n    \"patch_dead_bush_2\",\n    \"patch_dead_bush_badlands\",\n    \"patch_melon\",\n    \"patch_berry_sparse\",\n    \"patch_berry_decorated\",\n    \"patch_waterlilly\",\n    \"patch_tall_grass\",\n    \"patch_tall_grass_2\",\n    \"patch_large_fern\",\n    \"patch_cactus\",\n    \"patch_cactus_desert\",\n    \"patch_cactus_decorated\",\n    \"patch_sugar_cane_swamp\",\n    \"patch_sugar_cane_desert\",\n    \"patch_sugar_cane_badlands\",\n    \"patch_sugar_cane\",\n    \"brown_mushroom_nether\",\n    \"red_mushroom_nether\",\n    \"brown_mushroom_normal\",\n    \"red_mushroom_normal\",\n    \"brown_mushroom_taiga\",\n    \"red_mushroom_taiga\",\n    \"brown_mushroom_giant\",\n    \"red_mushroom_giant\",\n    \"brown_mushroom_swamp\",\n    \"red_mushroom_swamp\",\n    \"ore_magma\",\n    \"ore_soul_sand\",\n    \"ore_gold_deltas\",\n    \"ore_quartz_deltas\",\n    \"ore_gold_nether\",\n    \"ore_quartz_nether\",\n    \"ore_gravel_nether\",\n    \"ore_blackstone\",\n    \"ore_dirt\",\n    \"ore_gravel\",\n    \"ore_granite\",\n    \"ore_diorite\",\n    \"ore_andesite\",\n    \"ore_coal\",\n    \"ore_iron\",\n    \"ore_gold_extra\",\n    \"ore_gold\",\n    \"ore_redstone\",\n    \"ore_diamond\",\n    \"ore_lapis\",\n    \"ore_infested\",\n    \"ore_emerald\",\n    \"ore_debris_large\",\n    \"ore_debris_small\",\n    \"crimson_fungi\",\n    \"crimson_fungi_planted\",\n    \"warped_fungi\",\n    \"warped_fungi_planted\",\n    \"huge_brown_mushroom\",\n    \"huge_red_mushroom\",\n    \"oak\",\n    \"dark_oak\",\n    \"birch\",\n    \"acacia\",\n    \"spruce\",\n    \"pine\",\n    \"jungle_tree\",\n    \"fancy_oak\",\n    \"jungle_tree_no_vine\",\n    \"mega_jungle_tree\",\n    \"mega_spruce\",\n    \"mega_pine\",\n    \"swamp_tree\",\n    \"jungle_bush\",\n    \"oak_badlands\",\n    \"spruce_snovy\",\n    \"flower_warm\",\n    \"flower_default\",\n    \"flower_forest\",\n    \"flower_swamp\",\n    \"flower_plain\",\n    \"flower_plain_decorated\",\n    \"forest_flower_vegetation_common\",\n    \"forest_flower_vegetation\",\n    \"dark_forest_vegetation_brown\",\n    \"dark_forest_vegetation_red\",\n    \"warm_ocean_vegetation\",\n    \"forest_flower_trees\",\n    \"taiga_vegetation\",\n    \"trees_shattered_savanna\",\n    \"trees_savanna\",\n    \"birch_tall\",\n    \"trees_mountain_edge\",\n    \"trees_mountain\",\n    \"trees_water\",\n    \"birch_other\",\n    \"plain_vegetation\",\n    \"trees_jungle_edge\",\n    \"trees_giant_spruce\",\n    \"trees_giant\",\n    \"trees_jungle\",\n    \"bamboo_vegetation\",\n    \"mushroom_field_vegetation\"\n];\n\nexport const TAGS_OPTIONS = [\n    'acacia_logs',\n    'anvil',\n    'bamboo_plantable_on',\n    'banners',\n    'base_stone_nether',\n    'base_stone_overworld',\n    'beacon_base_blocks',\n    'beds',\n    'beehives',\n    'bee_growables',\n    'birch_logs',\n    'buttons',\n    'campfires',\n    'carpets',\n    'climbable',\n    'corals',\n    'coral_blocks',\n    'coral_plants',\n    'crimson_stems',\n    'crops',\n    'dark_oak_logs',\n    'doors',\n    'dragon_immune',\n    'enderman_holdable',\n    'fence_gates',\n    'fences',\n    'fire',\n    'flowers',\n    'flower_pots',\n    'gold_ores',\n    'guarded_by_piglins',\n    'hoglin_repellents',\n    'ice',\n    'impermeable',\n    'infiniburn_end',\n    'infiniburn_nether',\n    'infiniburn_overworld',\n    'jungle_logs',\n    'leaves',\n    'logs',\n    'logs_that_burn',\n    'mushroom_grow_block‌',\n    'non_flammable_wood',\n    'oak_logs',\n    'piglin_repellents',\n    'planks',\n    'portals',\n    'pressure_plates',\n    'prevent_mob_spawning_inside',\n    'rails',\n    'sand',\n    'saplings',\n    'shulker_boxes',\n    'signs',\n    'slabs',\n    'small_flowers',\n    'soul_fire_base_blocks',\n    'soul_speed_blocks',\n    'spruce_logs',\n    'stairs',\n    'standing_signs',\n    'stone_bricks',\n    'stone_pressure_plates',\n    'strider_warm_blocks',\n    'tall_flowers',\n    'trapdoors',\n    'underwater_bonemeals',\n    'unstable_bottom_center',\n    'valid_spawn',\n    'walls',\n    'wall_corals',\n    'wall_post_override',\n    'wall_signs',\n    'warped_stems',\n    'wart_blocks',\n    'wither_immune',\n    'wither_summon_base_blocks',\n    'wooden_buttons',\n    'wooden_doors',\n    'wooden_fences',\n    'wooden_pressure_plates',\n    'wooden_slabs',\n    'wooden_stairs',\n    'wooden_trapdoors',\n    'wool'\n].map(tag => ({ value: 'minecraft:' + tag, label: tag }));\n\nexport const DECORATORS_OPTIONS = [\n    { value: 'chance', label: 'Chance' },\n    { value: 'count', label: 'Count' },\n    { value: 'count_extra', label: 'Count extra' },\n    { value: 'count_multilayer', label: 'Count multi layer' },\n    { value: 'decorated', label: 'Decorated' },\n    { value: 'fire', label: 'Fire' },\n    { value: 'range', label: 'Range' },\n    { value: 'range_very_biased', label: 'Range very biased' },\n    { value: 'square', label: 'Square' }\n].map(o => {\n    o.value = 'minecraft:' + o.value;\n    return o;\n});\n\nexport const ORE_FEATURE_CONFIG = {\n    target: {\n        tag: \"minecraft:base_stone_overworld\",\n        predicate_type: \"minecraft:tag_match\"\n    },\n    state: {\n        Name: \"minecraft:gold_ore\"\n    },\n    size: 30\n};\n\nexport const DECORATED_ORE_FEATURE_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        feature: {\n                            config: ORE_FEATURE_CONFIG,\n                            type: \"minecraft:ore\"\n                        },\n                        decorator: {\n                            config: {\n                                bottom_offset: 0,\n                                top_offset: 0,\n                                maximum: 32\n                            },\n                            type: \"minecraft:range\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                },\n                decorator: {\n                    config: {},\n                    type: \"minecraft:square\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 2\n            },\n            type: \"minecraft:count\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const TREE_FEATURE_CONFIG = {\n    heightmap: \"OCEAN_FLOOR\",\n    minimum_size: {\n        limit: 1,\n        lower_size: 0,\n        upper_size: 1,\n        type: \"minecraft:two_layers_feature_size\"\n    },\n    decorators: [],\n    trunk_provider: {\n        state: {\n            Properties: {\n                axis: \"y\"\n            },\n            Name: \"minecraft:birch_log\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    leaves_provider: {\n        state: {\n            Properties: {\n                persistent: \"false\",\n                distance: \"7\"\n            },\n            Name: \"minecraft:birch_leaves\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    foliage_placer: {\n        radius: 2,\n        offset: 0,\n        height: 3,\n        type: \"minecraft:blob_foliage_placer\"\n    },\n    trunk_placer: {\n        base_height: 5,\n        height_rand_a: 2,\n        height_rand_b: 0,\n        type: \"minecraft:straight_trunk_placer\"\n    }\n};\n\nexport const RANDOM_PATCH_FEATURE_CONFIG = {\n    can_replace: false,\n    project: false,\n    need_water: false,\n    xspread: 7,\n    yspread: 3,\n    zspread: 7,\n    whitelist: [\n        {\n            Properties: {\n                snowy: \"false\"\n            },\n            Name: \"minecraft:grass_block\"\n        }\n    ],\n    blacklist: [],\n    tries: 64,\n    state_provider: {\n        state: {\n            Name: \"minecraft:pumpkin\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    block_placer: {\n        type: \"minecraft:simple_block_placer\"\n    }\n}\n\nexport const DECORATED_RANDOM_PATCH_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: RANDOM_PATCH_FEATURE_CONFIG,\n                    type: \"minecraft:random_patch\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:heightmap_spread_double\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                chance: 32\n            },\n            type: \"minecraft:chance\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_TREE_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: TREE_FEATURE_CONFIG,\n                    type: \"minecraft:tree\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:heightmap\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 10,\n                extra_chance: 0.1,\n                extra_count: 1\n            },\n            type: \"minecraft:count_extra\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATOR_EXTRA_COUNT_DEFAULTS = {\n    count: 10,\n    extra_chance: 0.1,\n    extra_count: 1\n}\n\nexport const DECORATOR_DECORATED_DEFAULTS = {\n    outer: {\n        config: {},\n        type: \"minecraft:square\"\n    },\n    inner: {\n        config: {},\n        type: \"minecraft:heightmap\"\n    }\n}\n\nexport const DECORATOR_RANGE_DEFAULTS = {\n    bottom_offset: 4,\n    top_offset: 0,\n    maximum: 64\n}\n","export const VANILLA_SURFACE_BUILDERS = [\n    { value: 'badlands', label: 'Badlands' },\n    { value: 'basalt_deltas', label: 'Basalt Deltas' },\n    { value: 'crimson_forest', label: 'Crimson forest' },\n    { value: 'deset', label: 'Desert' },\n    { value: 'end', label: 'End' },\n    { value: 'eroded_badlands', label: 'Eroded Badlands' },\n    { value: 'frozen_ocean', label: 'Frozen ocean' },\n    { value: 'full_sand', label: 'Full sand' },\n    { value: 'giant_tree_taiga', label: 'Giant tree taiga' },\n    { value: 'grass', label: 'Grass' },\n    { value: 'gravelly_mountain', label: 'Gravelly mountain' },\n    { value: 'ice_spikes', label: 'Ice spikes' },\n    { value: 'mountain', label: 'Mountain' },\n    { value: 'mycelium', label: 'Mycelium' },\n    { value: 'nether', label: 'Nether' },\n    { value: 'nope', label: 'Nope' },\n    { value: 'ocean_sand', label: 'Ocean sand' },\n    { value: 'shattered_savanna', label: 'Shattered savanna' },\n    { value: 'soul_sand_valley', label: 'Soul sand valley' },\n    { value: 'stone', label: 'Stone' },\n    { value: 'swamp', label: 'Swamp' },\n    { value: 'warped_forest', label: 'Warped forest' },\n    { value: 'wooded_badlands', label: 'Wooded badlands' },\n].map(option => {\n    option.value = 'minecraft:' + option.value;\n    return option;\n});\n\nexport const SURFACE_TYPES_OPTIONS = [\n    { value: 'default', label: 'Default' },\n    { value: 'mountain', label: 'Mountain' },\n    { value: 'shattered_savanna', label: 'Shattered savanna' },\n    { value: 'gravelly_mountain', label: 'Gravelly mountain' },\n    { value: 'giant_tree_taiga', label: 'Giant tree taiga' },\n    { value: 'swamp', label: 'Swamp' },\n    { value: 'badlands', label: 'Badlands' },\n    { value: 'wooded_badlands', label: 'Wooded badlands' },\n    { value: 'eroded_badlands', label: 'Eroded badlands' },\n    { value: 'frozen_ocean', label: 'Frozen ocean' },\n    { value: 'nether', label: 'Nether' },\n    { value: 'nether_forest', label: 'Nether forest' },\n    { value: 'soul_sand_valley', label: 'Soul sand valley' },\n    { value: 'basalt_deltas', label: 'Basalt deltas' },\n    { value: 'nope', label: 'Nope' }\n].map(option => {\n    option.value = 'minecraft:' + option.value;\n    return option;\n});\n\nexport const SURFACE_BUILDER = {\n    config: {\n        top_material: {\n            Properties: {\n                snowy: \"false\"\n            },\n            Name: \"minecraft:grass_block\"\n        },\n        under_material: {\n            Name: \"minecraft:dirt\"\n        },\n        underwater_material: {\n            Name: \"minecraft:gravel\"\n        }\n    },\n    type: \"minecraft:default\"\n}","import React, { useState, useEffect } from 'react';\nimport { jsonFetch } from '../utils/fetch';\nimport { VANILLA_FEATURES } from '../components/feature/FeatureDefaults';\nimport { useData } from '../hooks/context';\nimport { VANILLA_SURFACE_BUILDERS } from '../components/surface/SurfaceBuilderDefaults';\n\nexport const DataContext = React.createContext({\n    vanilla: {\n        biomes: [],\n        blocks: [],\n        entities: [],\n        features: [],\n        surfaces: []\n    },\n    custom: {\n        biomes: [],\n        dimensions: [],\n        features: [],\n        surfaces: [],\n        updateBiomes: (biome) => {},\n        updateDimensions: (dimension) => {},\n        updateFeatures: (feature) => {},\n        updateSurfacesBuilders: (surface_builder) => {}\n    },\n    namespace: ''\n});\n\nexport function DataContextProvider({children, namespace, initial = {}}) {\n    const [biomes, setBiomes] = useState([]);\n    const [blocks, setBlocks] = useState([]);\n    const [entities, setEntities] = useState([]);\n\n    const [customBiomes, updateBiomes] = useData(initial.biomes);\n    const [dimensions, updateDimensions] = useData(initial.dimensions);\n    const [features, updateFeatures] = useData(initial.features);\n    const [surfaces, updateSurfacesBuilders] = useData(initial.surfaces);\n\n    useEffect(() => {\n        (async function () {\n            jsonFetch('https://unpkg.com/minecraft-data@2.62.1/minecraft-data/data/pc/1.16.1/biomes.json')\n                .then(biomes => setBiomes(biomes));\n            jsonFetch('https://unpkg.com/minecraft-data@2.62.1/minecraft-data/data/pc/1.16.1/blocks.json')\n                .then(blocks => setBlocks(blocks));\n            jsonFetch('https://unpkg.com/minecraft-data@2.62.1/minecraft-data/data/pc/1.16.1/entities.json')\n                .then(entities => setEntities(entities.map(entity => ({ value: 'minecraft:' + entity.name, label: entity.displayName }))));\n        })();\n    }, []);\n\n    return <DataContext.Provider value={{\n        vanilla: { biomes, blocks, entities, features: VANILLA_FEATURES, surfaces: VANILLA_SURFACE_BUILDERS },\n        custom: { biomes: customBiomes, dimensions, features, surfaces, updateBiomes, updateDimensions, updateFeatures, updateSurfacesBuilders },\n        namespace\n    }}>{children}</DataContext.Provider>\n}","import { useState, useContext, useMemo } from \"react\";\nimport { DataContext } from \"../context/DataContext\";\n\n/**\n * @param {object[]} initial\n * @returns {[object[], function(object): void]} \n */\nexport function useData(initial = []) {\n    const [data, setData] = useState(initial);\n    const updateData = function(object) {\n        setData(stored => {\n            const i = stored.findIndex(({key}) => key === object.key);\n            if (i < 0) {\n                stored.push(object);\n            } else {\n                stored[i] = object;\n            }\n            return stored;\n        });\n    }\n    return [data, updateData];\n}\n\n/**\n * @param {('biomes'|'blocks'|'features'|'surfaces')} category Data category\n * @returns {{ value: string, label: string }[]} Options list for react-select\n */\nexport function useKeyedListOptions(category) {\n    const context = useContext(DataContext);\n    return useMemo(function() {\n        const options = context.custom[category]\n            .map(keyed => ({ value: context.namespace + ':' + keyed.key, label: '(Custom) ' + keyed.key }));\n\n        let struct = null;\n        context.vanilla[category].forEach(keyed => {\n            if (struct === null) {\n                struct = keyed.hasOwnProperty('displayName') ? 1 : (keyed.hasOwnProperty('label') ? 2 : 3);\n            }\n            switch(struct) {\n                case 1: // displayName\n                    options.push({ value: 'minecraft:' + keyed.name, label: keyed.displayName });\n                    return;\n                case 2: // already option\n                    options.push(keyed);\n                    return;\n                default:\n                    options.push({ value: 'minecraft:' + keyed, label: keyed });\n            }\n        });\n        return options;\n    }, [category, context.custom, context.namespace, context.vanilla]);\n}","import { useReducer, useState, useCallback } from \"react\";\nimport { useKeyedListOptions } from \"./context\";\n\nfunction crudReducer(state, action) {\n    switch (action.type) {\n        case ADD:\n            if (action.unshift) {\n                return [action.payload, ...state];\n            }\n            return [...state, action.payload];\n        case UPDATE:\n          return state.map(element => element === action.target ? action.payload : element);\n        case REMOVE:\n          return state.filter(element => element !== action.payload);\n        default:\n          return state;\n    }\n}\n\nexport function useCrud(data = []) {\n    return useReducer(crudReducer, data);\n}\n\n/**\n * @param {number} [initial] \n * @returns {function(SyntheticEvent|string|number): void} \n */\nexport function useNumber(initial = 0) {\n    const [n, setState] = useState(initial);\n    const setNumber = function(n) {\n        if (typeof n === 'object') {\n            n = n.target.value;\n        }\n        if (typeof n === 'string') {\n            n = isNaN(n) ? initial : parseInt(n);\n        }\n        setState(n);\n    }\n    return [n, setNumber];\n}\n\n/**\n * Fast way to provide a list of options for react-select\n * and store selection as string (list).\n * \n * @param {('biomes'|'blocks'|'features'|'surfaces')} category Data category\n * @param {string|string[]} initial Initial selection\n * @param {boolean} [multiple]\n * @returns {[{ value: string, label: string }[], string|string[], function({ value: string }): void]} Options list, currently selected list and his updater\n */\nexport function useKeyedOptionsState(category, initial, multiple) {\n    const options = useKeyedListOptions(category); // Get options\n\n    // Default value for 'multiple' argument\n    if (typeof multiple === 'undefined') {\n        multiple = Array.isArray(initial);\n    }\n\n    // Enhanced use state - usage of options for default value if needed\n    const [selection, setSelection] = useState(initial || function() {\n        if (multiple) {\n            return options.length > 0 ? [options[0].value] : [];\n        }\n        return options.length > 0 ? options[0].value : '';\n    }());\n\n    // End chain react-select change handler\n    const setSelectionFromOptions = useCallback(function(selected) {\n        if (multiple) {\n            setSelection(selected === null ? [] : selected.map(o => o.value));\n        } else {\n            setSelection(selected.value);\n        }\n    }, [multiple]);\n\n    return [options, selection, setSelectionFromOptions];\n}\n\nconst ADD = 'ADD';\nconst UPDATE = 'UPDATE';\nconst REMOVE = 'REMOVE';\nexport const CRUD = { ADD, UPDATE, REMOVE };","import { useState } from \"react\";\n\n/**\n * @param {boolean} initial \n * @returns {[boolean, function(): void]}\n */\nexport function useToggle(initial = false) {\n    const [status, setState] = useState(initial);\n    const toggle = function (e = null) {\n        if (typeof e === 'boolean') {\n            setState(e);\n            return;\n        }\n        if (e !== null) {\n            e.preventDefault();\n        }\n        setState(current => !current);\n    }\n    return [status, toggle];\n}","import React, { useContext, useEffect, useMemo, useState, useCallback } from 'react';\nimport Select from 'react-select';\nimport { CRUD, useCrud } from \"../../hooks/form\";\nimport { useToggle } from '../../hooks/ui';\nimport { Button } from '../../ui/Button';\nimport { DataContext } from '../../context/DataContext';\nimport { SPAWNERS_AMBIENT, SPAWNERS_CREATURE, SPAWNERS_MONSTER } from './BiomeDefaults';\n\nexport function BiomeSpawners({onChange, data = { ambient: SPAWNERS_AMBIENT, creature: SPAWNERS_CREATURE, misc: [], monster: SPAWNERS_MONSTER, water_ambient: [], water_creature: [] }}) {\n\n    const entities = useContext(DataContext).vanilla.entities;\n    const [spawners, setSpawners] = useState(data);\n\n    const handleChange = useCallback(function(group, groupSpawners) {\n        setSpawners(function(spawners) {\n            const state = {\n                ...spawners,\n                [group]: groupSpawners\n            };\n            onChange(state);\n            return state;\n        });\n    }, [onChange]);\n\n    return <div>\n        <SpawnGroup group=\"ambient\" data={spawners.ambient} onChange={handleChange} entities={entities}>Ambient</SpawnGroup>\n        <SpawnGroup group=\"creature\" data={spawners.creature} onChange={handleChange} entities={entities}>Creature</SpawnGroup>\n        <SpawnGroup group=\"misc\" data={spawners.misc} onChange={handleChange} entities={entities}>Miscellaneous</SpawnGroup>\n        <SpawnGroup group=\"monster\" data={spawners.monster} onChange={handleChange} entities={entities}>Monster</SpawnGroup>\n        <SpawnGroup group=\"water_ambient\" data={spawners.water_ambient} onChange={handleChange} entities={entities}>Water ambient</SpawnGroup>\n        <SpawnGroup group=\"water_creature\" data={spawners.water_creature} onChange={handleChange} entities={entities}>Water creature</SpawnGroup>\n    </div>;\n}\n\nfunction SpawnGroup({children, entities, data = [], group, onChange}) {\n    const [visibility, toggle] = useToggle();\n    const text = visibility ? 'Less...' : 'More...';\n\n    const [spawners, dispatch] = useCrud(data);\n\n    const handleAdd = useCallback(function(e) {\n        e.preventDefault();\n        dispatch({ type: CRUD.ADD, payload: {\n            type: 'minecraft:cow',\n            weight: 1,\n            minCount: 1,\n            maxCount: 1,\n        }});\n        if (!visibility) {\n            toggle();\n        }\n    }, [dispatch, toggle, visibility]);\n\n    const handleChange = useCallback(function(original, spawner) {\n        dispatch({ type: CRUD.UPDATE, target: original, payload: spawner });\n    }, [dispatch]);\n\n    const handleRemove = useCallback(function(spawner) {\n        dispatch({ type: CRUD.REMOVE, payload: spawner });\n    }, [dispatch]);\n\n    useEffect(function() {\n        onChange(group, spawners);\n    }, [group, onChange, spawners]);\n\n    const values = [];\n    if (visibility) {\n        spawners.forEach((def, i) => {\n            const key = `${i}-${def.type}-${def.weight}-${def.minCount}-${def.maxCount}`;\n            values.push(<SpawnDefinition data={def} key={key} onChange={handleChange} onDelete={handleRemove} entities={entities} />);\n        });\n        return <div>\n            <div className=\"toggle-label\">\n                {children} \n                <div className=\"btn-group\">\n                    <Button onClick={handleAdd}>Add</Button>\n                    {spawners.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{text}</Button>} \n                </div>\n            </div>\n            {values}\n        </div>;\n    }\n    \n    return <div className=\"toggle-label\">\n        {children}\n        <div className=\"btn-group\">\n            {spawners.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{text}</Button>}\n            {(spawners.length < 1) && <Button onClick={handleAdd}>Add</Button>}\n        </div>\n    </div>;\n}\n\nconst SpawnDefinition = React.memo(function({entities, onChange, onDelete, data}) {\n\n    const [definition, setDefinition] = useState(data);\n\n    const handleChange = function(e) {\n        const field = typeof e.target === 'undefined' ? 'type' : e.target.id;\n        const value = typeof e.target === 'undefined' ? e.value : parseInt(e.target.value);\n        setDefinition(definition => ({\n            ...definition,\n            [field]: value\n        }));\n        onChange(data, {...data, [field]: value});\n    };\n\n    const handleCountChange = function(e) {\n        const value = parseInt(e.target.value);\n        if ((e.target.id === 'minCount' && value <= definition.maxCount)\n            || (e.target.id === 'maxCount' && value >= definition.minCount)) {\n            setDefinition(definition => ({\n                ...definition,\n                [e.target.id]: value\n            }));\n            onChange(data, {...data, [e.target.id]: value});\n        } \n    };\n\n    const handleDelete = function(e) {\n        e.preventDefault();\n        onDelete(data);\n    };\n\n    const selectedOption = useMemo(function() {\n        return entities.find(o => o.value === definition.type);\n    }, [definition.type, entities]);\n\n    return <div>\n        <div className=\"form-group\">\n            <label>Mob type</label> : <Select options={entities} value={selectedOption} onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <div className=\"form-inline\">\n                <label htmlFor=\"weight\">Weight</label> : <input type=\"number\" id=\"weight\" required value={definition.weight} onChange={handleChange} />\n            </div>\n            <div className=\"form-inline\">\n                <label htmlFor=\"minCount\">Min count</label> : <input type=\"number\" id=\"minCount\" min=\"0\" required value={definition.minCount} onChange={handleCountChange} />\n            </div>\n            <div className=\"form-inline\">\n                <label htmlFor=\"maxCount\">Max count</label> : <input type=\"number\" id=\"maxCount\" min=\"0\" required value={definition.maxCount} onChange={handleCountChange} />\n            </div>\n            <div className=\"form-inline\"><Button cat=\"danger\" onClick={handleDelete}>Delete</Button></div>\n        </div>\n        <hr /> \n    </div>\n}, function(prev, next) {\n    return prev.entities.length === next.entities.length && prev.data === next.data;\n});","import React, { useCallback, useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport { FEATURES } from './BiomeDefaults';\nimport { useKeyedListOptions } from '../../hooks/context';\n\nexport default function GenFeatures({ onChange, features = FEATURES }) {\n\n    const [levels, setLevels] = useState(features);\n\n    const handleLevelChange = useCallback(function(priority, list) {\n        setLevels(levels => {\n            levels[priority] = list;\n            return levels;\n        })\n        onChange(levels);\n    }, [levels, onChange]);\n\n    useEffect(function() {\n        onChange(levels);\n    }, [levels, onChange]);\n\n    const elements = [];\n    levels.forEach((level, i) => {\n        elements.push(<li key={i}><GenFeaturesLevel value={level} onChange={handleLevelChange} priority={i} /></li>);\n    });\n    return <div className=\"form-group\">\n        <label>Features</label>\n        <p className=\"help\"><small className=\"text-muted\">Each generation feature is associated with a priority. The higher the priority, the later the feature will be applied.</small></p>\n        <ol>{elements}</ol>\n    </div>;\n}\n\nfunction GenFeaturesLevel({ onChange, priority, value }) {\n    const options = useKeyedListOptions('features');\n\n    const handleChange = useCallback(function(selectedOptions) {\n        onChange(priority, selectedOptions === null ? [] : selectedOptions.map(option => option.value));\n    }, [onChange, priority]);\n\n    return <Select isMulti options={options} onChange={handleChange} defaultValue={options.filter(o => value.includes(o.value))} />;\n}","export function hexColorToInteger(color) {\n    return parseInt(color.replace(/^#/, ''), 16);\n}\n\nexport function integerColorToHex(color) {\n    return '#' + (color & 0xFFFFFF).toString(16).padStart(6, '0');\n}","import React, { useState, useEffect, useCallback } from 'react';\nimport { integerColorToHex, hexColorToInteger } from '../../utils/color';\nimport { EFFECTS } from './BiomeDefaults';\nimport { useToggle } from '../../hooks/ui';\n\nexport function BiomeEffects({effects = EFFECTS, onChange}) {\n\n    const [colors, setColors] = useState(effects);\n    const [optional, toggleOption] = useToggle(effects.hasOwnProperty('foliage_color') || effects.hasOwnProperty('grass_color'));\n\n    const handleColorChange = useCallback(function(e) {\n        const id = e.target.id;\n        const value = e.target.value;\n        setColors(colors => ({\n            ...colors,\n            [id]: hexColorToInteger(value)\n        }));\n    }, []);\n\n    const handleToggleChange = useCallback(function(e) {\n        toggleOption(e.target.checked);\n    }, [toggleOption]);\n\n    useEffect(function () {\n        const next = { ...colors };\n        if (!optional) {\n            delete next.foliage_color;\n            delete next.grass_color;\n        }\n        onChange(next);\n    }, [optional, colors, onChange]);\n\n    return <>\n        <div className=\"form-inline\">\n            <label htmlFor=\"sky_color\">Sky color</label> : <input type=\"color\" id=\"sky_color\" required value={integerColorToHex(colors.sky_color)} onChange={handleColorChange} />\n        </div>\n        <div className=\"form-inline\">\n            <label htmlFor=\"fog_color\">Fog color</label> : <input type=\"color\" id=\"fog_color\" value={integerColorToHex(colors.fog_color)} onChange={handleColorChange} />\n        </div>\n        <div className=\"form-inline\">\n            <label htmlFor=\"water_color\">Water color</label> : <input type=\"color\" id=\"water_color\" value={integerColorToHex(colors.water_color)} onChange={handleColorChange} />\n        </div>\n        <div className=\"form-inline\">\n            <label htmlFor=\"water_fog_color\">Water fog color</label> : <input type=\"color\" id=\"water_fog_color\" value={integerColorToHex(colors.water_fog_color)} onChange={handleColorChange} />\n        </div>\n        {optional && <>\n            <div className=\"form-inline\">\n                <label htmlFor=\"foliage_color\">Foliage color</label> : <input type=\"color\" id=\"foliage_color\" value={integerColorToHex(colors.foliage_color || 10387789)} onChange={handleColorChange} />\n            </div>\n            <div className=\"form-inline\">\n                <label htmlFor=\"grass_color\">Grass color</label> : <input type=\"color\" id=\"grass_color\" value={integerColorToHex(colors.grass_color || 9470285)} onChange={handleColorChange} />\n            </div>\n        </>}\n        <div className=\"form-inline\">\n            <label htmlFor=\"block-toggle\">Optionals</label> : <input type=\"checkbox\" id=\"block-toggle\" className=\"checkbox\" checked={optional} onChange={handleToggleChange} />\n        </div>\n    </>\n}","import React, { useCallback, useState } from 'react';\nimport BiomeStarts from './BiomeStarts';\nimport Select from 'react-select';\nimport { Button } from '../../ui/Button';\nimport { BiomeSpawners } from './BiomeSpawners';\nimport { STARTS } from './BiomeDefaults';\nimport GenFeatures from './Features';\nimport { BiomeEffects } from './BiomeEffects';\nimport { useKeyedListOptions } from '../../hooks/context';\n\nexport function Biome({data = {}, onSave}) {\n\n    const [state, setState] = useState(data || { starts: STARTS, spawners: []});\n\n    const handleStartsChange = useCallback(function(starts) {\n        setState(state => {\n            state.starts = starts;\n            return state;\n        });\n    }, []);\n\n    const handleEffectsChange = useCallback(function(effects) {\n        setState(state => {\n            state.effects = effects;\n            return state;\n        });\n    }, []);\n\n    const handleFeaturesChange = useCallback(function(features) {\n        setState(state => {\n            state.features = features;\n            return state;\n        });\n    }, []);\n\n    const handleSpawnersChange = useCallback(function(spawners) {\n        setState(state => {\n            state.spawners = spawners;\n            return state;\n        });\n    }, []);\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        const formData = Object.fromEntries(new FormData(e.target));\n        const data = { ...formData, ...state };\n        data.spawn_costs = {};\n        data.carvers =  {\n            air: [\n              \"minecraft:cave\",\n              \"minecraft:canyon\"\n            ]\n        }; // @todo\n        Object.keys(formData).forEach(function(key) {\n            if (!isNaN(formData[key])) {\n                data[key] = parseFloat(formData[key]);\n            }\n        });\n        onSave(data);\n    }, [onSave, state]);\n\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit biome</h3>\n        <div className=\"form-group\">\n            <label htmlFor=\"key\">Identifier</label> : <input type=\"text\" name=\"key\" id=\"key\" required pattern=\"[a-z0-9._-]+\" placeholder=\"Ex. : my-biome\" defaultValue={data.key} />\n        </div>\n\n        <fieldset>\n            <legend>Colors</legend>\n            <div className=\"form-row\">\n                <BiomeEffects effects={state.effects} onChange={handleEffectsChange} />\n            </div>\n        </fieldset>\n\n        <fieldset>\n            <BiomeCategory category={data.category} />\n            <BiomePrecipitation value={data.precipitation} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Generation</legend>\n            <SurfaceBuilder value={data.surface_builder} />\n            <BiomeStarts onChange={handleStartsChange} starts={state.starts} />\n            <GenFeatures features={state.features} onChange={handleFeaturesChange} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Creatures</legend>\n            <BiomeSpawners data={state.spawners} onChange={handleSpawnersChange} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Settings</legend>\n            <div className=\"form-group form-row\">\n                <div><label htmlFor=\"scale\">Scale</label> : <input type=\"number\" name=\"scale\" step=\"0.05\" required defaultValue={data.scale || 0.05} /></div>\n                <div><label htmlFor=\"downfall\">Downfall</label> : <input type=\"number\" name=\"downfall\" step=\"0.1\" required defaultValue={data.downfall || 0.4} /></div>\n                <div><label htmlFor=\"depth\">Depth</label> : <input type=\"number\" name=\"depth\" step=\"0.01\" required defaultValue={data.depth || 0.12} /></div>\n                <div><label htmlFor=\"temperature\">Temperature</label> : <input type=\"number\" name=\"temperature\" step=\"0.1\" required defaultValue={data.temperature || 0.8} /></div>\n                <p className=\"mts\"><small className=\"text-muted\">The <em>scale</em> parameter defines terrain amplitude, <em>downfall</em> controls grass and foliage color, <em>depth</em> is the difference from sea level, <em>temperature</em> controls some gameplay features like whether snow golems take damage. The default values are those of the plains biome.</small></p>\n            </div>\n        </fieldset>\n        <div className=\"form-group mlm mbm\">\n            <Button type=\"submit\">Save</Button>\n        </div>\n    </form>;\n}\n\nfunction BiomeCategory({category = 'plains'}) {\n\n    const options = [\n        { value: 'beach', label: 'Beach' },\n        { value: 'desert', label: 'Desert' },\n        { value: 'extreme_hills', label: 'Extreme hills' },\n        { value: 'forest', label: 'Forest' },\n        { value: 'icy', label: 'Icy' },\n        { value: 'jungle', label: 'Jungle' },\n        { value: 'mesa', label: 'Mesa' },\n        { value: 'nether', label: 'Nether' },\n        { value: 'none', label: 'None' },\n        { value: 'ocean', label: 'Ocean' },\n        { value: 'plains', label: 'Plains' },\n        { value: 'river', label: 'River' },\n        { value: 'savanna', label: 'Savanna' },\n        { value: 'swamp', label: 'Swamp' },\n        { value: 'taiga', label: 'Taiga' },\n        { value: 'the_end', label: 'The end' },\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"category\">Category</label>\n        <Select options={options} defaultValue={options.find(o => o.value === category)} name=\"category\" />\n    </div>;\n}\n\nfunction BiomePrecipitation({value = 'rain'}) {\n\n    const options = [\n        { value: 'none', label: 'None' },\n        { value: 'rain', label: 'Rain' },\n        { value: 'snow', label: 'Snow' }\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"precipitation\">Precipitation</label>\n        <Select options={options} defaultValue={options.find(o => o.value === value)} name=\"precipitation\" />\n    </div>;\n}\n\nfunction SurfaceBuilder({value = 'minecraft:grass'}) {\n    const options = useKeyedListOptions('surfaces');\n    return <div className=\"form-group\">\n        <label htmlFor=\"surface_builder\">Surface builder</label>\n        <Select options={options} defaultValue={options.find(o => o.value === value)} name=\"surface_builder\" />\n    </div>;\n}\n","import React from 'react';\n\nexport function MenuItem({active, children, onClick}) {\n    const className = 'tabs-menu-link' + (active ? ' is-active' : '');\n    return <a href=\"#_\" className={className} onClick={onClick}>{children}</a>\n}","import React from 'react';\nimport Select from 'react-select';\n\nexport function DimensionType({type = 'minecraft:overworld'}) {\n    const options = [\n        { value: 'minecraft:overworld', label: 'Overworld' },\n        { value: 'minecraft:overworld_cave', label: 'Overworld caves' },\n        { value: 'minecraft:the_nether', label: 'The Nether' },\n        { value: 'minecraft:the_end', label: 'The End' },\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"dimension-type\">Dimension type</label>\n        <Select name=\"dimension-type\" options={options} defaultValue={options.find(o => o.value === type) || options[0]} />\n    </div>;\n}","export const DIMENSION = {\n    generator: {\n        type: \"minecraft:noise\",\n        seed: 286956243,\n        biome_source: {\n            type: \"minecraft:fixed\",\n            seed: 286956243,\n            biome: \"minecraft:plains\"\n        },\n        settings: \"minecraft:overworld\"\n    },\n    type: \"minecraft:overworld\"\n}\n\nexport const MULTI_NOISE_BIOME_SOURCE = {\n    type: 'minecraft:multi_noise',\n    seed: 286956243,\n    temperature_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    humidity_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    altitude_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    weirdness_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    biomes: []\n};\n\nexport const OVERWORLD_DIMENSION_TYPE = {\n    has_raids: true,\n    logical_height: 256,\n    infiniburn: \"minecraft:infiniburn_overworld\",\n    ambient_light: 0.0,\n    piglin_safe: false,\n    bed_works: true,\n    respawn_anchor_works: false,\n    ultrawarm: false,\n    natural: true,\n    shrunk: false,\n    has_skylight: true,\n    has_ceiling: false\n}\n\nexport const THE_NETHER_DIMENSION_TYPE = {\n    has_raids: false,\n    logical_height: 128,\n    infiniburn: \"minecraft:infiniburn_nether\",\n    ambient_light: 0.1,\n    piglin_safe: true,\n    bed_works: false,\n    respawn_anchor_works: true,\n    ultrawarm: true,\n    natural: false,\n    shrunk: true,\n    fixed_time: 18000,\n    has_skylight: false,\n    has_ceiling: true\n}\n\nexport const THE_END_DIMENSION_TYPE = {\n    has_raids: true,\n    logical_height: 256,\n    infiniburn: \"minecraft:infiniburn_end\",\n    ambient_light: 0.0,\n    piglin_safe: false,\n    bed_works: false,\n    respawn_anchor_works: false,\n    ultrawarm: false,\n    natural: false,\n    shrunk: false,\n    fixed_time: 6000,\n    has_skylight: false,\n    has_ceiling: false\n}\n","import { MULTI_NOISE_BIOME_SOURCE } from './../components/dimension/DimensionDefaults';\n\n/**\n * @param {object} a \n * @param {object} b \n * @returns {boolean}\n */\nexport function objectsEqual(a, b) {\n    return Object.keys(a).length === Object.keys(b).length\n        && Object.keys(a).every(p => a[p] === b[p]);\n}\n\n/**\n * @param {string} str \n * @returns {string}\n */\nexport function capitalize(str) {\n    return str[0].toUpperCase() + str.substr(1);\n}\n\nexport function getStateValue(state, properties = {}) {\n    const actual = properties[state.name];\n    switch (state.type) {\n        case 'bool':\n            return actual === 'true' ? 'true' : 'false';\n        case 'int':\n            return actual || 0;\n        default:\n            return actual || state.values[0];\n    }\n}\n\nexport function hasDuplicatedObjects(objects) {\n    for (const a of objects) {\n        for (const b of objects) {\n            if (a !== b && objectsEqual(a, b)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n/**\n * @param {object} feature Unserialized feature\n * @returns {{type: string, config: object}[]} Decorators list\n */\nexport function findDecorators(feature) {\n    const decorators = [];\n\n    let f = null;\n    (function find(obj) {\n        for (const key of Object.keys(obj)) {\n            if (key === 'decorator') {\n                decorators.unshift(obj[key]);\n                if (f === null && !obj.feature.hasOwnProperty('decorator')) {\n                    f = obj.feature;\n                }\n            } else if (typeof obj[key] === 'object') {\n                find(obj[key]);\n            }\n        }\n    }(feature));\n\n    if (f === null) {\n        f = {};\n    }\n    return [decorators, f];\n}\n\n/**\n * @param {object} feature \n * @param {{type: string, config: object}[]} decorators \n * @param {string} name\n * @returns {object} Decorated feature\n */\nexport function buildDecorated(feature, decorators, name) {\n    if (decorators.length < 1) {\n        return feature;\n    }\n\n    const decorated = { type: 'minecraft:decorated', key: name };\n    let current = decorated;\n    decorators.forEach((decorator, i) => {\n        const f = i === (decorators.length - 1) ? feature : { type: 'minecraft:decorated' };\n        current.config = {\n            feature: f,\n            decorator\n        };\n        current = f;\n        if (i < 1) {\n            f.name = name;\n        }\n    });\n    return decorated;\n}\n\n/**\n * Rename object keys.\n * \n * @param {object} obj \n * @param {object} map \n * @returns {object}\n */\nfunction refitKeys(obj, map) {\n    const build = {};\n    for (const key in obj) {\n        const destKey = map[key] || key;\n\n        let value = obj[key];\n        if (typeof value === 'object') {\n            value = refitKeys(value, map);\n        }\n        build[destKey] = value;\n    }\n    return build;\n}\n\n/**\n * @param {string} group \n * @param {object} data \n * @returns {object}\n */\nexport function dataUpper(group, data) {\n    switch (group) {\n        case 'biomes':\n            // 20w30a: sky_color into effects\n            if (data.hasOwnProperty('sky_color')) {\n                data.effects.sky_color = data.sky_color;\n            }\n            return data;\n        case 'features':\n            // 20w30a: name -> type\n            const [decorators, feature] = findDecorators(data);\n            if (!feature.hasOwnProperty('type')) {\n                feature.type = feature.name;\n                delete feature.name;\n                return buildDecorated(\n                    feature,\n                    decorators.map(decorator => refitKeys(decorator, { name: 'type' })),\n                    data.key\n                );\n            }\n            return data;\n        case 'dimensions':\n            // 20w30a: multi_noise: firstOctave and amplitudes parameters\n            const source = data.generator.biome_source;\n            if (source.type === 'minecraft:multi_noise' && !source.hasOwnProperty('altitude_noise')) {\n                data.generator.biome_source = { ...MULTI_NOISE_BIOME_SOURCE, ...source };\n            }\n            return data;\n        default:\n            // 20w30a: name -> type\n            if (data.hasOwnProperty('name') && !data.hasOwnProperty('type')) {\n                data.type = data.name;\n            }\n            return data;\n    }\n}\n","import React from 'react';\n\nexport const NumberList = React.memo(function ({ numbers = [], onChange }) {\n\n    const handleChange = function(val, pos) {\n        onChange(numbers.map((n, i) => i === pos ? val : n));\n    };\n\n    return <div className=\"flex-container\">\n        {numbers.map((n, i) => <NumberInput key={i} number={n} onChange={(n) => handleChange(n, i)} />)}\n    </div>\n});\n\nconst NumberInput = React.memo(function ({ number, onChange }) {\n    return <input type=\"number\" value={number} onChange={e => onChange(parseInt(e.target.value))} />\n});","import React, { useState, useCallback, useContext, useEffect } from 'react';\nimport Select from 'react-select';\nimport { SeedField } from './DimensionGenerator';\nimport { useKeyedListOptions } from '../../hooks/context';\nimport { useMemo } from 'react';\nimport { useCrud, CRUD, useNumber, useKeyedOptionsState } from '../../hooks/form';\nimport { useToggle } from '../../hooks/ui';\nimport { DataContext } from '../../context/DataContext';\nimport { Button } from '../../ui/Button';\nimport { capitalize, hasDuplicatedObjects } from '../../utils/data';\nimport { NumberList } from '../../ui/NumberList';\nimport { MULTI_NOISE_BIOME_SOURCE } from './DimensionDefaults';\n\nexport function BiomeSource({biome_source = { type: 'minecraft:fixed' }, onChange}) {\n    const [source, setSource] = useState(biome_source);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:checkerboard', label: 'Checkerboard' },\n            { value: 'minecraft:fixed', label: 'Fixed' },\n            { value: 'minecraft:multi_noise', label: 'Multi noise' },\n        ];\n    }, []);\n\n    const handleSeedChange = useCallback(function(seed) {\n        setSource(source => ({ ...source, seed }));\n    }, []);\n    const handleTypeChange = useCallback(function(option) {\n        setSource(source => ({ type: option.value, seed: source.seed }));\n    }, []);\n    const handleCheckerboardSourceChange = useCallback(function(settings) {\n        setSource(source => ({ ...source, ...settings }));\n    }, []);\n    const handleFixedSourceChange = useCallback(function(biome) {\n        setSource(source => ({ ...source, biome }));\n    }, []);\n    const handleMultiSourceChange = useCallback(function(s) {\n        setSource(source => ({ ...source, ...s }));\n    }, []);\n\n    useEffect(() => onChange(source), [onChange, source]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === source.type);\n    }, [options, source.type]);\n\n    return <fieldset>\n        <legend>Biome source</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"biome-source-type\">Type</label><Select id=\"biome-source-type\" options={options} value={selected} onChange={handleTypeChange} />\n        </div>\n        <SeedField value={source.seed} onChange={handleSeedChange} />\n        <hr />\n        {source.type === 'minecraft:checkerboard' && <CheckerboardBiomeSource source={source} onChange={handleCheckerboardSourceChange} />}\n        {source.type === 'minecraft:fixed' && <FixedBiomeSource source={source.biome} onChange={handleFixedSourceChange} />}\n        {source.type === 'minecraft:multi_noise' && <MultiNoiseBiomeSource source={source} onChange={handleMultiSourceChange} />}\n    </fieldset>\n}\n\nconst CheckerboardBiomeSource = React.memo(function({source, onChange}) {\n    const [options, biomes, setBiomes] = useKeyedOptionsState('biomes', source.biomes, true);\n    const [scale, setScale] = useNumber(source.scale);\n\n    useEffect(() => onChange({ biomes, scale }), [biomes, onChange, scale]);\n\n    return <div className=\"form-group\">\n        <div className=\"form-group\">\n            <label htmlFor=\"biomes\">Biomes</label><Select options={options} isMulti isClearable={false} value={options.filter(o => biomes.includes(o.value))} onChange={setBiomes} id=\"biomes\" />\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"scale\">Scale (squares of 2<sup>scale</sup> chunks) : </label><input type=\"number\" id=\"scale\" value={scale} onChange={setScale} min=\"0\" />\n        </div>\n        {biomes.length < 1 && <p className=\"alert--warning\">Warning: a dimension must contain at least one biome!</p>}\n    </div>;\n});\n\nconst FixedBiomeSource = React.memo(function({source = 'minecraft:plains', onChange}) {\n    const [options, biome, setBiome] = useKeyedOptionsState('biomes', source);\n    useEffect(() => onChange(biome), [biome, onChange]);\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"fixed-biome\">Biome</label><Select options={options} value={options.find(o => o.value === biome)} onChange={setBiome} />\n    </div>;\n});\n\nconst MultiNoiseBiomeSource = React.memo(function({source = MULTI_NOISE_BIOME_SOURCE, onChange}) {\n    const options = useKeyedListOptions('biomes');\n    const [biomes, dispatch] = useCrud(source.biomes);\n\n    const [advanced, toggleAdvanced] = useToggle();\n    const handleNoiseChange = useCallback(function(type, noise) {\n        onChange(({ ...source, [type]: noise }));\n    }, [source, onChange]);\n\n    const handleAddClick = useCallback(function(e) {\n        e.preventDefault();\n        dispatch({ type: CRUD.ADD, payload: { biome: 'minecraft:plains', parameters: {\n            altitude: 0,\n            weirdness: 0,\n            offset: 0,\n            temperature: 0.8,\n            humidity: 0.4\n        } } });\n    }, [dispatch]);\n    const handleChange = useCallback(function(state, previous) {\n        dispatch({ type: CRUD.UPDATE, target: previous, payload: state });\n    }, [dispatch]);\n    const handleDeleteClick = useCallback(function(e, index) {\n        e.preventDefault();\n        dispatch({ type: CRUD.REMOVE, payload: biomes[index] });\n    }, [biomes, dispatch]);\n\n    const vanilla = useContext(DataContext).vanilla.biomes;\n    const custom = useContext(DataContext).custom.biomes;\n    const namespace = useContext(DataContext).namespace;\n    useEffect(function() {\n        if (biomes !== source.biomes) {\n            onChange({ ...source, biomes });\n        }\n    }, [biomes, onChange, source]);\n\n    const values = [];\n    biomes.forEach((entry, i) => {\n        const key = i;\n        values.push(<BiomeSelection namespace={namespace} vanilla={vanilla} custom={custom} biomesOptions={options} entry={entry} key={key} onChange={handleChange}><Button cat=\"danger\" onClick={(e) => handleDeleteClick(e, i)}>Delete</Button></BiomeSelection>);\n    });\n    return <>\n        <div className=\"flex-container\" style={{ alignItems: 'baseline' }}>\n            <h5>Biomes list</h5>\n            <Button onClick={handleAddClick} cat=\"primary mlm\">Add biome</Button>\n            <Button onClick={toggleAdvanced} cat=\"secondary\">Advanced</Button>\n        </div>\n        {advanced && <div className=\"grid-2-small-1 has-gutter mbm\">\n            {['temperature_noise', 'humidity_noise', 'altitude_noise', 'weirdness_noise']\n                .map(noise => <PerlinNoiseParameters\n                    key={noise}\n                    noise={source[noise] || MULTI_NOISE_BIOME_SOURCE[noise]}\n                    onChange={(n) => handleNoiseChange(noise, n)}>{capitalize(noise.replace('_', ' '))}</PerlinNoiseParameters>)}\n        </div>}\n        {values}\n        {hasDuplicatedObjects(biomes.map(biome => biome.parameters)) && <p className=\"alert--warning\">Warning: every biome must have a unique combination of parameters!</p>}\n    </>;\n});\n\nconst PerlinNoiseParameters = React.memo(function({children, noise = { firstOctave: -7, amplitudes: [1, 1] }, onChange}) {\n\n    const handleFirstOctaveChange = useCallback(function(e) {\n        onChange({ ...noise, firstOctave: parseInt(e.target.value) });\n    }, [noise, onChange]);\n    const handleAmplitudesChange = useCallback(function(amplitudes) {\n        onChange({ ...noise, amplitudes });\n    }, [noise, onChange]);\n\n    return <fieldset>\n        <legend>{children}</legend>\n        <div className=\"form-group form-row\">\n            <div><label>First octave</label> : <input type=\"number\" name=\"firstOctave\" defaultValue={noise.firstOctave} onChange={handleFirstOctaveChange} /></div>\n            <div className=\"form-row\"><div><label>Amplitudes</label> : </div><NumberList numbers={noise.amplitudes} onChange={handleAmplitudesChange} /></div>\n        </div>\n    </fieldset>;\n});\n\nconst BiomeSelection = React.memo(function({namespace, vanilla, custom, biomesOptions, entry, onChange, children}) {\n    const [selection, setSelection] = useState(entry);\n\n    const handleBiomeChange = useCallback(function(option) {\n        const biome = option.value;\n        const data = (vanilla.find(b => 'minecraft:' + b.name === biome) || custom.find(b => namespace + ':' + b.key === biome) || { rainfall: 0, temperature: 0 });\n        setSelection(selection => {\n            const parameters = {\n                altitude: selection.parameters.altitude || 0,\n                weirdness: selection.parameters.weirdness || 0,\n                offset: selection.parameters.offset || 0,\n                temperature: data.temperature || 0.8,\n                humidity: data.rainfall || 0.4\n            };\n            return { biome, parameters };\n        });\n    }, [custom, namespace, vanilla]);\n\n    const handleParameterChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = e.target.value;\n        setSelection(selection => {\n            const parameters = { ...selection.parameters, [name]: parseFloat(value) };\n            return { biome: selection.biome, parameters };\n        });\n    }, []);\n\n    useEffect(() => onChange(selection, entry), [entry, onChange, selection]);\n\n    const selected = useMemo(function() {\n        return biomesOptions.find(o => o.value === selection.biome);\n    }, [biomesOptions, selection.biome]);\n    return <div className=\"form-group\">\n        <Select options={biomesOptions} value={selected} onChange={handleBiomeChange} />\n        <div className=\"form-group form-row\">\n            <div><label>Altitude</label> : <input type=\"number\" id=\"altitude\" value={selection.parameters.altitude} onChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\" /></div>\n            <div><label>Weirdness</label> : <input type=\"number\" id=\"weirdness\" value={selection.parameters.weirdness} onChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\" /></div>\n            <div><label>Offset</label> : <input type=\"number\" id=\"offset\" value={selection.parameters.offset} onChange={handleParameterChange} step=\"0.1\" min=\"0\" max=\"1\"  /></div>\n            <div><label>Temperature</label> : <input type=\"number\" id=\"temperature\" value={selection.parameters.temperature} onChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\" /></div>\n            <div><label>Humidity</label> : <input type=\"number\" id=\"humidity\" value={selection.parameters.humidity} onChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\" /></div>\n            {children}\n        </div>\n    </div>\n});\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { BiomeSource } from './BiomeSource';\nimport { hashCode } from './../../utils/hash';\nimport Select from 'react-select';\n\nexport function DimensionGenerator({generator, onChange}) {\n    \n    const [data, setData] = useState(generator);\n\n    const handleSeedChange = useCallback(function(seed) {\n        setData(data => {\n            data.seed = seed;\n            return data;\n        });\n        onChange(data);\n    }, [data, onChange]);\n\n    const handleSettingsChange = useCallback(function(settings) {\n        setData(data => {\n            data.settings = settings;\n            return data;\n        });\n        onChange(data);\n    }, [data, onChange]);\n\n    const handleBiomeSourceChange = useCallback(function(biome_source) {\n        setData(data => {\n            data.biome_source = biome_source;\n            return data;\n        });\n        onChange(data);\n    }, [data, onChange]);\n\n    useEffect(function () {\n        onChange(data);\n    }, [data, onChange]);\n\n    return <fieldset>\n        <legend>Noise dimension generator</legend>\n        <div className=\"form-group\">\n            <SeedField value={data.seed} onChange={handleSeedChange} />\n            <Settings settings={data.settings} onChange={handleSettingsChange} />\n            <BiomeSource biome_source={data.biome_source} onChange={handleBiomeSourceChange} />\n        </div>\n    </fieldset>;\n}\n\nexport const SeedField = React.memo(function({onChange, value = 286956243}) {\n    const [text, setText] = useState(value);\n\n    const handleChange = function(e) {\n        const value = e.target.value;\n        setText(value);\n        onChange(isNaN(value) ? hashCode(value) : parseInt(value));\n    };\n\n    return <div className=\"form-group\">\n        <label>Seed</label> : <input type=\"text\" value={text} onChange={handleChange} />\n    </div>\n});\n\nconst Settings = React.memo(function({onChange, settings = 'minecraft:overworld'}) {\n    const handleChange = useCallback(function(option) {\n        onChange(option.value);\n    }, [onChange]);\n\n    const options = [\n        { value: 'minecraft:overworld', label: 'Overworld' },\n        { value: 'minecraft:nether', label: 'Nether' },\n        { value: 'minecraft:end', label: 'End' },\n        { value: 'minecraft:amplified', label: 'Amplified' },\n        { value: 'minecraft:caves', label: 'Caves' },\n        { value: 'minecraft:floating_islands', label: 'Floating islands' }\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"settings\">Settings</label><Select options={options} defaultValue={options.find(o => o.value === settings)} onChange={handleChange} />\n    </div>;\n});","export function hashCode(s) {\n    let hash;\n    for (let i = 0; i < s.length; i++) { \n        hash = Math.imul(31, hash) + s.charCodeAt(i) | 0;\n    }\n    return hash;\n}","import React, { useCallback, useState } from 'react';\nimport { DimensionType } from './DimensionType';\nimport { DimensionGenerator } from './DimensionGenerator';\nimport { Button } from '../../ui/Button';\nimport { DIMENSION } from './DimensionDefaults';\n\nexport function Dimension({data = DIMENSION, onSave}) {\n\n    const [state, setState] = useState(data);\n\n    const handleGeneratorChange = useCallback(function(generator) {\n        setState(s => {\n            s.generator = generator;\n            return s;\n        });\n    }, []);\n\n    const handleSubmit = function (e) {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        const data = {...state};\n        data.key = formData.get('key');\n        data.type = formData.get('dimension-type');\n        onSave(data);\n    }\n\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit dimension</h3>\n        <div className=\"form-group\">\n            <label htmlFor=\"key\">Identifier</label> : <input type=\"text\" name=\"key\" id=\"key\" required pattern=\"[a-z0-9._-]+\" placeholder=\"Ex. : blue-dim\" defaultValue={data.key} />\n        </div>\n        <DimensionType type={state.type} />\n        <fieldset>\n            <legend>Generator configuration</legend>\n            <DimensionGenerator generator={state.generator} onChange={handleGeneratorChange} />\n        </fieldset>\n        <div className=\"form-group mlm mbm\">\n            <Button type=\"submit\">Save</Button>\n        </div>\n    </form>\n}","import React, { useState, useCallback, useContext, useMemo } from \"react\";\nimport Select from \"react-select\";\nimport { DataContext } from \"../../context/DataContext\";\nimport { Button } from '../../ui/Button';\nimport { getStateValue } from \"../../utils/data\";\nimport { useEffect } from \"react\";\nimport { CRUD, useCrud } from \"../../hooks/form\";\n\nexport const BlockStateProvider = React.memo(function({block = { type: 'minecraft:simple_state_provider' }, onChange}) {\n    const [provider, setProvider] = useState(block);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:simple_state_provider', label: 'Simple state provider' },\n            { value: 'minecraft:weighted_state_provider', label: 'Weighted state provider' }\n        ];\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        setProvider({ type: option.value });\n    }, []);\n\n    const handleSimpleStateChange = useCallback(function(state) {\n        setProvider(provider => ({ ...provider, state }));\n    }, []);\n\n    const handleWeighestStateChange = useCallback(function(entries) {\n        setProvider(provider => ({ ...provider, entries }));\n    }, []);\n\n    useEffect(() => onChange(provider), [onChange, provider]);\n\n    return <div>\n        <label>Type</label>\n        <Select options={options} value={options.find(o => o.value === provider.type)} onChange={handleTypeChange} />\n        {(provider.type === 'minecraft:simple_state_provider' || provider.type === 'minecraft:rotated_block_provider') && <BlockState block={provider.state} onChange={handleSimpleStateChange} />}\n        {provider.type === 'minecraft:weighted_state_provider' && <WeightedStateProvider entries={(provider.entries || []).map(entry => entry.data)} onChange={handleWeighestStateChange} />}\n    </div>\n});\n\nexport const BlockState = React.memo(function({block = {}, children, name, onChange}) {\n    const context = useContext(DataContext);\n    const [data, setData] = useState(block);\n\n    const handleTypeChange = useCallback(function(option) {\n        const Name = option.value;\n        const Properties = {};\n        (context.vanilla.blocks.find(b => 'minecraft:' + b.name === Name) || { states: [] }).states.forEach(state => {\n            Properties[state.name] = getStateValue(state);\n        })\n        if (Object.keys(Properties).length > 0) {\n            setData({ Name, Properties });\n        } else {\n            setData({ Name });\n        }\n    }, [context.vanilla.blocks]);\n    const handlePropertiesChange = useCallback(function(Properties) {\n        setData(data => ({ ...data, Properties }))\n    }, []);\n    useEffect(() => onChange(data, block), [onChange, data, block]);\n\n    const options = useMemo(function() {\n        return context.vanilla.blocks.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n    }, [context.vanilla.blocks]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === data.Name);\n    }, [options, data.Name]);\n\n    return <div className=\"form-group\">\n        <Select options={options} value={selected} name={name} onChange={handleTypeChange} />\n        <BlockStateProperties block={data.Name} Properties={block.Properties} onChange={handlePropertiesChange}>{children}</BlockStateProperties>\n    </div>;\n});\n\nexport const BlocksList = React.memo(function({list, onChange}) {\n    const [blocks, dispatch] = useCrud(list);\n\n    const handleAddClick = useCallback(function(e) {\n        e.preventDefault();\n        dispatch({ type: CRUD.ADD, payload: { Name: 'minecraft:stone', Properties: {} } });\n    }, [dispatch]);\n    const handleChange = useCallback(function(state, previous) {\n        dispatch({ type: CRUD.UPDATE, target: previous, payload: state });\n    }, [dispatch]);\n    const handleDeleteClick = useCallback(function(e, index) {\n        e.preventDefault();\n        dispatch({ type: CRUD.REMOVE, payload: blocks[index] });\n    }, [blocks, dispatch]);\n\n    useEffect(() => onChange(blocks), [blocks, onChange]);\n\n    const values = [];\n    blocks.forEach((entry, i) => {\n        const key = i;\n        values.push(<BlockState block={entry} key={key} onChange={handleChange}><Button cat=\"danger\" onClick={(e) => handleDeleteClick(e, i)}>Delete</Button></BlockState>);\n    });\n\n    return <div className=\"form-group\">{values}<Button onClick={handleAddClick}>Add</Button></div>;\n});\n\nconst WeightedStateProvider = React.memo(function({entries = [], onChange}) {\n\n    const handleChange = useCallback(function(blocks) {\n        onChange(blocks.map(data => ({ data })));\n    }, [onChange]);\n\n    return <BlocksList list={entries} onChange={handleChange} />;\n});\n\nfunction BlockStateProperties({block, children, onChange, Properties = {}}) {\n    const states = (useContext(DataContext).vanilla.blocks.find(b => 'minecraft:' + b.name === block) || { states: [] }).states;\n    const [properties, setProperties] = useState(Properties);\n\n    const handlePropertyChange = useCallback(function(option) {\n        setProperties(properties => ({ ...properties, [option.name]: option.value }));\n    }, []);\n    const handleCheckboxChange = useCallback(function(e) {\n        const value = e.target.checked.toString();\n        setProperties(properties => ({ ...properties, [e.target.id]: value }));\n    }, []);\n    const handleNumberChange = useCallback(function(e) {\n        const value = e.target.value;\n        setProperties(properties => ({ ...properties, [e.target.id]: value }));\n    }, []);\n    useEffect(() => onChange(properties), [onChange, properties]);\n\n    const selects = [];\n    states.forEach(possible => {\n        switch(possible.type) {\n            case 'bool':\n                selects.push(<div key={possible.name}>\n                    <label>{possible.name}</label> : <input type=\"checkbox\" id={possible.name} className=\"checkbox\" checked={Properties[possible.name] === 'true'} onChange={handleCheckboxChange} />\n                </div>);\n                break;\n            case 'int':\n                selects.push(<div key={possible.name}>\n                    <label>{possible.name}</label> : <input type=\"number\" id={possible.name} value={Properties[possible.name] || 0} onChange={handleNumberChange} min=\"0\" max={possible.num_values - 1} />\n                </div>);\n                break;\n            default:\n                const options = possible.values.map(value => ({ value, name: possible.name, label: value }));\n                const defaultValue = options.find(o => o.value === Properties[possible.name]) || options[0];\n                selects.push(<div key={possible.name}>\n                    <label>{possible.name}</label> : <div className=\"inbl\"><Select options={options} value={defaultValue} onChange={handlePropertyChange} /></div>\n                </div>);\n        }\n    });\n    return <div className=\"form-group form-row\">\n        {selects}{children}\n    </div>;\n}","import React, { useCallback, useMemo, useState, useEffect } from 'react';\nimport { BlockStateProvider } from '../state/BlockState';\nimport Select from 'react-select';\nimport { TREE_FEATURE_CONFIG } from './FeatureDefaults';\n\nexport function TreeFeatureConfig({configuration = TREE_FEATURE_CONFIG, onChange}) {\n\n    const [config, setConfig] = useState(configuration);\n\n    const handleTrunkProviderChange = useCallback(function(trunk_provider) {\n        setConfig(config => ({ ...config, trunk_provider }));\n    }, []);\n    const handleLeavesProviderChange = useCallback(function(leaves_provider) {\n        setConfig(config => ({ ...config, leaves_provider }));\n    }, []);\n    const handleFoliagePlacerChange = useCallback(function(foliage_placer) {\n        setConfig(config => ({ ...config, foliage_placer }));\n    }, []);\n    const handleTrunkPlacerChange = useCallback(function(trunk_placer) {\n        setConfig(config => ({ ...config, trunk_placer }));\n    }, []);\n\n    useEffect(function() {\n        onChange(config);\n    }, [config, onChange]);\n\n    return <div>\n        <fieldset>\n            <legend>Trunk provider</legend>\n            <BlockStateProvider block={config.trunk_provider} onChange={handleTrunkProviderChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Leaves provider</legend>\n            <BlockStateProvider block={config.leaves_provider} onChange={handleLeavesProviderChange} />\n        </fieldset>\n        <FoliagePlacer placer={config.foliage_placer} onChange={handleFoliagePlacerChange} />\n        <TrunkPlacer placer={config.trunk_placer} onChange={handleTrunkPlacerChange} />\n    </div>;\n}\n\nconst FoliagePlacer = React.memo(function({placer, onChange}) {\n    const [data, setData] = useState(placer);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'blob_foliage_placer', label: 'Blob foliage placer' },\n            { value: 'fancy_foliage_placer', label: 'Fancy foliage placer' }\n        ].map(o => {\n            o.value = 'minecraft:' + o.value;\n            return o;\n        });\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        const type = option.value;\n        setData(data => ({ ...data, type }));\n    }, []);\n\n    const handleValueChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = parseInt(e.target.value);\n        setData(data => {\n            const n = { ...data, [name]: value };\n            onChange(n);\n            return n;\n        });\n    }, [onChange]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === data.type) || options[0];\n    }, [options, data.type]);\n\n    return <fieldset>\n        <legend>Foliage placer</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"foliage_placer_type\">Type</label>\n            <Select options={options} name=\"foliage_placer_type\" value={selected} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <div><label htmlFor=\"radius\">Radius</label> : <input type=\"number\" id=\"radius\" value={data.radius} onChange={handleValueChange} /></div>\n            <div><label htmlFor=\"offset\">Offset</label> : <input type=\"number\" id=\"offset\" value={data.offset} onChange={handleValueChange} /></div>\n            {(data.type === 'minecraft:blob_foliage_placer' ||\n                data.type === 'minecraft:bush_foliage_placer' ||\n                data.type === 'minecraft:fancy_foliage_placer' ||\n                data.type === 'minecraft:jungle_foliage_placer'\n            ) && <div><label htmlFor=\"height\">Height</label> : <input type=\"number\" id=\"height\" value={data.height} onChange={handleValueChange} /></div>}\n        </div>\n    </fieldset>\n});\n\nconst TrunkPlacer = React.memo(function({placer, onChange}) {\n    const [data, setData] = useState(placer);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'straight_trunk_placer', label: 'Straight trunk placer' },\n            { value: 'forking_trunk_placer', label: 'Forking trunk placer' },\n            { value: 'giant_trunk_placer', label: 'Giant trunk placer' },\n            { value: 'mega_jungle_trunk_placer', label: 'Mega jungle trunk placer' },\n            { value: 'dark_oak_trunk_placer', label: 'Dark oak trunk placer' },\n            { value: 'fancy_trunk_placer', label: 'Fancy trunk placer' }\n        ].map(o => {\n            o.value = 'minecraft:' + o.value;\n            return o;\n        });\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        const type = option.value;\n        setData(data => ({ ...data, type }));\n    }, []);\n\n    const handleValueChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = parseInt(e.target.value);\n        setData(data => {\n            const n = { ...data, [name]: value };\n            onChange(n);\n            return n;\n        });\n    }, [onChange]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === data.type) || options[0];\n    }, [data.type, options]);\n\n    return <fieldset>\n        <legend>Trunk placer</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"foliage_placer_type\">Type</label>\n            <Select options={options} name=\"foliage_placer_type\" defaultValue={selected} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <div><label htmlFor=\"base_height\">Base height</label> : <input type=\"number\" id=\"base_height\" min=\"0\" max=\"32\" value={placer.base_height} onChange={handleValueChange} /></div>\n            <div><label htmlFor=\"height_rand_a\">First height rand</label> : <input type=\"number\" id=\"height_rand_a\" min=\"0\" max=\"24\" value={placer.height_rand_a} onChange={handleValueChange} /></div>\n            <div><label htmlFor=\"height_rand_b\">Second height rand</label> : <input type=\"number\" id=\"height_rand_b\" min=\"0\" max=\"24\" value={placer.height_rand_b} onChange={handleValueChange} /></div>\n        </div>\n    </fieldset>\n});","import React, { useCallback, useState, useMemo, useEffect } from 'react';\nimport { useCrud, CRUD } from '../../hooks/form';\nimport { Button } from '../../ui/Button';\nimport Select from 'react-select';\nimport { DECORATORS_OPTIONS, DECORATOR_EXTRA_COUNT_DEFAULTS, DECORATOR_DECORATED_DEFAULTS, DECORATOR_RANGE_DEFAULTS } from './FeatureDefaults';\n\nexport const DecoratorsList = React.memo(function({data, onChange}) {\n    const [decorators, dispatch] = useCrud(data);\n\n    const handleAddClick = useCallback(function(e) {\n        e.preventDefault();\n        const type = (DECORATORS_OPTIONS.filter(o => !decorators.some(d => d.type === o.value))[0] || { value: 'minecraft:count' }).value;\n        dispatch({ type: CRUD.ADD, payload: { type }, unshift: true });\n    }, [decorators, dispatch]);\n    const handleChange = useCallback(function(state, previous) {\n        dispatch({ type: CRUD.UPDATE, target: previous, payload: state });\n    }, [dispatch]);\n    const handleDeleteClick = useCallback(function(e, index) {\n        e.preventDefault();\n        dispatch({ type: CRUD.REMOVE, payload: decorators[index] });\n    }, [decorators, dispatch]);\n    useEffect(() => onChange(decorators), [decorators, onChange]);\n\n    const values = [];\n    decorators.forEach((decorator, i) => {\n        const key = decorator.type + '-' + i;\n        values.push(<Decorator data={decorator} key={key} onChange={handleChange}><Button cat=\"danger\" onClick={(e) => handleDeleteClick(e, i)}>Delete</Button></Decorator>);\n    });\n    return <fieldset>\n        <legend>Decorators wrappers</legend>\n        {values}\n        <Button onClick={handleAddClick}>Add decorator</Button>\n    </fieldset>\n});\n\nconst Decorator = React.memo(function({children, data = { type: 'minecraft:count' }, onChange}) {\n    const [decorator, setDecorator] = useState(data);\n\n    const handleSelectChange = useCallback(function(option) {\n        setDecorator({ type: option.value });\n    }, []);\n    const handleConfigChange = useCallback(function(config) {\n        setDecorator(decorator => ({ type: decorator.type, config }));\n    }, []);\n    useEffect(() => onChange(decorator, data), [data, decorator, onChange]);\n\n    const selected = useMemo(function() {\n        return DECORATORS_OPTIONS.find(o => o.value === decorator.type);\n    }, [decorator.type]);\n    return <div>\n        <div className=\"form-group\">\n            <label>Type</label>\n            <Select options={DECORATORS_OPTIONS} value={selected} onChange={handleSelectChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            {decorator.type === 'minecraft:chance' && <ChanceDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.type === 'minecraft:count' || decorator.type === 'minecraft:fire' || decorator.type === 'minecraft:count_multilayer') && <CountDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {decorator.type === 'minecraft:count_extra' && <ExtraCountDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.type === 'minecraft:decorated' || decorator.type === 'minecraft:square') && <DecoratedDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.type === 'minecraft:range' || decorator.type === 'minecraft:range_very_biased') && <RangeDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {children}\n        </div>\n    </div>;\n});\n\nconst ChanceDecorator = React.memo(function({config = {}, onChange}) {\n    const [chance, setChance] = useState(config.count || 32);\n\n    const handleChanceChange = useCallback(function(e) {\n        setChance(parseInt(e.target.value));\n    }, []);\n\n    useEffect(() => onChange({ chance }), [chance, onChange]);\n\n    return <div><label>Chance</label> : <input type=\"number\" value={chance} onChange={handleChanceChange} /></div>;\n});\n\nconst CountDecorator = React.memo(function({config = {}, onChange}) {\n    const [count, setCount] = useState(config.count || 25);\n\n    const handleCountChange = useCallback(function(e) {\n        setCount(parseInt(e.target.value));\n    }, []);\n\n    useEffect(() => onChange({ count }), [count, onChange]);\n\n    return <div><label>Count</label> : <input type=\"number\" value={count} onChange={handleCountChange} /></div>;\n});\n\nconst ExtraCountDecorator = React.memo(function({config = DECORATOR_EXTRA_COUNT_DEFAULTS, onChange}) {\n    const [configured, setConfig] = useState(config);\n\n    const handleNumberChange = useCallback(function(e) {\n        const value = parseFloat(e.target.value);\n        setConfig(configured => ({ ...configured, [e.target.id]: value }));\n    }, []);\n\n    useEffect(() => onChange(configured), [configured, onChange]);\n\n    return <>\n        <div><label>Count</label> : <input type=\"number\" id=\"count\" value={configured.count} onChange={handleNumberChange} /></div>\n        <div><label>Extra chance</label> : <input type=\"number\" id=\"extra_chance\" value={configured.extra_chance} onChange={handleNumberChange} step=\"0.1\" /></div>\n        <div><label>Extra count</label> : <input type=\"number\" id=\"extra_count\" value={configured.extra_count} onChange={handleNumberChange} /></div>\n    </>\n});\n\nconst DecoratedDecorator = React.memo(function({config = DECORATOR_DECORATED_DEFAULTS, onChange}) {\n\n    useEffect(() => onChange(config), [config, onChange]);\n    return <div></div>;\n});\n\nconst RangeDecorator = React.memo(function({config = DECORATOR_RANGE_DEFAULTS, onChange}) {\n    const [configured, setConfig] = useState(config);\n\n    const handleNumberChange = useCallback(function(e) {\n        const value = parseInt(e.target.value);\n        setConfig(configured => ({ ...configured, [e.target.id]: value }));\n    }, []);\n\n    useEffect(() => onChange(configured), [configured, onChange]);\n\n    return <>\n        <div><label>Bottom offset</label> : <input type=\"number\" id=\"bottom_offset\" value={configured.bottom_offset} onChange={handleNumberChange} /></div>\n        <div><label>Top offset</label> : <input type=\"number\" id=\"top_offset\" value={configured.top_offset} onChange={handleNumberChange} /></div>\n        <div><label>Y maximum</label> : <input type=\"number\" id=\"maximum\" value={configured.maximum} onChange={handleNumberChange} /></div>\n    </>\n});","import React, { useCallback, useState, useEffect } from 'react';\nimport { BlocksList, BlockStateProvider } from '../state/BlockState';\nimport { RANDOM_PATCH_FEATURE_CONFIG } from './FeatureDefaults';\n\nexport function RandomPatchFeature({configuration = RANDOM_PATCH_FEATURE_CONFIG, onChange}) {\n\n    const [config, setConfig] = useState(configuration);\n\n    const handleStateProviderChange = useCallback(function(state_provider) {\n        setConfig(config => ({ ...config, state_provider }));\n    }, []);\n    const handleWhitelistChange = useCallback(function(whitelist) {\n        setConfig(config => ({ ...config, whitelist }));\n    }, []);\n    const handleBlacklistChange = useCallback(function(blacklist) {\n        setConfig(config => ({ ...config, blacklist }));\n    }, []);\n    const handleValueChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = parseInt(e.target.value);\n        setConfig(config => ({ ...config, [name]: value }));\n    }, []);\n    const handleCheckboxChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = e.target.checked;\n        setConfig(config => ({ ...config, [name]: value }));\n    }, []);\n\n    useEffect(function() {\n        onChange(config);\n    }, [config, onChange]);\n\n    return <div>\n        <fieldset>\n            <legend>State provider</legend>\n            <BlockStateProvider block={config.state_provider} onChange={handleStateProviderChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Whitelist</legend>\n            <BlocksList list={config.whitelist} onChange={handleWhitelistChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Blacklist</legend>\n            <BlocksList list={config.blacklist} onChange={handleBlacklistChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Settings</legend>\n            <div className=\"form-group form-row\">\n                <div><label htmlFor=\"xspread\">X spread</label> : <input type=\"number\" id=\"xspread\" value={config.xspread} onChange={handleValueChange} /></div>\n                <div><label htmlFor=\"yspread\">Y spread</label> : <input type=\"number\" id=\"yspread\" value={config.yspread} onChange={handleValueChange} /></div>\n                <div><label htmlFor=\"zspread\">Z spread</label> : <input type=\"number\" id=\"zspread\" value={config.zspread} onChange={handleValueChange} /></div>\n                <div><label htmlFor=\"tries\">Tries</label> : <input type=\"number\" id=\"tries\" value={config.tries} onChange={handleValueChange} /></div>\n            </div>\n            <div className=\"form-group form-row\">\n                <div><label htmlFor=\"need_water\">Need water</label> : <input type=\"checkbox\" className=\"checkbox\" id=\"need_water\" checked={config.need_water} onChange={handleCheckboxChange} /></div>\n                <div><label htmlFor=\"project\">Project</label> : <input type=\"checkbox\" className=\"checkbox\" id=\"project\" checked={config.project} onChange={handleCheckboxChange} /></div>\n                <div><label htmlFor=\"can_replace\">Can replace</label> : <input type=\"checkbox\" className=\"checkbox\" id=\"can_replace\" checked={config.can_replace} onChange={handleCheckboxChange} /></div>\n            </div>\n        </fieldset>\n    </div>;\n}","import React, { useState, useCallback, useMemo, useContext, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport { DataContext } from \"../../context/DataContext\";\nimport { TAGS_OPTIONS } from \"../feature/FeatureDefaults\";\n\nexport const BlockPredicate = React.memo(function({target, onChange}) {\n    const [predicate, setPredicate] = useState(target);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:block_match', label: 'Block match' },\n            { value: 'minecraft:tag_match', label: 'Tag match' }\n        ];\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        setPredicate({ predicate_type: option.value });\n    }, []);\n    const handleBlockChange = useCallback(function(option) {\n        setPredicate(predicate => ({ ...predicate, block: option.value }));\n    }, []);\n    const handleTagChange = useCallback(function(option) {\n        setPredicate(predicate => ({ ...predicate, tag: option.value }));\n    }, []);\n    useEffect(() => onChange(predicate), [onChange, predicate]);\n\n    const context = useContext(DataContext);\n    const blocks = useMemo(function() {\n        return context.vanilla.blocks.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n    }, [context.vanilla.blocks]);\n\n    return <div>\n        <label>Predicate type</label>\n        <Select options={options} value={options.find(o => o.value === predicate.predicate_type)} onChange={handleTypeChange} />\n        {(predicate.predicate_type === 'minecraft:block_match') && <Select options={blocks} value={blocks.find(b => b.value === predicate.block)} onChange={handleBlockChange} />}\n        {(predicate.predicate_type === 'minecraft:tag_match') && <Select options={TAGS_OPTIONS} value={TAGS_OPTIONS.find(t => t.value === predicate.tag)} onChange={handleTagChange} />}\n    </div>;\n});","import React, { useCallback, useState, useEffect } from 'react';\nimport { ORE_FEATURE_CONFIG } from \"./FeatureDefaults\";\nimport { BlockPredicate } from '../state/BlockPredicate';\nimport { BlockState } from '../state/BlockState';\n\nexport function OreFeatureConfig({configuration = ORE_FEATURE_CONFIG, onChange}) {\n    const [config, setConfig] = useState(configuration);\n\n    const handlePredicateChange = useCallback(function(target) {\n        setConfig(config => ({ ...config, target }));\n    }, []);\n    const handleBlockChange = useCallback(function(state) {\n        setConfig(config => ({ ...config, state }));\n    }, []);\n    const handleValueChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = parseInt(e.target.value);\n        setConfig(config => ({ ...config, [name]: value }));\n    }, []);\n\n    useEffect(function() {\n        onChange(config);\n    }, [config, onChange]);\n\n    return <div>\n        <fieldset>\n            <legend>Target</legend>\n            <BlockPredicate target={config.target} onChange={handlePredicateChange} />\n        </fieldset>\n        <fieldset>\n            <legend>State</legend>\n            <BlockState block={config.state} onChange={handleBlockChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Settings</legend>\n            <div className=\"form-group\">\n                <label htmlFor=\"size\">Size</label> : <input type=\"number\" id=\"size\" value={config.size} onChange={handleValueChange} />\n            </div>\n        </fieldset>\n    </div>;\n}","import React, { useCallback, useMemo } from 'react';\nimport Select from 'react-select';\nimport { useState } from 'react';\nimport { TreeFeatureConfig } from './TreeFeature';\nimport { Button } from '../../ui/Button';\nimport { DecoratorsList } from './Decorator';\nimport { buildDecorated, findDecorators } from '../../utils/data';\nimport { DECORATED_TREE_CONFIG, DECORATED_RANDOM_PATCH_CONFIG, DECORATED_ORE_FEATURE_CONFIG } from './FeatureDefaults';\nimport { RandomPatchFeature } from './RandomPatchFeature';\nimport { OreFeatureConfig } from './OreFeature';\n\nexport function RawConfiguredFeature({data = DECORATED_TREE_CONFIG, onSave}) {\n    const [state, setState] = useState(data);\n\n    const [decorators, feature, type] = useMemo(function() {\n        const a = findDecorators(state);\n        return [...a, a[1].type];\n    }, [state]);\n\n    const handleSelectChange = useCallback(function(option) {\n        setState({...option.default});\n    }, []);\n    const handleSave = useCallback(function(feature, decorators) {\n        const name = document.getElementById('name').value;\n        const data = buildDecorated(feature, decorators, name);\n        if (data.key === '') {\n            alert('You must specify a key!')\n            return;\n        }\n        onSave(data);\n    }, [onSave]);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'ore', label: 'Ore', default: DECORATED_ORE_FEATURE_CONFIG },\n            { value: 'random_patch', label: 'Random patch', default: DECORATED_RANDOM_PATCH_CONFIG },\n            { value: 'tree', label: 'Tree', default: DECORATED_TREE_CONFIG }\n        ].map(o => {\n            o.value = 'minecraft:' + o.value;\n            return o;\n        });\n    }, []);\n\n    return <div>\n        <h3>Edit configured feature</h3>\n        <div className=\"form-group\">\n            <label htmlFor=\"name\">Name</label> : <input type=\"text\" name=\"name\" id=\"name\" required pattern=\"[a-z0-9._-]+\" placeholder=\"Ex. : prismarine-tree\" defaultValue={(data || {}).key} />\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"type\">Type</label>\n            <Select options={options} value={options.find(o => o.value === type)} onChange={handleSelectChange} />\n        </div>\n        <hr />\n        <ConfiguredFeature key={type} feature={feature} deco={decorators} onSave={handleSave} />\n    </div>\n}\n\nfunction ConfiguredFeature({feature, deco, onSave}) {\n    const [configuration, configure] = useState(feature);\n    const [decorators, setDecorators] = useState(deco);\n\n    const handleConfigurationChange = useCallback(function(config) {\n        configure(configuration => ({ ...configuration, config }));\n    }, []);\n    const handleDecoratorsChange = useCallback(function(decorators) {\n        setDecorators(decorators);\n    }, []);\n\n    const handleSaveClick = useCallback(function(e) {\n        e.preventDefault();\n        onSave(configuration, decorators)\n    }, [configuration, decorators, onSave]);\n\n    return <>\n        {feature.type === 'minecraft:ore' && <OreFeatureConfig configuration={configuration.config} onChange={handleConfigurationChange} />}\n        {feature.type === 'minecraft:random_patch' && <RandomPatchFeature configuration={configuration.config} onChange={handleConfigurationChange} />}\n        {feature.type === 'minecraft:tree' && <TreeFeatureConfig configuration={configuration.config} onChange={handleConfigurationChange} />}\n        <DecoratorsList data={decorators} onChange={handleDecoratorsChange} />\n        <div className=\"form-group mlm mbm\">\n            <Button type=\"submit\" onClick={handleSaveClick}>Save</Button>\n        </div>\n    </>;\n}","import JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\nimport { dataUpper } from \"./data\";\n\nconst DIMENSIONS_PATH = /^data\\/([a-z0-9._-]+)\\/(dimension)\\/([a-z0-9._-]+).json$/;\nconst WORLDGEN_PATH = /^data\\/([a-z0-9._-]+)\\/worldgen\\/(biome|configured_feature|configured_surface_builder)\\/([a-z0-9._-]+).json$/;\n\nconst LEGACY_PATH_DETECTION = /^data\\/minecraft\\/(dimension|worldgen)\\/?\\w*\\/([a-z0-9._-]+)\\/([a-z0-9._-]+).json$/;\nconst LEGACY_DIMENSIONS_PATH = /^data\\/minecraft\\/(dimension)\\/([a-z0-9._-]+)\\/([a-z0-9._-]+).json$/;\nconst LEGACY_WORLDGEN_PATH = /^data\\/minecraft\\/worldgen\\/(biome|configured_feature|configured_surface_builder)\\/([a-z0-9._-]+)\\/([a-z0-9._-]+).json$/;\n\n/**\n * Build zip in blob.\n * \n * @param {string} namespace \n * @param {{ biomes: object[], dimensions: object[], features: object[], surfaces: object[] }} custom \n */\nexport function buildZip(namespace, custom) {\n    const zip = new JSZip();\n    zip.file('pack.mcmeta', JSON.stringify({ pack: { pack_format: 5, description: 'Custom dimension' } }, null, 4));\n    writeFile(zip, `data/${namespace}/dimension`, custom.dimensions);\n    writeFile(zip, `data/${namespace}/worldgen/biome`, custom.biomes);\n    writeFile(zip, `data/${namespace}/worldgen/configured_feature`, custom.features);\n    writeFile(zip, `data/${namespace}/worldgen/configured_surface_builder`, custom.surfaces);\n    zip.generateAsync({ type: 'blob' })\n        .then(function(content) {\n            saveAs(content, 'generated_datapack.zip');\n        });\n}\n\n/**\n * @param {File} file\n * @returns {Promise<[string, { biomes: object[], dimensions: object[], features: object[], surfaces: object[] }]>}\n */\nexport function readZip(file) {\n    return new Promise((resolve, reject) => {\n        if (file.type !== 'application/zip') {\n            reject(new Error('File is not a .zip'));\n        }\n\n        JSZip.loadAsync(file).then((zip) => {\n            extractDatapack(zip)\n                .then(resolve)\n                .catch(reject);\n        }).catch(reject);\n    });\n}\n\n/**\n * @param {JSZip} zip \n * @returns {Promise<string, object>}\n */\nfunction extractDatapack(zip) {\n    let mcmeta = false;\n    let namespace = 'test';\n    const data = {\n        biomes: [],\n        dimensions: [],\n        features: [],\n        surfaces: []\n    };\n\n    return new Promise((resolve, reject) => {\n        const promises = [];\n        zip.forEach(function(path, entry) {\n            if (entry.dir) {\n                return;\n            }\n            if (entry.name === 'pack.mcmeta') {\n                mcmeta = true;\n                return;\n            }\n            const legacy = entry.name.match(LEGACY_PATH_DETECTION);\n            let regex = DIMENSIONS_PATH.exec(entry.name) ? DIMENSIONS_PATH : WORLDGEN_PATH;\n            if (legacy) {\n                regex = path.includes('data/minecraft/dimension/') ? LEGACY_DIMENSIONS_PATH : LEGACY_WORLDGEN_PATH;\n            }\n            promises.push(parseFile(legacy, regex, entry.name, zip.file(entry.name).async('text')));\n        });\n\n        if (!mcmeta) {\n            reject(new Error('Invalid datapack: no pack.mcmeta'));\n        }\n\n        Promise.all(promises).then(function(values) {\n            values.forEach(function(value) {\n                if (value === null) {\n                    return;\n                }\n\n                namespace = value.namespace;\n                data[value.type].push(value.data);\n            });\n            resolve([namespace, data]);\n        }).catch(e => reject(e));\n    });\n}\n\nfunction getFolderType(folder) {\n    switch (folder) {\n        case 'configured_feature':\n            return 'features';\n        case 'configured_surface_builder':\n            return 'surfaces';\n        default:\n            return folder + 's';\n    }\n}\n\n/**\n * Parse json file when it will be ready.\n * \n * @param {boolean} legacy\n * @param {RegExp} pathRegex \n * @param {string} filename \n * @param {Promise<string>} contentPromise \n * @returns {Promise<{namespace: string, data: object, type: string}>}\n */\nasync function parseFile(legacy, pathRegex, filename, contentPromise) {\n    const d = pathRegex.exec(filename);\n    if (d === null) {\n        return new Promise((success) => success(null)); // Skip file\n    }\n\n    return new Promise((resolve, reject) => {\n        contentPromise.then(content => {\n            const obj = JSON.parse(content);\n            obj.key = d[3];\n            const data = dataUpper(getFolderType(d[1]), obj);\n            resolve({\n                namespace: d[legacy ? 2 : 1],\n                data,\n                type: getFolderType(d[legacy ? 1 : 2])\n            });\n        }).catch(e => {\n            if (e.name !== 'SyntaxError') {\n                console.error(e);\n            }\n            reject(new Error(`Cannot read ${filename}:\\n${e.message}`));\n        });\n    });\n}\n\nfunction writeFile(zip, path, elements) {\n    if (elements.length < 1) {\n        return;\n    }\n    const folder = zip.folder(path);\n    for (const el of elements) {\n        const w = {...el};\n        delete w.key;\n        folder.file(el.key + '.json', JSON.stringify(w, null, 2));\n    }\n}","import React, { useCallback, useState } from 'react';\nimport { BlockState } from '../state/BlockState';\nimport { Button } from '../../ui/Button';\nimport { SURFACE_TYPES_OPTIONS, SURFACE_BUILDER } from './SurfaceBuilderDefaults';\nimport Select from 'react-select';\n\nexport function SurfaceBuilder({data = SURFACE_BUILDER, onSave}) {\n    const [config, setConfig] = useState(data.config);\n\n    const handleTopMaterialChange = useCallback(function(top_material) {\n        setConfig(config => ({ ...config, top_material }));\n    }, []);\n    const handleUnderMaterialChange = useCallback(function(under_material) {\n        setConfig(config => ({ ...config, under_material }));\n    }, []);\n    const handleUnderwaterMaterialChange = useCallback(function(underwater_material) {\n        setConfig(config => ({ ...config, underwater_material }));\n    }, []);\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        onSave({\n            config,\n            type: formData.get('type'),\n            key: formData.get('key')\n        });\n    }, [config, onSave]);\n\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit surface builder</h3>\n        <div className=\"form-group\">\n            <label htmlFor=\"key\">Identifier</label> : <input type=\"text\" name=\"key\" id=\"key\" required pattern=\"[a-z0-9._-]+\" placeholder=\"Ex. : blackstone\" defaultValue={data.key} />\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"type\">Type</label> : <Select options={SURFACE_TYPES_OPTIONS} defaultValue={SURFACE_TYPES_OPTIONS.find(o => o.value === data.type)} name=\"type\" />\n            <p><small className=\"text-muted\">The builder type defines the shape of the surface. For example, the <em>swamp</em> type will create puddles while the <em>badlands</em> types will create small rocky peaks; the <em>nether</em> types will add a mix of nether blocks and expose more of the underneath material.</small></p>\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"top_material\">Top material</label> : <BlockState block={config.top_material} name=\"top_material\" onChange={handleTopMaterialChange} />\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"under_material\">Under material</label> : <BlockState block={config.under_material} name=\"under_material\" onChange={handleUnderMaterialChange} />\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"sea_lantern\">Underwater material</label> : <BlockState block={config.underwater_material} name=\"underwater_material\" onChange={handleUnderwaterMaterialChange} />\n        </div>\n        <div className=\"form-group mlm mbm\">\n            <Button type=\"submit\">Save</Button>\n        </div>\n    </form>;\n}","import React, { useCallback, useState, useContext } from 'react';\nimport { Biome } from './biome/Biome';\nimport { Button } from './../ui/Button';\nimport { MenuItem } from './../ui/Menu';\nimport { Dimension } from './dimension/Dimension';\nimport { DataContext } from './../context/DataContext';\nimport { RawConfiguredFeature } from './feature/ConfiguredFeature';\nimport { buildZip } from '../utils/zip';\nimport { SurfaceBuilder } from './surface/SurfaceBuilder';\n\nexport function Datapack() {\n    const context = useContext(DataContext);\n    const custom = context.custom;\n    const namespace = context.namespace;\n    const [menu, setMenu] = useState({page: 'stats'});\n\n    const handleStatsClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'stats'});\n    }, []);\n    const handleAddBiomeClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'biome'});\n    }, []);\n    const handleAddDimensionClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'dimension'});\n    }, []);\n    const handleAddFeatureClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'feature'});\n    }, []);\n    const handleAddSurfaceBuilderClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'surface'});\n    }, []);\n\n    const onBiomeSave = useCallback(function(biome) {\n        custom.updateBiomes(biome);\n        setMenu({page: 'stats'});\n    }, [custom]);\n    const onDimensionSave = useCallback(function(dimension) {\n        custom.updateDimensions(dimension);\n        setMenu({page: 'stats'});\n    }, [custom]);\n    const onFeatureSave = useCallback(function(feature) {\n        custom.updateFeatures(feature);\n        setMenu({page: 'stats'});\n    }, [custom]);\n    const onSurfaceBuilderSave = useCallback(function(surface_builder) {\n        custom.updateSurfacesBuilders(surface_builder);\n        setMenu({page: 'stats'});\n    }, [custom]);\n\n    const editBiome = useCallback(function(index) {\n        setMenu({page: 'biome', index});\n    }, []);\n    const editDimension = useCallback(function(index) {\n        setMenu({page: 'dimension', index});\n    }, []);\n    const editFeature = useCallback(function(index) {\n        setMenu({page: 'feature', index});\n    }, []);\n    const editSurface = useCallback(function(index) {\n        setMenu({page: 'surface', index});\n    }, []);\n\n    return <div>\n        <h2>Datapack {namespace}</h2>\n        <div className=\"tabs\"><nav className=\"tabs-menu\">\n            <MenuItem onClick={handleStatsClick} active={menu.page === 'stats'}>Stats</MenuItem>\n            <MenuItem onClick={handleAddBiomeClick} active={menu.page === 'biome'}>Biome</MenuItem>\n            <MenuItem onClick={handleAddSurfaceBuilderClick} active={menu.page === 'surface'}>Surfaces builder</MenuItem>\n            <MenuItem onClick={handleAddFeatureClick} active={menu.page === 'feature'}>Feature</MenuItem>\n            <MenuItem onClick={handleAddDimensionClick} active={menu.page === 'dimension'}>Dimension</MenuItem>\n        </nav></div>\n        {menu.page === 'biome' && <Biome onSave={onBiomeSave} data={custom.biomes[menu.index]} />}\n        {menu.page === 'surface' && <SurfaceBuilder onSave={onSurfaceBuilderSave} data={custom.surfaces[menu.index]} />}\n        {menu.page === 'feature' && <RawConfiguredFeature onSave={onFeatureSave} data={custom.features[menu.index]} />}\n        {menu.page === 'dimension' && <Dimension onSave={onDimensionSave} data={custom.dimensions[menu.index]} />}\n        {menu.page === 'stats' && <Stats custom={custom} namespace={namespace} editBiome={editBiome} editDimension={editDimension} editFeature={editFeature} editSurface={editSurface} />}\n    </div>\n}\n\nfunction Stats({custom, namespace, editBiome, editDimension, editFeature, editSurface}) {\n\n    const handleBiomeClick = function(e, index) {\n        e.preventDefault();\n        editBiome(index);\n    }\n    const handleDimensionClick = function(e, index) {\n        e.preventDefault();\n        editDimension(index);\n    }\n    const handleFeatureClick = function(e, index) {\n        e.preventDefault();\n        editFeature(index);\n    }\n    const handleSurfaceClick = function(e, index) {\n        e.preventDefault();\n        editSurface(index);\n    }\n\n    const handleGenerateClick = function(e) {\n        e.preventDefault();\n        buildZip(namespace, custom);\n    }\n\n    const mayGenerate = Object.values(custom).some(content => {\n        if (Array.isArray(content)) {\n            return content.length;\n        }\n        return false;\n    });\n\n    return <div className=\"mtm\">\n        <h5><strong>{custom.biomes.length}</strong> custom biomes</h5>\n        <ul>{custom.biomes.map((biome, i) => <li key={i}><a href=\"#edit-biome\" onClick={(e) => handleBiomeClick(e, i)}>{biome.key}</a></li>)}</ul>\n        \n        <h5><strong>{custom.dimensions.length}</strong> custom dimensions</h5>\n        <ul>{custom.dimensions.map((dim, i) => <li key={i}><a href=\"#edit-dimension\" onClick={(e) => handleDimensionClick(e, i)}>{dim.key}</a></li>)}</ul>\n        \n        <h5><strong>{custom.features.length}</strong> configured features</h5>\n        <ul>{custom.features.map((feature, i) => <li key={i}><a href=\"#edit-feature\" onClick={(e) => handleFeatureClick(e, i)}>{feature.key}</a></li>)}</ul>\n\n        <h5><strong>{custom.surfaces.length}</strong> configured surface builder</h5>\n        <ul>{custom.surfaces.map((surface, i) => <li key={i}><a href=\"#edit-surface\" onClick={(e) => handleSurfaceClick(e, i)}>{surface.key}</a></li>)}</ul>\n\n        {mayGenerate && <p><Button onClick={handleGenerateClick}>Generate</Button></p>}\n    </div>\n}","import React, { useState } from 'react';\nimport { Button } from '../ui/Button';\nimport { readZip } from '../utils/zip';\n\nexport function DatapackForm({onCreate}) {\n\n    const [error, setError] = useState(null);\n\n    const handleCreate = function(e) {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const namespace = data.get('namespace');\n        onCreate([namespace, undefined]);\n    };\n\n    const handleFile = function(e) {\n        const file = e.target.files[0];\n        readZip(file)\n            .then(onCreate)\n            .catch(error => {\n                console.error(error);\n                setError(error.message);\n            });\n    };\n\n    return <form onSubmit={handleCreate}>\n        <h2>Create a new dimension datapack</h2>\n        <div className=\"form-group\">\n            <label htmlFor=\"namespace\">Namespace</label> : <input type=\"text\" name=\"namespace\" id=\"namespace\" required pattern=\"[a-z0-9._-]+\" className=\"form-control\" aria-describedby=\"namespaceHelp\" />\n            <p><small id=\"namespaceHelp\" className=\"form-text text-muted\">This differentiates the datapack from the vanilla functions. Namespaces and identifiers may only contain letters, numbers and <code>._-</code> characters.</small></p>\n        </div>\n        <div className=\"flex-container\">\n            <Button type=\"submit\">Create</Button>\n            <input type=\"file\" name=\"load-existing-zip\" id=\"load-existing-zip\" accept=\".zip\" onChange={handleFile} /><label htmlFor=\"load-existing-zip\" className=\"btn--info\">Use existing datapack</label>\n        </div>\n        {error !== null && <div className=\"mtl\">\n            <div className=\"alert--danger\">{error}</div>\n        </div>}\n        <div className=\"mtl\">\n            <div className=\"alert--warning\">\n                This generator as well as the in-game functionality is unstable. Use this tool with caution.<br />\n                Currently built for pre-release 1. Datapacks created in snapshots will be converted to work in this pre-release.\n            </div>\n        </div>\n    </form>\n}","import React, { useState } from 'react';\nimport './../node_modules/knacss/css/knacss.css';\nimport './App.css';\nimport { Datapack } from './components/Datapack';\nimport { DataContextProvider } from './context/DataContext';\nimport { DatapackForm } from './components/DatapackForm';\n\nfunction App() {\n    const [data, setData] = useState(null);\n\n    return <>\n        {data !== null ? <DataContextProvider namespace={data[0]} initial={data[1]}><Datapack /></DataContextProvider> : <DatapackForm onCreate={setData} />}\n    </>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}