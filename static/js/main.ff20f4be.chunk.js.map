{"version":3,"sources":["components/biome/BiomeDefaults.js","components/biome/BiomeStarts.jsx","ui/Button.jsx","hooks/ui.js","utils/fetch.js","components/feature/FeatureDefaults.js","hooks/context.js","components/surface/SurfaceBuilderDefaults.js","context/DataContext.jsx","components/biome/BiomeSpawners.jsx","components/biome/Features.jsx","utils/color.js","components/biome/BiomeEffects.jsx","components/biome/Biome.jsx","ui/Menu.jsx","components/dimension/DimensionType.jsx","hooks/form.js","utils/data.js","components/dimension/BiomeSource.jsx","components/dimension/DimensionDefaults.js","components/dimension/DimensionGenerator.jsx","utils/hash.js","components/dimension/Dimension.jsx","components/state/BlockState.jsx","components/feature/TreeFeature.jsx","components/feature/Decorator.jsx","components/feature/RandomPatchFeature.jsx","components/state/BlockPredicate.jsx","components/feature/OreFeature.jsx","components/feature/ConfiguredFeature.jsx","utils/zip.js","components/surface/SurfaceBuilder.jsx","components/Datapack.jsx","components/DatapackForm.jsx","App.js","serviceWorker.js","index.js"],"names":["EFFECTS","mood_sound","sound","tick_delay","block_search_extent","offset","fog_color","water_color","water_fog_color","FEATURES","STARTS","SPAWNERS_AMBIENT","type","weight","minCount","maxCount","SPAWNERS_CREATURE","SPAWNERS_MONSTER","BiomeStarts","onChange","starts","useEffect","handleChange","useCallback","selectedOptions","map","option","value","options","useMemo","label","className","htmlFor","isMulti","id","defaultValue","filter","o","includes","Button","loading","cat","buttonProps","useToggle","initial","useState","status","setState","toggle","e","preventDefault","current","jsonFetch","url","a","fetch","headers","Accept","response","json","responseData","ok","VANILLA_FEATURES","TAGS_OPTIONS","tag","DECORATORS_OPTIONS","ORE_FEATURE_CONFIG","target","predicate_type","state","Name","size","DECORATED_ORE_FEATURE_CONFIG","config","feature","name","decorator","bottom_offset","top_offset","maximum","count","TREE_FEATURE_CONFIG","heightmap","minimum_size","limit","lower_size","upper_size","decorators","trunk_provider","Properties","axis","leaves_provider","persistent","distance","foliage_placer","radius","height","trunk_placer","base_height","height_rand_a","height_rand_b","RANDOM_PATCH_FEATURE_CONFIG","can_replace","project","need_water","xspread","yspread","zspread","whitelist","snowy","blacklist","tries","state_provider","block_placer","DECORATED_RANDOM_PATCH_CONFIG","outer","inner","chance","DECORATED_TREE_CONFIG","extra_chance","extra_count","DECORATOR_EXTRA_COUNT_DEFAULTS","DECORATOR_DECORATED_DEFAULTS","DECORATOR_RANGE_DEFAULTS","useData","data","setData","object","stored","i","findIndex","key","push","useKeyedListOptions","category","context","useContext","DataContext","custom","keyed","namespace","struct","vanilla","forEach","hasOwnProperty","displayName","VANILLA_SURFACE_BUILDERS","SURFACE_BUILDER","top_material","under_material","underwater_material","React","createContext","biomes","blocks","entities","features","surfaces","dimensions","updateBiomes","biome","updateDimensions","dimension","updateFeatures","updateSurfacesBuilders","surface_builder","DataContextProvider","children","setBiomes","setBlocks","setEntities","customBiomes","then","entity","Provider","spawnersReducer","action","payload","spawner","BiomeSpawners","ambient","creature","misc","monster","water_ambient","water_creature","spawners","setSpawners","group","groupSpawners","SpawnGroup","visibility","text","useReducer","dispatch","handleAdd","original","handleRemove","values","def","SpawnDefinition","onDelete","onClick","length","memo","definition","setDefinition","field","parseInt","handleCountChange","selectedOption","find","required","min","prev","next","GenFeatures","levels","setLevels","handleLevelChange","priority","list","elements","level","GenFeaturesLevel","hexColorToInteger","color","replace","integerColorToHex","toString","padStart","BiomeEffects","effects","colors","setColors","handleColorChange","persist","Biome","onSave","handleStartsChange","handleEffectsChange","handleFeaturesChange","handleSpawnersChange","handleSubmit","formData","Object","fromEntries","FormData","spawn_costs","carvers","air","sky_color","keys","isNaN","parseFloat","onSubmit","pattern","placeholder","BiomeCategory","BiomePrecipitation","precipitation","SurfaceBuilder","step","scale","downfall","depth","temperature","MenuItem","active","href","DimensionType","crudReducer","ADD","UPDATE","element","REMOVE","useCrud","CRUD","objectsEqual","b","every","p","BiomeSource","biome_source","source","setSource","handleSeedChange","seed","handleTypeChange","handleFixedSourceChange","handleMultiSourceChange","selected","SeedField","FixedBiomeSource","MultiNoiseBiomeSource","setBiome","parametersWarning","toggleWarningVisibility","handleAddClick","parameters","previous","handleDeleteClick","index","hasDuplicated","objects","hasDuplicatedObjects","entry","BiomeSelection","biomesOptions","selection","setSelection","handleBiomeChange","rainfall","altitude","weirdness","humidity","handleParameterChange","FIXED_GENERATOR","settings","DimensionGenerator","generator","handleSettingsChange","handleBiomeSourceChange","Settings","setText","s","hash","Math","imul","charCodeAt","hashCode","Dimension","handleGeneratorChange","get","BlockStateProvider","block","provider","setProvider","handleSimpleStateChange","handleWeighestStateChange","entries","BlockState","WeightedStateProvider","states","properties","actual","getStateValue","handlePropertiesChange","BlockStateProperties","BlocksList","setProperties","handlePropertyChange","handleCheckboxChange","checked","handleNumberChange","selects","possible","max","num_values","TreeFeatureConfig","configuration","setConfig","handleTrunkProviderChange","handleLeavesProviderChange","handleFoliagePlacerChange","handleTrunkPlacerChange","FoliagePlacer","placer","TrunkPlacer","handleValueChange","n","DecoratorsList","Decorator","setDecorator","handleSelectChange","handleConfigChange","ChanceDecorator","CountDecorator","ExtraCountDecorator","DecoratedDecorator","RangeDecorator","setChance","handleChanceChange","setCount","configured","RandomPatchFeature","handleStateProviderChange","handleWhitelistChange","handleBlacklistChange","BlockPredicate","predicate","setPredicate","handleBlockChange","handleTagChange","t","OreFeatureConfig","handlePredicateChange","RawConfiguredFeature","f","obj","unshift","findDecorators","default","handleSave","decorated","buildDecorated","document","getElementById","alert","ConfiguredFeature","deco","configure","setDecorators","handleConfigurationChange","handleDecoratorsChange","handleSaveClick","writeFile","zip","path","folder","el","w","console","log","file","JSON","stringify","handleTopMaterialChange","handleUnderMaterialChange","handleUnderwaterMaterialChange","Datapack","page","menu","setMenu","handleStatsClick","handleAddBiomeClick","handleAddDimensionClick","handleAddFeatureClick","handleAddSurfaceBuilderClick","onBiomeSave","onDimensionSave","onFeatureSave","onSurfaceBuilderSave","editBiome","editDimension","editFeature","editSurface","Stats","handleBiomeClick","dim","handleDimensionClick","handleFeatureClick","surface","handleSurfaceClick","JSZip","pack","pack_format","description","generateAsync","content","saveAs","buildZip","DatapackForm","onCreate","aria-describedby","App","setNamespace","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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aACA,uBACA,QACA,uBACA,uBACA,eACA,mBACA,kBACA,YACA,4BACA,2BACA,iBACA,iBACA,gBACA,gBACA,gBACA,qBACA,kBACA,iBACA,gBACA,iBACA,gBACA,qBACA,aACA,YACA,YACA,cACA,kBACA,iBACA,eACA,YACA,YACA,WACA,eACA,SACA,QACA,aACA,YACA,YACA,cACA,YACA,mBACA,cACA,sBACA,eACA,cACA,SACA,qBACA,cACA,eACA,gBACA,uBACA,cACA,eACA,WACA,aACA,YACA,WACA,eACA,aACA,kBACA,uBACA,qBACA,sBACA,kBACA,gBACA,oBACA,mBACA,oBACA,qBACA,uBACA,sBACA,qBACA,oBACA,sBACA,qBACA,kBACA,oBACA,2BACA,cACA,qBACA,wBACA,mBACA,mBACA,qBACA,mBACA,eACA,sBACA,yBACA,yBACA,0BACA,4BACA,mBACA,wBACA,sBACA,wBACA,sBACA,uBACA,qBACA,uBACA,qBACA,uBACA,qBACA,YACA,gBACA,kBACA,oBACA,kBACA,oBACA,oBACA,iBACA,WACA,aACA,cACA,cACA,eACA,WACA,WACA,iBACA,WACA,eACA,cACA,YACA,eACA,cACA,mBACA,mBACA,gBACA,wBACA,eACA,uBACA,sBACA,oBACA,MACA,WACA,QACA,SACA,SACA,OACA,cACA,YACA,sBACA,mBACA,cACA,YACA,aACA,cACA,eACA,eACA,cACA,iBACA,gBACA,eACA,eACA,yBACA,kCACA,2BACA,+BACA,6BACA,wBACA,sBACA,mBACA,0BACA,gBACA,aACA,sBACA,iBACA,cACA,cACA,mBACA,oBACA,qBACA,cACA,eACA,oBACA,6BAGSC,EAAe,CACxB,cACA,QACA,sBACA,UACA,0BACA,6BACA,qBACA,OACA,WACA,gBACA,aACA,UACA,YACA,UACA,YACA,SACA,eACA,eACA,gBACA,QACA,gBACA,QACA,gBACA,oBACA,cACA,SACA,OACA,UACA,cACA,YACA,qBACA,oBACA,MACA,cACA,iBACA,oBACA,uBACA,cACA,S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","file":"static/js/main.ff20f4be.chunk.js","sourcesContent":["export const EFFECTS = {\n    mood_sound: {\n        sound: \"minecraft:ambient.cave\",\n        tick_delay: 6000,\n        block_search_extent: 8,\n        offset: 2.0\n    },\n    fog_color: 12638463,\n    water_color: 4159204,\n    water_fog_color: 329011\n}\n\nexport const FEATURES = [\n    [],\n    [\n      \"minecraft:lake_water\",\n      \"minecraft:lake_lava\"\n    ],\n    [],\n    [\n      \"minecraft:monster_room\"\n    ],\n    [],\n    [],\n    [\n      \"minecraft:ore_dirt\",\n      \"minecraft:ore_gravel\",\n      \"minecraft:ore_granite\",\n      \"minecraft:ore_diorite\",\n      \"minecraft:ore_andesite\",\n      \"minecraft:ore_coal\",\n      \"minecraft:ore_iron\",\n      \"minecraft:ore_gold\",\n      \"minecraft:ore_redstone\",\n      \"minecraft:ore_diamond\",\n      \"minecraft:ore_lapis\",\n      \"minecraft:disk_sand\",\n      \"minecraft:disk_clay\",\n      \"minecraft:disk_gravel\"\n    ],\n    [],\n    [\n      \"minecraft:patch_tall_grass_2\",\n      \"minecraft:plain_vegetation\",\n      \"minecraft:flower_plain_decorated\",\n      \"minecraft:patch_grass_plain\",\n      \"minecraft:brown_mushroom_normal\",\n      \"minecraft:red_mushroom_normal\",\n      \"minecraft:patch_sugar_cane\",\n      \"minecraft:patch_pumpkin\",\n      \"minecraft:spring_water\",\n      \"minecraft:spring_lava\"\n    ],\n    [\n      \"minecraft:freeze_top_layer\"\n    ]\n]\n\nexport const STARTS = [\n    \"minecraft:village_plains\",\n    \"minecraft:pillager_outpost\",\n    \"minecraft:mineshaft\",\n    \"minecraft:stronghold\",\n    \"minecraft:ruined_portal\"\n]\n\nexport const SPAWNERS_AMBIENT = [\n    {\n        type: \"minecraft:bat\",\n        weight: 10,\n        minCount: 8,\n        maxCount: 8\n    }\n];\n\nexport const SPAWNERS_CREATURE = [\n    {\n        type: \"minecraft:sheep\",\n        weight: 12,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:pig\",\n        weight: 10,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:chicken\",\n        weight: 10,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:cow\",\n        weight: 8,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:horse\",\n        weight: 5,\n        minCount: 2,\n        maxCount: 6\n    },\n    {\n        type: \"minecraft:donkey\",\n        weight: 1,\n        minCount: 1,\n        maxCount: 3\n    }\n];\n\nexport const SPAWNERS_MONSTER = [\n    {\n        type: \"minecraft:spider\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:zombie\",\n        weight: 95,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:zombie_villager\",\n        weight: 5,\n        minCount: 1,\n        maxCount: 1\n    },\n    {\n        type: \"minecraft:skeleton\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:creeper\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:slime\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:enderman\",\n        weight: 10,\n        minCount: 1,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:witch\",\n        weight: 5,\n        minCount: 1,\n        maxCount: 1\n    },\n];","import React, { useCallback, useMemo, useEffect } from 'react';\nimport Select from 'react-select';\nimport { STARTS } from './BiomeDefaults';\n\nexport default function BiomeStarts({onChange, starts = STARTS}) {\n    useEffect(function () {\n        onChange(starts);\n    }, [onChange, starts]);\n\n    const handleChange = useCallback(function(selectedOptions) {\n        onChange(selectedOptions === null ? [] : selectedOptions.map(option => option.value));\n    }, [onChange]);\n\n    const options = useMemo(function() {\n        return [\n            \"pillager_outpost\",\n            \"mineshaft\",\n            \"mineshaft_mesa\",\n            \"mansion\",\n            \"jungle_pyramid\",\n            \"desert_pyramid\",\n            \"igloo\",\n            \"shipwreck\",\n            \"shipwreck_beached\",\n            \"swamp_hut\",\n            \"stronghold\",\n            \"monument\",\n            \"ocean_ruin_cold\",\n            \"ocean_ruin_warm\",\n            \"fortress\",\n            \"nether_fossil\",\n            \"end_city\",\n            \"buried_treasure\",\n            \"bastion_remnant\",\n            \"village_plains\",\n            \"village_desert\",\n            \"village_savanna\",\n            \"village_snovy\",\n            \"village_taiga\",\n            \"ruined_portal\",\n            \"ruined_portal_desert\",\n            \"ruined_portal_jungle\",\n            \"ruined_portal_swamp\",\n            \"ruined_portal_mountain\",\n            \"ruined_portal_ocean\",\n            \"ruined_portal_nether\"\n        ].map(option => ({ value: 'minecraft:' + option, label: 'minecraft:' + option }));\n    }, []);\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"starts\">Structures</label>\n        <Select isMulti id=\"starts\" options={options} onChange={handleChange} defaultValue={options.filter(o => starts.includes(o.value))} />\n    </div>;\n}","import React from 'react';\n\nexport function Button ({loading, cat = 'primary', ...buttonProps}) {\n    return <button className={`btn btn--${cat}`} {...buttonProps}></button>\n}\n","import { useState } from \"react\";\n\n/**\n * @param {boolean} initial \n * @returns {[boolean, function(): void]}\n */\nexport function useToggle(initial = false) {\n    const [status, setState] = useState(initial);\n    const toggle = function (e = false) {\n        if (e !== false) {\n            e.preventDefault();\n        }\n        setState(current => !current);\n    }\n    return [status, toggle];\n}","/**\n * @param {string} url\n * @param {object} options\n */\nexport async function jsonFetch(url, options) {\n    const response = await fetch(url, {\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        ...options\n    });\n\n    const responseData = await response.json();\n    if (response.ok) {\n        return responseData;\n    }\n    throw responseData;\n}","export const VANILLA_FEATURES = [\n    \"nope\",\n    \"end_spike\",\n    \"end_gateway\",\n    \"end_gateway_delayed\",\n    \"chorus_plant\",\n    \"end_island\",\n    \"end_island_decorated\",\n    \"delta\",\n    \"small_basalt_columns\",\n    \"large_basalt_columns\",\n    \"basalt_blobs\",\n    \"blackstone_blobs\",\n    \"glowstone_extra\",\n    \"glowstone\",\n    \"crimson_forest_vegetation\",\n    \"warped_forest_vegetation\",\n    \"nether_sprouts\",\n    \"twisting_vines\",\n    \"weeping_vines\",\n    \"basalt_pillar\",\n    \"seagrass_cold\",\n    \"seagrass_deep_cold\",\n    \"seagrass_normal\",\n    \"seagrass_river\",\n    \"seagrass_deep\",\n    \"seagrass_swamp\",\n    \"seagrass_warm\",\n    \"seagrass_deep_warm\",\n    \"sea_pickle\",\n    \"ice_spike\",\n    \"ice_patch\",\n    \"forest_rock\",\n    \"seagrass_simple\",\n    \"iceberg_packed\",\n    \"iceberg_blue\",\n    \"kelp_cold\",\n    \"kelp_warm\",\n    \"blue_ice\",\n    \"bamboo_light\",\n    \"bamboo\",\n    \"vines\",\n    \"lake_water\",\n    \"lake_lava\",\n    \"disk_clay\",\n    \"disk_gravel\",\n    \"disk_sand\",\n    \"freeze_top_layer\",\n    \"bonus_chest\",\n    \"void_start_platform\",\n    \"monster_room\",\n    \"desert_well\",\n    \"fossil\",\n    \"spring_lava_double\",\n    \"spring_lava\",\n    \"spring_delta\",\n    \"spring_closed\",\n    \"spring_closed_double\",\n    \"spring_open\",\n    \"spring_water\",\n    \"pile_hay\",\n    \"pile_melon\",\n    \"pile_snow\",\n    \"pile_ice\",\n    \"pile_pumpkin\",\n    \"patch_fire\",\n    \"patch_soul_fire\",\n    \"patch_brown_mushroom\",\n    \"patch_red_mushroom\",\n    \"patch_crimson_roots\",\n    \"patch_sunflower\",\n    \"patch_pumpkin\",\n    \"patch_taiga_grass\",\n    \"patch_berry_bush\",\n    \"patch_grass_plain\",\n    \"patch_grass_forest\",\n    \"patch_grass_badlands\",\n    \"patch_grass_savanna\",\n    \"patch_grass_normal\",\n    \"patch_grass_taiga\",\n    \"patch_grass_taiga_2\",\n    \"patch_grass_jungle\",\n    \"patch_dead_bush\",\n    \"patch_dead_bush_2\",\n    \"patch_dead_bush_badlands\",\n    \"patch_melon\",\n    \"patch_berry_sparse\",\n    \"patch_berry_decorated\",\n    \"patch_waterlilly\",\n    \"patch_tall_grass\",\n    \"patch_tall_grass_2\",\n    \"patch_large_fern\",\n    \"patch_cactus\",\n    \"patch_cactus_desert\",\n    \"patch_cactus_decorated\",\n    \"patch_sugar_cane_swamp\",\n    \"patch_sugar_cane_desert\",\n    \"patch_sugar_cane_badlands\",\n    \"patch_sugar_cane\",\n    \"brown_mushroom_nether\",\n    \"red_mushroom_nether\",\n    \"brown_mushroom_normal\",\n    \"red_mushroom_normal\",\n    \"brown_mushroom_taiga\",\n    \"red_mushroom_taiga\",\n    \"brown_mushroom_giant\",\n    \"red_mushroom_giant\",\n    \"brown_mushroom_swamp\",\n    \"red_mushroom_swamp\",\n    \"ore_magma\",\n    \"ore_soul_sand\",\n    \"ore_gold_deltas\",\n    \"ore_quartz_deltas\",\n    \"ore_gold_nether\",\n    \"ore_quartz_nether\",\n    \"ore_gravel_nether\",\n    \"ore_blackstone\",\n    \"ore_dirt\",\n    \"ore_gravel\",\n    \"ore_granite\",\n    \"ore_diorite\",\n    \"ore_andesite\",\n    \"ore_coal\",\n    \"ore_iron\",\n    \"ore_gold_extra\",\n    \"ore_gold\",\n    \"ore_redstone\",\n    \"ore_diamond\",\n    \"ore_lapis\",\n    \"ore_infested\",\n    \"ore_emerald\",\n    \"ore_debris_large\",\n    \"ore_debris_small\",\n    \"crimson_fungi\",\n    \"crimson_fungi_planted\",\n    \"warped_fungi\",\n    \"warped_fungi_planted\",\n    \"huge_brown_mushroom\",\n    \"huge_red_mushroom\",\n    \"oak\",\n    \"dark_oak\",\n    \"birch\",\n    \"acacia\",\n    \"spruce\",\n    \"pine\",\n    \"jungle_tree\",\n    \"fancy_oak\",\n    \"jungle_tree_no_vine\",\n    \"mega_jungle_tree\",\n    \"mega_spruce\",\n    \"mega_pine\",\n    \"swamp_tree\",\n    \"jungle_bush\",\n    \"oak_badlands\",\n    \"spruce_snovy\",\n    \"flower_warm\",\n    \"flower_default\",\n    \"flower_forest\",\n    \"flower_swamp\",\n    \"flower_plain\",\n    \"flower_plain_decorated\",\n    \"forest_flower_vegetation_common\",\n    \"forest_flower_vegetation\",\n    \"dark_forest_vegetation_brown\",\n    \"dark_forest_vegetation_red\",\n    \"warm_ocean_vegetation\",\n    \"forest_flower_trees\",\n    \"taiga_vegetation\",\n    \"trees_shattered_savanna\",\n    \"trees_savanna\",\n    \"birch_tall\",\n    \"trees_mountain_edge\",\n    \"trees_mountain\",\n    \"trees_water\",\n    \"birch_other\",\n    \"plain_vegetation\",\n    \"trees_jungle_edge\",\n    \"trees_giant_spruce\",\n    \"trees_giant\",\n    \"trees_jungle\",\n    \"bamboo_vegetation\",\n    \"mushroom_field_vegetation\"\n];\n\nexport const TAGS_OPTIONS = [\n    'acacia_logs',\n    'anvil',\n    'bamboo_plantable_on',\n    'banners',\n    'base_stone_nether‌',\n    'base_stone_overworld‌',\n    'beacon_base_blocks',\n    'beds',\n    'beehives',\n    'bee_growables',\n    'birch_logs',\n    'buttons',\n    'campfires',\n    'carpets',\n    'climbable',\n    'corals',\n    'coral_blocks',\n    'coral_plants',\n    'crimson_stems',\n    'crops',\n    'dark_oak_logs',\n    'doors',\n    'dragon_immune',\n    'enderman_holdable',\n    'fence_gates',\n    'fences',\n    'fire',\n    'flowers',\n    'flower_pots',\n    'gold_ores',\n    'guarded_by_piglins',\n    'hoglin_repellents',\n    'ice',\n    'impermeable',\n    'infiniburn_end',\n    'infiniburn_nether',\n    'infiniburn_overworld',\n    'jungle_logs',\n    'leaves',\n    'logs',\n    'logs_that_burn',\n    'mushroom_grow_block‌',\n    'non_flammable_wood',\n    'oak_logs',\n    'piglin_repellents',\n    'planks',\n    'portals',\n    'pressure_plates',\n    'prevent_mob_spawning_inside',\n    'rails',\n    'sand',\n    'saplings',\n    'shulker_boxes',\n    'signs',\n    'slabs',\n    'small_flowers',\n    'soul_fire_base_blocks',\n    'soul_speed_blocks',\n    'spruce_logs',\n    'stairs',\n    'standing_signs',\n    'stone_bricks',\n    'stone_pressure_plates',\n    'strider_warm_blocks',\n    'tall_flowers',\n    'trapdoors',\n    'underwater_bonemeals',\n    'unstable_bottom_center',\n    'valid_spawn',\n    'walls',\n    'wall_corals',\n    'wall_post_override',\n    'wall_signs',\n    'warped_stems',\n    'wart_blocks',\n    'wither_immune',\n    'wither_summon_base_blocks',\n    'wooden_buttons',\n    'wooden_doors',\n    'wooden_fences',\n    'wooden_pressure_plates',\n    'wooden_slabs',\n    'wooden_stairs',\n    'wooden_trapdoors',\n    'wool',\n].map(tag => ({ value: 'minecraft:' + tag, label: tag }));\n\nexport const DECORATORS_OPTIONS = [\n    { value: 'chance', label: 'Chance' },\n    { value: 'count', label: 'Count' },\n    { value: 'count_extra', label: 'Count extra' },\n    { value: 'count_multilayer', label: 'Count multi layer' },\n    { value: 'decorated', label: 'Decorated' },\n    { value: 'fire', label: 'Fire' },\n    { value: 'range', label: 'Range' },\n    { value: 'range_very_biased', label: 'Range very biased' },\n    { value: 'square', label: 'Square' }\n].map(o => {\n    o.value = 'minecraft:' + o.value;\n    return o;\n});\n\nexport const ORE_FEATURE_CONFIG = {\n    target: {\n        tag: \"minecraft:base_stone_overworld\",\n        predicate_type: \"minecraft:tag_match\"\n    },\n    state: {\n        Name: \"minecraft:gold_ore\"\n    },\n    size: 30\n};\n\nexport const DECORATED_ORE_FEATURE_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        feature: {\n                            config: ORE_FEATURE_CONFIG,\n                            name: \"minecraft:ore\"\n                        },\n                        decorator: {\n                            config: {\n                                bottom_offset: 0,\n                                top_offset: 0,\n                                maximum: 32\n                            },\n                            name: \"minecraft:range\"\n                        }\n                    },\n                    name: \"minecraft:decorated\"\n                },\n                decorator: {\n                    config: {},\n                    name: \"minecraft:square\"\n                }\n            },\n            name: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 2\n            },\n            name: \"minecraft:count\"\n        }\n    },\n    name: \"minecraft:decorated\"\n};\n\nexport const TREE_FEATURE_CONFIG = {\n    heightmap: \"OCEAN_FLOOR\",\n    minimum_size: {\n        limit: 1,\n        lower_size: 0,\n        upper_size: 1,\n        type: \"minecraft:two_layers_feature_size\"\n    },\n    decorators: [],\n    trunk_provider: {\n        state: {\n            Properties: {\n                axis: \"y\"\n            },\n            Name: \"minecraft:birch_log\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    leaves_provider: {\n        state: {\n            Properties: {\n                persistent: \"false\",\n                distance: \"7\"\n            },\n            Name: \"minecraft:birch_leaves\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    foliage_placer: {\n        radius: 2,\n        offset: 0,\n        height: 3,\n        type: \"minecraft:blob_foliage_placer\"\n    },\n    trunk_placer: {\n        base_height: 5,\n        height_rand_a: 2,\n        height_rand_b: 0,\n        type: \"minecraft:straight_trunk_placer\"\n    }\n};\n\nexport const RANDOM_PATCH_FEATURE_CONFIG = {\n    can_replace: false,\n    project: false,\n    need_water: false,\n    xspread: 7,\n    yspread: 3,\n    zspread: 7,\n    whitelist: [\n        {\n            Properties: {\n                snowy: \"false\"\n            },\n            Name: \"minecraft:grass_block\"\n        }\n    ],\n    blacklist: [],\n    tries: 64,\n    state_provider: {\n        state: {\n            Name: \"minecraft:pumpkin\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    block_placer: {\n        type: \"minecraft:simple_block_placer\"\n    }\n}\n\nexport const DECORATED_RANDOM_PATCH_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: RANDOM_PATCH_FEATURE_CONFIG,\n                    name: \"minecraft:random_patch\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            name: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            name: \"minecraft:heightmap_spread_double\"\n                        }\n                    },\n                    name: \"minecraft:decorated\"\n                }\n            },\n            name: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                chance: 32\n            },\n            name: \"minecraft:chance\"\n        }\n    },\n    name: \"minecraft:decorated\"\n};\n\nexport const DECORATED_TREE_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: TREE_FEATURE_CONFIG,\n                    name: \"minecraft:tree\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            name: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            name: \"minecraft:heightmap\"\n                        }\n                    },\n                    name: \"minecraft:decorated\"\n                }\n            },\n            name: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 10,\n                extra_chance: 0.1,\n                extra_count: 1\n            },\n            name: \"minecraft:count_extra\"\n        }\n    },\n    name: \"minecraft:decorated\"\n};\n\nexport const DECORATOR_EXTRA_COUNT_DEFAULTS = {\n    count: 10,\n    extra_chance: 0.1,\n    extra_count: 1\n}\n\nexport const DECORATOR_DECORATED_DEFAULTS = {\n    outer: {\n        config: {},\n        name: \"minecraft:square\"\n    },\n    inner: {\n        config: {},\n        name: \"minecraft:heightmap\"\n    }\n}\n\nexport const DECORATOR_RANGE_DEFAULTS = {\n    bottom_offset: 4,\n    top_offset: 0,\n    maximum: 64\n}\n","import { useState, useContext } from \"react\";\nimport { DataContext } from \"../context/DataContext\";\n\n/**\n * @returns {[object[], function(object): void]} \n */\nexport function useData() {\n    const [data, setData] = useState([]);\n    const updateData = function(object) {\n        setData(stored => {\n            const i = stored.findIndex(({key}) => key === object.key);\n            if (i < 0) {\n                stored.push(object);\n            } else {\n                stored[i] = object;\n            }\n            return stored;\n        });\n    }\n    return [data, updateData];\n}\n\n/**\n * @param {('biomes'|'blocks'|'features'|'surfaces')} category Data category\n * @returns {{ value: string, label: string }[]} Options list for react-select\n */\nexport function useKeyedListOptions(category) {\n    const context = useContext(DataContext);\n    const options = context.custom[category]\n        .map(keyed => ({ value: context.namespace + ':' + keyed.key, label: '(Custom) ' + keyed.key }));\n\n    let struct = null;\n    context.vanilla[category].forEach(keyed => {\n        if (struct === null) {\n            struct = keyed.hasOwnProperty('displayName') ? 1 : (keyed.hasOwnProperty('label') ? 2 : 3);\n        }\n        switch(struct) {\n            case 1: // displayName\n                options.push({ value: 'minecraft:' + keyed.name, label: keyed.displayName });\n                return;\n            case 2: // already option\n                options.push(keyed);\n                return;\n            default:\n                options.push({ value: 'minecraft:' + keyed, label: keyed });\n        }\n    });\n    return options;\n}","export const VANILLA_SURFACE_BUILDERS = [\n    { value: 'badlands', label: 'Badlands' },\n    { value: 'basalt_deltas', label: 'Basalt Deltas' },\n    { value: 'crimson_forest', label: 'Crimson forest' },\n    { value: 'deset', label: 'Desert' },\n    { value: 'end', label: 'End' },\n    { value: 'eroded_badlands', label: 'Eroded Badlands' },\n    { value: 'frozen_ocean', label: 'Frozen ocean' },\n    { value: 'full_sand', label: 'Full sand' },\n    { value: 'giant_tree_taiga', label: 'Giant tree taiga' },\n    { value: 'grass', label: 'Grass' },\n    { value: 'gravelly_mountain', label: 'Gravelly mountain' },\n    { value: 'ice_spikes', label: 'Ice spikes' },\n    { value: 'mountain', label: 'Mountain' },\n    { value: 'mycelium', label: 'Mycelium' },\n    { value: 'nether', label: 'Nether' },\n    { value: 'nope', label: 'Nope' },\n    { value: 'ocean_sand', label: 'Ocean sand' },\n    { value: 'shattered_savanna', label: 'Shattered savanna' },\n    { value: 'soul_sand_valley', label: 'Soul sand valley' },\n    { value: 'stone', label: 'Stone' },\n    { value: 'swamp', label: 'Swamp' },\n    { value: 'warped_forest', label: 'Warped forest' },\n    { value: 'wooded_badlands', label: 'Wooded badlands' },\n].map(option => {\n    option.value = 'minecraft:' + option.value;\n    return option;\n});\n\nexport const SURFACE_BUILDER = {\n    config: {\n        top_material: {\n            Properties: {\n                snowy: \"false\"\n            },\n            Name: \"minecraft:grass_block\"\n        },\n        under_material: {\n            Name: \"minecraft:dirt\"\n        },\n        underwater_material: {\n            Name: \"minecraft:gravel\"\n        }\n    },\n    name: \"minecraft:default\"\n}","import React, { useState, useEffect } from 'react';\nimport { jsonFetch } from '../utils/fetch';\nimport { VANILLA_FEATURES } from '../components/feature/FeatureDefaults';\nimport { useData } from '../hooks/context';\nimport { VANILLA_SURFACE_BUILDERS } from '../components/surface/SurfaceBuilderDefaults';\n\nexport const DataContext = React.createContext({\n    vanilla: {\n        biomes: [],\n        blocks: [],\n        entities: [],\n        features: [],\n        surfaces: []\n    },\n    custom: {\n        biomes: [],\n        dimensions: [],\n        features: [],\n        surfaces: [],\n        updateBiomes: (biome) => {},\n        updateDimensions: (dimension) => {},\n        updateFeatures: (feature) => {},\n        updateSurfacesBuilders: (surface_builder) => {}\n    },\n    namespace: ''\n});\n\nexport function DataContextProvider({children, namespace}) {\n    const [biomes, setBiomes] = useState([]);\n    const [blocks, setBlocks] = useState([]);\n    const [entities, setEntities] = useState([]);\n\n    const [customBiomes, updateBiomes] = useData();\n    const [dimensions, updateDimensions] = useData();\n    const [features, updateFeatures] = useData();\n    const [surfaces, updateSurfacesBuilders] = useData();\n\n    useEffect(() => {\n        (async function () {\n            jsonFetch('https://unpkg.com/minecraft-data@2.62.1/minecraft-data/data/pc/1.16.1/biomes.json')\n                .then(biomes => setBiomes(biomes));\n            jsonFetch('https://unpkg.com/minecraft-data@2.62.1/minecraft-data/data/pc/1.16.1/blocks.json')\n                .then(blocks => setBlocks(blocks));\n            jsonFetch('https://unpkg.com/minecraft-data@2.62.1/minecraft-data/data/pc/1.16.1/entities.json')\n                .then(entities => setEntities(entities.map(entity => ({ value: 'minecraft:' + entity.name, label: entity.displayName }))));\n        })();\n    }, []);\n\n    return <DataContext.Provider value={{\n        vanilla: { biomes, blocks, entities, features: VANILLA_FEATURES, surfaces: VANILLA_SURFACE_BUILDERS },\n        custom: { biomes: customBiomes, dimensions, features, surfaces, updateBiomes, updateDimensions, updateFeatures, updateSurfacesBuilders },\n        namespace\n    }}>{children}</DataContext.Provider>\n}","import React, { useContext, useReducer, useEffect, useMemo, useState, useCallback } from 'react';\nimport Select from 'react-select';\nimport { useToggle } from '../../hooks/ui';\nimport { Button } from '../../ui/Button';\nimport { DataContext } from '../../context/DataContext';\nimport { SPAWNERS_AMBIENT, SPAWNERS_CREATURE, SPAWNERS_MONSTER } from './BiomeDefaults';\n\nconst ADD_SPAWNER = 'ADD_SPAWNER';\nconst UPDATE_SPAWNER = 'UPDATE_SPAWNER';\nconst REMOVE_SPAWNER = 'REMOVE_SPAWNER';\n\nfunction spawnersReducer(state, action) {\n    switch (action.type) {\n        case ADD_SPAWNER:\n            return [...state, action.payload];\n        case UPDATE_SPAWNER:\n          return state.map(spawner => spawner === action.target ? action.payload : spawner);\n        case REMOVE_SPAWNER:\n          return state.filter(spawner => spawner !== action.payload);\n        default:\n          return state;\n    }\n}\n\nexport function BiomeSpawners({onChange, data = { ambient: SPAWNERS_AMBIENT, creature: SPAWNERS_CREATURE, misc: [], monster: SPAWNERS_MONSTER, water_ambient: [], water_creature: [] }}) {\n\n    const entities = useContext(DataContext).vanilla.entities;\n    const [spawners, setSpawners] = useState(data);\n\n    const handleChange = useCallback(function(group, groupSpawners) {\n        setSpawners(function(spawners) {\n            const state = {\n                ...spawners,\n                [group]: groupSpawners\n            };\n            onChange(state);\n            return state;\n        });\n    }, [onChange]);\n\n    return <div>\n        <SpawnGroup group=\"ambient\" data={spawners.ambient} onChange={handleChange} entities={entities}>Ambient</SpawnGroup>\n        <SpawnGroup group=\"creature\" data={spawners.creature} onChange={handleChange} entities={entities}>Creature</SpawnGroup>\n        <SpawnGroup group=\"misc\" data={spawners.misc} onChange={handleChange} entities={entities}>Miscellaneous</SpawnGroup>\n        <SpawnGroup group=\"monster\" data={spawners.monster} onChange={handleChange} entities={entities}>Monster</SpawnGroup>\n        <SpawnGroup group=\"water_ambient\" data={spawners.water_ambient} onChange={handleChange} entities={entities}>Water ambient</SpawnGroup>\n        <SpawnGroup group=\"water_creature\" data={spawners.water_creature} onChange={handleChange} entities={entities}>Water creature</SpawnGroup>\n    </div>;\n}\n\nfunction SpawnGroup({children, entities, data = [], group, onChange}) {\n    const [visibility, toggle] = useToggle();\n    const text = visibility ? 'Less...' : 'More...';\n\n    const [spawners, dispatch] = useReducer(spawnersReducer, data);\n\n    const handleAdd = useCallback(function(e) {\n        e.preventDefault();\n        dispatch({ type: ADD_SPAWNER, payload: {\n            type: 'minecraft:cow',\n            weight: 1,\n            minCount: 1,\n            maxCount: 1,\n        }});\n        if (!visibility) {\n            toggle();\n        }\n    }, [toggle, visibility]);\n\n    const handleChange = useCallback(function(original, spawner) {\n        dispatch({ type: UPDATE_SPAWNER, target: original, payload: spawner });\n    }, []);\n\n    const handleRemove = useCallback(function(spawner) {\n        dispatch({ type: REMOVE_SPAWNER, payload: spawner });\n    }, []);\n\n    useEffect(function() {\n        onChange(group, spawners);\n    }, [group, onChange, spawners]);\n\n    const values = [];\n    if (visibility) {\n        spawners.forEach((def, i) => {\n            const key = `${i}-${def.type}-${def.weight}-${def.minCount}-${def.maxCount}`;\n            values.push(<SpawnDefinition data={def} key={key} onChange={handleChange} onDelete={handleRemove} entities={entities} />);\n        });\n        return <div>\n            <div className=\"toggle-label\">\n                {children} \n                <div className=\"btn-group\">\n                    <Button onClick={handleAdd}>Add</Button>\n                    {spawners.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{text}</Button>} \n                </div>\n            </div>\n            {values}\n        </div>;\n    }\n    \n    return <div className=\"toggle-label\">\n        {children}\n        <div className=\"btn-group\">\n            {spawners.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{text}</Button>}\n            {(spawners.length < 1) && <Button onClick={handleAdd}>Add</Button>}\n        </div>\n    </div>;\n}\n\nconst SpawnDefinition = React.memo(function({entities, onChange, onDelete, data}) {\n\n    const [definition, setDefinition] = useState(data);\n\n    const handleChange = function(e) {\n        const field = typeof e.target === 'undefined' ? 'type' : e.target.id;\n        const value = typeof e.target === 'undefined' ? e.value : parseInt(e.target.value);\n        setDefinition(definition => ({\n            ...definition,\n            [field]: value\n        }));\n        onChange(data, {...data, [field]: value});\n    };\n\n    const handleCountChange = function(e) {\n        const value = parseInt(e.target.value);\n        if ((e.target.id === 'minCount' && value <= definition.maxCount)\n            || (e.target.id === 'maxCount' && value >= definition.minCount)) {\n            setDefinition(definition => ({\n                ...definition,\n                [e.target.id]: value\n            }));\n            onChange(data, {...data, [e.target.id]: value});\n        } \n    };\n\n    const handleDelete = function(e) {\n        e.preventDefault();\n        onDelete(data);\n    };\n\n    const selectedOption = useMemo(function() {\n        return entities.find(o => o.value === definition.type);\n    }, [definition.type, entities]);\n\n    return <div>\n        <div className=\"form-group\">\n            <label>Mob type</label> : <Select options={entities} value={selectedOption} onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <div className=\"form-inline\">\n                <label htmlFor=\"weight\">Weight</label> : <input type=\"number\" id=\"weight\" required value={definition.weight} onChange={handleChange} />\n            </div>\n            <div className=\"form-inline\">\n                <label htmlFor=\"minCount\">Min count</label> : <input type=\"number\" id=\"minCount\" min=\"0\" required value={definition.minCount} onChange={handleCountChange} />\n            </div>\n            <div className=\"form-inline\">\n                <label htmlFor=\"maxCount\">Max count</label> : <input type=\"number\" id=\"maxCount\" min=\"0\" required value={definition.maxCount} onChange={handleCountChange} />\n            </div>\n            <div className=\"form-inline\"><Button cat=\"danger\" onClick={handleDelete}>Delete</Button></div>\n        </div>\n        <hr /> \n    </div>\n}, function(prev, next) {\n    return prev.entities.length === next.entities.length && prev.data === next.data;\n});","import React, { useCallback, useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport { FEATURES } from './BiomeDefaults';\nimport { useKeyedListOptions } from '../../hooks/context';\n\nexport default function GenFeatures({ onChange, features = FEATURES }) {\n\n    const [levels, setLevels] = useState(features);\n\n    const handleLevelChange = useCallback(function(priority, list) {\n        setLevels(levels => {\n            levels[priority] = list;\n            return levels;\n        })\n        onChange(levels);\n    }, [levels, onChange]);\n\n    useEffect(function() {\n        onChange(levels);\n    }, [levels, onChange]);\n\n    const elements = [];\n    levels.forEach((level, i) => {\n        elements.push(<li key={i}><GenFeaturesLevel value={level} onChange={handleLevelChange} priority={i} /></li>);\n    });\n    return <div className=\"form-group\">\n        <label>Features</label>\n        <p className=\"help\"><small className=\"text-muted\">Each generation feature is associated with a priority. The higher the priority, the later the feature will be applied.</small></p>\n        <ol>{elements}</ol>\n    </div>;\n}\n\nfunction GenFeaturesLevel({ onChange, priority, value }) {\n    const options = useKeyedListOptions('features');\n    const features = value;\n\n    const handleChange = useCallback(function(selectedOptions) {\n        onChange(priority, selectedOptions === null ? [] : selectedOptions.map(option => option.value));\n    }, [onChange, priority]);\n\n    return <Select isMulti options={options} onChange={handleChange} defaultValue={options.filter(o => features.includes(o.value))} />;\n}","export function hexColorToInteger(color) {\n    return parseInt(color.replace(/^#/, ''), 16);\n}\n\nexport function integerColorToHex(color) {\n    return '#' + (color & 0xFFFFFF).toString(16).padStart(6, '0');\n}","import React, { useState, useEffect } from 'react';\nimport { integerColorToHex, hexColorToInteger } from '../../utils/color';\nimport { EFFECTS } from './BiomeDefaults';\n\nexport function BiomeEffects({effects = EFFECTS, onChange}) {\n\n    const [colors, setColors] = useState(effects);\n\n    const handleColorChange = function(e) {\n        e.persist();\n        setColors(colors => ({\n            ...colors,\n            [e.target.id]: hexColorToInteger(e.target.value)\n        }));\n        onChange(colors);\n    };\n\n    useEffect(function () {\n        onChange(colors);\n    }, [colors, onChange]);\n\n    return <>\n        <div className=\"form-inline\">\n            <label htmlFor=\"fog_color\">Fog color</label> : <input type=\"color\" id=\"fog_color\" value={integerColorToHex(colors.fog_color)} onChange={handleColorChange} />\n        </div>\n        <div className=\"form-inline\">\n            <label htmlFor=\"water_color\">Water color</label> : <input type=\"color\" id=\"water_color\" value={integerColorToHex(colors.water_color)} onChange={handleColorChange} />\n        </div>\n        <div className=\"form-inline\">\n            <label htmlFor=\"water_fog_color\">Water fog color</label> : <input type=\"color\" id=\"water_fog_color\" value={integerColorToHex(colors.water_fog_color)} onChange={handleColorChange} />\n        </div>\n    </>\n}","import React, { useCallback, useState } from 'react';\nimport BiomeStarts from './BiomeStarts';\nimport Select from 'react-select';\nimport { Button } from '../../ui/Button';\nimport { BiomeSpawners } from './BiomeSpawners';\nimport { STARTS } from './BiomeDefaults';\nimport GenFeatures from './Features';\nimport { hexColorToInteger, integerColorToHex } from '../../utils/color';\nimport { BiomeEffects } from './BiomeEffects';\nimport { useKeyedListOptions } from '../../hooks/context';\n\nexport function Biome({data = {}, onSave}) {\n\n    const [state, setState] = useState(data || { starts: STARTS, spawners: []});\n\n    const handleStartsChange = useCallback(function(starts) {\n        setState(state => {\n            state.starts = starts;\n            return state;\n        });\n    }, []);\n\n    const handleEffectsChange = useCallback(function(effects) {\n        setState(state => {\n            state.effects = effects;\n            return state;\n        });\n    }, []);\n\n    const handleFeaturesChange = useCallback(function(features) {\n        setState(state => {\n            state.features = features;\n            return state;\n        });\n    }, []);\n\n    const handleSpawnersChange = useCallback(function(spawners) {\n        setState(state => {\n            state.spawners = spawners;\n            return state;\n        });\n    }, []);\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        const formData = Object.fromEntries(new FormData(e.target));\n        const data = { ...formData, ...state };\n        data.spawn_costs = {};\n        data.carvers =  {\n            air: [\n              \"minecraft:cave\",\n              \"minecraft:canyon\"\n            ]\n        }; // @todo\n        data.sky_color = hexColorToInteger(formData.sky_color);\n        Object.keys(formData).forEach(function(key) {\n            if (!isNaN(formData[key])) {\n                data[key] = parseFloat(formData[key]);\n            }\n        });\n        onSave(data);\n    }, [onSave, state]);\n\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit biome</h3>\n        <div className=\"form-group\">\n            <label htmlFor=\"key\">Identifier</label> : <input type=\"text\" name=\"key\" id=\"key\" required pattern=\"[a-z0-9._-]+\" placeholder=\"Ex. : my-biome\" defaultValue={data.key} />\n        </div>\n\n        <fieldset>\n            <legend>Colors</legend>\n            <div className=\"form-row\">\n                <div className=\"form-inline\"><label htmlFor=\"sky_color\">Sky color</label> : <input type=\"color\" name=\"sky_color\" required defaultValue={integerColorToHex(data.sky_color || 7907327)} /></div>\n                <BiomeEffects effects={state.effects} onChange={handleEffectsChange} />\n            </div>\n        </fieldset>\n\n        <fieldset>\n            <BiomeCategory category={data.category} />\n            <BiomePrecipitation value={data.precipitation} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Generation</legend>\n            <SurfaceBuilder value={data.surface_builder} />\n            <BiomeStarts onChange={handleStartsChange} starts={state.starts} />\n            <GenFeatures features={state.features} onChange={handleFeaturesChange} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Creatures</legend>\n            <BiomeSpawners data={state.spawners} onChange={handleSpawnersChange} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Settings</legend>\n            <div className=\"form-group form-row\">\n                <div><label htmlFor=\"scale\">Scale</label> : <input type=\"number\" name=\"scale\" step=\"0.05\" required defaultValue={data.scale || 0.05} /></div>\n                <div><label htmlFor=\"downfall\">Downfall</label> : <input type=\"number\" name=\"downfall\" step=\"0.1\" required defaultValue={data.downfall || 0.4} /></div>\n                <div><label htmlFor=\"depth\">Depth</label> : <input type=\"number\" name=\"depth\" step=\"0.01\" required defaultValue={data.depth || 0.12} /></div>\n                <div><label htmlFor=\"temperature\">Temperature</label> : <input type=\"number\" name=\"temperature\" step=\"0.1\" required defaultValue={data.temperature || 0.8} /></div>\n                <p className=\"mts\"><small className=\"text-muted\">The <em>scale</em> parameter defines terrain amplitude, <em>downfall</em> controls grass and foliage color, <em>depth</em> is the difference from sea level, <em>temperature</em> controls some gameplay features like whether snow golems take damage. The default values are those of the plains biome.</small></p>\n            </div>\n        </fieldset>\n        <div className=\"form-group mlm mbm\">\n            <Button type=\"submit\">Save</Button>\n        </div>\n    </form>;\n}\n\nfunction BiomeCategory({category = 'plains'}) {\n\n    const options = [\n        { value: 'beach', label: 'Beach' },\n        { value: 'desert', label: 'Desert' },\n        { value: 'extreme_hills', label: 'Extreme hills' },\n        { value: 'icy', label: 'Icy' },\n        { value: 'jungle', label: 'Jungle' },\n        { value: 'mesa', label: 'Mesa' },\n        { value: 'nether', label: 'Nether' },\n        { value: 'none', label: 'None' },\n        { value: 'ocean', label: 'Ocean' },\n        { value: 'plains', label: 'Plains' },\n        { value: 'river', label: 'River' },\n        { value: 'savanna', label: 'Savanna' },\n        { value: 'swamp', label: 'Swamp' },\n        { value: 'taiga', label: 'Taiga' },\n        { value: 'the_end', label: 'The end' },\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"category\">Category</label>\n        <Select options={options} defaultValue={options.find(o => o.value === category)} name=\"category\" />\n    </div>;\n}\n\nfunction BiomePrecipitation({value = 'rain'}) {\n\n    const options = [\n        { value: 'none', label: 'None' },\n        { value: 'rain', label: 'Rain' },\n        { value: 'snow', label: 'Snow' }\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"precipitation\">Precipitation</label>\n        <Select options={options} defaultValue={options.find(o => o.value === value)} name=\"precipitation\" />\n    </div>;\n}\n\nfunction SurfaceBuilder({value = 'minecraft:grass'}) {\n    const options = useKeyedListOptions('surfaces');\n    return <div className=\"form-group\">\n        <label htmlFor=\"surface_builder\">Surface builder</label>\n        <Select options={options} defaultValue={options.find(o => o.value === value)} name=\"surface_builder\" />\n    </div>;\n}","import React from 'react';\n\nexport function MenuItem({active, children, onClick}) {\n    const className = 'tabs-menu-link' + (active ? ' is-active' : '');\n    return <a href=\"#_\" className={className} onClick={onClick}>{children}</a>\n}","import React from 'react';\nimport Select from 'react-select';\n\nexport function DimensionType({type = 'minecraft:overworld'}) {\n    const options = [\n        { value: 'minecraft:overworld', label: 'Overworld' },\n        { value: 'minecraft:overworld_cave', label: 'Overworld caves' },\n        { value: 'minecraft:the_nether', label: 'The Nether' },\n        { value: 'minecraft:the_end', label: 'The End' },\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"dimension-type\">Dimension type</label>\n        <Select name=\"dimension-type\" options={options} defaultValue={options.find(o => o.value === type)} />\n    </div>;\n}","import { useReducer } from \"react\";\n\nfunction crudReducer(state, action) {\n    switch (action.type) {\n        case ADD:\n            return [...state, action.payload];\n        case UPDATE:\n          return state.map(element => element === action.target ? action.payload : element);\n        case REMOVE:\n          return state.filter(element => element !== action.payload);\n        default:\n          return state;\n    }\n}\n\nexport function useCrud(data = []) {\n    return useReducer(crudReducer, data);\n}\n\nconst ADD = 'ADD';\nconst UPDATE = 'UPDATE';\nconst REMOVE = 'REMOVE';\nexport const CRUD = { ADD, UPDATE, REMOVE };","export function objectsEqual(a, b) {\n    return Object.keys(a).length === Object.keys(b).length \n        && Object.keys(a).every(p => a[p] === b[p]);\n}\n\nexport function getStateValue(state, properties = {}) {\n    const actual = properties[state.name];\n    switch(state.type) {\n        case 'bool':\n            return actual === 'true' ? 'true' : 'false';\n        case 'int':\n            return actual || 0;\n        default:\n            return actual || state.values[0];\n    }\n}\n\nexport function hasDuplicatedObjects(objects) {\n    for (const a of objects) {\n        for (const b of objects) {\n            if (a !== b && objectsEqual(a, b)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n/**\n * @param {object} feature Unserialized feature\n * @returns {{name: string, config: object}[]} Decorators list\n */\nexport function findDecorators(feature) {\n    const decorators = [];\n    \n    let f = null;\n    (function find(obj) {\n        for (const key of Object.keys(obj)) {\n            if (key === 'decorator') {\n                decorators.unshift(obj[key]);\n                if (f === null && !obj.feature.hasOwnProperty('decorator')) {\n                    f = obj.feature;\n                }\n            } else if (typeof obj[key] === 'object') {\n                find(obj[key]);\n            }\n        }\n    } (feature));\n\n    if (f === null) {\n        f = {};\n    }\n    return [decorators, f];\n}\n\n/**\n * @param {object} feature \n * @param {{name: string, config: object}[]} decorators \n * @returns {object} Decorated feature\n */\nexport function buildDecorated(feature, decorators) {\n    if (decorators.length < 1) {\n        return feature;\n    }\n\n    const decorated = { name: 'minecraft:decorated' };\n    let current = decorated;\n    decorators.forEach((decorator, i) => {\n        let f = i === (decorators.length - 1) ? feature : { name: 'minecraft:decorated' };\n        current.config = {\n            feature: f,\n            decorator\n        };\n        current = f;\n    });\n    return decorated;\n}","import React, { useState, useCallback, useContext, useEffect } from 'react';\nimport Select from 'react-select';\nimport { SeedField } from './DimensionGenerator';\nimport { useKeyedListOptions } from '../../hooks/context';\nimport { useMemo } from 'react';\nimport { useCrud, CRUD } from '../../hooks/form';\nimport { useToggle } from '../../hooks/ui';\nimport { DataContext } from '../../context/DataContext';\nimport { Button } from '../../ui/Button';\nimport { hasDuplicatedObjects } from '../../utils/data';\n\nexport function BiomeSource({biome_source = { type: 'minecraft:fixed' }, onChange}) {\n    const [source, setSource] = useState(biome_source);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:fixed', label: 'Fixed' },\n            { value: 'minecraft:multi_noise', label: 'Multi noise' },\n        ];\n    }, []);\n\n    const handleSeedChange = useCallback(function(seed) {\n        setSource(source => ({ ...source, seed }));\n    }, []);\n    const handleTypeChange = useCallback(function(option) {\n        setSource(source => ({ type: option.value, seed: source.seed }));\n    }, []);\n    const handleFixedSourceChange = useCallback(function(biome) {\n        setSource(source => ({ ...source, biome }));\n    }, []);\n    const handleMultiSourceChange = useCallback(function(biomes) {\n        setSource(source => ({ ...source, biomes }));\n    }, []);\n\n    useEffect(() => onChange(source), [onChange, source]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === source.type);\n    }, [options, source.type]);\n\n    return <fieldset>\n        <legend>Biome source</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"biome-source-type\">Type</label><Select id=\"biome-source-type\" options={options} value={selected} onChange={handleTypeChange} />\n        </div>\n        <SeedField value={source.seed} onChange={handleSeedChange} />\n        <hr />\n        {source.type === 'minecraft:fixed' && <FixedBiomeSource source={source.biome} onChange={handleFixedSourceChange} />}\n        {source.type === 'minecraft:multi_noise' && <MultiNoiseBiomeSource source={source.biomes} onChange={handleMultiSourceChange} />}\n    </fieldset>\n}\n\nconst FixedBiomeSource = React.memo(function({source = 'minecraft:plains', onChange}) {\n    const options = useKeyedListOptions('biomes');\n    const [biome, setBiome] = useState(source);\n\n    const handleBiomeChange = function(biome) {\n        setBiome(biome.value);\n    }\n    useEffect(() => onChange(biome), [biome, onChange]);\n    \n    return <div className=\"form-group\">\n        <label htmlFor=\"fixed-biome\">Biome</label><Select options={options} defaultValue={options.find(o => o.value === biome)} onChange={handleBiomeChange} />\n    </div>;\n});\n\nconst MultiNoiseBiomeSource = React.memo(function({source, onChange}) {\n    const options = useKeyedListOptions('biomes');\n    const [biomes, dispatch] = useCrud(source);\n    const [parametersWarning, toggleWarningVisibility] = useToggle();\n\n    const handleAddClick = useCallback(function(e) {\n        e.preventDefault();\n        dispatch({ type: CRUD.ADD, payload: { biome: 'minecraft:plains', parameters: {} } });\n    }, [dispatch]);\n    const handleChange = useCallback(function(state, previous) {\n        dispatch({ type: CRUD.UPDATE, target: previous, payload: state });\n    }, [dispatch]);\n    const handleDeleteClick = useCallback(function(e, index) {\n        e.preventDefault();\n        dispatch({ type: CRUD.REMOVE, payload: biomes[index] });\n    }, [biomes, dispatch]);\n\n    const vanilla = useContext(DataContext).vanilla.biomes;\n    const custom = useContext(DataContext).custom.biomes;\n    const namespace = useContext(DataContext).namespace;\n    useEffect(function() {\n        const hasDuplicated = hasDuplicatedObjects(biomes.map(biome => biome.parameters));\n        onChange(biomes);\n        if (hasDuplicated && !parametersWarning) {\n            toggleWarningVisibility();\n        } else if (!hasDuplicated && parametersWarning) {\n            toggleWarningVisibility();\n        }\n    }, [biomes, onChange, parametersWarning, toggleWarningVisibility]);\n\n    const values = [];\n    biomes.forEach((entry, i) => {\n        const key = i;\n        values.push(<BiomeSelection namespace={namespace} vanilla={vanilla} custom={custom} biomesOptions={options} entry={entry} key={key} onChange={handleChange}><Button cat=\"danger\" onClick={(e) => handleDeleteClick(e, i)}>Delete</Button></BiomeSelection>);\n    });\n    return <div className=\"form-group\">\n        {values}\n        <Button onClick={handleAddClick}>Add biome</Button>\n        {parametersWarning && <p className=\"alert--warning\">Warning: every biome must have a unique combination of parameters!</p>}\n    </div>;\n});\n\nconst BiomeSelection = React.memo(function({namespace, vanilla, custom, biomesOptions, entry, onChange, children}) {\n    const [selection, setSelection] = useState(entry);\n\n    const handleBiomeChange = useCallback(function(option) {\n        const biome = option.value;\n        const data = (vanilla.find(b => 'minecraft:' + b.name === biome) || custom.find(b => namespace + ':' + b.key === biome) || { rainfall: 0, temperature: 0 });\n        setSelection(selection => {\n            const parameters = {\n                altitude: selection.parameters.altitude || 0,\n                weirdness: selection.parameters.weirdness || 0,\n                offset: selection.parameters.offset || 0,\n                temperature: data.temperature,\n                humidity: data.rainfall || 0\n            };\n            return { biome, parameters };\n        });\n    }, [custom, namespace, vanilla]);\n\n    const handleParameterChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = e.target.value;\n        setSelection(selection => {\n            const parameters = { ...selection.parameters, [name]: parseFloat(value) };\n            return { biome: selection.biome, parameters };\n        });\n    }, []);\n\n    useEffect(() => onChange(selection, entry), [entry, onChange, selection]);\n\n    const selected = useMemo(function() {\n        return biomesOptions.find(o => o.value === selection.biome);\n    }, [biomesOptions, selection.biome]);\n    return <div className=\"form-group\">\n        <Select options={biomesOptions} value={selected} onChange={handleBiomeChange} />\n        <div className=\"form-group form-row\">\n            <div><label>Altitude</label> : <input type=\"number\" id=\"altitude\" value={selection.parameters.altitude || 0} onChange={handleParameterChange} step=\"0.1\" /></div>\n            <div><label>Weirdness</label> : <input type=\"number\" id=\"weirdness\" value={selection.parameters.weirdness || 0} onChange={handleParameterChange} step=\"0.1\" /></div>\n            <div><label>Offset</label> : <input type=\"number\" id=\"offset\" value={selection.parameters.offset || 0} onChange={handleParameterChange} step=\"0.1\" /></div>\n            <div><label>Temperature</label> : <input type=\"number\" id=\"temperature\" value={selection.parameters.temperature || 0.8} onChange={handleParameterChange} step=\"0.1\" /></div>\n            <div><label>Humidity</label> : <input type=\"number\" id=\"humidity\" value={selection.parameters.humidity || 0.4} onChange={handleParameterChange} step=\"0.1\" /></div>\n            {children}\n        </div>\n    </div>\n});","export const FIXED_GENERATOR = {\n    type: 'minecraft:noise',\n    seed: 286956243,\n    biome_source: {\n        type: 'minecraft:fixed',\n        seed: 286956243,\n        biome: 'minecraft:plains',\n    },\n    settings: 'minecraft:overworld'\n}","import React, { useState, useCallback, useEffect } from 'react';\nimport { BiomeSource } from './BiomeSource';\nimport { FIXED_GENERATOR } from './DimensionDefaults';\nimport { hashCode } from './../../utils/hash';\nimport Select from 'react-select';\n\nexport function DimensionGenerator({generator = FIXED_GENERATOR, onChange}) {\n\n    const [data, setData] = useState(generator);\n\n    const handleSeedChange = useCallback(function(seed) {\n        setData(data => {\n            data.seed = seed;\n            return data;\n        });\n        onChange(data);\n    }, [data, onChange]);\n\n    const handleSettingsChange = useCallback(function(settings) {\n        setData(data => {\n            data.settings = settings;\n            return data;\n        });\n        onChange(data);\n    }, [data, onChange]);\n\n    const handleBiomeSourceChange = useCallback(function(biome_source) {\n        setData(data => {\n            data.biome_source = biome_source;\n            return data;\n        });\n        onChange(data);\n    }, [data, onChange]);\n\n    useEffect(function () {\n        onChange(data);\n    }, [data, onChange]);\n\n    return <fieldset>\n        <legend>Noise dimension generator</legend>\n        <div className=\"form-group\">\n            <SeedField value={data.seed} onChange={handleSeedChange} />\n            <Settings settings={data.settings} onChange={handleSettingsChange} />\n            <BiomeSource biome_source={data.biome_source} onChange={handleBiomeSourceChange} />\n        </div>\n    </fieldset>;\n}\n\nexport const SeedField = React.memo(function({onChange, value = '286956243'}) {\n    const [text, setText] = useState(value);\n\n    const handleChange = function(e) {\n        const value = e.target.value;\n        setText(value);\n        onChange(isNaN(value) ? hashCode(value) : value);\n    };\n\n    return <div className=\"form-group\">\n        <label>Seed</label> : <input type=\"text\" value={text} onChange={handleChange} />\n    </div>\n});\n\nconst Settings = React.memo(function({onChange, settings = 'minecraft:overworld'}) {\n    const handleChange = useCallback(function(option) {\n        onChange(option.value);\n    }, [onChange]);\n\n    const options = [\n        { value: 'minecraft:overworld', label: 'Overworld' },\n        { value: 'minecraft:nether', label: 'Nether' },\n        { value: 'minecraft:end', label: 'End' },\n        { value: 'minecraft:amplified', label: 'Amplified' },\n        { value: 'minecraft:caves', label: 'Caves' },\n        { value: 'minecraft:floating_islands', label: 'Floating islands' }\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"settings\">Settings</label><Select options={options} defaultValue={options.find(o => o.value === settings)} onChange={handleChange} />\n    </div>;\n});","export function hashCode(s) {\n    let hash;\n    for (let i = 0; i < s.length; i++) { \n        hash = Math.imul(31, hash) + s.charCodeAt(i) | 0;\n    }\n    return hash;\n}","import React, { useCallback, useState } from 'react';\nimport { DimensionType } from './DimensionType';\nimport { DimensionGenerator } from './DimensionGenerator';\nimport { Button } from '../../ui/Button';\n\nexport function Dimension({data = {}, onSave}) {\n\n    const [state, setState] = useState(data);\n\n    const handleGeneratorChange = useCallback(function(generator) {\n        setState(s => {\n            s.generator = generator;\n            return s;\n        });\n    }, []);\n\n    const handleSubmit = function (e) {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        const data = {...state};\n        data.key = formData.get('key');\n        data.type = formData.get('dimension-type');\n        onSave(data);\n    }\n\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit dimension</h3>\n        <div className=\"form-group\">\n            <label htmlFor=\"key\">Identifier</label> : <input type=\"text\" name=\"key\" id=\"key\" required pattern=\"[a-z0-9._-]+\" placeholder=\"Ex. : blue-dim\" defaultValue={data.key} />\n        </div>\n        <DimensionType type={data.type} />\n        <fieldset>\n            <legend>Generator configuration</legend>\n            <DimensionGenerator data={data.generator} onChange={handleGeneratorChange} />\n        </fieldset>\n        <div className=\"form-group mlm mbm\">\n            <Button type=\"submit\">Save</Button>\n        </div>\n    </form>\n}","import React, { useState, useCallback, useContext, useMemo } from \"react\";\nimport Select from \"react-select\";\nimport { DataContext } from \"../../context/DataContext\";\nimport { Button } from '../../ui/Button';\nimport { getStateValue } from \"../../utils/data\";\nimport { useEffect } from \"react\";\nimport { CRUD, useCrud } from \"../../hooks/form\";\n\nexport const BlockStateProvider = React.memo(function({block = { type: 'minecraft:simple_state_provider' }, onChange}) {\n    const [provider, setProvider] = useState(block);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:simple_state_provider', label: 'Simple state provider' },\n            { value: 'minecraft:weighted_state_provider', label: 'Weighted state provider' }\n        ];\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        setProvider({ type: option.value });\n    }, []);\n\n    const handleSimpleStateChange = useCallback(function(state) {\n        setProvider(provider => ({ ...provider, state }));\n    }, []);\n\n    const handleWeighestStateChange = useCallback(function(entries) {\n        setProvider(provider => ({ ...provider, entries }));\n    }, []);\n\n    useEffect(() => onChange(provider), [onChange, provider]);\n\n    return <div>\n        <label>Type</label>\n        <Select options={options} value={options.find(o => o.value === provider.type)} onChange={handleTypeChange} />\n        {(provider.type === 'minecraft:simple_state_provider' || provider.type === 'minecraft:rotated_block_provider') && <BlockState block={provider.state} onChange={handleSimpleStateChange} />}\n        {provider.type === 'minecraft:weighted_state_provider' && <WeightedStateProvider entries={(provider.entries || []).map(entry => entry.data)} onChange={handleWeighestStateChange} />}\n    </div>\n});\n\nexport const BlockState = React.memo(function({block = {}, children, name, onChange}) {\n    const context = useContext(DataContext);\n    const [data, setData] = useState(block);\n\n    const handleTypeChange = useCallback(function(option) {\n        const Name = option.value;\n        const Properties = {};\n        (context.vanilla.blocks.find(b => 'minecraft:' + b.name === Name) || { states: [] }).states.forEach(state => {\n            Properties[state.name] = getStateValue(state);\n        })\n        if (Object.keys(Properties).length > 0) {\n            setData({ Name, Properties });\n        } else {\n            setData({ Name });\n        }\n    }, [context.vanilla.blocks]);\n    const handlePropertiesChange = useCallback(function(Properties) {\n        setData(data => ({ ...data, Properties }))\n    }, []);\n    useEffect(() => onChange(data, block), [onChange, data, block]);\n\n    const options = useMemo(function() {\n        return context.vanilla.blocks.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n    }, [context.vanilla.blocks]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === data.Name);\n    }, [options, data.Name]);\n\n    return <div className=\"form-group\">\n        <Select options={options} value={selected} name={name} onChange={handleTypeChange} />\n        <BlockStateProperties block={data.Name} Properties={block.Properties} onChange={handlePropertiesChange}>{children}</BlockStateProperties>\n    </div>;\n});\n\nexport const BlocksList = React.memo(function({list, onChange}) {\n    const [blocks, dispatch] = useCrud(list);\n\n    const handleAddClick = useCallback(function(e) {\n        e.preventDefault();\n        dispatch({ type: CRUD.ADD, payload: { Name: 'minecraft:stone', Properties: {} } });\n    }, [dispatch]);\n    const handleChange = useCallback(function(state, previous) {\n        dispatch({ type: CRUD.UPDATE, target: previous, payload: state });\n    }, [dispatch]);\n    const handleDeleteClick = useCallback(function(e, index) {\n        e.preventDefault();\n        dispatch({ type: CRUD.REMOVE, payload: blocks[index] });\n    }, [blocks, dispatch]);\n\n    useEffect(() => onChange(blocks), [blocks, onChange]);\n\n    const values = [];\n    blocks.forEach((entry, i) => {\n        const key = i;\n        values.push(<BlockState block={entry} key={key} onChange={handleChange}><Button cat=\"danger\" onClick={(e) => handleDeleteClick(e, i)}>Delete</Button></BlockState>);\n    });\n\n    return <div className=\"form-group\">{values}<Button onClick={handleAddClick}>Add</Button></div>;\n});\n\nconst WeightedStateProvider = React.memo(function({entries = [], onChange}) {\n\n    const handleChange = useCallback(function(blocks) {\n        onChange(blocks.map(data => ({ data })));\n    }, [onChange]);\n\n    return <BlocksList list={entries} onChange={handleChange} />;\n});\n\nfunction BlockStateProperties({block, children, onChange, Properties = {}}) {\n    const states = (useContext(DataContext).vanilla.blocks.find(b => 'minecraft:' + b.name === block) || { states: [] }).states;\n    const [properties, setProperties] = useState(Properties);\n\n    const handlePropertyChange = useCallback(function(option) {\n        setProperties(properties => ({ ...properties, [option.name]: option.value }));\n    }, []);\n    const handleCheckboxChange = useCallback(function(e) {\n        const value = e.target.checked.toString();\n        setProperties(properties => ({ ...properties, [e.target.id]: value }));\n    }, []);\n    const handleNumberChange = useCallback(function(e) {\n        const value = e.target.value;\n        setProperties(properties => ({ ...properties, [e.target.id]: value }));\n    }, []);\n    useEffect(() => onChange(properties), [onChange, properties]);\n\n    const selects = [];\n    states.forEach(possible => {\n        switch(possible.type) {\n            case 'bool':\n                selects.push(<div key={possible.name}>\n                    <label>{possible.name}</label> : <input type=\"checkbox\" id={possible.name} className=\"checkbox\" checked={Properties[possible.name] === 'true'} onChange={handleCheckboxChange} />\n                </div>);\n                break;\n            case 'int':\n                selects.push(<div key={possible.name}>\n                    <label>{possible.name}</label> : <input type=\"number\" id={possible.name} value={Properties[possible.name] || 0} onChange={handleNumberChange} min=\"0\" max={possible.num_values - 1} />\n                </div>);\n                break;\n            default:\n                const options = possible.values.map(value => ({ value, name: possible.name, label: value }));\n                const defaultValue = options.find(o => o.value === Properties[possible.name]) || options[0];\n                selects.push(<div key={possible.name}>\n                    <label>{possible.name}</label> : <div className=\"inbl\"><Select options={options} value={defaultValue} onChange={handlePropertyChange} /></div>\n                </div>);\n        }\n    });\n    return <div className=\"form-group form-row\">\n        {selects}{children}\n    </div>;\n}","import React, { useCallback, useMemo, useState, useEffect } from 'react';\nimport { BlockStateProvider } from '../state/BlockState';\nimport Select from 'react-select';\nimport { TREE_FEATURE_CONFIG } from './FeatureDefaults';\n\nexport function TreeFeatureConfig({configuration = TREE_FEATURE_CONFIG, onChange}) {\n\n    const [config, setConfig] = useState(configuration);\n\n    const handleTrunkProviderChange = useCallback(function(trunk_provider) {\n        setConfig(config => ({ ...config, trunk_provider }));\n    }, []);\n    const handleLeavesProviderChange = useCallback(function(leaves_provider) {\n        setConfig(config => ({ ...config, leaves_provider }));\n    }, []);\n    const handleFoliagePlacerChange = useCallback(function(foliage_placer) {\n        setConfig(config => ({ ...config, foliage_placer }));\n    }, []);\n    const handleTrunkPlacerChange = useCallback(function(trunk_placer) {\n        setConfig(config => ({ ...config, trunk_placer }));\n    }, []);\n\n    useEffect(function() {\n        onChange(config);\n    }, [config, onChange]);\n\n    return <div>\n        <fieldset>\n            <legend>Trunk provider</legend>\n            <BlockStateProvider block={config.trunk_provider} onChange={handleTrunkProviderChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Leaves provider</legend>\n            <BlockStateProvider block={config.leaves_provider} onChange={handleLeavesProviderChange} />\n        </fieldset>\n        <FoliagePlacer placer={config.foliage_placer} onChange={handleFoliagePlacerChange} />\n        <TrunkPlacer placer={config.trunk_placer} onChange={handleTrunkPlacerChange} />\n    </div>;\n}\n\nconst FoliagePlacer = React.memo(function({placer, onChange}) {\n    const [data, setData] = useState(placer);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'blob_foliage_placer', label: 'Blob foliage placer' },\n            { value: 'fancy_foliage_placer', label: 'Fancy foliage placer' }\n        ].map(o => {\n            o.value = 'minecraft:' + o.value;\n            return o;\n        });\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        const type = option.value;\n        setData(data => ({ ...data, type }));\n    }, []);\n\n    const handleValueChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = parseInt(e.target.value);\n        setData(data => {\n            const n = { ...data, [name]: value };\n            onChange(n);\n            return n;\n        });\n    }, [onChange]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === data.type) || options[0];\n    }, [options, data.type]);\n\n    return <fieldset>\n        <legend>Foliage placer</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"foliage_placer_type\">Type</label>\n            <Select options={options} name=\"foliage_placer_type\" value={selected} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <div><label htmlFor=\"radius\">Radius</label> : <input type=\"number\" id=\"radius\" value={data.radius} onChange={handleValueChange} /></div>\n            <div><label htmlFor=\"offset\">Offset</label> : <input type=\"number\" id=\"offset\" value={data.offset} onChange={handleValueChange} /></div>\n            {(data.type === 'minecraft:blob_foliage_placer' ||\n                data.type === 'minecraft:bush_foliage_placer' ||\n                data.type === 'minecraft:fancy_foliage_placer' ||\n                data.type === 'minecraft:jungle_foliage_placer'\n            ) && <div><label htmlFor=\"height\">Height</label> : <input type=\"number\" id=\"height\" value={data.height} onChange={handleValueChange} /></div>}\n        </div>\n    </fieldset>\n});\n\nconst TrunkPlacer = React.memo(function({placer, onChange}) {\n    const [data, setData] = useState(placer);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'straight_trunk_placer', label: 'Straight trunk placer' },\n            { value: 'forking_trunk_placer', label: 'Forking trunk placer' },\n            { value: 'giant_trunk_placer', label: 'Giant trunk placer' },\n            { value: 'mega_jungle_trunk_placer', label: 'Mega jungle trunk placer' },\n            { value: 'dark_oak_trunk_placer', label: 'Dark oak trunk placer' },\n            { value: 'fancy_trunk_placer', label: 'Fancy trunk placer' }\n        ].map(o => {\n            o.value = 'minecraft:' + o.value;\n            return o;\n        });\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        const type = option.value;\n        setData(data => ({ ...data, type }));\n    }, []);\n\n    const handleValueChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = parseInt(e.target.value);\n        setData(data => {\n            const n = { ...data, [name]: value };\n            onChange(n);\n            return n;\n        });\n    }, [onChange]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === data.type) || options[0];\n    }, [data.type, options]);\n\n    return <fieldset>\n        <legend>Trunk placer</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"foliage_placer_type\">Type</label>\n            <Select options={options} name=\"foliage_placer_type\" defaultValue={selected} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <div><label htmlFor=\"base_height\">Base height</label> : <input type=\"number\" id=\"base_height\" min=\"0\" max=\"32\" value={placer.base_height} onChange={handleValueChange} /></div>\n            <div><label htmlFor=\"height_rand_a\">First height rand</label> : <input type=\"number\" id=\"height_rand_a\" min=\"0\" max=\"24\" value={placer.height_rand_a} onChange={handleValueChange} /></div>\n            <div><label htmlFor=\"height_rand_b\">Second height rand</label> : <input type=\"number\" id=\"height_rand_b\" min=\"0\" max=\"24\" value={placer.height_rand_b} onChange={handleValueChange} /></div>\n        </div>\n    </fieldset>\n});","import React, { useCallback, useState, useMemo, useEffect } from 'react';\nimport { useCrud, CRUD } from '../../hooks/form';\nimport { Button } from '../../ui/Button';\nimport Select from 'react-select';\nimport { DECORATORS_OPTIONS, DECORATOR_EXTRA_COUNT_DEFAULTS, DECORATOR_DECORATED_DEFAULTS, DECORATOR_RANGE_DEFAULTS } from './FeatureDefaults';\n\nexport const DecoratorsList = React.memo(function({data, onChange}) {\n    const [decorators, dispatch] = useCrud(data);\n\n    const handleAddClick = useCallback(function(e) {\n        e.preventDefault();\n        dispatch({ type: CRUD.ADD, payload: { name: 'minecraft:count', config: { count: 25 } } });\n    }, [dispatch]);\n    const handleChange = useCallback(function(state, previous) {\n        dispatch({ type: CRUD.UPDATE, target: previous, payload: state });\n    }, [dispatch]);\n    const handleDeleteClick = useCallback(function(e, index) {\n        e.preventDefault();\n        dispatch({ type: CRUD.REMOVE, payload: decorators[index] });\n    }, [decorators, dispatch]);\n    useEffect(() => onChange(decorators), [decorators, onChange]);\n\n    const values = [];\n    decorators.forEach((decorator, i) => {\n        const key = decorator.name + '-' + i;\n        values.push(<Decorator data={decorator} key={key} onChange={handleChange}><Button cat=\"danger\" onClick={(e) => handleDeleteClick(e, i)}>Delete</Button></Decorator>);\n    });\n    return <fieldset>\n        <legend>Decorators wrappers</legend>\n        {values}\n        <Button onClick={handleAddClick}>Add decorator</Button>\n    </fieldset>\n});\n\nconst Decorator = React.memo(function({children, data = { name: 'minecraft:count' }, onChange}) {\n    const [decorator, setDecorator] = useState(data);\n\n    const handleSelectChange = useCallback(function(option) {\n        setDecorator({ name: option.value });\n    }, []);\n    const handleConfigChange = useCallback(function(config) {\n        setDecorator(decorator => ({ name: decorator.name, config }));\n    }, []);\n    useEffect(() => onChange(decorator, data), [data, decorator, onChange]);\n\n    const selected = useMemo(function() {\n        return DECORATORS_OPTIONS.find(o => o.value === decorator.name);\n    }, [decorator.name]);\n    return <div>\n        <div className=\"form-group\">\n            <label id=\"decorator-name\">Type</label>\n            <Select options={DECORATORS_OPTIONS} value={selected} onChange={handleSelectChange} id=\"decorator\" />\n        </div>\n        <div className=\"form-group form-row\">\n            {decorator.name === 'minecraft:chance' && <ChanceDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.name === 'minecraft:count' || decorator.name === 'minecraft:fire' || decorator.name === 'minecraft:count_multilayer') && <CountDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {decorator.name === 'minecraft:count_extra' && <ExtraCountDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.name === 'minecraft:decorated' || decorator.name === 'minecraft:square') && <DecoratedDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.name === 'minecraft:range' || decorator.name === 'minecraft:range_very_biased') && <RangeDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {children}\n        </div>\n    </div>;\n});\n\nconst ChanceDecorator = React.memo(function({config = {}, onChange}) {\n    const [chance, setChance] = useState(config.count || 32);\n\n    const handleChanceChange = useCallback(function(e) {\n        setChance(parseInt(e.target.value));\n    }, []);\n\n    useEffect(() => onChange({ chance }), [chance, onChange]);\n\n    return <div><label>Chance</label> : <input type=\"number\" value={chance} onChange={handleChanceChange} /></div>;\n});\n\nconst CountDecorator = React.memo(function({config = {}, onChange}) {\n    const [count, setCount] = useState(config.count || 25);\n\n    const handleCountChange = useCallback(function(e) {\n        setCount(parseInt(e.target.value));\n    }, []);\n\n    useEffect(() => onChange({ count }), [count, onChange]);\n\n    return <div><label>Count</label> : <input type=\"number\" value={count} onChange={handleCountChange} /></div>;\n});\n\nconst ExtraCountDecorator = React.memo(function({config = DECORATOR_EXTRA_COUNT_DEFAULTS, onChange}) {\n    const [configured, setConfig] = useState(config);\n\n    const handleNumberChange = useCallback(function(e) {\n        const value = parseFloat(e.target.value);\n        setConfig(configured => ({ ...configured, [e.target.id]: value }));\n    }, []);\n\n    useEffect(() => onChange(configured), [configured, onChange]);\n\n    return <>\n        <div><label>Count</label> : <input type=\"number\" id=\"count\" value={configured.count} onChange={handleNumberChange} /></div>\n        <div><label>Extra chance</label> : <input type=\"number\" id=\"extra_chance\" value={configured.extra_chance} onChange={handleNumberChange} step=\"0.1\" /></div>\n        <div><label>Extra count</label> : <input type=\"number\" id=\"extra_count\" value={configured.extra_count} onChange={handleNumberChange} /></div>\n    </>\n});\n\nconst DecoratedDecorator = React.memo(function({config = DECORATOR_DECORATED_DEFAULTS, onChange}) {\n\n    useEffect(() => onChange(config), [config, onChange]);\n    return <div></div>;\n});\n\nconst RangeDecorator = React.memo(function({config = DECORATOR_RANGE_DEFAULTS, onChange}) {\n    const [configured, setConfig] = useState(config);\n\n    const handleNumberChange = useCallback(function(e) {\n        const value = parseInt(e.target.value);\n        setConfig(configured => ({ ...configured, [e.target.id]: value }));\n    }, []);\n\n    useEffect(() => onChange(configured), [configured, onChange]);\n\n    return <>\n        <div><label>Bottom offset</label> : <input type=\"number\" id=\"bottom_offset\" value={configured.bottom_offset} onChange={handleNumberChange} /></div>\n        <div><label>Top offset</label> : <input type=\"number\" id=\"top_offset\" value={configured.top_offset} onChange={handleNumberChange} /></div>\n        <div><label>Y maximum</label> : <input type=\"number\" id=\"maximum\" value={configured.maximum} onChange={handleNumberChange} /></div>\n    </>\n});","import React, { useCallback, useState, useEffect } from 'react';\nimport { BlocksList, BlockStateProvider } from '../state/BlockState';\nimport { RANDOM_PATCH_FEATURE_CONFIG } from './FeatureDefaults';\n\nexport function RandomPatchFeature({configuration = RANDOM_PATCH_FEATURE_CONFIG, onChange}) {\n\n    const [config, setConfig] = useState(configuration);\n\n    const handleStateProviderChange = useCallback(function(state_provider) {\n        setConfig(config => ({ ...config, state_provider }));\n    }, []);\n    const handleWhitelistChange = useCallback(function(whitelist) {\n        setConfig(config => ({ ...config, whitelist }));\n    }, []);\n    const handleBlacklistChange = useCallback(function(blacklist) {\n        setConfig(config => ({ ...config, blacklist }));\n    }, []);\n    const handleValueChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = parseInt(e.target.value);\n        setConfig(config => ({ ...config, [name]: value }));\n    }, []);\n    const handleCheckboxChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = e.target.checked;\n        setConfig(config => ({ ...config, [name]: value }));\n    }, []);\n\n    useEffect(function() {\n        onChange(config);\n    }, [config, onChange]);\n\n    return <div>\n        <fieldset>\n            <legend>State provider</legend>\n            <BlockStateProvider block={config.state_provider} onChange={handleStateProviderChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Whitelist</legend>\n            <BlocksList list={config.whitelist} onChange={handleWhitelistChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Blacklist</legend>\n            <BlocksList list={config.blacklist} onChange={handleBlacklistChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Settings</legend>\n            <div className=\"form-group form-row\">\n                <div><label htmlFor=\"xspread\">X spread</label> : <input type=\"number\" id=\"xspread\" value={config.xspread} onChange={handleValueChange} /></div>\n                <div><label htmlFor=\"yspread\">Y spread</label> : <input type=\"number\" id=\"yspread\" value={config.yspread} onChange={handleValueChange} /></div>\n                <div><label htmlFor=\"zspread\">Z spread</label> : <input type=\"number\" id=\"zspread\" value={config.zspread} onChange={handleValueChange} /></div>\n                <div><label htmlFor=\"tries\">Tries</label> : <input type=\"number\" id=\"tries\" value={config.tries} onChange={handleValueChange} /></div>\n            </div>\n            <div className=\"form-group form-row\">\n                <div><label htmlFor=\"need_water\">Need water</label> : <input type=\"checkbox\" className=\"checkbox\" id=\"need_water\" checked={config.need_water} onChange={handleCheckboxChange} /></div>\n                <div><label htmlFor=\"project\">Project</label> : <input type=\"checkbox\" className=\"checkbox\" id=\"project\" checked={config.project} onChange={handleCheckboxChange} /></div>\n                <div><label htmlFor=\"can_replace\">Can replace</label> : <input type=\"checkbox\" className=\"checkbox\" id=\"can_replace\" checked={config.can_replace} onChange={handleCheckboxChange} /></div>\n            </div>\n        </fieldset>\n    </div>;\n}","import React, { useState, useCallback, useMemo, useContext, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport { DataContext } from \"../../context/DataContext\";\nimport { TAGS_OPTIONS } from \"../feature/FeatureDefaults\";\n\nexport const BlockPredicate = React.memo(function({target, onChange}) {\n    const [predicate, setPredicate] = useState(target);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:block_match', label: 'Block match' },\n            { value: 'minecraft:tag_match', label: 'Tag match' }\n        ];\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        setPredicate({ predicate_type: option.value });\n    }, []);\n    const handleBlockChange = useCallback(function(option) {\n        setPredicate(predicate => ({ ...predicate, block: option.value }));\n    }, []);\n    const handleTagChange = useCallback(function(option) {\n        setPredicate(predicate => ({ ...predicate, tag: option.value }));\n    }, []);\n    useEffect(() => onChange(predicate), [onChange, predicate]);\n\n    const context = useContext(DataContext);\n    const blocks = useMemo(function() {\n        return context.vanilla.blocks.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n    }, [context.vanilla.blocks]);\n\n    return <div>\n        <label>Predicate type</label>\n        <Select options={options} value={options.find(o => o.value === predicate.predicate_type)} onChange={handleTypeChange} />\n        {(predicate.predicate_type === 'minecraft:block_match') && <Select options={blocks} value={blocks.find(b => b.value === predicate.block)} onChange={handleBlockChange} />}\n        {(predicate.predicate_type === 'minecraft:tag_match') && <Select options={TAGS_OPTIONS} value={TAGS_OPTIONS.find(t => t.value === predicate.tag)} onChange={handleTagChange} />}\n    </div>;\n});","import React, { useCallback, useState, useEffect } from 'react';\nimport { ORE_FEATURE_CONFIG } from \"./FeatureDefaults\";\nimport { BlockPredicate } from '../state/BlockPredicate';\nimport { BlockState } from '../state/BlockState';\n\nexport function OreFeatureConfig({configuration = ORE_FEATURE_CONFIG, onChange}) {\n    const [config, setConfig] = useState(configuration);\n\n    const handlePredicateChange = useCallback(function(target) {\n        setConfig(config => ({ ...config, target }));\n    }, []);\n    const handleBlockChange = useCallback(function(state) {\n        setConfig(config => ({ ...config, state }));\n    }, []);\n    const handleValueChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = parseInt(e.target.value);\n        setConfig(config => ({ ...config, [name]: value }));\n    }, []);\n\n    useEffect(function() {\n        onChange(config);\n    }, [config, onChange]);\n\n    return <div>\n        <fieldset>\n            <legend>Target</legend>\n            <BlockPredicate target={config.target} onChange={handlePredicateChange} />\n        </fieldset>\n        <fieldset>\n            <legend>State</legend>\n            <BlockState block={config.state} onChange={handleBlockChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Settings</legend>\n            <div className=\"form-group\">\n                <label htmlFor=\"size\">Size</label> : <input type=\"number\" id=\"size\" value={config.size} onChange={handleValueChange} />\n            </div>\n        </fieldset>\n    </div>;\n}","import React, { useCallback, useMemo } from 'react';\nimport Select from 'react-select';\nimport { useState } from 'react';\nimport { TreeFeatureConfig } from './TreeFeature';\nimport { Button } from '../../ui/Button';\nimport { DecoratorsList } from './Decorator';\nimport { buildDecorated, findDecorators } from '../../utils/data';\nimport { DECORATED_TREE_CONFIG, DECORATED_RANDOM_PATCH_CONFIG, DECORATED_ORE_FEATURE_CONFIG } from './FeatureDefaults';\nimport { RandomPatchFeature } from './RandomPatchFeature';\nimport { OreFeatureConfig } from './OreFeature';\n\nexport function RawConfiguredFeature({data = DECORATED_TREE_CONFIG, onSave}) {\n    const [state, setState] = useState(data);\n\n    const [decorators, feature, name] = useMemo(function() {\n        const a = findDecorators(state);\n        return [...a, a[1].name];\n    }, [state]);\n\n    const handleSelectChange = useCallback(function(option) {\n        setState({...option.default});\n    }, []);\n    const handleSave = useCallback(function(feature, decorators) {\n        const data = buildDecorated(feature, decorators);\n        data.key = document.getElementById('key').value;\n        if (data.key === '') {\n            alert('You must specify a key!')\n            return;\n        }\n        onSave(data);\n    }, [onSave]);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'ore', label: 'Ore', default: DECORATED_ORE_FEATURE_CONFIG },\n            { value: 'random_patch', label: 'Random patch', default: DECORATED_RANDOM_PATCH_CONFIG },\n            { value: 'tree', label: 'Tree', default: DECORATED_TREE_CONFIG }\n        ].map(o => {\n            o.value = 'minecraft:' + o.value;\n            return o;\n        });\n    }, []);\n\n    return <div>\n        <h3>Edit configured feature</h3>\n        <div className=\"form-group\">\n            <label htmlFor=\"key\">Identifier</label> : <input type=\"text\" name=\"key\" id=\"key\" required pattern=\"[a-z0-9._-]+\" placeholder=\"Ex. : prismarine-tree\" defaultValue={(data || {}).key} />\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"name\">Type</label>\n            <Select options={options} value={options.find(o => o.value === name)} onChange={handleSelectChange} />\n        </div>\n        <hr />\n        <ConfiguredFeature key={name} feature={feature} deco={decorators} onSave={handleSave} />\n    </div>\n}\n\nfunction ConfiguredFeature({feature, deco, onSave}) {\n    const [configuration, configure] = useState(feature);\n    const [decorators, setDecorators] = useState(deco);\n\n    const handleConfigurationChange = useCallback(function(config) {\n        configure(configuration => ({ ...configuration, config }));\n    }, []);\n    const handleDecoratorsChange = useCallback(function(decorators) {\n        setDecorators(decorators);\n    }, []);\n\n    const handleSaveClick = useCallback(function(e) {\n        e.preventDefault();\n        onSave(configuration, decorators)\n    }, [configuration, decorators, onSave]);\n\n    return <>\n        {feature.name === 'minecraft:ore' && <OreFeatureConfig configuration={configuration.config} onChange={handleConfigurationChange} />}\n        {feature.name === 'minecraft:random_patch' && <RandomPatchFeature configuration={configuration.config} onChange={handleConfigurationChange} />}\n        {feature.name === 'minecraft:tree' && <TreeFeatureConfig configuration={configuration.config} onChange={handleConfigurationChange} />}\n        <DecoratorsList data={decorators} onChange={handleDecoratorsChange} />\n        <div className=\"form-group mlm mbm\">\n            <Button type=\"submit\" onClick={handleSaveClick}>Save</Button>\n        </div>\n    </>;\n}","import JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\n\nexport function buildZip(namespace, custom) {\n    const zip = new JSZip();\n    zip.file('pack.mcmeta', JSON.stringify({ pack: { pack_format: 5, description: 'Custom dimension' } }, null, 4));\n    writeFile(zip, `data/minecraft/dimension/${namespace}`, custom.dimensions);\n    writeFile(zip, `data/minecraft/worldgen/biome/${namespace}`, custom.biomes);\n    writeFile(zip, `data/minecraft/worldgen/configured_feature/${namespace}`, custom.features);\n    writeFile(zip, `data/minecraft/worldgen/configured_surface_builder/${namespace}`, custom.surfaces);\n    zip.generateAsync({ type: 'blob' })\n        .then(function(content) {\n            saveAs(content, 'generated_datapack.zip');\n        });\n}\n\nfunction writeFile(zip, path, elements) {\n    if (elements.length < 0) {\n        return;\n    }\n    const folder = zip.folder(path);\n    for (const el of elements) {\n        const w = {...el};\n        delete w.key;\n        console.log(w);\n        folder.file(el.key + '.json', JSON.stringify(w, null, 2));\n    }\n}","import React, { useCallback, useState } from 'react';\nimport { BlockState } from '../state/BlockState';\nimport { Button } from '../../ui/Button';\nimport { SURFACE_BUILDER } from './SurfaceBuilderDefaults';\n\nexport function SurfaceBuilder({data = SURFACE_BUILDER, onSave}) {\n    const [config, setConfig] = useState(data.config);\n\n    const handleTopMaterialChange = useCallback(function(top_material) {\n        setConfig(config => ({ ...config, top_material }));\n    }, []);\n    const handleUnderMaterialChange = useCallback(function(under_material) {\n        setConfig(config => ({ ...config, under_material }));\n    }, []);\n    const handleUnderwaterMaterialChange = useCallback(function(underwater_material) {\n        setConfig(config => ({ ...config, underwater_material }));\n    }, []);\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        const data = { config };\n        data.key = new FormData(e.target).get('key');\n        data.name = 'minecraft:default';\n        onSave(data);\n    }, [config, onSave]);\n\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit surface builder</h3>\n        <div className=\"form-group\">\n            <label htmlFor=\"key\">Identifier</label> : <input type=\"text\" name=\"key\" id=\"key\" required pattern=\"[a-z0-9._-]+\" placeholder=\"Ex. : blackstone\" defaultValue={data.key} />\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"top_material\">Top material</label> : <BlockState block={config.top_material} name=\"top_material\" onChange={handleTopMaterialChange} />\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"under_material\">Under material</label> : <BlockState block={config.under_material} name=\"under_material\" onChange={handleUnderMaterialChange} />\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"sea_lantern\">Underwater material</label> : <BlockState block={config.underwater_material} name=\"underwater_material\" onChange={handleUnderwaterMaterialChange} />\n        </div>\n        <div className=\"form-group mlm mbm\">\n            <Button type=\"submit\">Save</Button>\n        </div>\n    </form>;\n}","import React, { useCallback, useState, useContext } from 'react';\nimport { Biome } from './biome/Biome';\nimport { Button } from './../ui/Button';\nimport { MenuItem } from './../ui/Menu';\nimport { Dimension } from './dimension/Dimension';\nimport { DataContext } from './../context/DataContext';\nimport { RawConfiguredFeature } from './feature/ConfiguredFeature';\nimport { buildZip } from '../utils/zip';\nimport { SurfaceBuilder } from './surface/SurfaceBuilder';\n\nexport function Datapack() {\n    const context = useContext(DataContext);\n    const custom = context.custom;\n    const namespace = context.namespace;\n    const [menu, setMenu] = useState({page: 'stats'});\n\n    const handleStatsClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'stats'});\n    }, []);\n    const handleAddBiomeClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'biome'});\n    }, []);\n    const handleAddDimensionClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'dimension'});\n    }, []);\n    const handleAddFeatureClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'feature'});\n    }, []);\n    const handleAddSurfaceBuilderClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'surface'});\n    }, []);\n\n    const onBiomeSave = useCallback(function(biome) {\n        custom.updateBiomes(biome);\n        setMenu({page: 'stats'});\n    }, [custom]);\n    const onDimensionSave = useCallback(function(dimension) {\n        custom.updateDimensions(dimension);\n        setMenu({page: 'stats'});\n    }, [custom]);\n    const onFeatureSave = useCallback(function(feature) {\n        custom.updateFeatures(feature);\n        setMenu({page: 'stats'});\n    }, [custom]);\n    const onSurfaceBuilderSave = useCallback(function(surface_builder) {\n        custom.updateSurfacesBuilders(surface_builder);\n        setMenu({page: 'stats'});\n    }, [custom]);\n\n    const editBiome = useCallback(function(index) {\n        setMenu({page: 'biome', index});\n    }, []);\n    const editDimension = useCallback(function(index) {\n        setMenu({page: 'dimension', index});\n    }, []);\n    const editFeature = useCallback(function(index) {\n        setMenu({page: 'feature', index});\n    }, []);\n    const editSurface = useCallback(function(index) {\n        setMenu({page: 'surface', index});\n    }, []);\n\n    return <div>\n        <h2>Datapack {namespace}</h2>\n        <div className=\"tabs\"><nav className=\"tabs-menu\">\n            <MenuItem onClick={handleStatsClick} active={menu.page === 'stats'}>Stats</MenuItem>\n            <MenuItem onClick={handleAddBiomeClick} active={menu.page === 'biome'}>Biome</MenuItem>\n            <MenuItem onClick={handleAddSurfaceBuilderClick} active={menu.page === 'surface'}>Surfaces builder</MenuItem>\n            <MenuItem onClick={handleAddFeatureClick} active={menu.page === 'feature'}>Feature</MenuItem>\n            <MenuItem onClick={handleAddDimensionClick} active={menu.page === 'dimension'}>Dimension</MenuItem>\n        </nav></div>\n        {menu.page === 'biome' && <Biome onSave={onBiomeSave} data={custom.biomes[menu.index]} />}\n        {menu.page === 'surface' && <SurfaceBuilder onSave={onSurfaceBuilderSave} />}\n        {menu.page === 'feature' && <RawConfiguredFeature onSave={onFeatureSave} data={custom.features[menu.index]} />}\n        {menu.page === 'dimension' && <Dimension onSave={onDimensionSave} data={custom.dimensions[menu.index]} />}\n        {menu.page === 'stats' && <Stats custom={custom} namespace={namespace} editBiome={editBiome} editDimension={editDimension} editFeature={editFeature} editSurface={editSurface} />}\n    </div>\n}\n\nfunction Stats({custom, namespace, editBiome, editDimension, editFeature, editSurface}) {\n\n    const handleBiomeClick = function(e, index) {\n        e.preventDefault();\n        editBiome(index);\n    }\n    const handleDimensionClick = function(e, index) {\n        e.preventDefault();\n        editDimension(index);\n    }\n    const handleFeatureClick = function(e, index) {\n        e.preventDefault();\n        editFeature(index);\n    }\n    const handleSurfaceClick = function(e, index) {\n        e.preventDefault();\n        editSurface(index);\n    }\n\n    const handleGenerateClick = function(e) {\n        e.preventDefault();\n        buildZip(namespace, custom);\n    }\n\n    return <div className=\"mtm\">\n        <h5><strong>{custom.biomes.length}</strong> custom biomes</h5>\n        <ul>{custom.biomes.map((biome, i) => <li key={i}><a href=\"#edit-biome\" onClick={(e) => handleBiomeClick(e, i)}>{biome.key}</a></li>)}</ul>\n        \n        <h5><strong>{custom.dimensions.length}</strong> custom dimensions</h5>\n        <ul>{custom.dimensions.map((dim, i) => <li key={i}><a href=\"#edit-dimension\" onClick={(e) => handleDimensionClick(e, i)}>{dim.key}</a></li>)}</ul>\n        \n        <h5><strong>{custom.features.length}</strong> configured features</h5>\n        <ul>{custom.features.map((feature, i) => <li key={i}><a href=\"#edit-feature\" onClick={(e) => handleFeatureClick(e, i)}>{feature.key}</a></li>)}</ul>\n\n        <h5><strong>{custom.surfaces.length}</strong> configured surface builder</h5>\n        <ul>{custom.surfaces.map((surface, i) => <li key={i}><a href=\"#edit-surface\" onClick={(e) => handleSurfaceClick(e, i)}>{surface.key}</a></li>)}</ul>\n\n        {custom.dimensions.length > 0 &&\n            <p><Button onClick={handleGenerateClick}>Generate</Button></p>\n        }\n    </div>\n}","import React from 'react';\nimport { Button } from '../ui/Button';\n\nexport function DatapackForm({onCreate}) {\n\n    const handleCreate = function(e) {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const namespace = data.get('namespace');\n        onCreate(namespace);\n    };\n\n    return <form onSubmit={handleCreate}>\n        <h2>Create a new dimension datapack</h2>\n        <div className=\"form-group\">\n            <label htmlFor=\"namespace\">Namespace</label> : <input type=\"text\" name=\"namespace\" id=\"namespace\" required pattern=\"[a-z0-9._-]+\" className=\"form-control\" aria-describedby=\"namespaceHelp\" />\n            <p><small id=\"namespaceHelp\" className=\"form-text text-muted\">This differentiates the datapack from the vanilla functions. Namespaces and identifiers may only contain letters, numbers and <code>._-</code> characters.</small></p>\n        </div>\n        <Button type=\"submit\">Create</Button>\n        <div className=\"mtl\">\n            <div className=\"alert--warning\">This generator as well as the in-game functionality is unstable. Use this tool with caution.</div>\n        </div>\n    </form>\n}","import React, { useState } from 'react';\nimport './../node_modules/knacss/css/knacss.css';\nimport './App.css';\nimport { Datapack } from './components/Datapack';\nimport { DataContextProvider } from './context/DataContext';\nimport { DatapackForm } from './components/DatapackForm';\n\nfunction App() {\n    const [namespace, setNamespace] = useState(null);\n\n    return <>\n        {namespace !== null ? <DataContextProvider namespace={namespace}><Datapack /></DataContextProvider> : <DatapackForm onCreate={setNamespace} />}\n    </>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}