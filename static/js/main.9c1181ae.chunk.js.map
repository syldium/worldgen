{"version":3,"sources":["hooks/ui.js","ui/Select.jsx","utils/fetch.js","components/feature/FeatureDefaults.js","components/surface/SurfaceBuilderDefaults.js","components/noise/NoiseDefaults.js","components/dimension/DimensionDefaults.js","components/carver/CarverDefaults.js","context/DataContext.jsx","utils/data.js","hooks/context.js","ui/Button.jsx","components/NamespacedKey.jsx","components/biome/BiomeDefaults.js","utils/color.js","utils/number.js","ui/Input.jsx","components/state/BlockPredicate.jsx","hooks/form.js","components/state/BlockState.jsx","components/biome/BiomeEffects.jsx","components/biome/BiomeSpawners.jsx","components/biome/BiomeStarts.jsx","components/biome/Features.jsx","ui/Modal.jsx","ui/JsonViewer.jsx","hooks/select.js","components/carver/ConfiguredCarver.jsx","components/biome/Biome.jsx","ui/Toggle.jsx","ui/DarkModeToggle.jsx","ui/Menu.jsx","components/dimension/DimensionType.jsx","ui/NumberList.jsx","components/dimension/BiomeSource.jsx","components/dimension/DimensionGenerator.jsx","utils/hash.js","components/dimension/Dimension.jsx","components/state/BlockStateProvider.jsx","components/feature/TreeFeature.jsx","components/feature/Decorator.jsx","components/feature/RandomPatchFeature.jsx","components/feature/OreFeature.jsx","components/feature/HugeFungusFeature.jsx","components/feature/SpringFeature.jsx","components/feature/ConfiguredFeature.jsx","utils/zip.js","components/surface/SurfaceBuilder.jsx","components/noise/Structures.jsx","components/noise/NoiseSettings.jsx","components/Datapack.jsx","components/DatapackForm.jsx","App.js","serviceWorker.js","index.js"],"names":["useToggle","initial","useState","status","setState","toggle","e","target","checked","preventDefault","current","React","memo","props","styles","control","backgroundColor","borderColor","boxShadow","transition","singleValue","color","menuList","input","menu","option","isFocused","isSelected","cursor","multiValue","multiValueLabel","multiValueRemove","jsonFetch","url","options","a","fetch","headers","Accept","response","json","responseData","ok","VANILLA_FEATURES","TAGS_OPTIONS","map","tag","value","label","DECORATORS_OPTIONS","o","TREE_DECORATORS_OPTIONS","default","probability","HUGE_FUNGUS_FEATURE_CONFIG","hat_state","Name","decor_state","planted","valid_base_block","stem_state","Properties","axis","ORE_FEATURE_CONFIG","predicate_type","state","size","DECORATED_ORE_FEATURE_CONFIG","config","feature","type","decorator","bottom_offset","top_offset","maximum","count","DECORATED_SPRING_FEATURE_CONFIG","rock_count","hole_count","valid_blocks","falling","requires_block_below","TREE_FEATURE_CONFIG","heightmap","minimum_size","limit","lower_size","upper_size","decorators","trunk_provider","leaves_provider","persistent","distance","foliage_placer","radius","offset","height","trunk_placer","base_height","height_rand_a","height_rand_b","RANDOM_PATCH_FEATURE_CONFIG","can_replace","project","need_water","xspread","yspread","zspread","whitelist","snowy","blacklist","tries","state_provider","block_placer","DECORATED_HUGE_FUNGUS_CONFIG","DECORATED_RANDOM_PATCH_CONFIG","outer","inner","chance","DECORATED_TREE_CONFIG","extra_chance","extra_count","DECORATOR_EXTRA_COUNT_DEFAULTS","DECORATOR_DECORATED_DEFAULTS","DECORATOR_RANGE_DEFAULTS","VANILLA_SURFACE_BUILDERS","SURFACE_TYPES_OPTIONS","SURFACE_BUILDER","top_material","under_material","underwater_material","VANILLA_NOISES","STRUCTURES","OVERWORLD_NOISE","bedrock_roof_position","bedrock_floor_position","sea_level","disable_mob_generation","structures","stronghold","spread","spacing","separation","salt","noise","sampling","xz_scale","y_scale","xz_factor","y_factor","top_slide","bottom_slide","size_horizontal","size_vertical","density_factor","density_offset","simplex_surface_noise","random_density_offset","island_noise_override","amplified","default_block","default_fluid","level","DIMENSION","generator","seed","biome_source","biome","settings","VANILLA_DIMENSION_TYPES","NOISES_NAMES","MULTI_NOISE_BIOME_SOURCE","temperature_noise","firstOctave","amplitudes","humidity_noise","altitude_noise","weirdness_noise","biomes","OVERWORLD_DIMENSION_TYPE","has_raids","logical_height","infiniburn","ambient_light","piglin_safe","bed_works","respawn_anchor_works","ultrawarm","natural","coordinate_scale","has_skylight","has_ceiling","THE_NETHER_DIMENSION_TYPE","fixed_time","THE_END_DIMENSION_TYPE","VANILLA_CARVERS","DataContext","createContext","vanilla","blocks","carvers","dimensions","dimension_types","entities","features","noises","surfaces","custom","updateBiomes","updateCarvers","carver","updateDimensions","dimension","updateDimensionTypes","dimension_type","updateFeatures","updateNoises","updateSurfacesBuilders","surface_builder","namespace","DataContextProvider","children","setBiomes","setBlocks","setEntities","useData","customBiomes","useEffect","then","entity","name","displayName","Provider","filter","includes","objectsEqual","b","Object","keys","length","every","p","capitalize","str","toUpperCase","substr","displayNamespacedKey","key","defaultNamespace","startsWith","split","findDecorators","f","find","obj","unshift","hasOwnProperty","buildDecorated","decorated","forEach","i","dataUpper","group","data","effects","sky_color","refitKeys","build","destKey","source","some","n","shrunk","setData","updateData","object","stored","existing","findIndex","index","push","useKeyedListOptions","category","includeCustom","empty","context","useContext","keyed","struct","Button","loading","cat","buttonProps","className","tabIndex","NamespacedKey","example","onChange","expectBreakage","mayReplaceVanilla","hidden","useRef","setKey","replace","handleKeyChange","useCallback","toLowerCase","handleReplaceTargetChange","selected","handleKeyDown","form","dispatchEvent","Event","cancelable","handleToggle","inputValue","useMemo","hiddenInputValue","style","width","Math","max","apply","dummyOnChange","console","log","htmlFor","inputId","id","required","pattern","placeholder","autoCapitalize","spellCheck","autoComplete","onKeyPress","ref","opacity","position","onClick","EFFECTS","mood_sound","sound","tick_delay","block_search_extent","fog_color","water_color","water_fog_color","FEATURES","STARTS","SPAWNERS_DEFAULTS","ambient","weight","minCount","maxCount","creature","misc","monster","water_ambient","water_creature","BIOME_DEFAULTS","air","starts","spawners","precipitation","scale","downfall","depth","temperature","player_spawn_friendly","spawn_costs","PARTICLES","particle","PARTICLE_DEFAULTS","hexColorToInteger","parseInt","maintainPrecision","parseFloat","toFixed","ConfInput","attr","defaultChecked","defaultValue","min","step","uId","random","toString","isNaN","data-name","NumberInput","upChange","val","setValue","prevVal","setPrevValue","click","setClick","handleChange","endsWith","stepUpDown","addition","handleMouseDown","classList","contains","window","setInterval","handleClick","handleMouseUp","clearInterval","numeric","decimals","countDecimals","ceil","smooth","getNumberSize","onMouseDown","onMouseOut","onMouseUp","ColorInput","padStart","BlockPredicate","predicate","setPredicate","handleTypeChange","handleBlockChange","block","handleBlockStateChange","block_state","handleTagChange","content","BlockSelect","BlockState","RandomBlockMatch","t","flexGrow","crudReducer","action","ADD","payload","UPDATE","arrayMove","Error","element","REMOVE","useCrud","useReducer","useCrudPreset","dispatch","add","CRUD","update","previous","oldIndex","newIndex","remove","useBlocksOptions","mapped","useJsonEffect","JSON","stringify","useKeyedOptionsState","multiple","Array","isArray","selection","setSelection","setSelectionFromOptions","states","properties","actual","values","getStateValue","handlePropertiesChange","BlockStateProperties","BlocksList","list","handleAdd","handleRemove","handleStateChange","filteredOptions","d","BlocksNamesList","handlePropertyChange","handleCheckboxChange","dataset","handleNumberChange","selects","possible","num_values","BiomeEffects","colors","setColors","blockColor","toggleBlockColor","toggleParticle","handleColorChange","handleParticleChange","next","foliage_color","grass_color","ParticleEffect","handleScaleChange","handleProbabilityChange","flexShrink","op","DustColor","r","g","undefined","BiomeSpawners","groupSpawners","SpawnGroup","visibility","text","s","insert","spawner","SpawnDefinition","onDelete","handleValueChange","handleCountChange","handleDelete","selectedOption","BiomeStarts","selectedOptions","isMulti","GenFeatures","levels","setLevels","handleLevelChange","priority","elements","GenFeaturesLevel","Modal","open","onClose","modal","useModal","el","document","createElement","body","appendChild","removeChild","createPortal","JsonViewer","toggleModal","xmlns","viewBox","useInlineResources","resources","mutable","inline","getInline","resource","res","ConfiguredCarver","handleAirChange","handleLiquidChange","liquid","handleNewClick","handleCarverCreated","optionsAir","selectedAir","optionsLiquid","selectedLiquid","ConfiguredCarverForm","onSave","setCarver","handleSelectChange","handleSubmit","stopPropagation","c","fromEntries","FormData","onSubmit","Biome","handleCarversChange","handleStartsChange","handleEffectsChange","handleFeaturesChange","handleSpawnersChange","formData","BiomeCategory","BiomePrecipitation","SurfaceBuilder","Toggle","ariaLabel","aria-label","DarkModeToggle","darkMode","useDarkMode","title","disable","enable","MenuItem","active","href","role","aria-current","NavBar","rel","DimensionType","handleTypeCreated","DimensionTypeForm","setConfig","handlePresetChange","preset","NumberList","numbers","pos","BiomeSource","setSource","handleSeedChange","handleCheckerboardSourceChange","handleFixedSourceChange","handleMultiSourceChange","SeedField","CheckerboardBiomeSource","FixedBiomeSource","MultiNoiseBiomeSource","setNumber","useNumber","setScale","isClearable","setBiome","advanced","toggleAdvanced","handleNoiseChange","handleAddClick","parameters","altitude","weirdness","humidity","handleDeleteClick","entry","BiomeSelection","biomesOptions","alignItems","PerlinNoiseParameters","objects","hasDuplicatedObjects","handleFirstOctaveChange","handleAmplitudesChange","margin","handleBiomeChange","rainfall","handleParameterChange","DimensionGenerator","handleSettingsChange","handleBiomeSourceChange","Settings","setText","hash","imul","charCodeAt","hashCode","Dimension","handleGeneratorChange","BlockStateProvider","provider","setProvider","similarities","handleSimpleStateChange","handleWeighestStateChange","entries","filteredBlocks","WeightedStateProvider","handleWeightChange","TreeFeatureConfig","configuration","handleTrunkProviderChange","handleLeavesProviderChange","handleFoliagePlacerChange","handleTrunkPlacerChange","handleDecoratorsChange","FoliagePlacer","placer","TrunkPlacer","TreeDecorators","TreeDecorator","setDecorator","handleAlterGroundChange","CustomTag","indexOf","fontWeight","fontSize","display","DecoratorsList","shouldCancelStart","parentNode","SortableDecoratorsList","onSortEnd","SortableContainer","Decorator","SortableElement","handleConfigChange","ChanceDecorator","CountDecorator","ExtraCountDecorator","DecoratedDecorator","RangeDecorator","RandomPatchFeature","handleStateProviderChange","handleWhitelistChange","handleBlacklistChange","OreFeatureConfig","handlePredicateChange","HugeFungusFeature","handleDecorStateChange","handleHatStateChange","handlePlantedChange","handleStemStateChange","handleValidBaseBlockChange","SpringFeature","handlRequiresBlockBelowChange","handleValidBlocksChange","RawConfiguredFeature","decorators_","feature_","setFeature","setDecorators","handleFeatureChange","get","DIMENSIONS_PATH","WORLDGEN_PATH","LEGACY_PATH_DETECTION","LEGACY_DIMENSIONS_PATH","LEGACY_WORLDGEN_PATH","readZip","file","Promise","resolve","reject","JSZip","loadAsync","zip","mcmeta","promises","path","dir","legacy","match","regex","parseFile","async","all","catch","extractDatapack","getFolderType","folder","pathRegex","filename","contentPromise","exec","success","parse","error","message","writeFile","w","handleTopMaterialChange","handleUnderMaterialChange","handleUnderwaterMaterialChange","Structures","handleStrongholdChange","handleStructuresChange","Stronghold","StructuresList","enabled","setStronghold","original","structure","def","Structure","handleSpacingChange","handleSaltChange","NoiseSettings","NoiseConfig","changeCallback","handleSamplingChange","handleTopSlideChange","handleBottomSlideChange","NoiseSamplingConfig","SlideConfig","Datapack","page","setPage","useMenu","setMenu","handleSave","method","scrollTo","surface","Stats","mayGenerate","StatsTitle","invisible","modified","pack","pack_format","description","generateAsync","saveAs","buildZip","DatapackForm","onCreate","setError","handleFile","dataTransfer","files","handleDrag","onDragStart","onDragEnter","onDragOver","onDrop","aria-describedby","accept","App","Boolean","location","hostname","addEventListener","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4PAMO,SAASA,IAA4B,IAAlBC,EAAiB,0DACZC,mBAASD,GADG,mBAChCE,EADgC,KACxBC,EADwB,KAEjCC,EAAS,WAAqB,IAAXC,EAAU,uDAAN,KACf,OAANA,GAA4B,mBAANA,GAA+C,mBAArBA,EAAEC,OAAOC,SAKnD,OAANF,GAA0C,oBAArBA,EAAEG,gBACvBH,EAAEG,iBAENL,GAAS,SAAAM,GAAO,OAAKA,MAPjBN,EAAsB,mBAANE,EAAkBA,EAAIA,EAAEC,OAAOC,UASvD,MAAO,CAACL,EAAQE,G,YC+DLM,MAAMC,MA/EN,SAAAC,GACX,OACI,kBAAC,IAAD,eACIC,OAAQ,CACJC,QAAS,SAAAD,GAAM,kCACRA,GADQ,IAEXE,gBAAiB,wBACjBC,YAAa,sBACb,SAAS,2BACFH,EAAO,WADd,IAEIE,gBAAiB,8BACjBC,YAAa,wBAEjB,SAAS,2BACFH,EAAO,WADd,IAEII,UAAW,iCAEfC,WAAY,SAEhBC,YAAa,SAAAN,GAAM,kCACZA,GADY,IAEfO,MAAO,0BAEXC,SAAU,SAAAR,GAAM,kCACTA,GADS,IAEZO,MAAO,uBACPL,gBAAiB,0BACjB,SAAS,2BACFF,EAAO,WADd,IAEIO,MAAO,mCAGfE,MAAO,SAAAT,GAAM,kCACNA,GADM,IAETO,MAAO,0BAEXG,KAAM,SAAAV,GAAM,kCACLA,GADK,IAERE,gBAAiB,6BAErBS,OAAQ,SAACX,EAAD,OAAWY,EAAX,EAAWA,UAAWC,EAAtB,EAAsBA,WAAtB,mBAAC,eACFb,GADC,IAEJO,MAAO,uBACPO,OAAQ,UACRZ,gBAAiBW,EACX,+BACAD,EACI,8BACA,KACV,UAAU,2BACHZ,EAAO,YADd,IAEIE,gBAAiBW,EACX,+BACA,mCAGdE,WAAY,SAAAf,GAAM,kCACXA,GADW,IAEdO,MAAO,uBACPL,gBAAiB,yBAErBc,gBAAiB,SAAAhB,GAAM,kCAChBA,GADgB,IAEnBO,MAAO,uBACPL,gBAAiB,yBAErBe,iBAAkB,SAAAjB,GAAM,kCACjBA,GADiB,IAEpB,SAAS,2BACFA,EAAO,WADd,IAEIE,gBAAiB,6BAIzBH,O,wBCzET,SAAemB,EAAtB,oC,4CAAO,WAAyBC,EAAKC,GAA9B,iBAAAC,EAAA,sEACoBC,MAAMH,EAAD,aACxBI,QAAS,CACLC,OAAQ,mBACR,eAAgB,qBAEjBJ,IANJ,cACGK,EADH,gBASwBA,EAASC,OATjC,UASGC,EATH,QAUCF,EAASG,GAVV,yCAWQD,GAXR,aAaGA,EAbH,4C,sBCJA,IAAME,EAAmB,CAC5B,YACA,cACA,sBACA,eACA,aACA,uBACA,QACA,uBACA,uBACA,eACA,mBACA,kBACA,YACA,4BACA,2BACA,iBACA,iBACA,gBACA,gBACA,gBACA,qBACA,kBACA,iBACA,gBACA,iBACA,gBACA,qBACA,aACA,YACA,YACA,cACA,kBACA,iBACA,eACA,YACA,YACA,WACA,eACA,SACA,QACA,aACA,YACA,YACA,cACA,YACA,mBACA,cACA,sBACA,eACA,cACA,SACA,qBACA,cACA,eACA,gBACA,uBACA,cACA,eACA,WACA,aACA,YACA,WACA,eACA,aACA,kBACA,uBACA,qBACA,sBACA,kBACA,gBACA,oBACA,mBACA,oBACA,qBACA,uBACA,sBACA,qBACA,sBACA,oBACA,qBACA,oBACA,kBACA,2BACA,cACA,qBACA,wBACA,mBACA,qBACA,mBACA,mBACA,eACA,sBACA,yBACA,yBACA,0BACA,4BACA,mBACA,wBACA,sBACA,wBACA,sBACA,uBACA,qBACA,uBACA,qBACA,uBACA,qBACA,YACA,gBACA,kBACA,oBACA,kBACA,oBACA,oBACA,iBACA,WACA,aACA,cACA,cACA,eACA,WACA,WACA,iBACA,WACA,eACA,cACA,YACA,eACA,cACA,mBACA,mBACA,gBACA,wBACA,eACA,uBACA,sBACA,oBACA,MACA,WACA,QACA,SACA,SACA,OACA,cACA,YACA,sBACA,mBACA,cACA,YACA,wBACA,aACA,cACA,gBACA,eACA,eACA,kBACA,iBACA,iBACA,sBACA,qBACA,qBACA,eACA,eACA,cACA,iBACA,gBACA,eACA,eACA,yBACA,kCACA,2BACA,+BACA,6BACA,wBACA,sBACA,mBACA,0BACA,gBACA,aACA,cACA,sBACA,iBACA,cACA,cACA,mBACA,oBACA,qBACA,cACA,eACA,oBACA,6BAGSC,EAAe,CACxB,cACA,QACA,sBACA,UACA,oBACA,uBACA,qBACA,OACA,gBACA,WACA,aACA,UACA,YACA,UACA,YACA,eACA,eACA,SACA,gBACA,QACA,gBACA,QACA,gBACA,oBACA,cACA,SACA,OACA,cACA,UACA,YACA,qBACA,oBACA,MACA,cACA,iBACA,oBACA,uBACA,cACA,SACA,OACA,iBACA,sBACA,qBACA,SACA,WACA,oBACA,SACA,UACA,kBACA,8BACA,QACA,OACA,WACA,gBACA,QACA,QACA,gBACA,wBACA,oBACA,cACA,SACA,iBACA,eACA,wBACA,sBACA,eACA,YACA,uBACA,yBACA,cACA,cACA,qBACA,aACA,QACA,eACA,cACA,gBACA,4BACA,iBACA,eACA,gBACA,yBACA,eACA,gBACA,mBACA,QACFC,KAAI,SAAAC,GAAG,MAAK,CAAEC,MAAO,aAAeD,EAAKE,MAAOF,MAErCG,EAAqB,CAC9B,CAAEF,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,cAAeC,MAAO,eAC/B,CAAED,MAAO,mBAAoBC,MAAO,qBACpC,CAAED,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,eAAgBC,MAAO,gBAChC,CAAED,MAAO,oBAAqBC,MAAO,qBACrC,CAAED,MAAO,SAAUC,MAAO,WAC5BH,KAAI,SAAAK,GAEF,OADAA,EAAEH,MAAQ,aAAeG,EAAEH,MACpBG,KAGEC,EAA0B,CACnC,CAAEJ,MAAO,eAAgBC,MAAO,gBAChC,CAAED,MAAO,UAAWC,MAAO,UAAWI,QAAS,CAAEC,YAAa,MAC9D,CAAEN,MAAO,QAASC,MAAO,cAAeI,QAAS,CAAEC,YAAa,KAChE,CAAEN,MAAO,aAAcC,MAAO,cAC9B,CAAED,MAAO,aAAcC,MAAO,eAChCH,KAAI,SAAAK,GAEF,OA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ACN0R,OAAQ,EACRC,SAAU,EACVC,SAAU,IA0DdE,KAAM,GACNC,QAvDqB,CACrB,CACI/R,KAAM,mBACN0R,OAAQ,IACRC,SAAU,EACVC,SAAU,GAEd,CACI5R,KAAM,mBACN0R,OAAQ,GACRC,SAAU,EACVC,SAAU,GAEd,CACI5R,KAAM,4BACN0R,OAAQ,EACRC,SAAU,EACVC,SAAU,GAEd,CACI5R,KAAM,qBACN0R,OAAQ,IACRC,SAAU,EACVC,SAAU,GAEd,CACI5R,KAAM,oBACN0R,OAAQ,IACRC,SAAU,EACVC,SAAU,GAEd,CACI5R,KAAM,kBACN0R,OAAQ,IACRC,SAAU,EACVC,SAAU,GAEd,CACI5R,KAAM,qBACN0R,OAAQ,GACRC,SAAU,EACVC,SAAU,GAEd,CACI5R,KAAM,kBACN0R,OAAQ,EACRC,SAAU,EACVC,SAAU,IASdI,cAAe,GACfC,eAAgB,IAGPC,GAAiB,CAC1BhG,QAAS4E,GACT5I,QAAS,CACLiK,IAAK,CACD,iBACA,qBAGRC,OAAQb,GACRjJ,SAAUgJ,GACVe,SAAUb,GACVpE,SAAU,SACVkF,cAAe,OACflJ,gBAAiB,kBACjBmJ,MAAO,IACPC,SAAU,GACVC,MAAO,IACPC,YAAa,GACbC,uBAAuB,EACvBC,YAAa,IAGJC,GAAY,CACrB,wBACA,iBACA,MACA,UACA,QACA,SACA,mBACA,aACA,sBACA,wBACA,QACA,YACA,gBACA,OACA,eACA,mBACA,UACA,gBACA,iBACA,gBACA,yBACA,iBACA,OACA,SACA,iBACA,UACA,gBACA,UACA,gBACA,YACA,oBACA,eACA,gBACA,eACA,iBACA,wBACA,gBACA,WACA,UACA,QACA,QACA,iBACA,QACA,iBACA,OACA,aACA,gBACA,gBACA,eACA,wBACA,cACA,OACA,WACA,WACA,OACA,OACA,SACA,OACA,iBACA,QACA,SACA,OACA,kBACA,OACA,SACA,YACA,eACA,mBACA,aACA,eACA,YACA,SACFtU,KAAI,SAAAuU,GAAQ,MAAK,CAAErU,MAAO,aAAeqU,EAAUpU,MAAOoU,MAE/CC,GAAoB,CAC7BnV,QAAS,CAC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","file":"static/js/main.9c1181ae.chunk.js","sourcesContent":["import { useState, useRef, useEffect } from \"react\";\n\n/**\n * @param {boolean} initial \n * @returns {[boolean, function(): void]}\n */\nexport function useToggle(initial = false) {\n    const [status, setState] = useState(initial);\n    const toggle = function (e = null) {\n        if (e !== null && (typeof e === 'boolean' || typeof e.target.checked === 'boolean')) {\n            setState(typeof e === 'boolean' ? e : e.target.checked);\n            return;\n        }\n        \n        if (e !== null && typeof e.preventDefault === 'function') {\n            e.preventDefault();\n        }\n        setState(current => !current);\n    }\n    return [status, toggle];\n}\n\n/**\n * \n * @param {string} [page] \n * @param {number} [index] \n * @returns {[string, number, function (SyntheticEvent, string, number): void]}\n */\nexport function useMenu(page = 'stats', index = -1) {\n    const [state, setState] = useState({ page, index });\n\n    const setPage = function (e, page = 'stats', index = -1) {\n        if (e !== null) {\n            e.preventDefault();\n        }\n        if (index < 0) {\n            setState({ page });\n        } else {\n            setState({ page, index });\n        }\n    }\n\n    return [\n        state.page,\n        state.index,\n        setPage\n    ];\n}\n\n/**\n * @param {function(HTMLCanvasElement, CanvasRenderingContext2D): void} callback\n * @returns {React.MutableRefObject}\n */\nexport function useCanvas(callback) {\n    const reference = useRef(null);\n\n    useEffect(function() {\n        const canvas = reference.current;\n        const ctx = canvas.getContext('2d');\n        callback(canvas, ctx);\n    }, [callback]);\n\n    return reference;\n}","import React from 'react';\nimport ReactSelect from 'react-select';\n\nconst Select = props => {\n    return (\n        <ReactSelect\n            styles={{\n                control: styles => ({\n                    ...styles,\n                    backgroundColor: 'var(--bg-color-input)',\n                    borderColor: 'var(--border-color)',\n                    ':hover': {\n                        ...styles[':hover'],\n                        backgroundColor: 'var(--bg-color-input-hover)',\n                        borderColor: 'var(--border-color)'\n                    },\n                    ':focus': {\n                        ...styles[':focus'],\n                        boxShadow: '0 0 0 1px var(--focus-color)'\n                    },\n                    transition: '.1s',\n                }),\n                singleValue: styles => ({\n                    ...styles,\n                    color: 'var(--primary-color)',\n                }),\n                menuList: styles => ({\n                    ...styles,\n                    color: 'var(--primary-color)',\n                    backgroundColor: 'var(--bg-color-section)',\n                    ':hover': {\n                        ...styles[':hover'],\n                        color: 'var(--bg-color-input-hover)',\n                    },\n                }),\n                input: styles => ({\n                    ...styles,\n                    color: 'var(--primary-color)',\n                }),\n                menu: styles => ({\n                    ...styles,\n                    backgroundColor: 'var(--bg-color-section)',\n                }),\n                option: (styles, { isFocused, isSelected }) => ({\n                    ...styles,\n                    color: 'var(--primary-color)',\n                    cursor: 'pointer',\n                    backgroundColor: isSelected\n                        ? 'var(--bg-color-select-focus)'\n                        : isFocused\n                            ? 'var(--bg-color-input-hover)'\n                            : null,\n                    ':active': {\n                        ...styles[':active'],\n                        backgroundColor: isSelected\n                            ? 'var(--bg-color-select-focus)'\n                            : 'var(--bg-color-input-hover)',\n                    },\n                }),\n                multiValue: styles => ({\n                    ...styles,\n                    color: 'var(--primary-color)',\n                    backgroundColor: 'var(--select-label)'\n                }),\n                multiValueLabel: styles => ({\n                    ...styles,\n                    color: 'var(--primary-color)',\n                    backgroundColor: 'var(--select-label)'\n                }),\n                multiValueRemove: styles => ({\n                    ...styles,\n                    ':hover': {\n                        ...styles[':hover'],\n                        backgroundColor: 'var(--select-label)',\n                    },\n                }),\n            }}\n            {...props}\n        />\n    );\n};\n\nexport default React.memo(Select);\n","/**\n * @param {string} url\n * @param {object} options\n */\nexport async function jsonFetch(url, options) {\n    const response = await fetch(url, {\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        ...options\n    });\n\n    const responseData = await response.json();\n    if (response.ok) {\n        return responseData;\n    }\n    throw responseData;\n}","export const VANILLA_FEATURES = [\n    \"end_spike\",\n    \"end_gateway\",\n    \"end_gateway_delayed\",\n    \"chorus_plant\",\n    \"end_island\",\n    \"end_island_decorated\",\n    \"delta\",\n    \"small_basalt_columns\",\n    \"large_basalt_columns\",\n    \"basalt_blobs\",\n    \"blackstone_blobs\",\n    \"glowstone_extra\",\n    \"glowstone\",\n    \"crimson_forest_vegetation\",\n    \"warped_forest_vegetation\",\n    \"nether_sprouts\",\n    \"twisting_vines\",\n    \"weeping_vines\",\n    \"basalt_pillar\",\n    \"seagrass_cold\",\n    \"seagrass_deep_cold\",\n    \"seagrass_normal\",\n    \"seagrass_river\",\n    \"seagrass_deep\",\n    \"seagrass_swamp\",\n    \"seagrass_warm\",\n    \"seagrass_deep_warm\",\n    \"sea_pickle\",\n    \"ice_spike\",\n    \"ice_patch\",\n    \"forest_rock\",\n    \"seagrass_simple\",\n    \"iceberg_packed\",\n    \"iceberg_blue\",\n    \"kelp_cold\",\n    \"kelp_warm\",\n    \"blue_ice\",\n    \"bamboo_light\",\n    \"bamboo\",\n    \"vines\",\n    \"lake_water\",\n    \"lake_lava\",\n    \"disk_clay\",\n    \"disk_gravel\",\n    \"disk_sand\",\n    \"freeze_top_layer\",\n    \"bonus_chest\",\n    \"void_start_platform\",\n    \"monster_room\",\n    \"desert_well\",\n    \"fossil\",\n    \"spring_lava_double\",\n    \"spring_lava\",\n    \"spring_delta\",\n    \"spring_closed\",\n    \"spring_closed_double\",\n    \"spring_open\",\n    \"spring_water\",\n    \"pile_hay\",\n    \"pile_melon\",\n    \"pile_snow\",\n    \"pile_ice\",\n    \"pile_pumpkin\",\n    \"patch_fire\",\n    \"patch_soul_fire\",\n    \"patch_brown_mushroom\",\n    \"patch_red_mushroom\",\n    \"patch_crimson_roots\",\n    \"patch_sunflower\",\n    \"patch_pumpkin\",\n    \"patch_taiga_grass\",\n    \"patch_berry_bush\",\n    \"patch_grass_plain\",\n    \"patch_grass_forest\",\n    \"patch_grass_badlands\",\n    \"patch_grass_savanna\",\n    \"patch_grass_normal\",\n    \"patch_grass_taiga_2\",\n    \"patch_grass_taiga\",\n    \"patch_grass_jungle\",\n    \"patch_dead_bush_2\",\n    \"patch_dead_bush\",\n    \"patch_dead_bush_badlands\",\n    \"patch_melon\",\n    \"patch_berry_sparse\",\n    \"patch_berry_decorated\",\n    \"patch_waterlilly\",\n    \"patch_tall_grass_2\",\n    \"patch_tall_grass\",\n    \"patch_large_fern\",\n    \"patch_cactus\",\n    \"patch_cactus_desert\",\n    \"patch_cactus_decorated\",\n    \"patch_sugar_cane_swamp\",\n    \"patch_sugar_cane_desert\",\n    \"patch_sugar_cane_badlands\",\n    \"patch_sugar_cane\",\n    \"brown_mushroom_nether\",\n    \"red_mushroom_nether\",\n    \"brown_mushroom_normal\",\n    \"red_mushroom_normal\",\n    \"brown_mushroom_taiga\",\n    \"red_mushroom_taiga\",\n    \"brown_mushroom_giant\",\n    \"red_mushroom_giant\",\n    \"brown_mushroom_swamp\",\n    \"red_mushroom_swamp\",\n    \"ore_magma\",\n    \"ore_soul_sand\",\n    \"ore_gold_deltas\",\n    \"ore_quartz_deltas\",\n    \"ore_gold_nether\",\n    \"ore_quartz_nether\",\n    \"ore_gravel_nether\",\n    \"ore_blackstone\",\n    \"ore_dirt\",\n    \"ore_gravel\",\n    \"ore_granite\",\n    \"ore_diorite\",\n    \"ore_andesite\",\n    \"ore_coal\",\n    \"ore_iron\",\n    \"ore_gold_extra\",\n    \"ore_gold\",\n    \"ore_redstone\",\n    \"ore_diamond\",\n    \"ore_lapis\",\n    \"ore_infested\",\n    \"ore_emerald\",\n    \"ore_debris_large\",\n    \"ore_debris_small\",\n    \"crimson_fungi\",\n    \"crimson_fungi_planted\",\n    \"warped_fungi\",\n    \"warped_fungi_planted\",\n    \"huge_brown_mushroom\",\n    \"huge_red_mushroom\",\n    \"oak\",\n    \"dark_oak\",\n    \"birch\",\n    \"acacia\",\n    \"spruce\",\n    \"pine\",\n    \"jungle_tree\",\n    \"fancy_oak\",\n    \"jungle_tree_no_vine\",\n    \"mega_jungle_tree\",\n    \"mega_spruce\",\n    \"mega_pine\",\n    \"super_birch_bees_0002\",\n    \"swamp_tree\",\n    \"jungle_bush\",\n    \"oak_bees_0002\",\n    \"oak_bees_002\",\n    \"oak_bees_005\",\n    \"birch_bees_0002\",\n    \"birch_bees_002\",\n    \"birch_bees_005\",\n    \"fancy_oak_bees_0002\",\n    \"fancy_oak_bees_002\",\n    \"fancy_oak_bees_005\",\n    \"oak_badlands\",\n    \"spruce_snowy\",\n    \"flower_warm\",\n    \"flower_default\",\n    \"flower_forest\",\n    \"flower_swamp\",\n    \"flower_plain\",\n    \"flower_plain_decorated\",\n    \"forest_flower_vegetation_common\",\n    \"forest_flower_vegetation\",\n    \"dark_forest_vegetation_brown\",\n    \"dark_forest_vegetation_red\",\n    \"warm_ocean_vegetation\",\n    \"forest_flower_trees\",\n    \"taiga_vegetation\",\n    \"trees_shattered_savanna\",\n    \"trees_savanna\",\n    \"birch_tall\",\n    \"trees_birch\",\n    \"trees_mountain_edge\",\n    \"trees_mountain\",\n    \"trees_water\",\n    \"birch_other\",\n    \"plain_vegetation\",\n    \"trees_jungle_edge\",\n    \"trees_giant_spruce\",\n    \"trees_giant\",\n    \"trees_jungle\",\n    \"bamboo_vegetation\",\n    \"mushroom_field_vegetation\"\n];\n\nexport const TAGS_OPTIONS = [\n    'acacia_logs',\n    'anvil',\n    'bamboo_plantable_on',\n    'banners',\n    'base_stone_nether',\n    'base_stone_overworld',\n    'beacon_base_blocks',\n    'beds',\n    'bee_growables',\n    'beehives',\n    'birch_logs',\n    'buttons',\n    'campfires',\n    'carpets',\n    'climbable',\n    'coral_blocks',\n    'coral_plants',\n    'corals',\n    'crimson_stems',\n    'crops',\n    'dark_oak_logs',\n    'doors',\n    'dragon_immune',\n    'enderman_holdable',\n    'fence_gates',\n    'fences',\n    'fire',\n    'flower_pots',\n    'flowers',\n    'gold_ores',\n    'guarded_by_piglins',\n    'hoglin_repellents',\n    'ice',\n    'impermeable',\n    'infiniburn_end',\n    'infiniburn_nether',\n    'infiniburn_overworld',\n    'jungle_logs',\n    'leaves',\n    'logs',\n    'logs_that_burn',\n    'mushroom_grow_block',\n    'non_flammable_wood',\n    'nylium',\n    'oak_logs',\n    'piglin_repellents',\n    'planks',\n    'portals',\n    'pressure_plates',\n    'prevent_mob_spawning_inside',\n    'rails',\n    'sand',\n    'saplings',\n    'shulker_boxes',\n    'signs',\n    'slabs',\n    'small_flowers',\n    'soul_fire_base_blocks',\n    'soul_speed_blocks',\n    'spruce_logs',\n    'stairs',\n    'standing_signs',\n    'stone_bricks',\n    'stone_pressure_plates',\n    'strider_warm_blocks',\n    'tall_flowers',\n    'trapdoors',\n    'underwater_bonemeals',\n    'unstable_bottom_center',\n    'valid_spawn',\n    'wall_corals',\n    'wall_post_override',\n    'wall_signs',\n    'walls',\n    'warped_stems',\n    'wart_blocks',\n    'wither_immune',\n    'wither_summon_base_blocks',\n    'wooden_buttons',\n    'wooden_doors',\n    'wooden_fences',\n    'wooden_pressure_plates',\n    'wooden_slabs',\n    'wooden_stairs',\n    'wooden_trapdoors',\n    'wool'\n].map(tag => ({ value: 'minecraft:' + tag, label: tag }));\n\nexport const DECORATORS_OPTIONS = [\n    { value: 'chance', label: 'Chance' },\n    { value: 'count', label: 'Count' },\n    { value: 'count_extra', label: 'Count extra' },\n    { value: 'count_multilayer', label: 'Count multi layer' },\n    { value: 'decorated', label: 'Decorated' },\n    { value: 'fire', label: 'Fire' },\n    { value: 'range', label: 'Range' },\n    { value: 'range_biased', label: 'Range biased' },\n    { value: 'range_very_biased', label: 'Range very biased' },\n    { value: 'square', label: 'Square' }\n].map(o => {\n    o.value = 'minecraft:' + o.value;\n    return o;\n});\n\nexport const TREE_DECORATORS_OPTIONS = [\n    { value: 'alter_ground', label: 'Alter ground' },\n    { value: 'beehive', label: 'Beehive', default: { probability: 0.02 } },\n    { value: 'cocoa', label: 'Cocoa beans', default: { probability: 0.2 } },\n    { value: 'leave_vine', label: 'Leave vine' },\n    { value: 'trunk_vine', label: 'Trunk vine' }\n].map(o => {\n    o.value = 'minecraft:' + o.value;\n    return o;\n});\n\nexport const HUGE_FUNGUS_FEATURE_CONFIG = {\n    hat_state: {\n        Name: \"minecraft:nether_wart_block\"\n    },\n    decor_state: {\n        Name: \"minecraft:shroomlight\"\n    },\n    planted: false,\n    valid_base_block: {\n        Name: \"minecraft:crimson_nylium\"\n    },\n    stem_state: {\n        Properties: {\n            axis: \"y\"\n        },\n        Name: \"minecraft:crimson_stem\"\n    }\n};\n\nexport const ORE_FEATURE_CONFIG = {\n    target: {\n        tag: \"minecraft:base_stone_overworld\",\n        predicate_type: \"minecraft:tag_match\"\n    },\n    state: {\n        Name: \"minecraft:gold_ore\"\n    },\n    size: 30\n};\n\nexport const SPRING_FEATURE_CONFIG = {\n    rock_count: 4,\n    hole_count: 1,\n    valid_blocks: [\n        \"minecraft:stone\",\n        \"minecraft:granite\",\n        \"minecraft:diorite\",\n        \"minecraft:andesite\"\n    ],\n    state: {\n        Properties: {\n            falling: \"true\"\n        },\n        Name: \"minecraft:water\"\n    },\n    requires_block_below: true\n}\n\nexport const DECORATED_ORE_FEATURE_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        feature: {\n                            config: ORE_FEATURE_CONFIG,\n                            type: \"minecraft:ore\"\n                        },\n                        decorator: {\n                            config: {\n                                bottom_offset: 0,\n                                top_offset: 0,\n                                maximum: 32\n                            },\n                            type: \"minecraft:range\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                },\n                decorator: {\n                    config: {},\n                    type: \"minecraft:square\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 2\n            },\n            type: \"minecraft:count\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_SPRING_FEATURE_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        feature: {\n                            config: SPRING_FEATURE_CONFIG,\n                            type: \"minecraft:spring_feature\"\n                        },\n                        decorator: {\n                            config: {\n                                bottom_offset: 8,\n                                top_offset: 8,\n                                maximum: 256\n                            },\n                            type: \"minecraft:range_biased\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                },\n                decorator: {\n                    config: {},\n                    type: \"minecraft:square\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 50\n            },\n            type: \"minecraft:count\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const TREE_FEATURE_CONFIG = {\n    heightmap: \"OCEAN_FLOOR\",\n    minimum_size: {\n        limit: 1,\n        lower_size: 0,\n        upper_size: 1,\n        type: \"minecraft:two_layers_feature_size\"\n    },\n    decorators: [],\n    trunk_provider: {\n        state: {\n            Properties: {\n                axis: \"y\"\n            },\n            Name: \"minecraft:birch_log\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    leaves_provider: {\n        state: {\n            Properties: {\n                persistent: \"false\",\n                distance: \"7\"\n            },\n            Name: \"minecraft:birch_leaves\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    foliage_placer: {\n        radius: 2,\n        offset: 0,\n        height: 3,\n        type: \"minecraft:blob_foliage_placer\"\n    },\n    trunk_placer: {\n        base_height: 5,\n        height_rand_a: 2,\n        height_rand_b: 0,\n        type: \"minecraft:straight_trunk_placer\"\n    }\n};\n\nexport const RANDOM_PATCH_FEATURE_CONFIG = {\n    can_replace: false,\n    project: true,\n    need_water: false,\n    xspread: 7,\n    yspread: 3,\n    zspread: 7,\n    whitelist: [\n        {\n            Properties: {\n                snowy: \"false\"\n            },\n            Name: \"minecraft:grass_block\"\n        }\n    ],\n    blacklist: [],\n    tries: 64,\n    state_provider: {\n        state: {\n            Name: \"minecraft:pumpkin\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    block_placer: {\n        type: \"minecraft:simple_block_placer\"\n    }\n}\n\nexport const DECORATED_HUGE_FUNGUS_CONFIG = {\n    config: {\n        feature: {\n            config: HUGE_FUNGUS_FEATURE_CONFIG,\n            type: \"minecraft:huge_fungus\"\n        },\n        decorator: {\n            config: {\n                count: 8\n            },\n            type: \"minecraft:count_multilayer\"\n        }\n    },\n    type: \"minecraft:decorated\"\n}\n\nexport const DECORATED_RANDOM_PATCH_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: RANDOM_PATCH_FEATURE_CONFIG,\n                    type: \"minecraft:random_patch\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:heightmap_spread_double\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                chance: 32\n            },\n            type: \"minecraft:chance\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_TREE_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: TREE_FEATURE_CONFIG,\n                    type: \"minecraft:tree\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:heightmap\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 10,\n                extra_chance: 0.1,\n                extra_count: 1\n            },\n            type: \"minecraft:count_extra\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATOR_EXTRA_COUNT_DEFAULTS = {\n    count: 10,\n    extra_chance: 0.1,\n    extra_count: 1\n}\n\nexport const DECORATOR_DECORATED_DEFAULTS = {\n    outer: {\n        config: {},\n        type: \"minecraft:square\"\n    },\n    inner: {\n        config: {},\n        type: \"minecraft:heightmap\"\n    }\n}\n\nexport const DECORATOR_RANGE_DEFAULTS = {\n    bottom_offset: 4,\n    top_offset: 0,\n    maximum: 64\n}\n","export const VANILLA_SURFACE_BUILDERS = [\n    { value: 'badlands', label: 'Badlands' },\n    { value: 'basalt_deltas', label: 'Basalt Deltas' },\n    { value: 'crimson_forest', label: 'Crimson forest' },\n    { value: 'desert', label: 'Desert' },\n    { value: 'end', label: 'End' },\n    { value: 'eroded_badlands', label: 'Eroded Badlands' },\n    { value: 'frozen_ocean', label: 'Frozen ocean' },\n    { value: 'full_sand', label: 'Full sand' },\n    { value: 'giant_tree_taiga', label: 'Giant tree taiga' },\n    { value: 'grass', label: 'Grass' },\n    { value: 'gravelly_mountain', label: 'Gravelly mountain' },\n    { value: 'ice_spikes', label: 'Ice spikes' },\n    { value: 'mountain', label: 'Mountain' },\n    { value: 'mycelium', label: 'Mycelium' },\n    { value: 'nether', label: 'Nether' },\n    { value: 'nope', label: 'Nope' },\n    { value: 'ocean_sand', label: 'Ocean sand' },\n    { value: 'shattered_savanna', label: 'Shattered savanna' },\n    { value: 'soul_sand_valley', label: 'Soul sand valley' },\n    { value: 'stone', label: 'Stone' },\n    { value: 'swamp', label: 'Swamp' },\n    { value: 'warped_forest', label: 'Warped forest' },\n    { value: 'wooded_badlands', label: 'Wooded badlands' },\n].map(option => {\n    option.value = 'minecraft:' + option.value;\n    return option;\n});\n\nexport const SURFACE_TYPES_OPTIONS = [\n    { value: 'default', label: 'Default' },\n    { value: 'mountain', label: 'Mountain' },\n    { value: 'shattered_savanna', label: 'Shattered savanna' },\n    { value: 'gravelly_mountain', label: 'Gravelly mountain' },\n    { value: 'giant_tree_taiga', label: 'Giant tree taiga' },\n    { value: 'swamp', label: 'Swamp' },\n    { value: 'badlands', label: 'Badlands' },\n    { value: 'wooded_badlands', label: 'Wooded badlands' },\n    { value: 'eroded_badlands', label: 'Eroded badlands' },\n    { value: 'frozen_ocean', label: 'Frozen ocean' },\n    { value: 'nether', label: 'Nether' },\n    { value: 'nether_forest', label: 'Nether forest' },\n    { value: 'soul_sand_valley', label: 'Soul sand valley' },\n    { value: 'basalt_deltas', label: 'Basalt deltas' },\n    { value: 'nope', label: 'Nope' }\n].map(option => {\n    option.value = 'minecraft:' + option.value;\n    return option;\n});\n\nexport const SURFACE_BUILDER = {\n    config: {\n        top_material: {\n            Properties: {\n                snowy: \"false\"\n            },\n            Name: \"minecraft:grass_block\"\n        },\n        under_material: {\n            Name: \"minecraft:dirt\"\n        },\n        underwater_material: {\n            Name: \"minecraft:gravel\"\n        }\n    },\n    type: \"minecraft:default\"\n}","export const VANILLA_NOISES = [\n    { value: 'minecraft:overworld', label: 'Overworld' },\n    { value: 'minecraft:nether', label: 'Nether' },\n    { value: 'minecraft:end', label: 'End' },\n    { value: 'minecraft:amplified', label: 'Amplified' },\n    { value: 'minecraft:caves', label: 'Caves' },\n    { value: 'minecraft:floating_islands', label: 'Floating islands' }\n];\n\nexport const STRUCTURES = [\n    \"ocean_ruin\",\n    \"bastion_remnant\",\n    \"fortress\",\n    \"nether_fossil\",\n    \"igloo\",\n    \"shipwreck\",\n    \"swamp_hut\",\n    \"jungle_pyramid\",\n    \"village\",\n    \"ruined_portal\",\n    \"endcity\",\n    \"buried_treasure\",\n    \"mansion\",\n    \"monument\",\n    \"stronghold\",\n    \"pillager_outpost\",\n    \"desert_pyramid\",\n    \"mineshaft\"\n].map(tag => ({ value: 'minecraft:' + tag, label: tag }));;\n\nexport const OVERWORLD_NOISE = {\n    bedrock_roof_position: -10,\n    bedrock_floor_position: 0,\n    sea_level: 63,\n    disable_mob_generation: false,\n    structures: {\n        stronghold: {\n            distance: 32,\n            spread: 3,\n            count: 128\n        },\n        structures: {\n            \"minecraft:ocean_ruin\": {\n                spacing: 20,\n                separation: 8,\n                salt: 14357621\n            },\n            \"minecraft:bastion_remnant\": {\n                spacing: 27,\n                separation: 4,\n                salt: 30084232\n            },\n            \"minecraft:fortress\": {\n                spacing: 27,\n                separation: 4,\n                salt: 30084232\n            },\n            \"minecraft:nether_fossil\": {\n                spacing: 2,\n                separation: 1,\n                salt: 14357921\n            },\n            \"minecraft:igloo\": {\n                spacing: 32,\n                separation: 8,\n                salt: 14357618\n            },\n            \"minecraft:shipwreck\": {\n                spacing: 24,\n                separation: 4,\n                salt: 165745295\n            },\n            \"minecraft:swamp_hut\": {\n                spacing: 32,\n                separation: 8,\n                salt: 14357620\n            },\n            \"minecraft:jungle_pyramid\": {\n                spacing: 32,\n                separation: 8,\n                salt: 14357619\n            },\n            \"minecraft:village\": {\n                spacing: 32,\n                separation: 8,\n                salt: 10387312\n            },\n            \"minecraft:ruined_portal\": {\n                spacing: 40,\n                separation: 15,\n                salt: 34222645\n            },\n            \"minecraft:endcity\": {\n                spacing: 20,\n                separation: 11,\n                salt: 10387313\n            },\n            \"minecraft:buried_treasure\": {\n                spacing: 1,\n                separation: 0,\n                salt: 0\n            },\n            \"minecraft:mansion\": {\n                spacing: 80,\n                separation: 20,\n                salt: 10387319\n            },\n            \"minecraft:monument\": {\n                spacing: 32,\n                separation: 5,\n                salt: 10387313\n            },\n            \"minecraft:stronghold\": {\n                spacing: 1,\n                separation: 0,\n                salt: 0\n            },\n            \"minecraft:pillager_outpost\": {\n                spacing: 32,\n                separation: 8,\n                salt: 165745296\n            },\n            \"minecraft:desert_pyramid\": {\n                spacing: 32,\n                separation: 8,\n                salt: 14357617\n            },\n            \"minecraft:mineshaft\": {\n                spacing: 1,\n                separation: 0,\n                salt: 0\n            }\n        }\n    },\n    noise: {\n        height: 256,\n        sampling: {\n            xz_scale: 1,\n            y_scale: 1,\n            xz_factor: 80.0,\n            y_factor: 160.0\n        },\n        top_slide: {\n            target: -10,\n            size: 3,\n            offset: 0\n        },\n        bottom_slide: {\n            target: -30,\n            size: 0,\n            offset: 0\n        },\n        size_horizontal: 1,\n        size_vertical: 2,\n        density_factor: 1.0,\n        density_offset: -0.47,\n        simplex_surface_noise: true,\n        random_density_offset: true,\n        island_noise_override: false,\n        amplified: false\n        \n    },\n    default_block: {\n        Name: \"minecraft:stone\"\n    },\n    default_fluid: {\n        Properties: {\n            level: \"0\"\n        },\n        Name: \"minecraft:water\"\n    }\n}\n","export const DIMENSION = {\n    generator: {\n        type: \"minecraft:noise\",\n        seed: 286956243,\n        biome_source: {\n            type: \"minecraft:fixed\",\n            seed: 286956243,\n            biome: \"minecraft:plains\"\n        },\n        settings: \"minecraft:overworld\"\n    },\n    type: \"minecraft:overworld\"\n}\n\nexport const VANILLA_DIMENSION_TYPES = [\n    { value: 'minecraft:overworld', label: 'Overworld' },\n    { value: 'minecraft:overworld_cave', label: 'Overworld caves' },\n    { value: 'minecraft:the_nether', label: 'The Nether' },\n    { value: 'minecraft:the_end', label: 'The End' },\n]\n\nexport const NOISES_NAMES = [\n    'temperature_noise',\n    'humidity_noise',\n    'altitude_noise',\n    'weirdness_noise'\n];\n\nexport const MULTI_NOISE_BIOME_SOURCE = {\n    type: 'minecraft:multi_noise',\n    seed: 286956243,\n    temperature_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    humidity_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    altitude_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    weirdness_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    biomes: []\n};\n\nexport const OVERWORLD_DIMENSION_TYPE = {\n    has_raids: true,\n    logical_height: 256,\n    infiniburn: \"minecraft:infiniburn_overworld\",\n    ambient_light: 0.0,\n    piglin_safe: false,\n    bed_works: true,\n    respawn_anchor_works: false,\n    ultrawarm: false,\n    natural: true,\n    coordinate_scale: 1,\n    has_skylight: true,\n    has_ceiling: false\n}\n\nexport const THE_NETHER_DIMENSION_TYPE = {\n    has_raids: false,\n    logical_height: 128,\n    infiniburn: \"minecraft:infiniburn_nether\",\n    ambient_light: 0.1,\n    piglin_safe: true,\n    bed_works: false,\n    respawn_anchor_works: true,\n    ultrawarm: true,\n    natural: false,\n    coordinate_scale: 8,\n    fixed_time: 18000,\n    has_skylight: false,\n    has_ceiling: true\n}\n\nexport const THE_END_DIMENSION_TYPE = {\n    has_raids: true,\n    logical_height: 256,\n    infiniburn: \"minecraft:infiniburn_end\",\n    ambient_light: 0.0,\n    piglin_safe: false,\n    bed_works: false,\n    respawn_anchor_works: false,\n    ultrawarm: false,\n    natural: false,\n    coordinate_scale: 1,\n    fixed_time: 6000,\n    has_skylight: false,\n    has_ceiling: false\n}\n","export const VANILLA_CARVERS = [\n    { value: 'canyon', label: 'Canyon', probability: 0.02 },\n    { value: 'cave', label: 'Cave', probability: 0.143 },\n    { value: 'nether_cave', label: 'Nether cave', probability: 0.2 },\n    { value: 'ocean_cave', label: 'Ocean cave', probability: 0.067 },\n    { value: 'underwater_canyon', label: 'Underwater canyon', probability: 0.02  },\n    { value: 'underwater_cave', label: 'Underwater cave', probability: 0.067 }\n].map(option => {\n    option.value = 'minecraft:' + option.value;\n    return option;\n});\n","import React, { useState, useEffect } from 'react';\nimport { jsonFetch } from '../utils/fetch';\nimport { VANILLA_FEATURES } from '../components/feature/FeatureDefaults';\nimport { useData } from '../hooks/context';\nimport { VANILLA_SURFACE_BUILDERS } from '../components/surface/SurfaceBuilderDefaults';\nimport { VANILLA_NOISES } from '../components/noise/NoiseDefaults';\nimport { VANILLA_DIMENSION_TYPES } from '../components/dimension/DimensionDefaults';\nimport { VANILLA_CARVERS } from '../components/carver/CarverDefaults';\n\nexport const DataContext = React.createContext({\n    vanilla: {\n        biomes: [],\n        blocks: [],\n        carvers: [],\n        dimensions: [],\n        dimension_types: [],\n        entities: [],\n        features: [],\n        noises: [],\n        surfaces: []\n    },\n    custom: {\n        biomes: [],\n        carvers: [],\n        dimensions: [],\n        dimension_types: [],\n        features: [],\n        noises: [],\n        surfaces: [],\n        updateBiomes: (biome) => {},\n        updateCarvers: (carver) => {},\n        updateDimensions: (dimension) => {},\n        updateDimensionTypes: (dimension_type) => {},\n        updateFeatures: (feature) => {},\n        updateNoises: (noise) => {},\n        updateSurfacesBuilders: (surface_builder) => {}\n    },\n    namespace: ''\n});\n\nexport function DataContextProvider({children, namespace, initial = {}}) {\n    const [biomes, setBiomes] = useState([]);\n    const [blocks, setBlocks] = useState([]);\n    const [entities, setEntities] = useState([]);\n\n    const [customBiomes, updateBiomes] = useData(initial.biomes);\n    const [carvers, updateCarvers] = useData(initial.carvers);\n    const [dimensions, updateDimensions] = useData(initial.dimensions);\n    const [dimension_types, updateDimensionTypes] = useData(initial.dimension_types);\n    const [features, updateFeatures] = useData(initial.features);\n    const [noises, updateNoises] = useData(initial.noises);\n    const [surfaces, updateSurfacesBuilders] = useData(initial.surfaces);\n\n    useEffect(() => {\n        (async function () {\n            jsonFetch('https://unpkg.com/minecraft-data@2.63.0/minecraft-data/data/pc/1.16.1/biomes.json')\n                .then(biomes => setBiomes(biomes));\n            jsonFetch('https://unpkg.com/minecraft-data@2.63.0/minecraft-data/data/pc/1.16.1/blocks.json')\n                .then(blocks => setBlocks(blocks));\n            jsonFetch('https://unpkg.com/minecraft-data@2.63.0/minecraft-data/data/pc/1.16.1/entities.json')\n                .then(entities => setEntities(entities.map(entity => ({ value: 'minecraft:' + entity.name, label: entity.displayName }))));\n        })();\n    }, []);\n\n    return <DataContext.Provider value={{\n        vanilla: {\n            biomes,\n            blocks,\n            carvers: VANILLA_CARVERS,\n            dimensions: VANILLA_DIMENSION_TYPES.filter(o => !o.value.includes('cave')),\n            dimension_types: VANILLA_DIMENSION_TYPES,\n            entities,\n            features: VANILLA_FEATURES,\n            noises: VANILLA_NOISES,\n            surfaces: VANILLA_SURFACE_BUILDERS\n        },\n        custom: {\n            biomes: customBiomes, carvers, dimensions, dimension_types, features, noises, surfaces,\n            updateBiomes, updateCarvers, updateDimensions, updateDimensionTypes, updateFeatures, updateNoises, updateSurfacesBuilders\n        },\n        namespace\n    }}>{children}</DataContext.Provider>\n}","import { MULTI_NOISE_BIOME_SOURCE, NOISES_NAMES } from './../components/dimension/DimensionDefaults';\n\n/**\n * @param {object} a \n * @param {object} b \n * @returns {boolean}\n */\nexport function objectsEqual(a, b) {\n    return Object.keys(a).length === Object.keys(b).length\n        && Object.keys(a).every(p => a[p] === b[p]);\n}\n\n/**\n * @param {string} str \n * @returns {string}\n */\nexport function capitalize(str) {\n    return str[0].toUpperCase() + str.substr(1);\n}\n\n/**\n * @param {string} key \n * @param {string} [defaultNamespace]\n * @returns {string}\n */\nexport function displayNamespacedKey(key, defaultNamespace) {\n    return key.startsWith(defaultNamespace + ':') ? key.split(':')[1] : key;\n}\n\nexport function getStateValue(state, properties = {}) {\n    const actual = properties[state.name];\n    switch (state.type) {\n        case 'bool':\n            return actual === 'true' ? 'true' : 'false';\n        case 'int':\n            return typeof actual === 'string' ? actual : '0';\n        default:\n            return actual || state.values[0];\n    }\n}\n\nexport function hasDuplicatedObjects(objects) {\n    for (const a of objects) {\n        for (const b of objects) {\n            if (a !== b && objectsEqual(a, b)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n/**\n * @param {object} feature Unserialized feature\n * @returns {{type: string, config: object}[]} Decorators list\n */\nexport function findDecorators(feature) {\n    const decorators = [];\n\n    let f = null;\n    (function find(obj) {\n        for (const key of Object.keys(obj)) {\n            if (key === 'decorator') {\n                decorators.unshift(obj[key]);\n                if (f === null && !obj.feature.hasOwnProperty('decorator')) {\n                    f = obj.feature;\n                }\n            } else if (typeof obj[key] === 'object') {\n                find(obj[key]);\n            }\n        }\n    }(feature));\n\n    if (f === null) {\n        f = {};\n    }\n    return [decorators, f];\n}\n\n/**\n * @param {object} feature \n * @param {{type: string, config: object}[]} decorators \n * @param {string} name\n * @returns {object} Decorated feature\n */\nexport function buildDecorated(feature, decorators, name) {\n    if (decorators.length < 1) {\n        return feature;\n    }\n\n    const decorated = { type: 'minecraft:decorated', key: name };\n    let current = decorated;\n    decorators.forEach((decorator, i) => {\n        const f = i === (decorators.length - 1) ? feature : { type: 'minecraft:decorated' };\n        current.config = {\n            feature: f,\n            decorator\n        };\n        current = f;\n        if (i < 1) {\n            f.name = name;\n        }\n    });\n    return decorated;\n}\n\n/**\n * Rename object keys.\n * \n * @param {object} obj \n * @param {object} map \n * @returns {object}\n */\nfunction refitKeys(obj, map) {\n    const build = {};\n    for (const key in obj) {\n        const destKey = map[key] || key;\n\n        let value = obj[key];\n        if (typeof value === 'object') {\n            value = refitKeys(value, map);\n        }\n        build[destKey] = value;\n    }\n    return build;\n}\n\n/**\n * @param {string} group \n * @param {object} data \n * @returns {object}\n */\nexport function dataUpper(group, data) {\n    switch (group) {\n        case 'biomes':\n            // 20w30a: sky_color into effects\n            if (data.hasOwnProperty('sky_color')) {\n                data.effects.sky_color = data.sky_color;\n            }\n            return data;\n        case 'features':\n            // 20w30a: name -> type\n            const [decorators, feature] = findDecorators(data);\n            if (!feature.hasOwnProperty('type')) {\n                feature.type = feature.name;\n                delete feature.name;\n                return buildDecorated(\n                    feature,\n                    decorators.map(decorator => refitKeys(decorator, { name: 'type' })),\n                    data.key\n                );\n            }\n            return data;\n        case 'dimensions':\n            // 20w30a: multi_noise: firstOctave and amplitudes parameters\n            const source = data.generator.biome_source;\n            if (source.type === 'minecraft:multi_noise' && NOISES_NAMES.some(n => !source.hasOwnProperty(n))) {\n                data.generator.biome_source = { ...MULTI_NOISE_BIOME_SOURCE, ...source };\n            }\n            return data;\n        case 'dimension_types':\n            // 1.16.2-pre-2 : shrunk -> coordinate_scale\n            if (data.hasOwnProperty('shrunk')) {\n                data.coordinate_scale = data.shrunk ? 8 : 1;\n                delete data.shrunk;\n            }\n            return data;\n        default:\n            // 20w30a: name -> type\n            if (data.hasOwnProperty('name') && !data.hasOwnProperty('type')) {\n                data.type = data.name;\n            }\n            return data;\n    }\n}\n","import { useState, useContext } from \"react\";\nimport { DataContext } from \"../context/DataContext\";\nimport { displayNamespacedKey } from \"../utils/data\";\n\n/**\n * @param {object[]} initial\n * @returns {[object[], function(object): void]} \n */\nexport function useData(initial = []) {\n    const [data, setData] = useState(initial);\n    const updateData = function(object) {\n        setData(stored => {\n            const existing = stored.findIndex(({key}) => object.key === key);\n            if (existing > -1 && existing !== object.index) {\n                object.index = stored.length;\n                object.key = object.key + '2';\n                stored.push(object);\n                return stored;\n            }\n\n            if (typeof object.index === 'undefined') {\n                object.index = stored.length;\n                stored.push(object);\n            } else {\n                stored[object.index] = object;\n            }\n            return stored;\n        });\n    }\n    return [data, updateData];\n}\n\n/**\n * @param {('biomes'|'carvers|'dimensions'|'dimension_types'|'features'|'noises'|'surfaces')} category Data category\n * @param {boolean} [includeCustom]\n * @param {boolean} [empty]\n * @returns {{ value: string, label: string }[]} Options list for react-select\n */\nexport function useKeyedListOptions(category, includeCustom = true, empty = false) {\n    const context = useContext(DataContext);\n    if (empty) {\n        return [];\n    }\n\n    const options = includeCustom ? context.custom[category]\n        .map(keyed => {\n            const name = displayNamespacedKey(keyed.key, context.namespace);\n            return { value: keyed.key, label: '(Custom) ' + name };\n        }) : [];\n\n    let struct = null;\n    context.vanilla[category].forEach(keyed => {\n        if (struct === null) {\n            struct = keyed.hasOwnProperty('displayName') ? 1 : (keyed.hasOwnProperty('label') ? 2 : 3);\n        }\n        switch(struct) {\n            case 1: // displayName\n                options.push({ value: 'minecraft:' + keyed.name, label: keyed.displayName });\n                return;\n            case 2: // already option\n                options.push(keyed);\n                return;\n            default:\n                options.push({ value: 'minecraft:' + keyed, label: keyed });\n        }\n    });\n    return options;\n}","import React from 'react';\n\nexport function Button ({loading, cat = 'primary', ...buttonProps}) {\n    return <button className={`btn btn--${cat}`} {...buttonProps} tabIndex=\"0\"></button>\n}\n","import React, { useState, useCallback, useRef, useMemo, useContext, useEffect } from 'react';\nimport { useToggle } from '../hooks/ui';\nimport Select from '../ui/Select';\nimport { useKeyedListOptions } from '../hooks/context';\nimport { DataContext } from '../context/DataContext';\nimport { Button } from '../ui/Button';\n\nexport function NamespacedKey({ children, example = 'daily_resource', type, value = '', onChange, expectBreakage = false, mayReplaceVanilla = false }) {\n    // To trigger form submit\n    const hidden = useRef(null);\n\n    // Final namespaced key\n    const [key, setKey] = useState(value);\n\n    const options = useKeyedListOptions(type, false, !mayReplaceVanilla);\n\n    const defaultNamespace = useContext(DataContext).namespace;\n    const [replace, toggle] = useToggle(options.some(o => key === o.value));\n\n    // Adjust value with default namespace if needed\n    const handleKeyChange = useCallback(function (e) {\n        const value = e.target.value.toLowerCase();\n        if (value.includes(':')) {\n            setKey(value);\n        } else {\n            setKey(defaultNamespace + ':' + value);\n        }\n    }, [defaultNamespace, setKey]);\n\n    const handleReplaceTargetChange = useCallback((selected) => setKey(selected.value), [setKey]);\n\n    // Fire onChange\n    useEffect(function() {\n        if (typeof onChange === 'function' && key !== value) {\n            onChange(key);\n        }\n    }, [key, onChange, value]);\n\n    // Allow form submit by pressing enter\n    const handleKeyDown = useCallback(function (e) {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            const form = hidden.current.form;\n            if (form !== null) {\n                form.dispatchEvent(new Event('submit', { cancelable: true }));\n            }\n        }\n    }, []);\n\n    // Remove the \"minecraft:\" part when changing mode\n    const handleToggle = useCallback(function (e) {\n        if (replace && key.startsWith('minecraft:')) {\n            setKey(key => defaultNamespace + ':' + key.split(':')[1]);\n        }\n        toggle(e);\n    }, [defaultNamespace, key, setKey, replace, toggle]);\n\n    // Displayed input value - trim namespace if default\n    const inputValue = useMemo(function () {\n        if (key.startsWith(defaultNamespace + ':')) {\n            return key.split(':')[1];\n        }\n        return key;\n    }, [defaultNamespace, key]);\n\n    // Hidden input value - set to empty when nothing is selected (keeps the key from text mode)\n    const hiddenInputValue = useMemo(function () {\n        if (replace && !options.some(o => o.value === key)) {\n            return '';\n        }\n        return key;\n    }, [key, options, replace]);\n\n    // Adapt select width to its content\n    const style = useMemo(function () {\n        return { width: 8 * Math.max.apply(Math, options.map(o => o.label.length)) + 60 };\n    }, [options]);\n\n    const dummyOnChange = useCallback(console.log, []);\n\n    return <>\n        {typeof children !== 'undefined' && <h3>{(typeof value === 'undefined' || value === '') ? 'Create new ' : 'Edit '}{children}</h3>}\n        <div className=\"form-group\">\n            <label htmlFor=\"key\">{replace ? 'Replace' : 'Key'}</label> :&nbsp;\n            {replace && <div className=\"inbl\" style={style}>\n                <Select options={options} value={options.find(o => key === o.value)} onChange={handleReplaceTargetChange} inputId=\"key\" />\n            </div>}\n            {!replace &&\n                <input type=\"text\" id=\"key\" required pattern=\"^([\\w.-]+:[\\w.-]+)$|^[\\w.-]+$\" placeholder={`Example: ${example}`}\n                    autoCapitalize=\"none\" spellCheck=\"false\" autoComplete=\"off\" value={inputValue}\n                    onChange={handleKeyChange} onKeyPress={handleKeyDown} />\n            }\n            <input type={replace ? 'text' : 'hidden'} name=\"key\" value={hiddenInputValue} onChange={dummyOnChange} ref={hidden}\n                required tabIndex=\"-1\" style={{ opacity: 0, height: 0, position: 'absolute' }} />\n            {mayReplaceVanilla && <Button cat=\"info mlm\" onClick={handleToggle}>{replace ? 'Create a new one' : 'Replace vanilla'}</Button>}\n        \n            {expectBreakage && value !== key &&\n                <p className=\"alert--warning\">Warning: changing the name of a resource may break other resources that depend on it.</p>\n            }\n            {!mayReplaceVanilla && !replace && key.startsWith('minecraft:') &&\n                <p className=\"alert--warning\">Warning: datapacks cannot currently replace vanilla {children}s.</p>\n            }\n        </div>\n    </>;\n}","export const EFFECTS = {\n    mood_sound: {\n        sound: \"minecraft:ambient.cave\",\n        tick_delay: 6000,\n        block_search_extent: 8,\n        offset: 2.0\n    },\n    sky_color: 7907327,\n    fog_color: 12638463,\n    water_color: 4159204,\n    water_fog_color: 329011\n}\n\nexport const FEATURES = [\n    [],\n    [\n        \"minecraft:lake_water\",\n        \"minecraft:lake_lava\"\n    ],\n    [],\n    [\n        \"minecraft:monster_room\"\n    ],\n    [],\n    [],\n    [\n        \"minecraft:ore_dirt\",\n        \"minecraft:ore_gravel\",\n        \"minecraft:ore_granite\",\n        \"minecraft:ore_diorite\",\n        \"minecraft:ore_andesite\",\n        \"minecraft:ore_coal\",\n        \"minecraft:ore_iron\",\n        \"minecraft:ore_gold\",\n        \"minecraft:ore_redstone\",\n        \"minecraft:ore_diamond\",\n        \"minecraft:ore_lapis\",\n        \"minecraft:disk_sand\",\n        \"minecraft:disk_clay\",\n        \"minecraft:disk_gravel\"\n    ],\n    [],\n    [\n        \"minecraft:patch_tall_grass_2\",\n        \"minecraft:plain_vegetation\",\n        \"minecraft:flower_plain_decorated\",\n        \"minecraft:patch_grass_plain\",\n        \"minecraft:brown_mushroom_normal\",\n        \"minecraft:red_mushroom_normal\",\n        \"minecraft:patch_sugar_cane\",\n        \"minecraft:patch_pumpkin\",\n        \"minecraft:spring_water\",\n        \"minecraft:spring_lava\"\n    ],\n    [\n        \"minecraft:freeze_top_layer\"\n    ]\n]\n\nexport const STARTS = [\n    \"minecraft:village_plains\",\n    \"minecraft:pillager_outpost\",\n    \"minecraft:mineshaft\",\n    \"minecraft:stronghold\",\n    \"minecraft:ruined_portal\"\n]\n\nconst SPAWNERS_AMBIENT = [\n    {\n        type: \"minecraft:bat\",\n        weight: 10,\n        minCount: 8,\n        maxCount: 8\n    }\n];\n\nconst SPAWNERS_CREATURE = [\n    {\n        type: \"minecraft:sheep\",\n        weight: 12,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:pig\",\n        weight: 10,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:chicken\",\n        weight: 10,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:cow\",\n        weight: 8,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:horse\",\n        weight: 5,\n        minCount: 2,\n        maxCount: 6\n    },\n    {\n        type: \"minecraft:donkey\",\n        weight: 1,\n        minCount: 1,\n        maxCount: 3\n    }\n];\n\nconst SPAWNERS_MONSTER = [\n    {\n        type: \"minecraft:spider\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:zombie\",\n        weight: 95,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:zombie_villager\",\n        weight: 5,\n        minCount: 1,\n        maxCount: 1\n    },\n    {\n        type: \"minecraft:skeleton\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:creeper\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:slime\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:enderman\",\n        weight: 10,\n        minCount: 1,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:witch\",\n        weight: 5,\n        minCount: 1,\n        maxCount: 1\n    },\n];\n\nexport const SPAWNERS_DEFAULTS = {\n    ambient: SPAWNERS_AMBIENT,\n    creature: SPAWNERS_CREATURE,\n    misc: [],\n    monster: SPAWNERS_MONSTER,\n    water_ambient: [],\n    water_creature: []\n};\n\nexport const BIOME_DEFAULTS = {\n    effects: EFFECTS,\n    carvers: {\n        air: [\n            \"minecraft:cave\",\n            \"minecraft:canyon\"\n        ]\n    },\n    starts: STARTS,\n    features: FEATURES,\n    spawners: SPAWNERS_DEFAULTS,\n    category: \"plains\",\n    precipitation: \"rain\",\n    surface_builder: \"minecraft:grass\",\n    scale: 0.05,\n    downfall: 0.4,\n    depth: 0.12,\n    temperature: 0.8,\n    player_spawn_friendly: true,\n    spawn_costs: {}\n}\n\nexport const PARTICLES = [\n    'ambient_entity_effect',\n    'angry_villager',\n    'ash',\n    'barrier',\n    'block',\n    'bubble',\n    'bubble_column_up',\n    'bubble_pop',\n    'campfire_cosy_smoke',\n    'campfire_signal_smoke',\n    'cloud',\n    'composter',\n    'crimson_spore',\n    'crit',\n    'current_down',\n    'damage_indicator',\n    'dolphin',\n    'dragon_breath',\n    'dripping_honey',\n    'dripping_lava',\n    'dripping_obsidian_tear',\n    'dripping_water',\n    'dust',\n    'effect',\n    'elder_guardian',\n    'enchant',\n    'enchanted_hit',\n    'end_rod',\n    'entity_effect',\n    'explosion',\n    'explosion_emitter',\n    'falling_dust',\n    'falling_honey',\n    'falling_lava',\n    'falling_nectar',\n    'falling_obsidian_tear',\n    'falling_water',\n    'firework',\n    'fishing',\n    'flame',\n    'flash',\n    'happy_villager',\n    'heart',\n    'instant_effect',\n    'item',\n    'item_slime',\n    'item_snowball',\n    'landing_honey',\n    'landing_lava',\n    'landing_obsidian_tear',\n    'large_smoke',\n    'lava',\n    'mycelium',\n    'nautilus',\n    'note',\n    'poof',\n    'portal',\n    'rain',\n    'reverse_portal',\n    'smoke',\n    'sneeze',\n    'soul',\n    'soul_fire_flame',\n    'spit',\n    'splash',\n    'squid_ink',\n    'sweep_attack',\n    'totem_of_undying',\n    'underwater',\n    'warped_spore',\n    'white_ash',\n    'witch'\n].map(particle => ({ value: 'minecraft:' + particle, label: particle }));\n\nexport const PARTICLE_DEFAULTS = {\n    options: {\n        type: \"minecraft:crimson_spore\"\n    },\n    probability: 0.015\n}\n","export function hexColorToInteger(color) {\n    return parseInt(color.replace(/^#/, ''), 16);\n}\n\nexport function integerColorToHex(color) {\n    return '#' + (color & 0xFFFFFF).toString(16).padStart(6, '0');\n}","export const INT_MIN_VALUE = 0x80000000 & 0x80000000;\nexport const INT_MAX_VALUE = 0x7FFFFFFF;\n\n/**\n * @param {number} n \n * @returns {number}\n */\nexport function maintainPrecision(n) {\n    return parseFloat(n.toFixed(12));\n}\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { hexColorToInteger, integerColorToHex } from '../utils/color';\nimport { INT_MAX_VALUE, maintainPrecision } from '../utils/number';\n\nexport const ConfInput = React.memo(function ({\n    attr, type,\n    checked, defaultChecked,\n    children,\n    name, id,\n    onChange,\n    value, defaultValue,\n    min, max, step,\n    className, style\n}) {\n\n    const uId = name || Math.random().toString(36).substr(2, 5) + '-' + id;\n\n    if (typeof type !== 'string') {\n        if (typeof checked !== 'undefined' || typeof defaultChecked !== 'undefined') {\n            type = 'checkbox';\n        } else if (typeof step === 'number' || typeof max === 'number' || !isNaN(typeof value === 'undefined' ? defaultValue : value)) {\n            type = 'number';\n        } else {\n            type = 'text';\n        }\n    }\n\n    if (type === 'checkbox') {\n        return <div className={className}>\n            <label htmlFor={uId}>{children}</label>&nbsp;:&nbsp;<input type={type || 'checkbox'} data-name={name || id} name={name} id={uId} className=\"checkbox\" {...{ ...attr, checked, defaultChecked, onChange, value, style }} />\n        </div>\n    }\n    return <div className={className}>\n        {typeof children === 'undefined' || <><label htmlFor={uId}>{children}</label> : </>}\n        <input\n            type={type} data-name={name || id} name={name} id={uId}\n            {...{ ...attr, value, onChange, defaultValue, min, max, step, style }} />\n    </div>\n});\n\nexport const NumberInput = React.memo(function ({\n    className, style = {}, children, defaultValue = 0,\n    id, name, onChange, upChange,\n    required = true, value,\n    type = 'number', step = 1, min = 0, max = INT_MAX_VALUE\n}) {\n\n    const uId = name || Math.random().toString(36).substr(2, 5) + '-' + id;\n    const n = typeof value === 'undefined' ? parseFloat(defaultValue) : parseFloat(value);\n    const [val, setValue] = useState(n);\n    const [prevVal, setPrevValue] = useState(n);\n    const [click, setClick] = useState(null);\n\n    value = parseFloat(value);\n    min = parseFloat(min);\n    step = parseFloat(step);\n    max = parseFloat(max);\n\n    if (n !== prevVal && n !== val && !isNaN(val) && val !== '') {\n        setValue(n);\n        setPrevValue(n);\n    }\n\n    const handleChange = useCallback(function (e) {\n        const value = e.target.value;\n        const n = parseFloat(value);\n        if (value === '') {\n            setValue(value);\n        } else if (value.length <= INT_MAX_VALUE.toString().length) {\n            if (value.endsWith('.00001')) {\n                // Fix browser step\n                setValue(val => maintainPrecision(val + (n > val ? step : -step)));\n            } else {\n                setValue(n);\n            }\n        }\n    }, [step]);\n\n    const stepUpDown = useCallback(function (addition) {\n        setValue(val => {\n            if (!isNaN(val)) {\n                const n = maintainPrecision(val + (addition ? step : -step));\n                if (n >= min && n <= max) {\n                    return n;\n                }\n                return val;\n            }\n            return val;\n        });\n    }, [max, min, step]);\n\n    const handleMouseDown = useCallback(function (e) {\n        e.preventDefault();\n        const addition = e.target.classList.contains('btn-plus');\n        if (val === '') {\n            return;\n        }\n        stepUpDown(addition);\n        setClick(window.setInterval(() => stepUpDown(addition), 150));\n    }, [stepUpDown, val]);\n\n    const handleClick = useCallback(function (e) {\n        e.preventDefault();\n    }, []);\n\n    const handleMouseUp = useCallback(function (e) {\n        e.preventDefault();\n        window.clearInterval(click);\n        setClick(null);\n    }, [click]);\n\n    useEffect(function () {\n        let n = val;\n        if (typeof n === 'string') {\n            const value = val.replace(',', '.');\n            const parse = typeof step === 'undefined' ? parseInt : parseFloat;\n            n = parse(value);\n        }\n\n        if (!isNaN(n) && val !== value && n >= min && n < max && click === null) {\n            if (typeof upChange === 'function') {\n                upChange({ [id || name]: n });\n            } else if (typeof onChange === 'function') {\n                onChange(n);\n            }\n        }\n    }, [click, id, min, max, name, onChange, step, type, upChange, val, value]);\n\n    style.width = getNumberSize(val, max, step);\n    className = (className || '') + ' number-wrapper';\n\n    return <div className={className}>\n        {typeof children === 'undefined' || <div className=\"label\"><label htmlFor={uId}>{children}</label> :&nbsp;</div>}\n            <div className=\"number-input-wrapper\"><input\n                type={type} name={name} id={uId} style={style}\n                min={min} max={max}\n                value={val} data-name={name || id} required={required}\n                step={step === 1 ? 1 : 'any'} onChange={handleChange}\n            />\n            {type === 'number' &&\n                <div className=\"number-controls\">\n                    <button className=\"btn-plus\" onMouseDown={handleMouseDown} onClick={handleClick} onMouseOut={handleMouseUp} onMouseUp={handleMouseUp}></button>\n                    <button className=\"btn-minus\" onMouseDown={handleMouseDown} onClick={handleClick} onMouseOut={handleMouseUp} onMouseUp={handleMouseUp}></button>\n                </div>\n            }</div>\n    </div>\n});\n\nexport const ColorInput = React.memo(function({ children, defaultValue = 0, id, onChange, upChange, value }) {\n    const uId = Math.random().toString(36).substr(2, 5) + '-' + id;\n\n    const handleChange = useCallback(function(e) {\n        const value = e.target.value;\n\n        if (typeof upChange === 'function') {\n            upChange({ [id]: hexColorToInteger(value) });\n        } else if (typeof onChange === 'function') {\n            onChange(hexColorToInteger(value));\n        }\n    }, [id, onChange, upChange]);\n\n    \n    useEffect(() => {\n        if (typeof value !== 'number' && defaultValue !== 0) {\n            if (typeof upChange === 'function') {\n                upChange({ [id]: parseFloat(defaultValue) });\n            } else if (typeof onChange === 'function') {\n                onChange(parseFloat(defaultValue));\n            }\n        }\n    }, [defaultValue, id, onChange, upChange, value]);\n\n    return <div>\n        {typeof children === 'undefined' || <><label htmlFor={uId}>{children}</label> : </>}\n        <input type=\"color\" id={uId} data-name={id} onChange={handleChange} value={integerColorToHex(value || defaultValue)} />\n    </div>\n});\n\nfunction getNumberSize(numeric, max = 10, step = 1) {\n    if (numeric === '') {\n        return 12 + 'ch';\n    }\n    const decimals = countDecimals(step);\n\n    let n, str;\n    if (typeof numeric === 'number') {\n        n = numeric;\n        str = numeric.toString();\n    } else {\n        n = parseFloat(numeric);\n        str = numeric;\n    }\n\n    let length = str.length;\n    if (!isNaN(n)) {\n        length = Math.max(length, n.toFixed(decimals).toString().length);\n    }\n    const ceil = max > 9 && n < 10;\n    const smooth = step === 1 ? 4 : 2;\n    return length + smooth + (ceil ? 1 : 0) + 'ch';\n}\nfunction countDecimals(n) {\n    if (typeof n !== 'number') {\n        return 0;\n    }\n    if ((n % 1) !== 0)\n        return n.toString().split(\".\")[1].length;\n    return 0;\n}\n","import React, { useState, useCallback, useMemo, useEffect, useContext } from \"react\";\nimport Select from \"../../ui/Select\";\nimport { TAGS_OPTIONS } from \"../feature/FeatureDefaults\";\nimport { BlockState } from \"./BlockState\";\nimport { NumberInput } from \"../../ui/Input\";\nimport { DataContext } from \"../../context/DataContext\";\n\nexport const BlockPredicate = React.memo(function({target, onChange}) {\n    const [predicate, setPredicate] = useState(target);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:always_true', label: 'Always true' },\n            { value: 'minecraft:block_match', label: 'Block match' },\n            { value: 'minecraft:blockstate_match', label: 'Block state match' },\n            { value: 'minecraft:random_block_match', label: 'Random block match' },\n            { value: 'minecraft:random_blockstate_match', label: 'Random block state match' },\n            { value: 'minecraft:tag_match', label: 'Tag match' }\n        ];\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        setPredicate({ predicate_type: option.value });\n    }, []);\n    const handleBlockChange = useCallback(function(option) {\n        setPredicate(predicate => ({ ...predicate, block: option.value }));\n    }, []);\n    const handleBlockStateChange = useCallback(function(block_state) {\n        setPredicate(predicate => ({ ...predicate, block_state }));\n    }, []);\n    const handleTagChange = useCallback(function(option) {\n        setPredicate(predicate => ({ ...predicate, tag: option.value }));\n    }, []);\n    const handleChange = useCallback(function(content) {\n        setPredicate(predicate => ({ ...predicate, ...content }));\n    }, []);\n    useEffect(() => {\n        if (predicate !== target) {\n            onChange(predicate);\n        }\n    }, [onChange, predicate, target]);\n\n    const type = predicate.predicate_type;\n\n    return <div>\n        <label>Predicate type</label>\n        <Select options={options} value={options.find(o => o.value === predicate.predicate_type)} onChange={handleTypeChange} />\n        {type === 'minecraft:block_match' && <BlockSelect block={predicate.block} onChange={handleBlockChange} />}\n        {type === 'minecraft:blockstate_match' && <BlockState block={predicate.block_state} onChange={handleBlockStateChange} />}\n        {(type === 'minecraft:random_block_match' || type === 'minecraft:random_blockstate_match') &&\n            <RandomBlockMatch block={predicate.block} probability={predicate.probability} onChange={handleChange} type={type} />\n        }\n        {type === 'minecraft:tag_match' && <Select options={TAGS_OPTIONS} value={TAGS_OPTIONS.find(t => t.value === predicate.tag)} onChange={handleTagChange} />}\n    </div>;\n});\n\nconst RandomBlockMatch = React.memo(function({block, onChange, type, probability}) {\n    const handleBlockChange = useCallback(function(option) {\n        onChange({ block: option.value });\n    }, [onChange]);\n    const handleBlockStateChange = useCallback(function(block_state) {\n        onChange({ block_state });\n    }, [onChange]);\n\n    return <div className=\"form-group form-row\">\n        <div style={{ flexGrow: 1 }}>\n        {type === 'minecraft:random_block_match' && <BlockSelect block={block} onChange={handleBlockChange} />}\n        {type === 'minecraft:random_blockstate_match' && <BlockState block={block} onChange={handleBlockStateChange} />}\n        </div>\n        <NumberInput id=\"probability\" value={probability} defaultValue=\"0.1\"\n            step=\"0.01\" min=\"0\" max=\"1\" className=\"mlm\" upChange={onChange}>\n                Probability\n        </NumberInput>\n    </div>\n});\n\nexport const BlockSelect = React.memo(function({block, inputId, onChange, options}) {\n    const context = useContext(DataContext);\n    const blocks = useMemo(function () {\n        if (typeof options === 'undefined') {\n            return context.vanilla.blocks.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n        }\n        return options;\n    }, [context.vanilla.blocks, options]);\n    return <Select options={blocks} value={blocks.find(b => b.value === block)} onChange={onChange} inputId={inputId} />;\n});\n","import { useReducer, useState, useCallback, useEffect, useContext, useMemo } from \"react\";\nimport { useKeyedListOptions } from \"./context\";\nimport { DataContext } from \"../context/DataContext\";\nimport arrayMove from \"array-move\";\n\nfunction crudReducer(state, action) {\n    switch (action.type) {\n        case ADD:\n            if (action.unshift) {\n                return [action.payload, ...state];\n            }\n            return [...state, action.payload];\n        case UPDATE:\n            if (typeof action.target === 'number' && typeof action.payload === 'number') {\n                return arrayMove(state, action.target, action.payload);\n            }\n            if (typeof action.target === 'undefined') {\n                throw new Error('Cannot update an element without its previous state.');\n            }\n            return state.map(element => element === action.target ? action.payload : element);\n        case REMOVE:\n            return state.filter(element => element !== action.payload);\n        default:\n            return state;\n    }\n}\n\nexport function useCrud(data = []) {\n    return useReducer(crudReducer, data);\n}\n\n/**\n * @param {object[]} [data] \n * @param {object|function (object[]): object} [initial] \n * @returns {[object[], function (SyntheticEvent): void, function (number|object, number|object): void, function (SyntheticEvent, number): void}\n */\nexport function useCrudPreset(data = [], initial = {}, unshift = false) {\n    const [entities, dispatch] = useCrud(data);\n\n    const add = useCallback(function(e) {\n        e.preventDefault();\n        const n = typeof initial === 'function' ? initial(entities) : { ...initial };\n        dispatch({ type: CRUD.ADD, payload: n, unshift });\n    }, [dispatch, entities, initial, unshift]);\n    const update = useCallback(function(state, previous) {\n        if (state.hasOwnProperty('oldIndex') && state.hasOwnProperty('newIndex')) {\n            dispatch({ type: CRUD.UPDATE, target: state.oldIndex, payload: state.newIndex });\n            return;\n        }\n        dispatch({ type: CRUD.UPDATE, target: previous, payload: state });\n    }, [dispatch]);\n    const remove = useCallback(function(e, index) {\n        e.preventDefault();\n        dispatch({ type: CRUD.REMOVE, payload: entities[index] });\n    }, [dispatch, entities]);\n\n    return [entities, add, update, remove];\n}\n\nexport function useBlocksOptions(mapped = true) {\n    const blocks = useContext(DataContext).vanilla.blocks;\n    return useMemo(function() {\n        return mapped ? blocks.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName })): blocks;\n    }, [blocks, mapped]);\n}\n\n/**\n * @param {number} [initial] \n * @returns {function(SyntheticEvent|string|number): void} \n */\nexport function useNumber(initial = 0) {\n    const [n, setState] = useState(initial);\n    const setNumber = function(n) {\n        if (typeof n === 'object') {\n            n = n.target.value;\n        }\n        if (typeof n === 'string') {\n            n = isNaN(n) ? initial : parseInt(n);\n        }\n        setState(n);\n    }\n    return [n, setNumber];\n}\n\nexport function useValueChange(changeCallback, obj) {\n    return useCallback(function(e) {\n        if (e.target.type === 'checkbox') {\n            changeCallback({ ...obj, [e.target.dataset.name || e.target.id || e.target.name]: e.target.checked });\n            return;\n        }\n        const value = isNaN(e.target.value) ? e.target.value : parseFloat(e.target.value);\n        changeCallback({ ...obj, [e.target.dataset.name || e.target.id || e.target.name]: value });\n    }, [changeCallback, obj]);\n}\n\nexport function useJsonEffect(state, props, onChange) {\n    useEffect(() => {\n        if (state === props) {\n            return;\n        }\n        if (JSON.stringify(state) !== JSON.stringify(props)) {\n            onChange(state, props);\n        }\n    }, [state, props, onChange]);\n    return state;\n}\n\n/**\n * Fast way to provide a list of options for react-select\n * and store selection as string (list).\n * \n * @param {('biomes'|'dimensions'|'dimension_types'|'features'|'noises'|'surfaces')} category Data category\n * @param {string|string[]} initial Initial selection\n * @param {boolean} [multiple]\n * @returns {[{ value: string, label: string }[], string|string[], function({ value: string }): void]} Options list, currently selected list and his updater\n */\nexport function useKeyedOptionsState(category, initial, multiple) {\n    const options = useKeyedListOptions(category); // Get options\n\n    // Default value for 'multiple' argument\n    if (typeof multiple === 'undefined') {\n        multiple = Array.isArray(initial);\n    }\n\n    // Enhanced use state - usage of options for default value if needed\n    const [selection, setSelection] = useState(initial || function() {\n        if (multiple) {\n            return options.length > 0 ? [options[0].value] : [];\n        }\n        return options.length > 0 ? options[0].value : '';\n    }());\n\n    // End chain react-select change handler\n    const setSelectionFromOptions = useCallback(function(selected) {\n        if (multiple) {\n            setSelection(selected === null ? [] : selected.map(o => o.value));\n        } else {\n            setSelection(selected.value);\n        }\n    }, [multiple]);\n\n    return [options, selection, setSelectionFromOptions];\n}\n\nconst ADD = 'ADD';\nconst UPDATE = 'UPDATE';\nconst REMOVE = 'REMOVE';\nexport const CRUD = { ADD, UPDATE, REMOVE };","import React, { useCallback, useContext, useEffect, useMemo } from \"react\";\nimport Select from \"../../ui/Select\";\nimport { BlockSelect } from \"./BlockPredicate\";\nimport { DataContext } from \"../../context/DataContext\";\nimport { Button } from '../../ui/Button';\nimport { getStateValue } from \"../../utils/data\";\nimport { useCrudPreset, useBlocksOptions } from \"../../hooks/form\";\nimport { ConfInput, NumberInput } from \"../../ui/Input\";\n\nexport const BlockState = React.memo(function ({ block = {}, children, className = 'form-group', inputId, name, onChange, options }) {\n    const context = useContext(DataContext);\n\n    const handleTypeChange = useCallback(function (option) {\n        const Name = option.value;\n        const Properties = {};\n        (context.vanilla.blocks.find(b => 'minecraft:' + b.name === Name) || { states: [] }).states.forEach(state => {\n            Properties[state.name] = getStateValue(state, block.Properties);\n        })\n        delete block.Properties;\n        if (Object.keys(Properties).length > 0) {\n            onChange({ ...block, Name, Properties });\n        } else {\n            onChange({ ...block, Name });\n        }\n    }, [block, context.vanilla.blocks, onChange]);\n    const handlePropertiesChange = useCallback(function (properties) {\n        onChange({ ...block, Properties: { ...block.Properties, ...properties } });\n    }, [block, onChange]);\n\n    const blocks = useMemo(function () {\n        if (typeof options === 'undefined') {\n            return context.vanilla.blocks.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n        }\n        return options;\n    }, [context.vanilla.blocks, options]);\n\n    const selected = useMemo(function () {\n        return blocks.find(o => o.value === block.Name);\n    }, [blocks, block.Name]);\n\n    return <div className={className}>\n        <div className=\"form-row\">\n            <div style={{ flexGrow: 1 }}><Select options={blocks} value={selected} name={name} onChange={handleTypeChange} inputId={inputId} /></div>\n            {children}\n        </div>\n        <BlockStateProperties block={block.Name} properties={block.Properties} onChange={handlePropertiesChange} />\n    </div>;\n});\n\nexport const BlocksList = React.memo(function ({ list, onChange }) {\n    const options = useBlocksOptions();\n\n    const [blocks, handleAdd, handleChange, handleRemove] = useCrudPreset(list, function (blocks) {\n        // Get the first non taken block name\n        return { Name: (options.find(o => !blocks.some(b => b.Name === o.value)) || { value: 'minecraft:stone' }).value };\n    });\n\n    const handleStateChange = useCallback(function (state, i) {\n        handleChange(state, blocks[i]);\n    }, [blocks, handleChange]);\n\n    useEffect(() => {\n        if (blocks !== list) {\n            onChange(blocks);\n        }\n    }, [blocks, list, onChange]);\n\n    return <div className=\"form-group\">\n        {blocks.map((block, i) => {\n            const filteredOptions = options.filter(o => o.value === block.Name || !blocks.some(d => d.Name === o.value));\n            return <BlockState block={block} options={filteredOptions} key={block.Name} onChange={state => handleStateChange(state, i)}>\n                <Button cat=\"danger mlm\" onClick={(e) => handleRemove(e, i)}>Remove</Button>\n            </BlockState>\n        })}\n        <Button onClick={handleAdd}>Add block</Button>\n    </div>;\n});\n\nexport const BlocksNamesList = React.memo(function ({ list, onChange }) {\n    const options = useBlocksOptions();\n\n    const [blocks, handleAdd, handleChange, handleRemove] = useCrudPreset(list, function (blocks) {\n        // Get the first non taken block name\n        return (options.find(o => !blocks.some(b => b === o.value)) || { value: 'minecraft:stone' }).value;\n    });\n\n    useEffect(() => {\n        if (blocks !== list) {\n            onChange(blocks);\n        }\n    }, [blocks, list, onChange]);\n\n    return <div className=\"form-group\">\n        {blocks.map((block, i) => {\n            const filteredOptions = options.filter(o => o.value === block || !blocks.some(d => d === o.value));\n            return <div className=\"form-group form-row\" key={block}>\n                <div style={{ flexGrow: 1 }}><BlockSelect block={block} options={filteredOptions} onChange={o => handleChange(o.value, block)} /></div>\n                <Button cat=\"danger mlm\" onClick={(e) => handleRemove(e, i)}>Remove</Button>\n            </div>\n        })}\n        <Button cat=\"primary mts\" onClick={handleAdd}>Add block</Button>\n    </div>;\n});\n\nfunction BlockStateProperties({ block, children, onChange, properties = {} }) {\n    const states = (useContext(DataContext).vanilla.blocks.find(b => 'minecraft:' + b.name === block) || { states: [] }).states;\n\n    const handlePropertyChange = useCallback(function (option) {\n        onChange({ ...properties, [option.name]: option.value });\n    }, [onChange, properties]);\n    const handleCheckboxChange = useCallback(function (e) {\n        const value = e.target.checked.toString();\n        onChange({ ...properties, [e.target.dataset.name]: value });\n    }, [onChange, properties]);\n    const handleNumberChange = useCallback(function (value) {\n        const key = Object.keys(value)[0];\n        onChange({ ...properties, [key]: value[key].toString() });\n    }, [onChange, properties]);\n\n    const selects = [];\n    states.forEach(possible => {\n        switch (possible.type) {\n            case 'bool':\n                selects.push(\n                    <ConfInput key={possible.name} id={possible.name}\n                        checked={properties[possible.name] === 'true'}\n                        onChange={handleCheckboxChange}>\n                        {possible.name}\n                    </ConfInput>\n                );\n                break;\n            case 'int':\n                selects.push(\n                    <NumberInput key={possible.name} id={possible.name}\n                        value={properties[possible.name] || 0} upChange={handleNumberChange}\n                        min=\"0\" max={possible.num_values - 1}>\n                        {possible.name}\n                    </NumberInput>\n                );\n                break;\n            default:\n                const options = possible.values.map(value => ({ value, name: possible.name, label: value }));\n                const defaultValue = options.find(o => o.value === properties[possible.name]) || options[0];\n                selects.push(<div key={possible.name}>\n                    <label>{possible.name}</label> : <div className=\"inbl\">\n                        <Select options={options} value={defaultValue} onChange={handlePropertyChange} />\n                    </div>\n                </div>);\n        }\n    });\n    return <div className=\"form-group form-row\">\n        {selects}{children}\n    </div>;\n}","import React, { useState, useEffect, useCallback } from 'react';\nimport { EFFECTS, PARTICLES, PARTICLE_DEFAULTS } from './BiomeDefaults';\nimport { useToggle } from '../../hooks/ui';\nimport { NumberInput, ConfInput, ColorInput } from '../../ui/Input';\nimport Select from '../../ui/Select';\nimport { BlockState } from '../state/BlockState';\nimport { useJsonEffect } from '../../hooks/form';\n\nexport function BiomeEffects({effects, onChange}) {\n\n    const [colors, setColors] = useState(effects || EFFECTS);\n    const [blockColor, toggleBlockColor] = useToggle(colors.hasOwnProperty('foliage_color') || colors.hasOwnProperty('grass_color'));\n    const [particle, toggleParticle] = useToggle(colors.hasOwnProperty('particle'));\n\n    const handleColorChange = useCallback(function(color) {\n        setColors(colors => ({ ...colors, ...color }));\n    }, []);\n    const handleParticleChange = useCallback(function(particle) {\n        setColors(colors => ({ ...colors, particle }));\n    }, []);\n\n    useEffect(function () {\n        const next = { ...colors };\n        if (!blockColor) {\n            delete next.foliage_color;\n            delete next.grass_color;\n        }\n        if (!particle) {  \n            delete next.particle;\n        }\n        if (JSON.stringify(next) !== JSON.stringify(effects)){\n            onChange(next);\n        }\n    }, [blockColor, colors, effects, onChange, particle]);\n\n    return <fieldset>\n        <legend>Biome effects</legend>\n        <div className=\"form-group form-row\">\n            <ColorInput id=\"sky_color\" value={colors.sky_color} upChange={handleColorChange}>Sky color</ColorInput>\n            <ColorInput id=\"fog_color\" value={colors.fog_color} upChange={handleColorChange}>Fog color</ColorInput>\n            <ColorInput id=\"water_color\" value={colors.water_color} upChange={handleColorChange}>Water color</ColorInput>\n            <ColorInput id=\"water_fog_color\" value={colors.water_fog_color} upChange={handleColorChange}>Water fog color</ColorInput>\n            {blockColor && <>\n                <ColorInput id=\"foliage_color\" value={colors.foliage_color || 10387789} upChange={handleColorChange}>Foliage color</ColorInput>\n                <ColorInput id=\"grass_color\" value={colors.grass_color || 9470285} upChange={handleColorChange}>Grass color</ColorInput>\n            </>}\n            <ConfInput id=\"block-toggle\" checked={blockColor} onChange={toggleBlockColor}>Optionals</ConfInput>\n            <ConfInput id=\"particle\" checked={particle} onChange={toggleParticle}>Particle</ConfInput>\n        </div>\n        {particle && <ParticleEffect particle={colors.particle} onChange={handleParticleChange} />}\n    </fieldset>\n}\n\nfunction ParticleEffect({onChange, particle}) {\n\n    particle = useJsonEffect(particle || PARTICLE_DEFAULTS, particle, onChange);\n    const handleTypeChange = useCallback(function(option) {\n        onChange({ ...particle, options: { type: option.value } });\n    }, [particle, onChange]);\n    const handleBlockChange = useCallback(function(block) {\n        onChange({ ...particle, options: { ...particle.options, ...block } });\n    }, [particle, onChange]);\n    const handleColorChange = useCallback(function(color) {\n        onChange({ ...particle, options: { ...particle.options, ...color } });\n    }, [particle, onChange]);\n    const handleScaleChange = useCallback(function(scale) {\n        onChange({ ...particle, options: { ...particle.options, scale } });\n    }, [particle, onChange]);\n    const handleProbabilityChange = useCallback(function(probability) {\n        onChange({ ...particle, probability });\n    }, [particle, onChange]);\n\n    const o = particle.options;\n    return <div className=\"form-group form-row\">\n        <div style={{ flexGrow: 0.95, flexShrink: 1 }}><Select options={PARTICLES} value={PARTICLES.find(op => o.type === op.value)} onChange={handleTypeChange} /></div>\n        {(o.type === 'minecraft:block' || o.type === 'minecraft:falling_dust') && <div style={{ flexGrow: 1 }}><BlockState block={o} onChange={handleBlockChange} /></div>}\n        {o.type === 'minecraft:dust' && <>\n            <DustColor r={o.r} g={o.g} b={o.b} onChange={handleColorChange} />\n            <NumberInput id=\"scale\" value={o.scale} onChange={handleScaleChange} defaultValue=\"1\" step=\"0.1\" className=\"mls\">Scale</NumberInput>\n        </>}\n        <NumberInput id=\"probability\" value={particle.probability} onChange={handleProbabilityChange} step=\"0.005\" className=\"mlm\">Probability</NumberInput>\n    </div>\n}\n\nfunction DustColor({ r, g, b, onChange }) {\n    const handleColorChange = useCallback(function(color) {\n        const r = ((color >> 16) & 0xFF) / 0xFF;\n        const g = ((color >> 8) & 0xFF) / 0xFF;\n        const b = (color & 0xFF) / 0xFF;\n        onChange({ r, g, b });\n    }, [onChange]);\n\n    let value = undefined;\n    if (typeof r === 'number' && typeof g === 'number' && typeof b === 'number') {\n        r = (r * 0xFF) & 0xFF;\n        g = (g * 0xFF) & 0xFF;\n        b = (b * 0xFF) & 0xFF;\n        value = ((r << 16) | (g << 8) | b);\n    }\n\n    return <ColorInput value={value} defaultValue={0x38470} onChange={handleColorChange} className=\"mls\">Color</ColorInput>\n}","import React, { useContext, useEffect, useMemo, useCallback } from 'react';\nimport Select from '../../ui/Select';\nimport { useCrudPreset, useJsonEffect } from \"../../hooks/form\";\nimport { useToggle } from '../../hooks/ui';\nimport { Button } from '../../ui/Button';\nimport { DataContext } from '../../context/DataContext';\nimport { SPAWNERS_DEFAULTS } from './BiomeDefaults';\nimport { NumberInput } from '../../ui/Input';\n\nexport const BiomeSpawners = React.memo(function({onChange, data}) {\n\n    const spawners = useJsonEffect(data || SPAWNERS_DEFAULTS, data, onChange);\n    const entities = useContext(DataContext).vanilla.entities;\n\n    const handleChange = useCallback(function(group, groupSpawners) {\n        onChange({ ...spawners, [group]: groupSpawners });\n    }, [spawners, onChange]);\n\n    return <div>\n        <SpawnGroup group=\"ambient\" data={spawners.ambient} onChange={handleChange} entities={entities}>Ambient</SpawnGroup>\n        <SpawnGroup group=\"creature\" data={spawners.creature} onChange={handleChange} entities={entities}>Creature</SpawnGroup>\n        <SpawnGroup group=\"misc\" data={spawners.misc} onChange={handleChange} entities={entities}>Miscellaneous</SpawnGroup>\n        <SpawnGroup group=\"monster\" data={spawners.monster} onChange={handleChange} entities={entities}>Monster</SpawnGroup>\n        <SpawnGroup group=\"water_ambient\" data={spawners.water_ambient} onChange={handleChange} entities={entities}>Water ambient</SpawnGroup>\n        <SpawnGroup group=\"water_creature\" data={spawners.water_creature} onChange={handleChange} entities={entities}>Water creature</SpawnGroup>\n    </div>;\n});\n\nconst SpawnGroup = React.memo(function({children, entities, data = [], group, onChange}) {\n    const [visibility, toggle] = useToggle();\n    const text = visibility ? 'Less...' : 'More...';\n\n    const [spawners, insert, handleChange, handleRemove] = useCrudPreset(data, function(spawners) {\n        // Get the first non taken entity\n        return { type: (entities.filter(o => !spawners.some(s => s.type === o.value))[0] || { value: 'minecraft:cow' }).value, minCount: 1, maxCount: 1, weight: 1 };\n    }, true);\n\n    const handleAdd = useCallback(function(e) {\n        insert(e);\n        if (!visibility) {\n            toggle();\n        }\n    }, [insert, toggle, visibility]);\n\n    useEffect(function() {\n        if (spawners !== data) {\n            onChange(group, spawners);\n        }\n    }, [data, group, onChange, spawners]);\n\n    if (visibility) {\n        return <div>\n            <div className=\"toggle-label\">\n                {children}\n                <div className=\"btn-group\">\n                    {entities.length > spawners.length && <Button onClick={handleAdd}>Add</Button>}\n                    {spawners.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{text}</Button>} \n                </div>\n            </div>\n            {spawners.map((spawner, index) => {\n                const options = entities.filter(o => spawner.type === o.value || !spawners.some(s => s.type === o.value));\n                return <SpawnDefinition data={spawner} key={spawner.type} onChange={handleChange} onDelete={handleRemove} index={index} options={options} />;\n            })}\n        </div>;\n    }\n    \n    return <div className=\"toggle-label\">\n        {children}\n        <div className=\"btn-group\">\n            {spawners.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{text}</Button>}\n            {(spawners.length < 1) && <Button onClick={handleAdd}>Add</Button>}\n        </div>\n    </div>;\n});\n\nconst SpawnDefinition = React.memo(function({data, index, options, onChange, onDelete}) {\n\n    const handleTypeChange = useCallback(function(option) {\n        onChange({ ...data, type: option.value }, data);\n    }, [data, onChange]);\n    const handleValueChange = useCallback(function(value) {\n        onChange({ ...data, ...value }, data);\n    }, [data, onChange]);\n    const handleCountChange = function(count) {\n        const name = Object.keys(count)[0];\n        const value = count[name];\n        if ((name === 'minCount' && value <= data.maxCount)\n            || (name === 'maxCount' && value >= data.minCount)) {\n                onChange({ ...data, [name]: value }, data);\n        } \n    };\n    const handleDelete = useCallback(function(e) {\n        onDelete(e, index);\n    }, [index, onDelete]);\n\n    const selectedOption = useMemo(function() {\n        return options.find(o => o.value === data.type);\n    }, [data.type, options]);\n\n    return <div>\n        <div className=\"form-group\">\n            <label>Mob type</label> : <Select options={options} value={selectedOption} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"weight\" value={data.weight} upChange={handleValueChange}>Weight</NumberInput>\n            <NumberInput id=\"minCount\" value={data.minCount} upChange={handleCountChange}>Min count</NumberInput>\n            <NumberInput id=\"maxCount\" value={data.maxCount} upChange={handleCountChange}>Max count</NumberInput>\n            <div className=\"form-inline\"><Button cat=\"danger\" onClick={handleDelete}>Delete</Button></div>\n        </div>\n        <hr /> \n    </div>\n});\n","import React, { useCallback, useMemo } from 'react';\nimport Select from '../../ui/Select';\nimport { STARTS } from './BiomeDefaults';\nimport { useJsonEffect } from '../../hooks/form';\n\nexport const BiomeStarts = React.memo(function({onChange, starts}) {\n    starts = useJsonEffect(starts || STARTS, starts, onChange);\n\n    const handleChange = useCallback(function(selectedOptions) {\n        onChange(selectedOptions === null ? [] : selectedOptions.map(option => option.value));\n    }, [onChange]);\n\n    const options = useMemo(function() {\n        return [\n            \"pillager_outpost\",\n            \"mineshaft\",\n            \"mineshaft_mesa\",\n            \"mansion\",\n            \"jungle_pyramid\",\n            \"desert_pyramid\",\n            \"igloo\",\n            \"shipwreck\",\n            \"shipwreck_beached\",\n            \"swamp_hut\",\n            \"stronghold\",\n            \"monument\",\n            \"ocean_ruin_cold\",\n            \"ocean_ruin_warm\",\n            \"fortress\",\n            \"nether_fossil\",\n            \"end_city\",\n            \"buried_treasure\",\n            \"bastion_remnant\",\n            \"village_plains\",\n            \"village_desert\",\n            \"village_savanna\",\n            \"village_snovy\",\n            \"village_taiga\",\n            \"ruined_portal\",\n            \"ruined_portal_desert\",\n            \"ruined_portal_jungle\",\n            \"ruined_portal_swamp\",\n            \"ruined_portal_mountain\",\n            \"ruined_portal_ocean\",\n            \"ruined_portal_nether\"\n        ].map(option => ({ value: 'minecraft:' + option, label: 'minecraft:' + option }));\n    }, []);\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"starts\">Structures</label>\n        <Select isMulti id=\"starts\" options={options} onChange={handleChange} defaultValue={options.filter(o => starts.includes(o.value))} />\n    </div>;\n});\n","import React, { useCallback, useState, useEffect } from 'react';\nimport Select from '../../ui/Select';\nimport { FEATURES } from './BiomeDefaults';\nimport { useKeyedListOptions } from '../../hooks/context';\n\nexport const GenFeatures = React.memo(function({ onChange, features }) {\n\n    const [levels, setLevels] = useState(features || FEATURES);\n\n    const handleLevelChange = useCallback(function(priority, list) {\n        setLevels(levels => {\n            levels[priority] = list;\n            return levels;\n        })\n        onChange(levels);\n    }, [levels, onChange]);\n\n    useEffect(function() {\n        if (levels !== features) {\n            onChange(levels);\n        }\n    }, [features, levels, onChange]);\n\n    const elements = [];\n    levels.forEach((level, i) => {\n        elements.push(<li key={i}><GenFeaturesLevel value={level} onChange={handleLevelChange} priority={i} /></li>);\n    });\n    return <div className=\"form-group\">\n        <label>Features</label>\n        <p className=\"help\"><small className=\"text-muted\">Each generation feature is associated with a priority. The higher the priority, the later the feature will be applied.</small></p>\n        <ol>{elements}</ol>\n    </div>;\n});\n\nexport const GenFeaturesLevel = React.memo(function({ onChange, priority, value }) {\n    const options = useKeyedListOptions('features');\n\n    const handleChange = useCallback(function(selectedOptions) {\n        onChange(priority, selectedOptions === null ? [] : selectedOptions.map(option => option.value));\n    }, [onChange, priority]);\n\n    return <Select isMulti options={options} onChange={handleChange} defaultValue={options.filter(o => value.includes(o.value))} />;\n});\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport useModal from '@delangle/use-modal';\nimport { Button } from './Button';\n\nexport const Modal = ({ children, open, onClose }) => {\n    const modal = useModal({ open, onClose: () => onClose(false) });\n\n    const el = document.createElement('div');\n    el.classList.add('modal-wrapper');\n\n    useEffect(() => {\n        document.body.appendChild(el);\n        return () => document.body.removeChild(el);\n    }, [el]);\n\n    return createPortal(\n        <dialog open={modal.state === 'opened'}>\n            <Button cat=\"close\" onClick={onClose}></Button>\n            {children}\n        </dialog>\n    , el);\n}\n","import React, { useCallback } from 'react';\nimport { Modal } from './Modal';\nimport { useToggle } from '../hooks/ui';\nimport { JsonView } from 'json-view-for-react'\n\nexport function JsonViewer({ data }) {\n    const [open, toggleModal] = useToggle();\n\n    const obj = useCallback(function () {\n        const obj = typeof data === 'object' ? { ...data } : data();\n        delete obj.key;\n        delete obj.index;\n        return obj;\n    }, [data]);\n\n    return <>\n        <i className=\"code mls\" onClick={toggleModal}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M.7 9.3l4.8-4.8 1.4 1.4-4 4.1 4 4-1.4 1.5L0 10l.7-.7zm18.6 1.4l.7-.7-5.5-5.5L13.1 6l4 4.1-4 4 1.4 1.5 4.8-4.8z\"/></svg></i>\n        {open &&\n            <Modal open={open} onClose={toggleModal}><JsonView obj={obj()} /></Modal>\n        }\n    </>\n}\n","import { useMemo } from \"react\";\n\n/**\n * @typedef RESOURCE_OPTION\n * @type {object}\n * @property {string} value Unique option value \n * @property {string} label Text label \n * @property {string|object} resource\n */\n\n/**\n * \n * @param {{ value: string, label: string }[]} options \n * @param {string|object[]} [resources] \n * @param {boolean} [mutable] \n * @returns {[RESOURCE_OPTION[], RESOURCE_OPTION[]]} Options and selected options\n */\nexport function useInlineResources(options, resources = [], mutable = true) {\n    const inline = getInline(resources);\n\n    let values = options.map(option => {\n        if (mutable) {\n            option.resource = option.value;\n            return option;\n        }\n        return { ...option, resource: option.value };\n    });\n    if (inline.length > 0) {\n        if (mutable) {\n            values.push(...inline);\n        } else {\n            values = [ ...options, ...inline ];\n        }\n    }\n    return [\n        values,\n        useMemo(() => values.filter(o => resources.includes(o.resource)), [resources, values])\n    ];\n}\n\n/**\n * @param {string|object[]} resources \n * @returns {RESOURCE_OPTION[]}\n */\nfunction getInline(resources) {\n    return resources\n        .filter(res => typeof res === 'object')\n        .map((res, i) => {\n            const inline = 'inline' + (i+1);\n            return {\n                value: inline,\n                label: inline,\n                resource: res\n            }\n        });\n}\n","import React, { useCallback, useContext, useState } from 'react';\nimport { NamespacedKey } from \"../NamespacedKey\";\nimport { VANILLA_CARVERS } from './CarverDefaults';\nimport { useKeyedListOptions } from '../../hooks/context';\nimport { DataContext } from '../../context/DataContext';\nimport { useJsonEffect } from '../../hooks/form';\nimport { Button } from '../../ui/Button';\nimport { NumberInput } from '../../ui/Input';\nimport { JsonViewer } from '../../ui/JsonViewer';\nimport Select from '../../ui/Select';\nimport { Modal } from '../../ui/Modal';\nimport { useToggle } from '../../hooks/ui';\nimport { useInlineResources } from '../../hooks/select';\n\nexport const ConfiguredCarver = React.memo(function({ carvers, onChange }) {\n\n    carvers = useJsonEffect(carvers || { air: [ 'minecraft:cave', 'minecraft:canyon' ] }, carvers, onChange);\n    const [open, toggleModal] = useToggle();\n\n    const options = useKeyedListOptions('carvers');\n\n    const handleAirChange = useCallback(function (options) {\n        onChange({ ...carvers, air: options === null ? [] : options.map(option => option.resource) });\n    }, [carvers, onChange]);\n    const handleLiquidChange = useCallback(function (options) {\n        onChange({ ...carvers, liquid: options === null ? [] : options.map(option => option.resource) });\n    }, [carvers, onChange]);\n    const handleNewClick = useCallback(function (e) {\n        e.preventDefault();\n        toggleModal(true);\n    }, [toggleModal]);\n    const handleCarverCreated = useCallback(function(carver) {\n        onChange({ ...carvers, air: [ ...(carvers.air || []), carver.key ] });\n        toggleModal(false);\n    }, [carvers, onChange, toggleModal]);\n\n    const [optionsAir, selectedAir] = useInlineResources(options, carvers.air);\n    const [optionsLiquid, selectedLiquid] = useInlineResources(options, carvers.liquid);\n\n    return <fieldset>\n        <legend>Carvers <Button onClick={handleNewClick}>Create new</Button></legend>\n\n        <label htmlFor=\"air\">Air</label>\n        <Select isMulti options={optionsAir} onChange={handleAirChange} value={selectedAir} inputId=\"air\" />\n        <div className=\"form-group\">\n            <label htmlFor=\"liquid\">Liquid</label>\n            <Select isMulti options={optionsLiquid} onChange={handleLiquidChange} value={selectedLiquid} inputId=\"liquid\" />\n        </div>\n        {open && <Modal open={open} onClose={toggleModal}>\n            <ConfiguredCarverForm onSave={handleCarverCreated} />\n        </Modal>}\n    </fieldset>\n});\n\nexport function ConfiguredCarverForm({ data = { type: 'minecraft:cave', config: { probability: 0.143 } }, onSave }) {\n\n    const [carver, setCarver] = useState(data);\n\n    const handleSelectChange = useCallback(function (option) {\n        setCarver({\n            config: {\n                probability: option.probability\n            },\n            type: option.value\n        });\n    }, []);\n    const handleProbabilityChange = useCallback(function (probability) {\n        setCarver(carver => ({ ...carver, config: { probability } }));\n    }, []);\n\n    const updateCarvers = useContext(DataContext).custom.updateCarvers;\n    const handleSubmit = useCallback(function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const c = ({\n            ...carver,\n            ...Object.fromEntries(new FormData(e.target))\n        });\n        updateCarvers(c)\n        if (typeof onSave === 'function') {\n            onSave(c);\n        }\n    }, [carver, onSave, updateCarvers]);\n\n    return <form onSubmit={handleSubmit}>\n        <NamespacedKey example=\"pit\" type=\"carvers\" value={data.key} expectBreakage={typeof data.key !== 'undefined'}>\n            configured carver\n            <JsonViewer data={carver} />\n        </NamespacedKey>\n        <div className=\"form-group\">\n            <label htmlFor=\"type\">Type</label>\n            <Select options={VANILLA_CARVERS} value={VANILLA_CARVERS.find(o => o.value === carver.type)} onChange={handleSelectChange} inputId=\"type\" />\n        </div>\n        <div className=\"form-group\">\n            <NumberInput value={carver.config.probability} max=\"1\" step=\"0.001\" onChange={handleProbabilityChange}>Probability</NumberInput>\n        </div>\n        <Button type=\"submit\">Save</Button>\n    </form>\n}\n","import React, { useCallback, useState } from 'react';\nimport { NamespacedKey } from '../NamespacedKey';\nimport { BiomeEffects } from './BiomeEffects';\nimport { BiomeSpawners } from './BiomeSpawners';\nimport { BiomeStarts } from './BiomeStarts';\nimport { GenFeatures } from './Features';\nimport { useKeyedListOptions } from '../../hooks/context';\nimport { BIOME_DEFAULTS } from './BiomeDefaults';\nimport { ConfiguredCarver } from '../carver/ConfiguredCarver';\nimport { Button } from '../../ui/Button';\nimport { ConfInput, NumberInput } from '../../ui/Input';\nimport { JsonViewer } from '../../ui/JsonViewer';\nimport Select from '../../ui/Select';\n\nexport function Biome({data = BIOME_DEFAULTS, onSave}) {\n\n    const [state, setState] = useState(data);\n\n    const handleCarversChange = useCallback(function(carvers) {\n        setState(state => ({ ...state, carvers }));\n    }, []);\n    const handleStartsChange = useCallback(function(starts) {\n        setState(state => ({ ...state, starts }));\n    }, []);\n    const handleEffectsChange = useCallback(function(effects) {\n        setState(state => ({ ...state, effects }));\n    }, []);\n    const handleFeaturesChange = useCallback(function(features) {\n        setState(state => ({ ...state, features }));\n    }, []);\n    const handleSpawnersChange = useCallback(function(spawners) {\n        setState(state => ({ ...state, spawners }));\n    }, []);\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        const formData = Object.fromEntries(new FormData(e.target));\n        const data = { ...state, ...formData };\n        data.spawn_costs = {};\n        Object.keys(formData).forEach(function(key) {\n            if (!isNaN(formData[key])) {\n                data[key] = parseFloat(formData[key]);\n            }\n        });\n        data.player_spawn_friendly = formData.hasOwnProperty('player_spawn_friendly');\n        onSave(data);\n    }, [onSave, state]);\n\n    return <form onSubmit={handleSubmit}>\n        <NamespacedKey example=\"arctic\" type=\"biomes\" value={state.key} mayReplaceVanilla={true} expectBreakage={typeof data.key !== 'undefined'}>\n            biome\n            <JsonViewer data={state} />\n        </NamespacedKey>\n\n        <BiomeEffects effects={state.effects} onChange={handleEffectsChange} />\n\n        <fieldset>\n            <BiomeCategory category={state.category} />\n            <BiomePrecipitation value={state.precipitation} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Generation</legend>\n            <SurfaceBuilder value={state.surface_builder} />\n            <BiomeStarts onChange={handleStartsChange} starts={state.starts} />\n            <GenFeatures features={state.features} onChange={handleFeaturesChange} />\n        </fieldset>\n\n        <ConfiguredCarver carvers={state.carvers} onChange={handleCarversChange} />\n\n        <fieldset>\n            <legend>Creatures</legend>\n            <BiomeSpawners data={state.spawners} onChange={handleSpawnersChange} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Settings</legend>\n            <div className=\"form-group form-row\">\n                <NumberInput name=\"scale\" defaultValue={data.scale || 0.05} step={0.05}>Scale</NumberInput>\n                <NumberInput name=\"downfall\" defaultValue={data.downfall || 0.4} step={0.1}>Downfall</NumberInput>\n                <NumberInput name=\"depth\" defaultValue={data.depth || 0.12} step={0.01}>Depth</NumberInput>\n                <NumberInput name=\"temperature\" defaultValue={data.temperature || 0.8} step={0.1}>Temperature</NumberInput>\n                <ConfInput name=\"player_spawn_friendly\" defaultChecked={data.player_spawn_friendly}>Player spawn friendly</ConfInput>\n                <p className=\"mts\"><small className=\"text-muted\">The <em>scale</em> parameter defines terrain amplitude, <em>downfall</em> controls grass and foliage color, <em>depth</em> is the difference from sea level, <em>temperature</em> controls some gameplay features like whether snow golems take damage. The default values are those of the plains biome.</small></p>\n            </div>\n        </fieldset>\n        <Button type=\"submit\">Save</Button>\n    </form>;\n}\n\nconst BiomeCategory = React.memo(function({category = 'plains'}) {\n\n    const options = [\n        { value: 'beach', label: 'Beach' },\n        { value: 'desert', label: 'Desert' },\n        { value: 'extreme_hills', label: 'Extreme hills' },\n        { value: 'forest', label: 'Forest' },\n        { value: 'icy', label: 'Icy' },\n        { value: 'jungle', label: 'Jungle' },\n        { value: 'mesa', label: 'Mesa' },\n        { value: 'nether', label: 'Nether' },\n        { value: 'none', label: 'None' },\n        { value: 'ocean', label: 'Ocean' },\n        { value: 'plains', label: 'Plains' },\n        { value: 'river', label: 'River' },\n        { value: 'savanna', label: 'Savanna' },\n        { value: 'swamp', label: 'Swamp' },\n        { value: 'taiga', label: 'Taiga' },\n        { value: 'the_end', label: 'The end' },\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"category\">Category</label>\n        <Select options={options} defaultValue={options.find(o => o.value === category)} name=\"category\" />\n    </div>;\n});\n\nconst BiomePrecipitation = React.memo(function({value = 'rain'}) {\n\n    const options = [\n        { value: 'none', label: 'None' },\n        { value: 'rain', label: 'Rain' },\n        { value: 'snow', label: 'Snow' }\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"precipitation\">Precipitation</label>\n        <Select options={options} defaultValue={options.find(o => o.value === value)} name=\"precipitation\" />\n    </div>;\n});\n\nconst SurfaceBuilder = React.memo(function({value = 'minecraft:grass'}) {\n    const options = useKeyedListOptions('surfaces');\n    return <div className=\"form-group\">\n        <label htmlFor=\"surface_builder\">Surface builder</label>\n        <Select options={options} defaultValue={options.find(o => o.value === value)} name=\"surface_builder\" />\n    </div>;\n});\n","import React from 'react';\n\nexport const Toggle = ({ ariaLabel, checked, id, onChange }) => (\n    <span className=\"toggle-control\">\n        <input\n            aria-label={ariaLabel}\n            className=\"dmcheck\"\n            type=\"checkbox\"\n            checked={checked}\n            onChange={onChange}\n            id={id}\n        />\n        <label htmlFor={id} />\n    </span>\n);\n","import React from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport { Toggle } from './Toggle';\n\nexport function DarkModeToggle() {\n    const darkMode = useDarkMode(true);\n\n    return <div className=\"dark-mode-toggle\" title=\"Dark mode toggle\">\n        <button type=\"button\" onClick={darkMode.disable} tabIndex=\"-1\">☀</button>\n        <Toggle ariaLabel=\"Dark mode toggle\" checked={darkMode.value} onChange={darkMode.toggle} />\n        <button type=\"button\" onClick={darkMode.enable} tabIndex=\"-1\">☾</button>\n    </div>\n}","import React from 'react';\nimport { DarkModeToggle } from './DarkModeToggle';\n\nexport function MenuItem({active, children, onClick}) {\n    return <li><a href=\"#_\" role=\"menuitem\" aria-current={active} onClick={onClick}>{children}</a></li>\n}\n\nexport function NavBar({ children }) {\n    return <div className=\"navbar\">\n        {children}\n        <p className=\"github\"><a href=\"https://github.com/syldium/worldgen\" target=\"_blank\" rel=\"noopener noreferrer\">View on GitHub</a></p>\n        <DarkModeToggle />\n    </div>\n}\n","import React, { useState, useCallback, useContext } from 'react';\nimport { DataContext } from '../../context/DataContext';\nimport { OVERWORLD_DIMENSION_TYPE, THE_NETHER_DIMENSION_TYPE, THE_END_DIMENSION_TYPE } from './DimensionDefaults';\nimport { useKeyedListOptions } from '../../hooks/context';\nimport { useToggle } from '../../hooks/ui';\nimport { ConfInput, NumberInput } from '../../ui/Input';\nimport { JsonViewer } from '../../ui/JsonViewer';\nimport { Modal } from '../../ui/Modal';\nimport Select from '../../ui/Select';\nimport { Button } from '../../ui/Button';\nimport { NamespacedKey } from '../NamespacedKey';\n\nexport function DimensionType({ type = 'minecraft:overworld', onChange }) {\n    const [open, toggleModal] = useToggle();\n    const options = useKeyedListOptions('dimension_types').map(option => {\n        option.resource = option.value;\n        return option;\n    });\n\n    if (typeof type === 'object') {\n        options.push({ value: 'inline', label: 'inline', resource: type });\n    }\n\n    const handleTypeChange = useCallback(function (option) {\n        onChange(option.resource);\n    }, [onChange]);\n    const handleNewClick = useCallback(function (e) {\n        e.preventDefault();\n        toggleModal(true);\n    }, [toggleModal]);\n    const handleTypeCreated = useCallback(function(type) {\n        onChange(type.key);\n        toggleModal(false);\n    }, [onChange, toggleModal]);\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"dimension-type\">Dimension type <Button onClick={handleNewClick}>Create new</Button></label>\n        <Select inputId=\"dimension-type\" options={options} value={options.find(o => o.resource === type)} onChange={handleTypeChange} />\n        {open && <Modal open={open} onClose={toggleModal}>\n            <DimensionTypeForm onSave={handleTypeCreated} />\n        </Modal>}\n    </div>;\n}\n\nexport function DimensionTypeForm({ data = OVERWORLD_DIMENSION_TYPE, onSave }) {\n    const [config, setConfig] = useState(data);\n\n    const handlePresetChange = useCallback(function (e, preset) {\n        e.preventDefault();\n        setConfig(preset);\n    }, []);\n    const handleNumberChange = useCallback(function(value) {\n        setConfig(config => ({ ...config, ...value }))\n    }, []);\n    const handleCheckboxChange = useCallback(function(e) {\n        const name = e.target.dataset.name;\n        const checked = e.target.checked;\n        setConfig(config => ({ ...config, [name]: checked }))\n    }, []);\n\n    const updateDimensionTypes = useContext(DataContext).custom.updateDimensionTypes;\n    const handleSubmit = useCallback(function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const d = ({\n            ...config,\n            ...Object.fromEntries(new FormData(e.target))\n        });\n        updateDimensionTypes(d);\n        if (typeof onSave === 'function') {\n            onSave(d);\n        }\n    }, [config, onSave, updateDimensionTypes]);\n\n    return <form onSubmit={handleSubmit}>\n        <NamespacedKey example=\"typed\" type=\"dimension_type\" value={data.key} expectBreakage={typeof data.key !== 'undefined'}>\n            dimension type\n            <JsonViewer data={config} />\n        </NamespacedKey>\n        {typeof data.key === 'undefined' &&\n            <fieldset>\n                <legend>Preset</legend>\n                <Button onClick={(e) => handlePresetChange(e, OVERWORLD_DIMENSION_TYPE)}>Overworld</Button>\n                <Button onClick={(e) => handlePresetChange(e, THE_NETHER_DIMENSION_TYPE)}>The Nether</Button>\n                <Button onClick={(e) => handlePresetChange(e, THE_END_DIMENSION_TYPE)}>The End</Button>\n            </fieldset>\n        }\n        <fieldset>\n            <legend>Light</legend>\n            <div className=\"form-row\">\n                <NumberInput id=\"ambient_light\" value={config.ambient_light} upChange={handleNumberChange} step=\"0.1\">Ambient light</NumberInput>\n                <ConfInput id=\"has_skylight\" checked={config.has_skylight} onChange={handleCheckboxChange}>Has skylight</ConfInput>\n            </div>\n        </fieldset>\n        <fieldset>\n            <legend>Overworld related behavior</legend>\n            <div className=\"form-row\">\n                <ConfInput id=\"bed_works\" checked={config.bed_works} onChange={handleCheckboxChange}>Bed works</ConfInput>\n                <ConfInput id=\"has_raids\" checked={config.has_raids} onChange={handleCheckboxChange}>Has raids</ConfInput>\n                <ConfInput id=\"natural\" checked={config.natural} onChange={handleCheckboxChange}>Natural</ConfInput>\n            </div>\n        </fieldset>\n        <fieldset>\n            <legend>Nether related behavior</legend>\n            <div className=\"form-row\">\n                <ConfInput id=\"has_ceiling\" checked={config.has_ceiling} onChange={handleCheckboxChange}>Has ceiling</ConfInput>\n                <NumberInput id=\"coordinate_scale\" value={config.coordinate_scale} upChange={handleNumberChange} min={10**-5} max={10**7} step={0.1}>Coordinate scale</NumberInput>\n            </div>\n            <div className=\"form-group form-row\">\n                <ConfInput id=\"respawn_anchor_works\" checked={config.respawn_anchor_works} onChange={handleCheckboxChange}>Respawn anchor works</ConfInput>\n                <ConfInput id=\"piglin_safe\" checked={config.piglin_safe} onChange={handleCheckboxChange}>Piglin safe</ConfInput>\n                <ConfInput id=\"ultrawarm\" checked={config.ultrawarm} onChange={handleCheckboxChange}>Ultrawarm</ConfInput>\n            </div>\n        </fieldset>\n        <Button type=\"submit\">Save</Button>\n    </form>;\n}\n","import React from 'react';\nimport { NumberInput } from './Input';\n\nexport const NumberList = React.memo(function ({ children, numbers = [], onChange }) {\n\n    const handleChange = function(val, pos) {\n        onChange(numbers.map((n, i) => i === pos ? val : n));\n    };\n\n    return <div className=\"form-row\">\n        <label>{children}</label>&nbsp;:&nbsp;{numbers.map((n, i) => <NumberInput key={i} value={n} onChange={(n) => handleChange(n, i)} />)}\n    </div>\n});\n","import React, { useState, useCallback, useContext, useEffect } from 'react';\nimport Select from '../../ui/Select';\nimport { SeedField } from './DimensionGenerator';\nimport { useKeyedListOptions } from '../../hooks/context';\nimport { useMemo } from 'react';\nimport { useCrud, CRUD, useNumber, useKeyedOptionsState } from '../../hooks/form';\nimport { useToggle } from '../../hooks/ui';\nimport { DataContext } from '../../context/DataContext';\nimport { Button } from '../../ui/Button';\nimport { capitalize, hasDuplicatedObjects } from '../../utils/data';\nimport { NumberList } from '../../ui/NumberList';\nimport { MULTI_NOISE_BIOME_SOURCE, NOISES_NAMES } from './DimensionDefaults';\nimport { NumberInput } from '../../ui/Input';\n\nexport function BiomeSource({biome_source = { type: 'minecraft:fixed' }, onChange}) {\n    const [source, setSource] = useState(biome_source);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:checkerboard', label: 'Checkerboard' },\n            { value: 'minecraft:fixed', label: 'Fixed' },\n            { value: 'minecraft:multi_noise', label: 'Multi noise' },\n        ];\n    }, []);\n\n    const handleSeedChange = useCallback(function(seed) {\n        setSource(source => ({ ...source, seed }));\n    }, []);\n    const handleTypeChange = useCallback(function(option) {\n        setSource(source => ({ type: option.value, seed: source.seed }));\n    }, []);\n    const handleCheckerboardSourceChange = useCallback(function(settings) {\n        setSource(source => ({ ...source, ...settings }));\n    }, []);\n    const handleFixedSourceChange = useCallback(function(biome) {\n        setSource(source => ({ ...source, biome }));\n    }, []);\n    const handleMultiSourceChange = useCallback(function(s) {\n        setSource(source => ({ ...source, ...s }));\n    }, []);\n\n    useEffect(() => onChange(source), [onChange, source]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === source.type);\n    }, [options, source.type]);\n\n    return <fieldset>\n        <legend>Biome source</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"biome-source-type\">Type</label><Select inputId=\"biome-source-type\" options={options} value={selected} onChange={handleTypeChange} />\n        </div>\n        <SeedField value={source.seed} onChange={handleSeedChange} />\n        <hr />\n        {source.type === 'minecraft:checkerboard' && <CheckerboardBiomeSource source={source} onChange={handleCheckerboardSourceChange} />}\n        {source.type === 'minecraft:fixed' && <FixedBiomeSource source={source.biome} onChange={handleFixedSourceChange} />}\n        {source.type === 'minecraft:multi_noise' && <MultiNoiseBiomeSource source={source} onChange={handleMultiSourceChange} />}\n    </fieldset>\n}\n\nconst CheckerboardBiomeSource = React.memo(function({source, onChange}) {\n    const [options, biomes, setBiomes] = useKeyedOptionsState('biomes', source.biomes, true);\n    const [scale, setScale] = useNumber(source.scale);\n\n    useEffect(() => onChange({ biomes, scale }), [biomes, onChange, scale]);\n\n    return <div className=\"form-group\">\n        <div className=\"form-group\">\n            <label htmlFor=\"biomes\">Biomes</label><Select options={options} isMulti isClearable={false} value={options.filter(o => biomes.includes(o.value))} onChange={setBiomes} id=\"biomes\" />\n        </div>\n        <div className=\"form-group\">\n            <NumberInput id=\"scale\" value={scale} onChange={setScale}>Scale (squares of 2<sup>scale</sup> chunks)</NumberInput>\n        </div>\n        {biomes.length < 1 && <p className=\"alert--warning\">Warning: a dimension must contain at least one biome!</p>}\n    </div>;\n});\n\nconst FixedBiomeSource = React.memo(function({source = 'minecraft:plains', onChange}) {\n    const [options, biome, setBiome] = useKeyedOptionsState('biomes', source);\n    useEffect(() => onChange(biome), [biome, onChange]);\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"fixed-biome\">Biome</label><Select options={options} value={options.find(o => o.value === biome)} onChange={setBiome} />\n    </div>;\n});\n\nconst MultiNoiseBiomeSource = React.memo(function({source = MULTI_NOISE_BIOME_SOURCE, onChange}) {\n    const options = useKeyedListOptions('biomes');\n    const [biomes, dispatch] = useCrud(source.biomes);\n\n    const [advanced, toggleAdvanced] = useToggle();\n    const handleNoiseChange = useCallback(function(type, noise) {\n        onChange(({ ...source, [type]: noise }));\n    }, [source, onChange]);\n\n    const handleAddClick = useCallback(function(e) {\n        e.preventDefault();\n        dispatch({ type: CRUD.ADD, payload: { biome: 'minecraft:plains', parameters: {\n            altitude: 0,\n            weirdness: 0,\n            offset: 0,\n            temperature: 0.8,\n            humidity: 0.4\n        } } });\n    }, [dispatch]);\n    const handleChange = useCallback(function(state, previous) {\n        dispatch({ type: CRUD.UPDATE, target: previous, payload: state });\n    }, [dispatch]);\n    const handleDeleteClick = useCallback(function(e, index) {\n        e.preventDefault();\n        dispatch({ type: CRUD.REMOVE, payload: biomes[index] });\n    }, [biomes, dispatch]);\n\n    const vanilla = useContext(DataContext).vanilla.biomes;\n    const custom = useContext(DataContext).custom.biomes;\n    const namespace = useContext(DataContext).namespace;\n    useEffect(function() {\n        for (const noise of NOISES_NAMES) {\n            if (typeof source[noise] === 'undefined') {\n                onChange({ ...MULTI_NOISE_BIOME_SOURCE, ...source, biomes });\n                return;\n            }\n        }\n        if (biomes !== source.biomes) {\n            onChange({ ...source, biomes });\n        }\n    }, [biomes, onChange, source]);\n\n    const values = [];\n    biomes.forEach((entry, i) => {\n        const key = i;\n        values.push(<BiomeSelection namespace={namespace} vanilla={vanilla} custom={custom} biomesOptions={options} entry={entry} key={key} onChange={handleChange}><Button cat=\"danger\" onClick={(e) => handleDeleteClick(e, i)}>Delete</Button></BiomeSelection>);\n    });\n    return <>\n        <div className=\"flex-container\" style={{ alignItems: 'baseline' }}>\n            <h4>\n                Biomes list\n                <Button onClick={handleAddClick} cat=\"primary mls\">Add biome</Button>\n                <Button onClick={toggleAdvanced} cat=\"secondary\">Advanced</Button>\n            </h4>\n        </div>\n        {advanced && <div className=\"grid-2-small-1 has-gutter mbm\">\n            {NOISES_NAMES\n                .map(noise => <PerlinNoiseParameters\n                    key={noise}\n                    noise={source[noise] || MULTI_NOISE_BIOME_SOURCE[noise]}\n                    onChange={(n) => handleNoiseChange(noise, n)}>{capitalize(noise.replace('_', ' '))}</PerlinNoiseParameters>)}\n        </div>}\n        {values}\n        {hasDuplicatedObjects(biomes.map(biome => biome.parameters)) && <p className=\"alert--warning\">Warning: every biome must have a unique combination of parameters!</p>}\n    </>;\n});\n\nconst PerlinNoiseParameters = React.memo(function({children, noise = { firstOctave: -7, amplitudes: [1, 1] }, onChange}) {\n\n    const handleFirstOctaveChange = useCallback(function(firstOctave) {\n        onChange({ ...noise, firstOctave });\n    }, [noise, onChange]);\n    const handleAmplitudesChange = useCallback(function(amplitudes) {\n        onChange({ ...noise, amplitudes });\n    }, [noise, onChange]);\n\n    return <fieldset style={{ margin: 0 }}>\n        <legend>{children}</legend>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"firstOctave\" value={noise.firstOctave} onChange={handleFirstOctaveChange} min={-1000}>First octave</NumberInput>\n            <NumberList numbers={noise.amplitudes} onChange={handleAmplitudesChange}>Amplitudes</NumberList>\n        </div>\n    </fieldset>;\n});\n\nconst BiomeSelection = React.memo(function({namespace, vanilla, custom, biomesOptions, entry, onChange, children}) {\n    const handleBiomeChange = useCallback(function(option) {\n        const biome = option.value;\n        const data = (vanilla.find(b => 'minecraft:' + b.name === biome) || custom.find(b => namespace + ':' + b.key === biome) || { rainfall: 0, temperature: 0 });\n        const parameters = {\n            altitude: entry.parameters.altitude || 0,\n            weirdness: entry.parameters.weirdness || 0,\n            offset: entry.parameters.offset || 0,\n            temperature: data.temperature || 0.8,\n            humidity: data.rainfall || 0.4\n        };\n        onChange({ biome, parameters }, entry);\n    }, [entry, custom, namespace, onChange, vanilla]);\n\n    const handleParameterChange = useCallback(function(value) {\n        onChange({ biome: entry.biome, parameters: { ...entry.parameters, ...value } }, entry);\n    }, [entry, onChange]);\n\n    const selected = useMemo(function() {\n        return biomesOptions.find(o => o.value === entry.biome);\n    }, [biomesOptions, entry.biome]);\n    return <div className=\"form-group\">\n        <Select options={biomesOptions} value={selected} onChange={handleBiomeChange} />\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"altitude\" value={entry.parameters.altitude} upChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\">Altitude</NumberInput>\n            <NumberInput id=\"weirdness\" value={entry.parameters.weirdness} upChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\">Weirdness</NumberInput>\n            <NumberInput id=\"offset\" value={entry.parameters.offset} upChange={handleParameterChange} step=\"0.1\" max=\"1\">Offset</NumberInput>\n            <NumberInput id=\"temperature\" value={entry.parameters.temperature} upChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\">Temperature</NumberInput>\n            <NumberInput id=\"humidity\" value={entry.parameters.humidity} upChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\">Humidity</NumberInput>\n            {children}\n        </div>\n    </div>\n});\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { BiomeSource } from './BiomeSource';\nimport { hashCode } from './../../utils/hash';\nimport Select from '../../ui/Select';\nimport { useKeyedListOptions } from '../../hooks/context';\nimport { ConfInput } from '../../ui/Input';\n\nexport function DimensionGenerator({generator, onChange}) {\n    \n    const [data, setData] = useState(generator);\n\n    const handleSeedChange = useCallback(function(seed) {\n        setData(data => {\n            data.seed = seed;\n            return data;\n        });\n        onChange(data);\n    }, [data, onChange]);\n\n    const handleSettingsChange = useCallback(function(settings) {\n        setData(data => {\n            data.settings = settings;\n            return data;\n        });\n        onChange(data);\n    }, [data, onChange]);\n\n    const handleBiomeSourceChange = useCallback(function(biome_source) {\n        setData(data => {\n            data.biome_source = biome_source;\n            return data;\n        });\n        onChange(data);\n    }, [data, onChange]);\n\n    useEffect(function () {\n        if (data !== generator) {\n            onChange(data);\n        }\n    }, [data, generator, onChange]);\n\n    return <fieldset>\n        <legend>Noise dimension generator</legend>\n        <div className=\"form-group\">\n            <SeedField value={data.seed} onChange={handleSeedChange} />\n            <Settings settings={data.settings} onChange={handleSettingsChange} />\n            <BiomeSource biome_source={data.biome_source} onChange={handleBiomeSourceChange} />\n        </div>\n    </fieldset>;\n}\n\nexport const SeedField = React.memo(function({onChange, value = 286956243}) {\n    const [text, setText] = useState(value);\n\n    const handleChange = function(e) {\n        const value = e.target.value;\n        setText(value);\n        onChange(isNaN(value) ? hashCode(value) : parseInt(value));\n    };\n\n    return <div className=\"form-group\">\n        <ConfInput type=\"text\" id=\"seed\" value={text} onChange={handleChange}>Seed</ConfInput>\n    </div>\n});\n\nconst Settings = React.memo(function({onChange, settings = 'minecraft:overworld'}) {\n    const handleChange = useCallback(function(option) {\n        onChange(option.value);\n    }, [onChange]);\n\n    const options = useKeyedListOptions('noises');\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"settings\">Noise settings</label><Select options={options} value={options.find(o => o.value === settings)} onChange={handleChange} inputId=\"settings\" />\n    </div>;\n});","export function hashCode(s) {\n    let hash;\n    for (let i = 0; i < s.length; i++) { \n        hash = Math.imul(31, hash) + s.charCodeAt(i) | 0;\n    }\n    return hash;\n}","import React, { useCallback, useState } from 'react';\nimport { DimensionType } from './DimensionType';\nimport { DimensionGenerator } from './DimensionGenerator';\nimport { Button } from '../../ui/Button';\nimport { DIMENSION } from './DimensionDefaults';\nimport { NamespacedKey } from '../NamespacedKey';\nimport { JsonViewer } from '../../ui/JsonViewer';\n\nexport function Dimension({data = DIMENSION, onSave}) {\n\n    const [state, setState] = useState(data);\n\n    const handleTypeChange = useCallback(function(type) {\n        setState(state => ({ ...state, type }));\n    }, []);\n    const handleGeneratorChange = useCallback(function(generator) {\n        setState(state => ({ ...state, generator }));\n    }, []);\n\n    const handleSubmit = function (e) {\n        e.preventDefault();\n        onSave({\n            ...state,\n            ...Object.fromEntries(new FormData(e.target))\n        });\n    }\n\n    return <form onSubmit={handleSubmit}>\n        <NamespacedKey example=\"blue_dimension\" type=\"dimensions\" value={data.key} mayReplaceVanilla={true}>\n            dimension\n            <JsonViewer data={state} />\n        </NamespacedKey>\n        <DimensionType type={state.type} onChange={handleTypeChange} />\n        <fieldset>\n            <legend>Generator configuration</legend>\n            <DimensionGenerator generator={state.generator} onChange={handleGeneratorChange} />\n        </fieldset>\n        <Button type=\"submit\">Save</Button>\n    </form>\n}","import React, { useState, useCallback, useMemo } from \"react\";\nimport Select from \"../../ui/Select\";\nimport { Button } from '../../ui/Button';\nimport { NumberInput } from '../../ui/Input';\nimport { useEffect } from \"react\";\nimport { useJsonEffect, useCrudPreset, useBlocksOptions } from \"../../hooks/form\";\nimport { BlockState } from \"./BlockState\";\n\nexport const BlockStateProvider = React.memo(function({block = { type: 'minecraft:simple_state_provider' }, onChange}) {\n    const [provider, setProvider] = useState(block);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:forest_flower_provider', label: 'Forest flower provider' },\n            { value: 'minecraft:plain_flower_provider', label: 'Plain flower provider' },\n            { value: 'minecraft:simple_state_provider', label: 'Simple state provider' },\n            { value: 'minecraft:rotated_block_provider', label: 'Rotated block provider' },\n            { value: 'minecraft:weighted_state_provider', label: 'Weighted state provider' }\n        ];\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        const similarities = ['minecraft:simple_state_provider', 'minecraft:rotated_block_provider'];\n        if (similarities.includes(provider.type) && similarities.includes(option.value)) {\n            setProvider({ ...provider, type: option.value });\n        } else {\n            setProvider({ type: option.value });\n        }\n    }, [provider]);\n\n    const handleSimpleStateChange = useCallback(function(state) {\n        setProvider(provider => ({ ...provider, state }));\n    }, []);\n\n    const handleWeighestStateChange = useCallback(function(entries) {\n        setProvider(provider => ({ ...provider, entries }));\n    }, []);\n\n    useJsonEffect(provider, block, onChange);\n\n    const blocks = useBlocksOptions(false);\n    const filteredBlocks = useMemo(function () {\n        const filtered = provider.type === 'minecraft:rotated_block_provider' ?\n            blocks.filter(b => b.states.some(state => state.name === 'axis')) : blocks;\n        return filtered.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n    }, [blocks, provider.type]);\n\n    return <div>\n        <label>Provider type</label>\n        <Select options={options} value={options.find(o => o.value === provider.type)} onChange={handleTypeChange} />\n        {(provider.type === 'minecraft:simple_state_provider' || provider.type === 'minecraft:rotated_block_provider') && <BlockState block={provider.state} options={filteredBlocks} onChange={handleSimpleStateChange} />}\n        {provider.type === 'minecraft:weighted_state_provider' && <WeightedStateProvider entries={provider.entries} onChange={handleWeighestStateChange} />}\n    </div>\n});\n\n\nconst WeightedStateProvider = React.memo(function({entries = [], onChange}) {\n    const options = useBlocksOptions();\n\n    const [blocks, handleAdd, handleChange, handleRemove] = useCrudPreset(entries, function(blocks) {\n        // Get the first non taken block name\n        return { data: { Name: (options.find(o => !blocks.some(b => b.data.Name === o.value)) || { value: 'minecraft:stone' }).value } };\n    });\n\n    const handleStateChange = useCallback(function(state, i) {\n        handleChange({ ...blocks[i], data: state }, blocks[i]);\n    }, [blocks, handleChange]);\n    const handleWeightChange = useCallback(function(weight, i) {\n        if (weight === 1) {\n            handleChange({ data: blocks[i].data }, blocks[i]);\n        } else {\n            handleChange({ weight, data: blocks[i].data }, blocks[i]);\n        }\n    }, [blocks, handleChange]);\n\n    useEffect(() => {\n        if (blocks !== entries) {\n            onChange(blocks);\n        }\n    }, [blocks, entries, onChange]);\n\n    return <div className=\"form-group\">\n        {blocks.map((block, i) => {\n            const filteredOptions = options.filter(o => o.value === block.data.Name || !blocks.some(d => d.data.Name === o.value));\n            return <BlockState block={block.data} options={filteredOptions} key={block.data.Name} onChange={state => handleStateChange(state, i)}>\n                <NumberInput id=\"weight\" value={block.weight || 1} min=\"1\" onChange={weight => handleWeightChange(weight, i)} className=\"mlm\">Weight</NumberInput>\n                <Button cat=\"danger mlm\" onClick={(e) => handleRemove(e, i)}>Remove</Button>\n            </BlockState>\n        })}\n        <Button onClick={handleAdd}>Add block</Button>\n    </div>;\n});","import React, { useCallback, useMemo, useState, useEffect } from 'react';\nimport { BlockStateProvider } from '../state/BlockStateProvider';\nimport Select from '../../ui/Select';\nimport { TREE_DECORATORS_OPTIONS, TREE_FEATURE_CONFIG } from './FeatureDefaults';\nimport { useJsonEffect, useCrud, CRUD } from '../../hooks/form';\nimport { NumberInput } from '../../ui/Input';\nimport { Button } from '../../ui/Button';\n\nexport function TreeFeatureConfig({configuration = TREE_FEATURE_CONFIG, onChange}) {\n\n    const [config, setConfig] = useState(configuration);\n\n    const handleTrunkProviderChange = useCallback(function(trunk_provider) {\n        setConfig(config => ({ ...config, trunk_provider }));\n    }, []);\n    const handleLeavesProviderChange = useCallback(function(leaves_provider) {\n        setConfig(config => ({ ...config, leaves_provider }));\n    }, []);\n    const handleFoliagePlacerChange = useCallback(function(foliage_placer) {\n        setConfig(config => ({ ...config, foliage_placer: { ...config.foliage_placer, ...foliage_placer } }));\n    }, []);\n    const handleTrunkPlacerChange = useCallback(function(trunk_placer) {\n        setConfig(config => ({ ...config, trunk_placer: { ...config.trunk_placer, ...trunk_placer } }));\n    }, []);\n    const handleDecoratorsChange = useCallback(function(decorators) {\n        setConfig(config => ({ ...config, decorators }));\n    }, []);\n    useJsonEffect(config, configuration, onChange);\n\n    return <div>\n        <fieldset>\n            <legend>Trunk provider</legend>\n            <BlockStateProvider block={config.trunk_provider} onChange={handleTrunkProviderChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Leaves provider</legend>\n            <BlockStateProvider block={config.leaves_provider} onChange={handleLeavesProviderChange} />\n        </fieldset>\n        <FoliagePlacer placer={config.foliage_placer} onChange={handleFoliagePlacerChange} />\n        <TrunkPlacer placer={config.trunk_placer} onChange={handleTrunkPlacerChange} />\n        <TreeDecorators data={configuration.decorators} onChange={handleDecoratorsChange}></TreeDecorators>\n    </div>;\n}\n\nconst FoliagePlacer = React.memo(function({placer, onChange}) {\n    const options = useMemo(function() {\n        return [\n            { value: 'blob_foliage_placer', label: 'Blob foliage placer' },\n            { value: 'fancy_foliage_placer', label: 'Fancy foliage placer' }\n        ].map(o => {\n            o.value = 'minecraft:' + o.value;\n            return o;\n        });\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        onChange({ type: option.value });\n    }, [onChange]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === placer.type) || options[0];\n    }, [options, placer.type]);\n\n    return <fieldset>\n        <legend>Foliage placer</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"foliage_placer_type\">Type</label>\n            <Select options={options} name=\"foliage_placer_type\" value={selected} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"radius\" value={placer.radius} upChange={onChange} max=\"8\">Radius</NumberInput>\n            <NumberInput id=\"offset\" value={placer.offset} upChange={onChange} max=\"8\">Offset</NumberInput>\n            {(placer.type === 'minecraft:blob_foliage_placer' ||\n                placer.type === 'minecraft:bush_foliage_placer' ||\n                placer.type === 'minecraft:fancy_foliage_placer' ||\n                placer.type === 'minecraft:jungle_foliage_placer'\n            ) && <NumberInput id=\"height\" value={placer.height} upChange={onChange} max=\"16\" defaultValue=\"3\">Height</NumberInput>}\n        </div>\n    </fieldset>\n});\n\nconst TrunkPlacer = React.memo(function({placer, onChange}) {\n    const options = useMemo(function() {\n        return [\n            { value: 'straight_trunk_placer', label: 'Straight trunk placer' },\n            { value: 'forking_trunk_placer', label: 'Forking trunk placer' },\n            { value: 'giant_trunk_placer', label: 'Giant trunk placer' },\n            { value: 'mega_jungle_trunk_placer', label: 'Mega jungle trunk placer' },\n            { value: 'dark_oak_trunk_placer', label: 'Dark oak trunk placer' },\n            { value: 'fancy_trunk_placer', label: 'Fancy trunk placer' }\n        ].map(o => {\n            o.value = 'minecraft:' + o.value;\n            return o;\n        });\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        onChange({ type: option.value });\n    }, [onChange]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === placer.type) || options[0];\n    }, [placer.type, options]);\n\n    return <fieldset>\n        <legend>Trunk placer</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"foliage_placer_type\">Type</label>\n            <Select options={options} name=\"foliage_placer_type\" defaultValue={selected} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"base_height\" value={placer.base_height} upChange={onChange} max=\"32\">Base height</NumberInput>\n            <NumberInput id=\"height_rand_a\" value={placer.height_rand_a} upChange={onChange} max=\"24\">First height rand</NumberInput>\n            <NumberInput id=\"height_rand_b\" value={placer.height_rand_b} upChange={onChange} max=\"24\">Second height rand</NumberInput>\n        </div>\n    </fieldset>\n});\n\nconst TreeDecorators = React.memo(function({data, onChange}) {\n    const [decorators, dispatch] = useCrud(data);\n\n    const handleAddClick = useCallback(function(e) {\n        e.preventDefault();\n        const decorator = TREE_DECORATORS_OPTIONS.find(o => !decorators.some(d => d.type === o.value));\n        if (typeof decorator !== 'undefined') {\n            dispatch({ type: CRUD.ADD, payload: { type: decorator.value } });\n        }\n    }, [decorators, dispatch]);\n    const handleChange = useCallback(function(decorator, previous) {\n        dispatch({ type: CRUD.UPDATE, target: previous, payload: decorator });\n    }, [dispatch]);\n    const handleDeleteClick = useCallback(function(e, index) {\n        e.preventDefault();\n        dispatch({ type: CRUD.REMOVE, payload: decorators[index] });\n    }, [decorators, dispatch]);\n    useJsonEffect(decorators.map(decorator => {\n        delete decorator.index;\n        return decorator;\n    }), data, onChange);\n    \n    return <fieldset>\n        <legend>Tree decorators {decorators.length < 5 && <Button onClick={handleAddClick}>Add decorator</Button>}</legend>\n        {decorators.map((decorator, i) => {\n            const options = TREE_DECORATORS_OPTIONS.filter(o => o.value === decorator.type || !decorators.some(d => d.type === o.value));\n            return <TreeDecorator data={decorator }key={decorator.type} onChange={handleChange} options={options}>\n                <Button cat=\"danger mlm\" onClick={(e) => handleDeleteClick(e, i)}>Remove</Button>\n            </TreeDecorator>\n        })}\n    </fieldset>\n});\n\nconst TreeDecorator = React.memo(function({children, data, options, onChange}) {\n    const [decorator, setDecorator] = useState(data);\n\n    const handleSelectChange = useCallback(function(option) {\n        setDecorator({ type: option.value, ...option.default });\n    }, []);\n    const handleAlterGroundChange = useCallback(function(provider) {\n        setDecorator(decorator => ({ type: decorator.type, provider }));\n    }, []);\n    const handleProbabilityChange = useCallback(function(probability) {\n        setDecorator(decorator => ({ type: decorator.type, probability }));\n    }, []);\n    useEffect(() => {\n        if (decorator !== data) {\n            onChange(decorator, data);\n        }\n    }, [data, decorator, onChange]);\n\n    const CustomTag = ['minecraft:leave_vine', 'minecraft:trunk_vine'].indexOf(decorator.type) < 0 ? 'fieldset' : 'div';\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === decorator.type);\n    }, [decorator.type, options]);\n    return <CustomTag>\n        <legend style={{ fontWeight: 'normal', fontSize: 'inherit' }}>\n            <div style={{ width: '200px', display: 'inline-block' }}><Select options={options} value={selected} onChange={handleSelectChange} /></div>\n            {children}\n        </legend>\n        <div className=\"form-group\">\n            {decorator.type === 'minecraft:alter_ground' && <BlockStateProvider block={decorator.provider} onChange={handleAlterGroundChange} />}\n            {(decorator.type === 'minecraft:beehive' || decorator.type === 'minecraft:cocoa') && <NumberInput id=\"probability\" value={decorator.probability} onChange={handleProbabilityChange} max=\"1\" step=\"0.05\" defaultValue=\"0.05\">Probability</NumberInput>}\n        </div>\n    </CustomTag>\n});","import React, { useCallback, useState, useMemo, useEffect } from 'react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport { useCrudPreset, useJsonEffect } from '../../hooks/form';\nimport { Button } from '../../ui/Button';\nimport Select from '../../ui/Select';\nimport { DECORATORS_OPTIONS, DECORATOR_EXTRA_COUNT_DEFAULTS, DECORATOR_DECORATED_DEFAULTS, DECORATOR_RANGE_DEFAULTS } from './FeatureDefaults';\nimport { NumberInput } from '../../ui/Input';\n\nexport const DecoratorsList = React.memo(function({data, onChange}) {\n    const [decorators, handleAdd, handleChange, handleRemove] = useCrudPreset(data, function(decorators) {\n        // Get the first non taken decorator\n        return { type: (DECORATORS_OPTIONS.filter(o => !decorators.some(d => d.type === o.value))[0] || { value: 'minecraft:count' }).value };\n    });\n    useJsonEffect(decorators, data, onChange);\n\n    const shouldCancelStart = useCallback(function(e) {\n        return !e.target.parentNode.classList.contains('sortable-item');\n    }, []);\n    \n    return <fieldset>\n        <legend>Decorators wrappers {DECORATORS_OPTIONS.length > decorators.length && <Button onClick={handleAdd}>Add decorator</Button>}</legend>\n        <SortableDecoratorsList decorators={decorators} handleChange={handleChange} handleRemove={handleRemove}\n            onSortEnd={handleChange} shouldCancelStart={shouldCancelStart} />\n    </fieldset>\n});\n\nconst SortableDecoratorsList = SortableContainer(function({decorators, handleChange, handleRemove}) {\n    return <ol className=\"sortable-container\">\n        {decorators.map((decorator, index) => {\n            const options = DECORATORS_OPTIONS.filter(o => decorator.type === o.value || !decorators.some(d => d.type === o.value));\n            return <Decorator key={decorator.type} data={decorator} index={index} onChange={handleChange} options={options}>\n                <Button cat=\"danger mlm\" onClick={(e) => handleRemove(e, index)}>Remove</Button>\n            </Decorator>\n        })}\n    </ol>\n});\n\nconst Decorator = React.memo(SortableElement(function({children, data = { type: 'minecraft:count' }, onChange, options}) {\n    const [decorator, setDecorator] = useState(data);\n\n    const handleSelectChange = useCallback(function(option) {\n        setDecorator({ type: option.value });\n    }, []);\n    const handleConfigChange = useCallback(function(config) {\n        setDecorator(decorator => ({ type: decorator.type, config: { ...decorator.config, ...config }}));\n    }, []);\n    useJsonEffect(decorator, data, onChange);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === decorator.type);\n    }, [decorator.type, options]);\n    return <li className=\"sortable-item\">\n        <div className=\"form-group form-row\">\n            <div style={{ flexGrow: 1 }}><Select options={options} value={selected} onChange={handleSelectChange} /></div>\n            {children}\n        </div>\n        <div className=\"form-group form-row\">\n            {decorator.type === 'minecraft:chance' && <ChanceDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.type === 'minecraft:count' || decorator.type === 'minecraft:fire' || decorator.type === 'minecraft:count_multilayer') && <CountDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {decorator.type === 'minecraft:count_extra' && <ExtraCountDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.type === 'minecraft:decorated' || decorator.type === 'minecraft:square') && <DecoratedDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.type === 'minecraft:range' || decorator.type === 'minecraft:range_biased' || decorator.type === 'minecraft:range_very_biased') && <RangeDecorator config={decorator.config} onChange={handleConfigChange} />}\n        </div>\n    </li>;\n}));\n\nconst ChanceDecorator = React.memo(function({config = {}, onChange}) {\n    return <NumberInput id=\"chance\" value={config.chance} defaultValue=\"32\" upChange={onChange}>Chance</NumberInput>\n});\n\nconst CountDecorator = React.memo(function({config = {}, onChange}) {\n    return <NumberInput id=\"count\" value={config.count} defaultValue=\"25\" upChange={onChange}>Count</NumberInput>\n});\n\nconst ExtraCountDecorator = React.memo(function({config, onChange}) {\n    config = useJsonEffect(config || DECORATOR_EXTRA_COUNT_DEFAULTS, config, onChange);\n\n    return <>\n        <NumberInput id=\"count\" value={config.count} upChange={onChange}>Count</NumberInput>\n        <NumberInput id=\"extra_chance\" value={config.extra_chance} upChange={onChange} step=\"0.05\">Extra chance</NumberInput>\n        <NumberInput id=\"extra_count\" value={config.extra_count} upChange={onChange}>Extra count</NumberInput>\n    </>\n});\n\nconst DecoratedDecorator = React.memo(function({config, onChange}) {\n    useEffect(() => {\n        if (typeof config === 'undefined') {\n            onChange(DECORATOR_DECORATED_DEFAULTS);\n        }\n    }, [config, onChange]);\n    return <div></div>;\n});\n\nconst RangeDecorator = React.memo(function({config, onChange}) {\n    config = useJsonEffect(config || DECORATOR_RANGE_DEFAULTS, config, onChange);\n\n    return <>\n        <NumberInput id=\"bottom_offset\" value={config.bottom_offset} upChange={onChange}>Bottom offset</NumberInput>\n        <NumberInput id=\"top_offset\" value={config.top_offset} upChange={onChange}>Top offset</NumberInput>\n        <NumberInput id=\"maximum\" value={config.maximum} upChange={onChange}>Y maximum</NumberInput>\n    </>\n});","import React, { useCallback } from 'react';\nimport { BlocksList } from '../state/BlockState';\nimport { RANDOM_PATCH_FEATURE_CONFIG } from './FeatureDefaults';\nimport { useJsonEffect } from '../../hooks/form';\nimport { BlockStateProvider } from '../state/BlockStateProvider';\nimport { NumberInput, ConfInput } from '../../ui/Input';\n\nexport function RandomPatchFeature({configuration, onChange}) {\n\n    const config = useJsonEffect(configuration || RANDOM_PATCH_FEATURE_CONFIG, configuration, onChange);\n    const handleStateProviderChange = useCallback(function(state_provider) {\n        onChange({ ...config, state_provider });\n    }, [config, onChange]);\n    const handleWhitelistChange = useCallback(function(whitelist) {\n        onChange({ ...config, whitelist });\n    }, [config, onChange]);\n    const handleBlacklistChange = useCallback(function(blacklist) {\n        onChange({ ...config, blacklist });\n    }, [config, onChange]);\n    const handleValueChange = useCallback(function(value) {\n        onChange({ ...config, ...value });\n    }, [config, onChange]);\n    const handleCheckboxChange = useCallback(function(e) {\n        onChange({ ...config, [e.target.dataset.name]: e.target.checked });\n    }, [config, onChange]);\n\n    return <div>\n        <fieldset>\n            <legend>State provider</legend>\n            <BlockStateProvider block={config.state_provider} onChange={handleStateProviderChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Whitelist</legend>\n            <BlocksList list={config.whitelist} onChange={handleWhitelistChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Blacklist</legend>\n            <BlocksList list={config.blacklist} onChange={handleBlacklistChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Settings</legend>\n            <div className=\"form-group form-row\">\n                <NumberInput id=\"xspread\" value={config.xspread} upChange={handleValueChange}>X spread</NumberInput>\n                <NumberInput id=\"yspread\" value={config.yspread} upChange={handleValueChange}>Y spread</NumberInput>\n                <NumberInput id=\"zspread\" value={config.zspread} upChange={handleValueChange}>Z spread</NumberInput>\n                <NumberInput id=\"tries\" value={config.tries} upChange={handleValueChange}>Tries</NumberInput>\n            </div>\n            <div className=\"form-group form-row\">\n                <ConfInput id=\"need_water\" checked={config.need_water} onChange={handleCheckboxChange}>Need water</ConfInput>\n                <ConfInput id=\"project\" checked={config.project} onChange={handleCheckboxChange}>Project</ConfInput>\n                <ConfInput id=\"can_replace\" checked={config.can_replace} onChange={handleCheckboxChange}>Can replace</ConfInput>\n            </div>\n        </fieldset>\n    </div>;\n}","import React, { useCallback } from 'react';\nimport { ORE_FEATURE_CONFIG } from \"./FeatureDefaults\";\nimport { BlockPredicate } from '../state/BlockPredicate';\nimport { BlockState } from '../state/BlockState';\nimport { useJsonEffect } from '../../hooks/form';\nimport { NumberInput } from '../../ui/Input';\n\nexport function OreFeatureConfig({configuration, onChange}) {\n    const handlePredicateChange = useCallback(function(target) {\n        onChange({ ...configuration, target });\n    }, [configuration, onChange]);\n    const handleBlockChange = useCallback(function(state) {\n        onChange({ ...configuration, state });\n    }, [configuration, onChange]);\n    const handleValueChange = useCallback(function(value) {\n        onChange({ ...configuration, ...value });\n    }, [configuration, onChange]);\n    const config = useJsonEffect(configuration || ORE_FEATURE_CONFIG, configuration, onChange);\n\n    return <div>\n        <fieldset>\n            <legend>Target</legend>\n            <BlockPredicate target={config.target} onChange={handlePredicateChange} />\n        </fieldset>\n        <fieldset>\n            <legend>State</legend>\n            <BlockState block={config.state} onChange={handleBlockChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Settings</legend>\n            <NumberInput id=\"size\" value={config.size} upChange={handleValueChange}>Size</NumberInput>\n        </fieldset>\n    </div>;\n}","import React, { useCallback, useState } from 'react';\nimport { HUGE_FUNGUS_FEATURE_CONFIG } from './FeatureDefaults';\nimport { useJsonEffect } from '../../hooks/form';\nimport {  ConfInput } from '../../ui/Input';\nimport { BlockState } from '../state/BlockState';\n\nexport function HugeFungusFeature({ configuration = HUGE_FUNGUS_FEATURE_CONFIG, onChange }) {\n\n    const [config, setConfig] = useState(configuration);\n\n    const handleDecorStateChange = useCallback(function (decor_state) {\n        setConfig(config => ({ ...config, decor_state }));\n    }, []);\n    const handleHatStateChange = useCallback(function (hat_state) {\n        setConfig(config => ({ ...config, hat_state }));\n    }, []);\n    const handlePlantedChange = useCallback(function (e) {\n        const planted = e.target.checked;\n        setConfig(config => ({ ...config, planted }));\n    }, []);\n    const handleStemStateChange = useCallback(function (stem_state) {\n        setConfig(config => ({ ...config, stem_state }));\n    }, []);\n    const handleValidBaseBlockChange = useCallback(function (valid_base_block) {\n        setConfig(config => ({ ...config, valid_base_block }));\n    }, []);\n    useJsonEffect(config, configuration, onChange);\n\n    return <div>\n        <fieldset>\n            <legend>Composition</legend>\n            <label htmlFor=\"stem_state\">Stem</label>\n            <BlockState block={config.stem_state} className=\"\" inputId=\"stem_state\" onChange={handleStemStateChange} />\n            <label htmlFor=\"hat_state\">Hat</label>\n            <BlockState block={config.hat_state} className=\"\" inputId=\"hat_state\" onChange={handleHatStateChange} />\n            <label htmlFor=\"decor_state\">Decor</label>\n            <BlockState block={config.decor_state} className=\"\" inputId=\"decor_state\" onChange={handleDecorStateChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Configuration</legend>\n            <label htmlFor=\"valid_base_block\">Valid base block</label>\n            <BlockState block={config.valid_base_block} className=\"\" inputId=\"valid_base_block\" onChange={handleValidBaseBlockChange} />\n            <ConfInput id=\"planted\" checked={config.planted} onChange={handlePlantedChange}>Planted</ConfInput>\n        </fieldset>\n    </div>;\n}\n","import React, { useCallback, useState, useMemo } from 'react';\nimport { HUGE_FUNGUS_FEATURE_CONFIG } from './FeatureDefaults';\nimport { useJsonEffect, useBlocksOptions } from '../../hooks/form';\nimport {  ConfInput, NumberInput } from '../../ui/Input';\nimport { BlocksNamesList } from '../state/BlockState';\nimport { BlockSelect } from '../state/BlockPredicate';\n\nexport function SpringFeature({ configuration = HUGE_FUNGUS_FEATURE_CONFIG, onChange }) {\n\n    const [config, setConfig] = useState(configuration);\n\n    const handlRequiresBlockBelowChange = useCallback(function (e) {\n        const requires_block_below = e.target.checked;\n        setConfig(config => ({ ...config, requires_block_below }));\n    }, []);\n    const handleStateChange = useCallback(function (option) {\n        setConfig(config => ({ ...config, state: { Name: option.value, Properties: { falling: 'true' } } }));\n    }, []);\n    const handleValidBlocksChange = useCallback(function (valid_blocks) {\n        setConfig(config => ({ ...config, valid_blocks }));\n    }, []);\n    const handleValueChange = useCallback(function (value) {\n        setConfig(config => ({ ...config, ...value }));\n    }, []);\n    useJsonEffect(config, configuration, onChange);\n\n    const blocks = useBlocksOptions(false);\n    const filteredBlocks = useMemo(function () {\n        return blocks.filter(b => b.name === 'lava' || b.name === 'water')\n            .map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n    }, [blocks]);\n\n    return <div>\n        <fieldset>\n            <legend>Fluid</legend>\n            <div className=\"form-group\"><BlockSelect block={config.state.Name} onChange={handleStateChange} options={filteredBlocks} /></div>\n        </fieldset>\n        <fieldset>\n            <legend>Valid blocks</legend>\n            <BlocksNamesList list={config.valid_blocks} onChange={handleValidBlocksChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Configuration</legend>\n            <NumberInput id=\"rock_count\" value={config.rock_count} upChange={handleValueChange}>Rock count</NumberInput>\n            <NumberInput id=\"hole_count\" value={config.hole_count} upChange={handleValueChange}>Hole count</NumberInput>\n            <ConfInput id=\"requires_block_below\" checked={config.requires_block_below} onChange={handlRequiresBlockBelowChange}>Requires block below</ConfInput>\n        </fieldset>\n    </div>;\n}\n","import React, { useCallback, useMemo, useState } from 'react';\nimport Select from '../../ui/Select';\nimport { TreeFeatureConfig } from './TreeFeature';\nimport { Button } from '../../ui/Button';\nimport { JsonViewer } from '../../ui/JsonViewer';\nimport { DecoratorsList } from './Decorator';\nimport { buildDecorated, findDecorators } from '../../utils/data';\nimport { DECORATED_TREE_CONFIG, DECORATED_RANDOM_PATCH_CONFIG, DECORATED_ORE_FEATURE_CONFIG, DECORATED_HUGE_FUNGUS_CONFIG, DECORATED_SPRING_FEATURE_CONFIG } from './FeatureDefaults';\nimport { RandomPatchFeature } from './RandomPatchFeature';\nimport { OreFeatureConfig } from './OreFeature';\nimport { NamespacedKey } from '../NamespacedKey';\nimport { HugeFungusFeature } from './HugeFungusFeature';\nimport { SpringFeature } from './SpringFeature';\n\nexport function RawConfiguredFeature({data = DECORATED_TREE_CONFIG, onSave}) {\n\n    const [decorators_, feature_] = useMemo(() => findDecorators(data), [data]);\n\n    const [feature, setFeature] = useState(feature_);\n    const [decorators, setDecorators] = useState(decorators_);\n\n    const handleSelectChange = useCallback(function(option) {\n        const [decorators, feature] = findDecorators({ ...option.default });\n        setFeature(feature);\n        setDecorators(decorators);\n    }, []);\n\n    const handleFeatureChange = useCallback(function (config) {\n        setFeature(feature => ({ ...feature, config }));\n    }, []);\n\n    const handleDecoratorsChange = useCallback(function (decorators) {\n        setDecorators(decorators);\n    }, []);\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        const decorated = buildDecorated(feature, decorators, new FormData(e.target).get('key'));\n        decorated.index = data.index;\n        onSave(decorated);\n    }, [data.index, decorators, feature, onSave]);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'huge_fungus', label: 'Huge fungus', default: DECORATED_HUGE_FUNGUS_CONFIG },\n            { value: 'ore', label: 'Ore', default: DECORATED_ORE_FEATURE_CONFIG },\n            { value: 'spring_feature', label: 'Spring', default: DECORATED_SPRING_FEATURE_CONFIG },\n            { value: 'random_patch', label: 'Random patch', default: DECORATED_RANDOM_PATCH_CONFIG },\n            { value: 'tree', label: 'Tree', default: DECORATED_TREE_CONFIG }\n        ].map(o => {\n            o.value = 'minecraft:' + o.value;\n            return o;\n        });\n    }, []);\n\n    return <form onSubmit={handleSubmit}>\n        <NamespacedKey example=\"concrete_tree\" type=\"features\" value={data.key} expectBreakage={typeof data.key !== 'undefined'}>\n            configured feature\n            <JsonViewer data={() => buildDecorated(feature, decorators, data.key || 'feature')} />\n        </NamespacedKey>\n        <div className=\"form-group\">\n            <label htmlFor=\"type\">Type</label>\n            <Select options={options} value={options.find(o => o.value === feature.type)} onChange={handleSelectChange} inputId=\"type\" />\n        </div>\n        <hr />\n        {feature.type === 'minecraft:huge_fungus' && <HugeFungusFeature configuration={feature.config} onChange={handleFeatureChange} />}\n        {feature.type === 'minecraft:ore' && <OreFeatureConfig configuration={feature.config} onChange={handleFeatureChange} />}\n        {feature.type === 'minecraft:spring_feature' && <SpringFeature configuration={feature.config} onChange={handleFeatureChange} />}\n        {feature.type === 'minecraft:random_patch' && <RandomPatchFeature configuration={feature.config} onChange={handleFeatureChange} />}\n        {feature.type === 'minecraft:tree' && <TreeFeatureConfig configuration={feature.config} onChange={handleFeatureChange} />}\n        <DecoratorsList data={decorators} key={feature.type} onChange={handleDecoratorsChange} />\n        <Button type=\"submit\">Save</Button>\n    </form>\n}\n","import JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\nimport { dataUpper } from \"./data\";\n\nconst DIMENSIONS_PATH = /^data\\/([a-z0-9._-]+)\\/(dimension|dimension_type)\\/([a-z0-9._-]+).json$/;\nconst WORLDGEN_PATH = /^data\\/([a-z0-9._-]+)\\/worldgen\\/(biome|configured_carver|configured_feature|configured_surface_builder|noise_settings)\\/([a-z0-9._-]+).json$/;\n\nconst LEGACY_PATH_DETECTION = /^data\\/minecraft\\/(dimension|dimension_type|worldgen)\\/?\\w*\\/([a-z0-9._-]+)\\/([a-z0-9._-]+).json$/;\nconst LEGACY_DIMENSIONS_PATH = /^data\\/minecraft\\/(dimension|dimension_type)\\/([a-z0-9._-]+)\\/([a-z0-9._-]+).json$/;\nconst LEGACY_WORLDGEN_PATH = /^data\\/minecraft\\/worldgen\\/(biome|configured_carver|configured_feature|configured_surface_builder|noise_settings)\\/([a-z0-9._-]+)\\/([a-z0-9._-]+).json$/;\n\n/**\n * Build zip in blob.\n * \n * @param {{ biomes: object[], carvers: object[] dimensions: object[], dimension_types: object[], features: object[], noises: object[], surfaces: object[] }} custom \n */\nexport function buildZip(custom) {\n    const zip = new JSZip();\n\n    let modified;\n    if (custom.dimensions.length > 0) {\n        modified = 'dimension';\n    } else if (custom.biomes.length > 0) {\n        modified = 'biome';\n    } else {\n        modified = (Object.entries(custom).find(([type, elements]) => typeof elements !== 'function' && elements.length > 0) || [''])[0];\n    }\n    \n    zip.file('pack.mcmeta', JSON.stringify({\n        pack: {\n            pack_format: 6,\n            description: 'Custom ' + modified\n        }\n    }, null, 4));\n    const namespace = '%namespace%';\n    writeFile(zip, `data/${namespace}/dimension`, custom.dimensions);\n    writeFile(zip, `data/${namespace}/dimension_type`, custom.dimension_types);\n    writeFile(zip, `data/${namespace}/worldgen/biome`, custom.biomes);\n    writeFile(zip, `data/${namespace}/worldgen/configured_carver`, custom.carvers);\n    writeFile(zip, `data/${namespace}/worldgen/configured_feature`, custom.features);\n    writeFile(zip, `data/${namespace}/worldgen/configured_surface_builder`, custom.surfaces);\n    writeFile(zip, `data/${namespace}/worldgen/noise_settings`, custom.noises);\n    zip.generateAsync({ type: 'blob' })\n        .then(function(content) {\n            saveAs(content, 'generated_datapack.zip');\n        });\n}\n\n/**\n * @param {File} file\n * @returns {Promise<[string, { biomes: object[], dimensions: object[], features: object[], surfaces: object[] }]>}\n */\nexport function readZip(file) {\n    return new Promise((resolve, reject) => {\n        if (file.type !== 'application/zip') {\n            reject(new Error('File is not a .zip'));\n        }\n\n        JSZip.loadAsync(file).then((zip) => {\n            extractDatapack(zip)\n                .then(resolve)\n                .catch(reject);\n        }).catch(reject);\n    });\n}\n\n/**\n * @param {JSZip} zip \n * @returns {Promise<string, object>}\n */\nfunction extractDatapack(zip) {\n    let mcmeta = false;\n    let namespace = 'minecraft';\n    const data = {\n        biomes: [],\n        carvers: [],\n        dimensions: [],\n        dimension_types: [],\n        features: [],\n        noises: [],\n        surfaces: []\n    };\n\n    return new Promise((resolve, reject) => {\n        const promises = [];\n        zip.forEach(function(path, entry) {\n            if (entry.dir) {\n                return;\n            }\n            if (entry.name === 'pack.mcmeta') {\n                mcmeta = true;\n                return;\n            }\n            const legacy = entry.name.match(LEGACY_PATH_DETECTION);\n            let regex = entry.name.match(DIMENSIONS_PATH) ? DIMENSIONS_PATH : WORLDGEN_PATH;\n            if (legacy) {\n                regex = entry.name.match(LEGACY_DIMENSIONS_PATH) ? LEGACY_DIMENSIONS_PATH : LEGACY_WORLDGEN_PATH;\n            }\n            promises.push(parseFile(legacy, regex, entry.name, zip.file(entry.name).async('text')));\n        });\n\n        if (!mcmeta) {\n            reject(new Error('Invalid datapack: no pack.mcmeta'));\n        }\n\n        Promise.all(promises).then(function(values) {\n            values.forEach(function(value) {\n                if (value === null) {\n                    return;\n                }\n\n                if (value.namespace !== 'minecraft') {\n                    namespace = value.namespace;\n                }\n                value.data.index = data[value.type].length;\n                data[value.type].push(value.data);\n            });\n            resolve([namespace, data]);\n        }).catch(e => reject(e));\n    });\n}\n\nfunction getFolderType(folder) {\n    switch (folder) {\n        case 'configured_carver':\n            return 'carvers';\n        case 'configured_feature':\n            return 'features';\n        case 'configured_surface_builder':\n            return 'surfaces';\n        case 'noise_settings':\n            return 'noises';\n        default:\n            return folder + 's';\n    }\n}\n\n/**\n * Parse json file when it will be ready.\n * \n * @param {boolean} legacy\n * @param {RegExp} pathRegex \n * @param {string} filename \n * @param {Promise<string>} contentPromise \n * @returns {Promise<{namespace: string, data: object, type: string}>}\n */\nasync function parseFile(legacy, pathRegex, filename, contentPromise) {\n    const d = pathRegex.exec(filename);\n    if (d === null) {\n        return new Promise((success) => success(null)); // Skip file\n    }\n\n    return new Promise((resolve, reject) => {\n        contentPromise.then(content => {\n            const obj = JSON.parse(content);\n            const namespace = d[legacy ? 2 : 1];\n            const type = getFolderType(d[legacy ? 1 : 2]);\n            obj.key = namespace + ':' + d[3];\n            const data = dataUpper(type, obj);\n            resolve({ namespace, data, type });\n        }).catch(e => {\n            if (e.name !== 'SyntaxError') {\n                console.error(e);\n            }\n            reject(new Error(`Cannot read ${filename}:\\n${e.message}`));\n        });\n    });\n}\n\nfunction writeFile(zip, path, elements) {\n    if (elements.length < 1) {\n        return;\n    }\n\n    for (const el of elements) {\n        const w = {...el};\n        delete w.key;\n        delete w.index;\n\n        const [namespace, filename] = el.key.split(':');\n        zip.folder(path.replace('%namespace%', namespace))\n            .file(filename + '.json', JSON.stringify(w, null, 2));\n    }\n}","import React, { useCallback, useState } from 'react';\nimport { BlockState } from '../state/BlockState';\nimport { Button } from '../../ui/Button';\nimport { JsonViewer } from '../../ui/JsonViewer';\nimport Select from '../../ui/Select';\nimport { SURFACE_TYPES_OPTIONS, SURFACE_BUILDER } from './SurfaceBuilderDefaults';\nimport { NamespacedKey } from '../NamespacedKey';\n\nexport function SurfaceBuilder({data = SURFACE_BUILDER, onSave}) {\n    const [config, setConfig] = useState(data.config);\n\n    const handleTopMaterialChange = useCallback(function(top_material) {\n        setConfig(config => ({ ...config, top_material }));\n    }, []);\n    const handleUnderMaterialChange = useCallback(function(under_material) {\n        setConfig(config => ({ ...config, under_material }));\n    }, []);\n    const handleUnderwaterMaterialChange = useCallback(function(underwater_material) {\n        setConfig(config => ({ ...config, underwater_material }));\n    }, []);\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        onSave({\n            config,\n            type: formData.get('type'),\n            key: formData.get('key'),\n            index: data.index\n        });\n    }, [config, data.index, onSave]);\n\n    return <form onSubmit={handleSubmit}>\n        <NamespacedKey example=\"blackstone\" type=\"surfaces\" value={data.key} expectBreakage={typeof data.key !== 'undefined'}>\n            surface builder\n            <JsonViewer data={config} />\n        </NamespacedKey>\n        \n        <div className=\"form-group\">\n            <label htmlFor=\"type\">Type</label>\n            <Select options={SURFACE_TYPES_OPTIONS} defaultValue={SURFACE_TYPES_OPTIONS.find(o => o.value === data.type)} name=\"type\" inputId=\"type\" />\n            <p className=\"help2\"><small className=\"text-muted\">The builder type defines the shape of the surface. For example, the <em>swamp</em> type will create puddles while the <em>badlands</em> types will create small rocky peaks; the <em>nether</em> types will add a mix of nether blocks and expose more of the underneath material.</small></p>\n        </div>\n        \n        <label htmlFor=\"top_material\">Top material</label>\n        <BlockState block={config.top_material} className=\"\" inputId=\"top_material\" onChange={handleTopMaterialChange} />\n        <label htmlFor=\"under_material\">Under material</label>\n        <BlockState block={config.under_material} className=\"\" inputId=\"under_material\" onChange={handleUnderMaterialChange} />\n        <label htmlFor=\"underwater_material\">Underwater material</label>\n        <BlockState block={config.underwater_material} className=\"\" inputId=\"underwater_material\" onChange={handleUnderwaterMaterialChange} />\n\n        <Button type=\"submit\">Save</Button>\n    </form>;\n}","import React, { useCallback, useEffect, useState } from 'react';\nimport { NumberInput } from '../../ui/Input';\nimport { useToggle } from '../../hooks/ui';\nimport { useCrud, CRUD } from '../../hooks/form';\nimport Select from '../../ui/Select';\nimport { STRUCTURES } from './NoiseDefaults';\nimport { Button } from '../../ui/Button';\n\nexport const Structures = React.memo(function ({ data, onChange }) {\n\n    const handleStrongholdChange = useCallback(function(stronghold) {\n        if (stronghold === false) {\n            onChange({ structures: data.structures });\n        } else {\n            onChange({ structures: data.structures, stronghold });\n        }\n    }, [data.structures, onChange]);\n    const handleStructuresChange = useCallback(function(structures) {\n        onChange({ ...data, structures });\n    }, [data, onChange]);\n\n    return <fieldset>\n        <legend>Structures</legend>\n        <Stronghold data={data.stronghold} onChange={handleStrongholdChange} />\n        <StructuresList data={data.structures} onChange={handleStructuresChange} />\n    </fieldset>\n});\n\nconst Stronghold = React.memo(function ({ data, onChange }) {\n\n    const [enabled, toggle] = useToggle(typeof data === 'object');\n    const [stronghold, setStronghold] = useState(data || { distance: 32, spread: 3, count: 128 });\n\n    const handleChange = useCallback(function(value) {\n        setStronghold(stronghold => ({ ...stronghold, ...value }));\n    }, [setStronghold]);\n\n    useEffect(function() {\n        if (data !== stronghold\n            || (enabled && typeof data === 'undefined')\n            || (!enabled && typeof data === 'object')) {\n                onChange(enabled ? stronghold : false);\n        }\n    }, [data, enabled, onChange, stronghold]);\n\n    return <div>\n        <div className=\"toggle-label\">Stronghold<Button cat=\"secondary\" onClick={toggle}>{enabled ? 'Disable' : 'Enable'}</Button></div>\n        {enabled && <div className=\"form-group form-row\">\n            <NumberInput id=\"distance\" defaultValue={stronghold.distance} upChange={handleChange} max=\"1023\">Distance</NumberInput>\n            <NumberInput id=\"spread\" defaultValue={stronghold.spread} upChange={handleChange} max=\"1023\">Spread</NumberInput>\n            <NumberInput id=\"count\" defaultValue={stronghold.count} upChange={handleChange} min=\"1\" max=\"4095\">Count</NumberInput>\n        </div>}\n    </div>\n});\n\nconst StructuresList = React.memo(function({ data, onChange }) {\n    const [visibility, toggle] = useToggle();\n    const [structures, dispatch] = useCrud(Object.entries(data).map(([type, d]) => ({ ...d, type })));\n\n    const handleAdd = useCallback(function(e) {\n        e.preventDefault();\n        dispatch({ type: CRUD.ADD, payload: {\n            type: 'minecraft:village',\n            spacing: 32,\n            separation: 8,\n            salt: 10387312\n        }, unshift: true });\n        if (!visibility) {\n            toggle();\n        }\n    }, [dispatch, toggle, visibility]);\n    const handleChange = useCallback(function(original, structure) {\n        dispatch({ type: CRUD.UPDATE, target: original, payload: structure });\n    }, [dispatch]);\n    const handleRemove = useCallback(function(structure) {\n        dispatch({ type: CRUD.REMOVE, payload: structure });\n    }, [dispatch]);\n\n    useEffect(function() {\n        const obj = {};\n        for (const structure of structures) {\n            obj[structure.type] = {\n                spacing: structure.spacing,\n                separation: structure.separation,\n                salt: structure.salt\n            };\n        }\n        onChange(obj);\n    }, [onChange, structures]);\n\n    return <div>\n        <div className=\"toggle-label\">\n            Structures\n            <div className=\"btn-group\">\n                <Button onClick={handleAdd}>Add</Button>\n                {structures.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{visibility ? 'Less...' : 'More...'}</Button>}\n            </div>\n        </div>\n        {visibility && structures.map((def, i) => \n            <Structure data={def} key={i} onChange={handleChange} onDelete={handleRemove} />\n        )}\n    </div>\n});\n\nconst Structure = React.memo(function ({ data, onChange, onDelete }) {\n\n    const handleTypeChange = useCallback(function(option) {\n        onChange(data, { ...data, type: option.value });\n    }, [data,  onChange]);\n    const handleSpacingChange = useCallback(function(value) {\n        const name = Object.keys(value)[0];\n        value = value[name];\n        if ((name === 'spacing' && value > data.separation)\n            || (name === 'separation' && value < data.spacing)) {\n            onChange(data, {...data, [name]: value});\n        } \n    }, [data,  onChange]);\n    const handleSaltChange = useCallback(function(salt) {\n        onChange(data, { ...data, salt });\n    }, [data,  onChange]);\n    const handleDelete = useCallback(function (e) {\n        e.preventDefault();\n        onDelete(data);\n    }, [data, onDelete]);\n\n    return <div>\n        <div className=\"form-group\">\n            <label>Type</label> : <Select options={STRUCTURES} value={STRUCTURES.find(s => s.value === data.type)} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"spacing\" value={data.spacing} upChange={handleSpacingChange} max=\"4096\">Spacing</NumberInput>\n            <NumberInput id=\"separation\" value={data.separation} upChange={handleSpacingChange} max=\"4096\">Separation</NumberInput>\n            <NumberInput id=\"salt\" value={data.salt} onChange={handleSaltChange} max={0x7FFFFFFF} style={{ width: '150px' }}>Salt</NumberInput>\n            <div className=\"form-inline\"><Button cat=\"danger\" onClick={handleDelete}>Delete</Button></div>\n        </div>\n        <hr /> \n    </div>\n});\n","import React, { useCallback, useState } from 'react';\nimport { BlockState } from '../state/BlockState';\nimport { Button } from '../../ui/Button';\nimport { JsonViewer } from '../../ui/JsonViewer';\nimport { useValueChange } from '../../hooks/form';\nimport { ConfInput, NumberInput } from '../../ui/Input';\nimport { OVERWORLD_NOISE } from './NoiseDefaults';\nimport { Structures } from './Structures';\nimport { NamespacedKey } from '../NamespacedKey';\nimport { INT_MIN_VALUE } from '../../utils/number';\n\nexport const NoiseSettings = React.memo(function ({ data = OVERWORLD_NOISE, onSave }) {\n\n    const [state, setState] = useState(data);\n\n    const handleSubmit = useCallback(function (e) {\n        e.preventDefault();\n        const formData = Object.fromEntries(new FormData(e.target));\n        const data = { ...state, ...formData };\n        Object.keys(formData).forEach(function (key) {\n            if (!isNaN(formData[key])) {\n                data[key] = parseFloat(formData[key]);\n            }\n        });\n        data.disable_mob_generation = formData.hasOwnProperty('disable_mob_generation');\n        onSave(data);\n    }, [onSave, state]);\n\n    const handleBlockChange = useCallback(function (name, s) {\n        setState(state => ({ ...state, [name]: s }));\n    }, []);\n    const handleStructuresChange = useCallback(function (structures) {\n        setState(state => ({ ...state, structures }));\n    }, []);\n    const handleNoiseChange = useCallback(function (noise) {\n        setState(state => ({ ...state, noise: { ...state.noise, ...noise } }));\n    }, []);\n\n    return <form onSubmit={handleSubmit}>\n        <NamespacedKey example=\"epic\" type=\"noises\" value={data.key} expectBreakage={typeof data.key !== 'undefined'}>\n            noise\n            <JsonViewer data={state} />\n        </NamespacedKey>\n\n        <Structures data={data.structures} onChange={handleStructuresChange} />\n\n        <fieldset>\n            <legend>Defaults</legend>\n            <div className=\"form-group\">\n                <label>Block</label> : <BlockState block={state.default_block} onChange={state => handleBlockChange('default_block', state)} />\n            </div>\n            <div className=\"form-group\">\n                <label>Fluid</label> : <BlockState block={state.default_fluid} onChange={state => handleBlockChange('default_fluid', state)} />\n            </div>\n        </fieldset>\n\n        <fieldset>\n            <legend>Main</legend>\n            <div className=\"form-group form-row\">\n                <ConfInput name=\"bedrock_roof_position\" defaultValue={data.bedrock_roof_position}>Bedrock roof position</ConfInput>\n                <ConfInput name=\"bedrock_floor_position\" defaultValue={data.bedrock_floor_position}>Bedrock floor position</ConfInput>\n                <ConfInput name=\"sea_level\" defaultValue={data.sea_level} max={256}>Sea level</ConfInput>\n                <ConfInput name=\"disable_mob_generation\" defaultChecked={data.disable_mob_generation}>Disable mob generation</ConfInput>\n            </div>\n        </fieldset>\n\n        <NoiseConfig data={state.noise} onChange={handleNoiseChange} />\n\n        <Button type=\"submit\">Save</Button>\n    </form>;\n});\n\nconst NoiseConfig = React.memo(function ({ data, onChange }) {\n\n    const handleChange = useValueChange(onChange, data);\n    const handleSamplingChange = useCallback(function (sampling) {\n        onChange({ ...data, sampling: { ...data.sampling, ...sampling } });\n    }, [data, onChange]);\n    const handleTopSlideChange = useCallback(function (top_slide) {\n        onChange({ ...data, top_slide: { ...data.top_slide, ...top_slide } });\n    }, [data, onChange]);\n    const handleBottomSlideChange = useCallback(function (bottom_slide) {\n        onChange({ ...data, bottom_slide: { ...data.bottom_slide, ...bottom_slide } });\n    }, [data, onChange]);\n\n    return <fieldset>\n        <legend>Noise config (advanced)</legend>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"height\" value={data.height} upChange={onChange} min=\"0\" max=\"256\">Height</NumberInput>\n            <NumberInput id=\"size_horizontal\" value={data.size_horizontal} upChange={onChange} min=\"1\" max=\"4\">Size horizontal</NumberInput>\n            <NumberInput id=\"size_vertical\" value={data.size_vertical} upChange={onChange} min=\"1\" max=\"4\">Size vertical</NumberInput>\n            <NumberInput id=\"density_factor\" value={data.density_factor} upChange={onChange} step=\"0.01\">Density factor</NumberInput>\n            <NumberInput id=\"density_offset\" value={data.density_offset} upChange={onChange} min=\"-10000\" step=\"0.01\">Density offset</NumberInput>\n        </div>\n        <div className=\"form-group form-row\">\n            <ConfInput id=\"simplex_surface_noise\" checked={data.simplex_surface_noise} onChange={handleChange}>Simplex surface noise</ConfInput>\n            <ConfInput id=\"random_density_offset\" checked={data.random_density_offset} onChange={handleChange}>Random density offset</ConfInput>\n            <ConfInput id=\"island_noise_override\" checked={data.island_noise_override} onChange={handleChange}>Island noise override</ConfInput>\n            <ConfInput id=\"amplified\" checked={data.amplified} onChange={handleChange}>Amplified</ConfInput>\n        </div>\n\n        <NoiseSamplingConfig data={data.sampling} onChange={handleSamplingChange}>Sampling</NoiseSamplingConfig>\n        <SlideConfig data={data.top_slide} onChange={handleTopSlideChange}>Top slide</SlideConfig>\n        <SlideConfig data={data.bottom_slide} onChange={handleBottomSlideChange}>Bottom slide</SlideConfig>\n    </fieldset>\n});\n\nconst NoiseSamplingConfig = React.memo(function ({ children, data, onChange }) {\n\n    return <fieldset>\n        <legend>{children}</legend>\n        <div className=\"form-group form-row\">\n            <NumberInput name=\"xz_scale\" value={data.xz_scale} upChange={onChange}>XY scale</NumberInput>\n            <NumberInput name=\"y_scale\" value={data.y_scale} upChange={onChange}>Y scale</NumberInput>\n            <NumberInput name=\"xz_factor\" value={data.xz_factor} upChange={onChange}>XZ factor</NumberInput>\n            <NumberInput name=\"y_factor\" value={data.y_factor} upChange={onChange}>Y factor</NumberInput>\n        </div>\n    </fieldset>\n});\n\nconst SlideConfig = React.memo(function ({ children, data, onChange }) {\n\n    return <fieldset>\n        <legend>{children}</legend>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"target\" value={data.target} upChange={onChange} min={INT_MIN_VALUE}>Target</NumberInput>\n            <NumberInput id=\"size\" value={data.size} upChange={onChange} max={256}>Size</NumberInput>\n            <NumberInput id=\"offset\" value={data.offset} upChange={onChange} min={INT_MIN_VALUE}>Offset</NumberInput>\n        </div>\n    </fieldset>\n});\n","import React, { useContext } from 'react';\nimport { Biome } from './biome/Biome';\nimport { Button } from './../ui/Button';\nimport { MenuItem, NavBar } from './../ui/Menu';\nimport { Dimension } from './dimension/Dimension';\nimport { DimensionTypeForm } from './dimension/DimensionType';\nimport { DataContext } from './../context/DataContext';\nimport { RawConfiguredFeature } from './feature/ConfiguredFeature';\nimport { capitalize } from '../utils/data';\nimport { buildZip } from '../utils/zip';\nimport { SurfaceBuilder } from './surface/SurfaceBuilder';\nimport { NoiseSettings } from './noise/NoiseSettings';\nimport { displayNamespacedKey } from '../utils/data';\nimport { useMenu } from '../hooks/ui';\nimport { ConfiguredCarverForm } from './carver/ConfiguredCarver';\n\nexport function Datapack() {\n    const context = useContext(DataContext);\n    const custom = context.custom;\n    const namespace = context.namespace;\n    const [page, index, setMenu] = useMenu();\n\n    const handleSave = function (type, data) {\n        const method = 'update' + (type === 'surface' ? 'SurfacesBuilder' : capitalize(type)) + 's'\n        custom[method](data);\n        setMenu(null);\n    }\n    window.scrollTo(0, 0);\n\n    return <div>\n        <NavBar>\n            <nav className=\"tabs\"><ul>\n                <MenuItem onClick={e => setMenu(e, 'stats')} active={page === 'stats'}>Stats</MenuItem>\n                <MenuItem onClick={e => setMenu(e, 'biome')} active={page === 'biome'}>Biome</MenuItem>\n                <MenuItem onClick={e => setMenu(e, 'surface')} active={page === 'surface'}>Surface builders</MenuItem>\n                <MenuItem onClick={e => setMenu(e, 'feature')} active={page === 'feature'}>Feature</MenuItem>\n                <MenuItem onClick={e => setMenu(e, 'dimension')} active={page === 'dimension'}>Dimension</MenuItem>\n                <MenuItem onClick={e => setMenu(e, 'noise')} active={page === 'noise'}>Noise</MenuItem>\n            </ul></nav>\n        </NavBar>\n        <div className=\"content\">\n            {page === 'biome' && <Biome onSave={biome => handleSave('biome', biome)} data={custom.biomes[index]} />}\n            {page === 'carver' && <ConfiguredCarverForm onSave={carver => handleSave('carver', carver)} data={custom.carvers[index]} />}\n            {page === 'surface' && <SurfaceBuilder onSave={surface => handleSave('surface', surface)} data={custom.surfaces[index]} />}\n            {page === 'feature' && <RawConfiguredFeature onSave={feature => handleSave('feature', feature)} data={custom.features[index]} />}\n            {page === 'noise' && <NoiseSettings onSave={noise => handleSave('noise', noise)} data={custom.noises[index]} />}\n            {page === 'dimension' && <Dimension onSave={dimension => handleSave('dimension', dimension)} data={custom.dimensions[index]} />}\n            {page === 'dimension_type' && <DimensionTypeForm onSave={dimension => handleSave('dimension', dimension)} data={custom.dimension_types[index]} />}\n            {page === 'stats' && <><h2>Datapack {namespace}</h2><Stats custom={custom} namespace={namespace} setPage={setMenu} /></>}\n        </div>\n    </div>\n}\n\nfunction Stats({custom, namespace, setPage}) {\n\n    const handleGenerateClick = function(e) {\n        e.preventDefault();\n        buildZip(custom);\n    }\n\n    const mayGenerate = Object.values(custom).some(content => {\n        if (Array.isArray(content)) {\n            return content.length;\n        }\n        return false;\n    });\n\n    return <div className=\"mtm\">\n        <StatsTitle data={custom.biomes} namespace={namespace} onClick={(e, i) => setPage(e, 'biome', i)}>custom biome</StatsTitle>\n        <StatsTitle data={custom.dimensions} namespace={namespace} onClick={(e, i) => setPage(e, 'dimension', i)}>custom dimension</StatsTitle>\n        <StatsTitle data={custom.dimension_types} namespace={namespace} onClick={(e, i) => setPage(e, 'dimension_type', i)} invisible={true}>custom dimension type</StatsTitle>\n        <StatsTitle data={custom.features} namespace={namespace} onClick={(e, i) => setPage(e, 'feature', i)}>configured feature</StatsTitle>\n        <StatsTitle data={custom.surfaces} namespace={namespace} onClick={(e, i) => setPage(e, 'surface', i)}>configured surface builder</StatsTitle>\n        <StatsTitle data={custom.noises} namespace={namespace} onClick={(e, i) => setPage(e, 'noise', i)}>custom noise</StatsTitle>\n        <StatsTitle data={custom.carvers} namespace={namespace} onClick={(e, i) => setPage(e, 'carver', i)} invisible={true}>custom carver</StatsTitle>\n        {mayGenerate && <p><Button type=\"submit\" onClick={handleGenerateClick}>Generate</Button></p>}\n    </div>\n}\n\nfunction StatsTitle({ children, data, invisible = false, namespace, onClick }) {\n    if (invisible && data.length < 1) {\n        return <></>\n    }\n\n    return <>\n        <h5><strong>{data.length}</strong> {children}{data.length > 1 && 's'}</h5>\n        <ul>\n            {data.map((d, i) => {\n                const name = displayNamespacedKey(d.key, namespace);\n                return <li key={i}><a href=\"#edit\" onClick={(e) => onClick(e, i)}>{name}</a></li>\n            })}\n        </ul>\n    </>\n}","import React, { useState } from 'react';\nimport { Button } from '../ui/Button';\nimport { readZip } from '../utils/zip';\nimport { NavBar } from '../ui/Menu';\n\nexport function DatapackForm({onCreate}) {\n\n    const [error, setError] = useState(null);\n\n    const handleCreate = function(e) {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const namespace = data.get('namespace');\n        onCreate([namespace, undefined]);\n    };\n\n    const handleFile = function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const file = (e.dataTransfer || e.target).files[0];\n        readZip(file)\n            .then(onCreate)\n            .catch(error => {\n                console.error(error);\n                setError(error.message);\n            });\n    };\n    const handleDrag = function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n    };\n\n    window.scrollTo(0, 0);\n\n    return <div className=\"first-screen\" onDragStart={handleDrag} onDragEnter={handleDrag} onDragOver={handleDrag} onDrop={handleFile}>\n        <NavBar>\n            <h2>Dimension datapack generator</h2>\n        </NavBar>\n        <form className=\"content\" onSubmit={handleCreate}>\n            <div className=\"form-control\">\n                <label htmlFor=\"namespace\">Default namespace</label><br />\n                <input type=\"text\" name=\"namespace\" id=\"namespace\" required pattern=\"[a-z0-9._-]+\" autoCapitalize=\"none\" spellCheck=\"false\" autoComplete=\"off\" aria-describedby=\"namespaceHelp\" />\n                <p className=\"help2\"><small id=\"namespaceHelp\" className=\"form-text text-muted\">This differentiates the datapack from the vanilla functions. Namespaces and identifiers may only contain letters, numbers and <code>._-</code> characters. This namespace is not final, you can edit the vanilla dimensions in the following menus.</small></p>\n                <div className=\"actions\">\n                    <Button type=\"submit\">Create</Button>\n                    <input type=\"file\" name=\"load-existing-zip\" id=\"load-existing-zip\" accept=\".zip\" onChange={handleFile} tabIndex=\"0\" /><label htmlFor=\"load-existing-zip\" className=\"btn--info\">Use existing datapack</label>\n                </div>\n                <div className=\"mtm\">\n                    {error !== null && <div className=\"alert--danger\">{error}</div>}\n                    <p className=\"alert--warning\">\n                        This generator is currently built for 1.16.2-rc1. As it is a beta, you might expect a few bugs.\n                    </p>\n                </div>\n            </div>\n        </form>\n    </div>\n}\n","import React, { useState } from 'react';\nimport './styles/App.scss';\nimport { Datapack } from './components/Datapack';\nimport { DataContextProvider } from './context/DataContext';\nimport { DatapackForm } from './components/DatapackForm';\n\nfunction App() {\n    const [data, setData] = useState(null);\n\n    return <>\n        {data !== null ?\n            <DataContextProvider namespace={data[0]} initial={data[1]}>\n                <Datapack />\n            </DataContextProvider>\n            :\n            <DatapackForm onCreate={setData} />\n        }\n    </>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nwindow.addEventListener('load', () => {\n    document.body.classList.remove('preload');\n});\n\nReactDOM.render(\n    <App />\n,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}