{"version":3,"sources":["components/biome/BiomeDefaults.js","components/biome/BiomeStarts.jsx","ui/Button.jsx","utils/fetch.js","context/DataContext.jsx","components/biome/BiomeSpawners.jsx","hooks/ui.js","components/biome/Features.jsx","utils/color.js","components/biome/BiomeEffects.jsx","components/biome/Biome.jsx","ui/Menu.jsx","components/dimension/DimensionType.jsx","components/dimension/BiomeSource.jsx","components/dimension/DimensionDefaults.js","components/dimension/DimensionGenerator.jsx","utils/hash.js","components/dimension/Dimension.jsx","components/Datapack.jsx","components/DatapackForm.jsx","App.js","serviceWorker.js","index.js"],"names":["EFFECTS","mood_sound","sound","tick_delay","block_search_extent","offset","fog_color","water_color","water_fog_color","FEATURES","STARTS","SPAWNERS_AMBIENT","type","weight","minCount","maxCount","SPAWNERS_CREATURE","SPAWNERS_MONSTER","BiomeStarts","onChange","starts","useEffect","handleChange","useCallback","selectedOptions","map","option","value","options","useMemo","label","className","htmlFor","isMulti","id","defaultValue","filter","o","includes","Button","loading","cat","buttonProps","jsonFetch","url","a","fetch","headers","Accept","response","json","responseData","ok","DataContext","React","createContext","vanilla","biomes","entities","custom","dimensions","updateBiomes","biome","updateDimensions","dimension","namespace","DataContextProvider","children","useState","setBiomes","setEntities","customBiomes","setCustomBiomes","setCustomDimensions","then","entity","name","displayName","Provider","i","findIndex","key","push","spawnersReducer","state","action","payload","spawner","target","BiomeSpawners","data","ambient","creature","misc","monster","water_ambient","water_creature","useContext","spawners","setSpawners","group","groupSpawners","SpawnGroup","intial","status","setState","toggle","e","preventDefault","current","useToggle","visibility","text","useReducer","dispatch","handleAdd","original","handleRemove","values","forEach","def","SpawnDefinition","onDelete","onClick","length","memo","definition","setDefinition","field","parseInt","handleCountChange","selectedOption","find","required","min","prev","next","GenFeatures","features","levels","setLevels","handleLevelChange","priority","list","elements","level","GenFeaturesLevel","hexColorToInteger","color","replace","integerColorToHex","toString","padStart","BiomeEffects","effects","colors","setColors","handleColorChange","persist","Biome","onSave","handleStartsChange","handleEffectsChange","handleFeaturesChange","handleSpawnersChange","handleSubmit","formData","Object","fromEntries","FormData","spawn_costs","carvers","air","sky_color","keys","isNaN","parseFloat","onSubmit","pattern","placeholder","BiomeCategory","category","BiomePrecipitation","precipitation","SurfaceBuilder","surface_builder","step","scale","downfall","depth","temperature","MenuItem","active","href","DimensionType","FixedBiomeSource","source","context","SeedField","seed","s","FIXED_GENERATOR","biome_source","settings","DimensionGenerator","generator","setData","handleSeedChange","handleSettingsChange","handleBiomeSourceChange","Settings","setText","hash","Math","imul","charCodeAt","hashCode","Dimension","handleGeneratorChange","get","Datapack","page","menu","setMenu","handleStatsClick","handleAddBiomeClick","handleAddDimensionClick","onBiomeSave","onDimensionSave","editBiome","index","editDimension","Stats","handleBiomeClick","dim","handleDimensionClick","zip","JSZip","file","JSON","stringify","pack","pack_format","description","dims","folder","w","b","generateAsync","content","saveAs","DatapackForm","onCreate","aria-describedby","App","setNamespace","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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,uBACA,qBACA,sBACA,kBACA,gBACA,oBACA,mBACA,oBACA,qBACA,uBACA,sBACA,qBACA,oBACA,sBACA,qBACA,kBACA,oBACA,2BACA,cACA,qBACA,wBACA,mBACA,mBACA,qBACA,mBACA,eACA,sBACA,yBACA,yBACA,0BACA,4BACA,mBACA,wBACA,sBACA,wBACA,sBACA,uBACA,qBACA,uBACA,qBACA,uBACA,qBACA,YACA,gBACA,kBACA,oBACA,kBACA,oBACA,oBACA,iBACA,WACA,aACA,cACA,cACA,eACA,WACA,WACA,iBACA,WACA,eACA,cACA,YACA,eACA,cACA,mBACA,mBACA,gBACA,wBACA,eACA,uBACA,sBACA,oBACA,MACA,WACA,QACA,SACA,SACA,OACA,cACA,YACA,sBACA,mBACA,cACA,YACA,aACA,cACA,eACA,eACA,cACA,iBACA,gBACA,eACA,eACA,yBACA,kCACA,2BACA,+BACA,6BACA,wBACA,sBACA,mBACA,0BACA,gBACA,aACA,sBACA,iBACA,cACA,cACA,mBACA,oBACA,qBACA,cACA,eACA,oBACA,6BACFJ,KAAI,SAAAC,GAAM,MAAK,CAAEC,MAAO,aAAeD,EAAQI,MAAO,aAAeJ,QACxE,IAEH,OAAO,kBAAC,IAAD,CAAQO,SAAO,EAACL,QAASA,EAAST,SAAUG,EAAca,aAAcP,EAAQQ,QAAO,SAAAC,GAAC,OAAIqG,EAASpG,SAASD,EAAEV,YChOpH,SAASwH,EAAkBC,GAC9B,OAAOnB,SAASmB,EAAMC,QAAQ,KAAM,IAAK,IAGtC,SAASC,EAAkBF,GAC9B,MAAO,KAAe,SAARA,GAAkBG,SAAS,IAAIC,SAAS,EAAG,KCDtD,SAASC,EAAT,GAAsD,IAAD,IAA9BC,eAA8B,MAApB1J,EAAoB,EAAXmB,EAAW,EAAXA,SAAW,EAE5BiD,mBAASsF,GAFmB,mBAEjDC,EAFiD,KAEzCC,EAFyC,KAIlDC,EAAoB,SAASlD,GAC/BA,EAAEmD,UACFF,GAAU,SAAAD,GAAM,kCACTA,GADS,kBAEXhD,EAAEnB,OAAOtD,GAAKiH,EAAkBxC,EAAEnB,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","file":"static/js/main.393c8740.chunk.js","sourcesContent":["export const EFFECTS = {\n    mood_sound: {\n        sound: \"minecraft:ambient.cave\",\n        tick_delay: 6000,\n        block_search_extent: 8,\n        offset: 2.0\n    },\n    fog_color: 12638463,\n    water_color: 4159204,\n    water_fog_color: 329011\n}\n\nexport const FEATURES = [\n    [],\n    [\n      \"minecraft:lake_water\",\n      \"minecraft:lake_lava\"\n    ],\n    [],\n    [\n      \"minecraft:monster_room\"\n    ],\n    [],\n    [],\n    [\n      \"minecraft:ore_dirt\",\n      \"minecraft:ore_gravel\",\n      \"minecraft:ore_granite\",\n      \"minecraft:ore_diorite\",\n      \"minecraft:ore_andesite\",\n      \"minecraft:ore_coal\",\n      \"minecraft:ore_iron\",\n      \"minecraft:ore_gold\",\n      \"minecraft:ore_redstone\",\n      \"minecraft:ore_diamond\",\n      \"minecraft:ore_lapis\",\n      \"minecraft:disk_sand\",\n      \"minecraft:disk_clay\",\n      \"minecraft:disk_gravel\"\n    ],\n    [],\n    [\n      \"minecraft:patch_tall_grass_2\",\n      \"minecraft:plain_vegetation\",\n      \"minecraft:flower_plain_decorated\",\n      \"minecraft:patch_grass_plain\",\n      \"minecraft:brown_mushroom_normal\",\n      \"minecraft:red_mushroom_normal\",\n      \"minecraft:patch_sugar_cane\",\n      \"minecraft:patch_pumpkin\",\n      \"minecraft:spring_water\",\n      \"minecraft:spring_lava\"\n    ],\n    [\n      \"minecraft:freeze_top_layer\"\n    ]\n]\n\nexport const STARTS = [\n    \"minecraft:village_plains\",\n    \"minecraft:pillager_outpost\",\n    \"minecraft:mineshaft\",\n    \"minecraft:stronghold\",\n    \"minecraft:ruined_portal\"\n]\n\nexport const SPAWNERS_AMBIENT = [\n    {\n        type: \"minecraft:bat\",\n        weight: 10,\n        minCount: 8,\n        maxCount: 8\n    }\n];\n\nexport const SPAWNERS_CREATURE = [\n    {\n        type: \"minecraft:sheep\",\n        weight: 12,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:pig\",\n        weight: 10,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:chicken\",\n        weight: 10,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:cow\",\n        weight: 8,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:horse\",\n        weight: 5,\n        minCount: 2,\n        maxCount: 6\n    },\n    {\n        type: \"minecraft:donkey\",\n        weight: 1,\n        minCount: 1,\n        maxCount: 3\n    }\n];\n\nexport const SPAWNERS_MONSTER = [\n    {\n        type: \"minecraft:spider\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:zombie\",\n        weight: 95,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:zombie_villager\",\n        weight: 5,\n        minCount: 1,\n        maxCount: 1\n    },\n    {\n        type: \"minecraft:skeleton\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:creeper\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:slime\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:enderman\",\n        weight: 10,\n        minCount: 1,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:witch\",\n        weight: 5,\n        minCount: 1,\n        maxCount: 1\n    },\n];","import React, { useCallback, useMemo, useEffect } from 'react';\nimport Select from 'react-select';\nimport { STARTS } from './BiomeDefaults';\n\nexport default function BiomeStarts({onChange, starts = STARTS}) {\n    useEffect(function () {\n        onChange(starts);\n    }, [onChange, starts]);\n\n    const handleChange = useCallback(function(selectedOptions) {\n        onChange(selectedOptions === null ? [] : selectedOptions.map(option => option.value));\n    }, [onChange]);\n\n    const options = useMemo(function() {\n        return [\n            \"pillager_outpost\",\n            \"mineshaft\",\n            \"mineshaft_mesa\",\n            \"mansion\",\n            \"jungle_pyramid\",\n            \"desert_pyramid\",\n            \"igloo\",\n            \"shipwreck\",\n            \"shipwreck_beached\",\n            \"swamp_hut\",\n            \"stronghold\",\n            \"monument\",\n            \"ocean_ruin_cold\",\n            \"ocean_ruin_warm\",\n            \"fortress\",\n            \"nether_fossil\",\n            \"end_city\",\n            \"buried_treasure\",\n            \"bastion_remnant\",\n            \"village_plains\",\n            \"village_desert\",\n            \"village_savanna\",\n            \"village_snovy\",\n            \"village_taiga\",\n            \"ruined_portal\",\n            \"ruined_portal_desert\",\n            \"ruined_portal_jungle\",\n            \"ruined_portal_swamp\",\n            \"ruined_portal_mountain\",\n            \"ruined_portal_ocean\",\n            \"ruined_portal_nether\"\n        ].map(option => ({ value: 'minecraft:' + option, label: 'minecraft:' + option }));\n    }, []);\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"starts\">Structures</label>\n        <Select isMulti id=\"starts\" options={options} onChange={handleChange} defaultValue={options.filter(o => starts.includes(o.value))} />\n    </div>;\n}","import React from 'react';\n\nexport function Button ({loading, cat = 'primary', ...buttonProps}) {\n    return <button className={`btn btn--${cat}`} {...buttonProps}></button>\n}\n","/**\n * @param {string} url\n * @param {object} options\n */\nexport async function jsonFetch(url, options) {\n    const response = await fetch(url, {\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        ...options\n    });\n\n    const responseData = await response.json();\n    if (response.ok) {\n        return responseData;\n    }\n    throw responseData;\n}","import React, { useState, useEffect } from 'react';\nimport { jsonFetch } from '../utils/fetch';\n\nexport const DataContext = React.createContext({\n    vanilla: {\n        biomes: [],\n        entities: []\n    },\n    custom: {\n        biomes: [],\n        dimensions: [],\n        updateBiomes: (biome) => {},\n        updateDimensions: (dimension) => {}\n    },\n    namespace: ''\n});\n\nexport function DataContextProvider({children, namespace}) {\n    const [biomes, setBiomes] = useState([]);\n    const [entities, setEntities] = useState([]);\n\n    const [customBiomes, setCustomBiomes] = useState([]);\n    const [dimensions, setCustomDimensions] = useState([]);\n\n    const updateBiomes = function(biome) {\n        setCustomBiomes(biomes => {\n            const i = biomes.findIndex(({key}) => key === biome.key);\n            if (i < 0) {\n                biomes.push(biome);\n            } else {\n                biomes[i] = biome;\n            }\n            return biomes;\n        });\n    };\n\n    const updateDimensions = function(dimension) {\n        setCustomDimensions(dimensions => {\n            const i = dimensions.findIndex(({key}) => key === dimension.key);\n            if (i < 0) {\n                dimensions.push(dimension);\n            } else {\n                dimensions[i] = dimension;\n            }\n            return dimensions;\n        });\n    };\n\n    useEffect(() => {\n        (async function () {\n            jsonFetch('https://unpkg.com/minecraft-data@2.62.1/minecraft-data/data/pc/1.16.1/biomes.json')\n                .then(biomes => setBiomes(biomes));\n            jsonFetch('https://unpkg.com/minecraft-data@2.62.1/minecraft-data/data/pc/1.16.1/entities.json')\n                .then(entities => setEntities(entities.map(entity => ({ value: 'minecraft:' + entity.name, label: entity.displayName }))));\n        })();\n    }, []);\n\n    return <DataContext.Provider value={{\n        vanilla: { biomes, entities },\n        custom: { biomes: customBiomes, dimensions, updateBiomes, updateDimensions },\n        namespace\n    }}>{children}</DataContext.Provider>\n}","import React, { useContext, useReducer, useEffect, useMemo, useState, useCallback } from 'react';\nimport Select from 'react-select';\nimport { useToggle } from '../../hooks/ui';\nimport { Button } from '../../ui/Button';\nimport { DataContext } from '../../context/DataContext';\nimport { SPAWNERS_AMBIENT, SPAWNERS_CREATURE, SPAWNERS_MONSTER } from './BiomeDefaults';\n\nconst ADD_SPAWNER = 'ADD_SPAWNER';\nconst UPDATE_SPAWNER = 'UPDATE_SPAWNER';\nconst REMOVE_SPAWNER = 'REMOVE_SPAWNER';\n\nfunction spawnersReducer(state, action) {\n    switch (action.type) {\n        case ADD_SPAWNER:\n            return [...state, action.payload];\n        case UPDATE_SPAWNER:\n          return state.map(spawner => spawner === action.target ? action.payload : spawner);\n        case REMOVE_SPAWNER:\n          return state.filter(spawner => spawner !== action.payload);\n        default:\n          return state;\n    }\n}\n\nexport function BiomeSpawners({onChange, data = { ambient: SPAWNERS_AMBIENT, creature: SPAWNERS_CREATURE, misc: [], monster: SPAWNERS_MONSTER, water_ambient: [], water_creature: [] }}) {\n\n    const entities = useContext(DataContext).vanilla.entities;\n    const [spawners, setSpawners] = useState(data);\n\n    const handleChange = useCallback(function(group, groupSpawners) {\n        setSpawners(function(spawners) {\n            const state = {\n                ...spawners,\n                [group]: groupSpawners\n            };\n            onChange(state);\n            return state;\n        });\n    }, [onChange]);\n\n    return <div>\n        <SpawnGroup group=\"ambient\" data={spawners.ambient} onChange={handleChange} entities={entities}>Ambient</SpawnGroup>\n        <SpawnGroup group=\"creature\" data={spawners.creature} onChange={handleChange} entities={entities}>Creature</SpawnGroup>\n        <SpawnGroup group=\"misc\" data={spawners.misc} onChange={handleChange} entities={entities}>Miscellaneous</SpawnGroup>\n        <SpawnGroup group=\"monster\" data={spawners.monster} onChange={handleChange} entities={entities}>Monster</SpawnGroup>\n        <SpawnGroup group=\"water_ambient\" data={spawners.water_ambient} onChange={handleChange} entities={entities}>Water ambient</SpawnGroup>\n        <SpawnGroup group=\"water_creature\" data={spawners.water_creature} onChange={handleChange} entities={entities}>Water creature</SpawnGroup>\n    </div>;\n}\n\nfunction SpawnGroup({children, entities, data = [], group, onChange}) {\n    const [visibility, toggle] = useToggle();\n    const text = visibility ? 'Less...' : 'More...';\n\n    const [spawners, dispatch] = useReducer(spawnersReducer, data);\n\n    const handleAdd = useCallback(function(e) {\n        e.preventDefault();\n        dispatch({ type: ADD_SPAWNER, payload: {\n            type: 'minecraft:cow',\n            weight: 1,\n            minCount: 1,\n            maxCount: 1,\n        }});\n        if (!visibility) {\n            toggle();\n        }\n    }, [toggle, visibility]);\n\n    const handleChange = useCallback(function(original, spawner) {\n        dispatch({ type: UPDATE_SPAWNER, target: original, payload: spawner });\n    }, []);\n\n    const handleRemove = useCallback(function(spawner) {\n        dispatch({ type: REMOVE_SPAWNER, payload: spawner });\n    }, []);\n\n    useEffect(function() {\n        onChange(group, spawners);\n    }, [group, onChange, spawners]);\n\n    const values = [];\n    if (visibility) {\n        spawners.forEach((def, i) => {\n            const key = `${i}-${def.type}-${def.weight}-${def.minCount}-${def.maxCount}`;\n            values.push(<SpawnDefinition data={def} key={key} onChange={handleChange} onDelete={handleRemove} entities={entities} />);\n        });\n        return <div>\n            <div className=\"toggle-label\">\n                {children} \n                <div className=\"btn-group\">\n                    <Button onClick={handleAdd}>Add</Button>\n                    {spawners.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{text}</Button>} \n                </div>\n            </div>\n            {values}\n        </div>;\n    }\n    \n    return <div className=\"toggle-label\">\n        {children}\n        <div className=\"btn-group\">\n            {spawners.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{text}</Button>}\n            {(spawners.length < 1) && <Button onClick={handleAdd}>Add</Button>}\n        </div>\n    </div>;\n}\n\nconst SpawnDefinition = React.memo(function({entities, onChange, onDelete, data}) {\n\n    const [definition, setDefinition] = useState(data);\n\n    const handleChange = function(e) {\n        const field = typeof e.target === 'undefined' ? 'type' : e.target.id;\n        const value = typeof e.target === 'undefined' ? e.value : parseInt(e.target.value);\n        setDefinition(definition => ({\n            ...definition,\n            [field]: value\n        }));\n        onChange(data, {...data, [field]: value});\n    };\n\n    const handleCountChange = function(e) {\n        const value = parseInt(e.target.value);\n        if ((e.target.id === 'minCount' && value <= definition.maxCount)\n            || (e.target.id === 'maxCount' && value >= definition.minCount)) {\n            setDefinition(definition => ({\n                ...definition,\n                [e.target.id]: value\n            }));\n            onChange(data, {...data, [e.target.id]: value});\n        } \n    };\n\n    const handleDelete = function(e) {\n        e.preventDefault();\n        onDelete(data);\n    };\n\n    const selectedOption = useMemo(function() {\n        return entities.find(o => o.value === definition.type);\n    }, [definition.type, entities]);\n\n    return <div>\n        <div className=\"form-group\">\n            <label>Mob type</label> : <Select options={entities} value={selectedOption} onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <div className=\"form-inline\">\n                <label htmlFor=\"weight\">Weight</label> : <input type=\"number\" id=\"weight\" required value={definition.weight} onChange={handleChange} />\n            </div>\n            <div className=\"form-inline\">\n                <label htmlFor=\"minCount\">Min count</label> : <input type=\"number\" id=\"minCount\" min=\"0\" required value={definition.minCount} onChange={handleCountChange} />\n            </div>\n            <div className=\"form-inline\">\n                <label htmlFor=\"maxCount\">Max count</label> : <input type=\"number\" id=\"maxCount\" min=\"0\" required value={definition.maxCount} onChange={handleCountChange} />\n            </div>\n            <div className=\"form-inline\"><Button cat=\"danger\" onClick={handleDelete}>Delete</Button></div>\n        </div>\n        <hr /> \n    </div>\n}, function(prev, next) {\n    return prev.entities.length === next.entities.length && prev.data === next.data;\n});","import { useState } from \"react\";\n\nexport function useToggle(intial = false) {\n    const [status, setState] = useState(intial);\n    const toggle = function (e = false) {\n        if (e !== false) {\n            e.preventDefault();\n        }\n        setState(current => !current);\n    }\n    return [status, toggle];\n}","import React, { useCallback, useMemo, useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport { FEATURES } from './BiomeDefaults';\n\nexport default function GenFeatures({ onChange, features = FEATURES }) {\n\n    const [levels, setLevels] = useState(features);\n\n    const handleLevelChange = useCallback(function(priority, list) {\n        setLevels(levels => {\n            levels[priority] = list;\n            return levels;\n        })\n        onChange(levels);\n    }, [levels, onChange]);\n\n    useEffect(function() {\n        onChange(levels);\n    }, [levels, onChange]);\n\n    const elements = [];\n    levels.forEach((level, i) => {\n        elements.push(<li key={i}><GenFeaturesLevel value={level} onChange={handleLevelChange} priority={i} /></li>);\n    });\n    return <div className=\"form-group\">\n        <label>Features</label>\n        <p className=\"help\"><small className=\"text-muted\">Each generation feature is associated with a priority. The higher the priority, the later the feature will be applied.</small></p>\n        <ol>{elements}</ol>\n    </div>;\n}\n\nfunction GenFeaturesLevel({ onChange, priority, value }) {\n    const features = value;\n\n    const handleChange = useCallback(function(selectedOptions) {\n        onChange(priority, selectedOptions === null ? [] : selectedOptions.map(option => option.value));\n    }, [onChange, priority]);\n\n    const options = useMemo(function () {\n        return [\n            \"nope\",\n            \"end_spike\",\n            \"end_gateway\",\n            \"end_gateway_delayed\",\n            \"chorus_plant\",\n            \"end_island\",\n            \"end_island_decorated\",\n            \"delta\",\n            \"small_basalt_columns\",\n            \"large_basalt_columns\",\n            \"basalt_blobs\",\n            \"blackstone_blobs\",\n            \"glowstone_extra\",\n            \"glowstone\",\n            \"crimson_forest_vegetation\",\n            \"warped_forest_vegetation\",\n            \"nether_sprouts\",\n            \"twisting_vines\",\n            \"weeping_vines\",\n            \"basalt_pillar\",\n            \"seagrass_cold\",\n            \"seagrass_deep_cold\",\n            \"seagrass_normal\",\n            \"seagrass_river\",\n            \"seagrass_deep\",\n            \"seagrass_swamp\",\n            \"seagrass_warm\",\n            \"seagrass_deep_warm\",\n            \"sea_pickle\",\n            \"ice_spike\",\n            \"ice_patch\",\n            \"forest_rock\",\n            \"seagrass_simple\",\n            \"iceberg_packed\",\n            \"iceberg_blue\",\n            \"kelp_cold\",\n            \"kelp_warm\",\n            \"blue_ice\",\n            \"bamboo_light\",\n            \"bamboo\",\n            \"vines\",\n            \"lake_water\",\n            \"lake_lava\",\n            \"disk_clay\",\n            \"disk_gravel\",\n            \"disk_sand\",\n            \"freeze_top_layer\",\n            \"bonus_chest\",\n            \"void_start_platform\",\n            \"monster_room\",\n            \"desert_well\",\n            \"fossil\",\n            \"spring_lava_double\",\n            \"spring_lava\",\n            \"spring_delta\",\n            \"spring_closed\",\n            \"spring_closed_double\",\n            \"spring_open\",\n            \"spring_water\",\n            \"pile_hay\",\n            \"pile_melon\",\n            \"pile_snow\",\n            \"pile_ice\",\n            \"pile_pumpkin\",\n            \"patch_fire\",\n            \"patch_soul_fire\",\n            \"patch_brown_mushroom\",\n            \"patch_red_mushroom\",\n            \"patch_crimson_roots\",\n            \"patch_sunflower\",\n            \"patch_pumpkin\",\n            \"patch_taiga_grass\",\n            \"patch_berry_bush\",\n            \"patch_grass_plain\",\n            \"patch_grass_forest\",\n            \"patch_grass_badlands\",\n            \"patch_grass_savanna\",\n            \"patch_grass_normal\",\n            \"patch_grass_taiga\",\n            \"patch_grass_taiga_2\",\n            \"patch_grass_jungle\",\n            \"patch_dead_bush\",\n            \"patch_dead_bush_2\",\n            \"patch_dead_bush_badlands\",\n            \"patch_melon\",\n            \"patch_berry_sparse\",\n            \"patch_berry_decorated\",\n            \"patch_waterlilly\",\n            \"patch_tall_grass\",\n            \"patch_tall_grass_2\",\n            \"patch_large_fern\",\n            \"patch_cactus\",\n            \"patch_cactus_desert\",\n            \"patch_cactus_decorated\",\n            \"patch_sugar_cane_swamp\",\n            \"patch_sugar_cane_desert\",\n            \"patch_sugar_cane_badlands\",\n            \"patch_sugar_cane\",\n            \"brown_mushroom_nether\",\n            \"red_mushroom_nether\",\n            \"brown_mushroom_normal\",\n            \"red_mushroom_normal\",\n            \"brown_mushroom_taiga\",\n            \"red_mushroom_taiga\",\n            \"brown_mushroom_giant\",\n            \"red_mushroom_giant\",\n            \"brown_mushroom_swamp\",\n            \"red_mushroom_swamp\",\n            \"ore_magma\",\n            \"ore_soul_sand\",\n            \"ore_gold_deltas\",\n            \"ore_quartz_deltas\",\n            \"ore_gold_nether\",\n            \"ore_quartz_nether\",\n            \"ore_gravel_nether\",\n            \"ore_blackstone\",\n            \"ore_dirt\",\n            \"ore_gravel\",\n            \"ore_granite\",\n            \"ore_diorite\",\n            \"ore_andesite\",\n            \"ore_coal\",\n            \"ore_iron\",\n            \"ore_gold_extra\",\n            \"ore_gold\",\n            \"ore_redstone\",\n            \"ore_diamond\",\n            \"ore_lapis\",\n            \"ore_infested\",\n            \"ore_emerald\",\n            \"ore_debris_large\",\n            \"ore_debris_small\",\n            \"crimson_fungi\",\n            \"crimson_fungi_planted\",\n            \"warped_fungi\",\n            \"warped_fungi_planted\",\n            \"huge_brown_mushroom\",\n            \"huge_red_mushroom\",\n            \"oak\",\n            \"dark_oak\",\n            \"birch\",\n            \"acacia\",\n            \"spruce\",\n            \"pine\",\n            \"jungle_tree\",\n            \"fancy_oak\",\n            \"jungle_tree_no_vine\",\n            \"mega_jungle_tree\",\n            \"mega_spruce\",\n            \"mega_pine\",\n            \"swamp_tree\",\n            \"jungle_bush\",\n            \"oak_badlands\",\n            \"spruce_snovy\",\n            \"flower_warm\",\n            \"flower_default\",\n            \"flower_forest\",\n            \"flower_swamp\",\n            \"flower_plain\",\n            \"flower_plain_decorated\",\n            \"forest_flower_vegetation_common\",\n            \"forest_flower_vegetation\",\n            \"dark_forest_vegetation_brown\",\n            \"dark_forest_vegetation_red\",\n            \"warm_ocean_vegetation\",\n            \"forest_flower_trees\",\n            \"taiga_vegetation\",\n            \"trees_shattered_savanna\",\n            \"trees_savanna\",\n            \"birch_tall\",\n            \"trees_mountain_edge\",\n            \"trees_mountain\",\n            \"trees_water\",\n            \"birch_other\",\n            \"plain_vegetation\",\n            \"trees_jungle_edge\",\n            \"trees_giant_spruce\",\n            \"trees_giant\",\n            \"trees_jungle\",\n            \"bamboo_vegetation\",\n            \"mushroom_field_vegetation\"\n        ].map(option => ({ value: 'minecraft:' + option, label: 'minecraft:' + option }));\n    }, []);\n\n    return <Select isMulti options={options} onChange={handleChange} defaultValue={options.filter(o => features.includes(o.value))} />;\n}","export function hexColorToInteger(color) {\n    return parseInt(color.replace(/^#/, ''), 16);\n}\n\nexport function integerColorToHex(color) {\n    return '#' + (color & 0xFFFFFF).toString(16).padStart(6, '0');\n}","import React, { useState, useEffect } from 'react';\nimport { integerColorToHex, hexColorToInteger } from '../../utils/color';\nimport { EFFECTS } from './BiomeDefaults';\n\nexport function BiomeEffects({effects = EFFECTS, onChange}) {\n\n    const [colors, setColors] = useState(effects);\n\n    const handleColorChange = function(e) {\n        e.persist();\n        setColors(colors => ({\n            ...colors,\n            [e.target.id]: hexColorToInteger(e.target.value)\n        }));\n        onChange(colors);\n    };\n\n    useEffect(function () {\n        onChange(colors);\n    }, [colors, onChange]);\n\n    return <>\n        <div className=\"form-inline\">\n            <label htmlFor=\"fog_color\">Fog color</label> : <input type=\"color\" id=\"fog_color\" value={integerColorToHex(colors.fog_color)} onChange={handleColorChange} />\n        </div>\n        <div className=\"form-inline\">\n            <label htmlFor=\"water_color\">Water color</label> : <input type=\"color\" id=\"water_color\" value={integerColorToHex(colors.water_color)} onChange={handleColorChange} />\n        </div>\n        <div className=\"form-inline\">\n            <label htmlFor=\"water_fog_color\">Water fog color</label> : <input type=\"color\" id=\"water_fog_color\" value={integerColorToHex(colors.water_fog_color)} onChange={handleColorChange} />\n        </div>\n    </>\n}","import React, { useCallback, useState } from 'react';\nimport BiomeStarts from './BiomeStarts';\nimport Select from 'react-select';\nimport { Button } from '../../ui/Button';\nimport { BiomeSpawners } from './BiomeSpawners';\nimport { STARTS } from './BiomeDefaults';\nimport GenFeatures from './Features';\nimport { hexColorToInteger, integerColorToHex } from '../../utils/color';\nimport { BiomeEffects } from './BiomeEffects';\n\nexport function Biome({data = {}, onSave}) {\n\n    const [state, setState] = useState(data || { starts: STARTS, spawners: []});\n\n    const handleStartsChange = useCallback(function(starts) {\n        setState(state => {\n            state.starts = starts;\n            return state;\n        });\n    }, []);\n\n    const handleEffectsChange = useCallback(function(effects) {\n        setState(state => {\n            state.effects = effects;\n            return state;\n        });\n    }, []);\n\n    const handleFeaturesChange = useCallback(function(features) {\n        setState(state => {\n            state.features = features;\n            return state;\n        });\n    }, []);\n\n    const handleSpawnersChange = useCallback(function(spawners) {\n        setState(state => {\n            state.spawners = spawners;\n            return state;\n        });\n    }, []);\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        const formData = Object.fromEntries(new FormData(e.target));\n        const data = { ...formData, ...state };\n        data.spawn_costs = {};\n        data.carvers =  {\n            air: [\n              \"minecraft:cave\",\n              \"minecraft:canyon\"\n            ]\n        }; // @todo\n        data.sky_color = hexColorToInteger(formData.sky_color);\n        Object.keys(formData).forEach(function(key) {\n            if (!isNaN(formData[key])) {\n                data[key] = parseFloat(formData[key]);\n            }\n        });\n        onSave(data);\n    }, [onSave, state]);\n\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit biome</h3>\n        <div className=\"form-group\">\n            <label htmlFor=\"key\">Identifier</label> : <input type=\"text\" name=\"key\" id=\"key\" required pattern=\"[a-z0-9._-]+\" placeholder=\"Ex. : my-biome\" defaultValue={data.key} />\n        </div>\n\n        <fieldset>\n            <legend>Colors</legend>\n            <div className=\"form-row\">\n                <div className=\"form-inline\"><label htmlFor=\"sky_color\">Sky color</label> : <input type=\"color\" name=\"sky_color\" required defaultValue={integerColorToHex(data.sky_color || 7907327)} /></div>\n                <BiomeEffects effects={state.effects} onChange={handleEffectsChange} />\n            </div>\n        </fieldset>\n\n        <fieldset>\n            <BiomeCategory category={data.category} />\n            <BiomePrecipitation value={data.precipitation} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Generation</legend>\n            <SurfaceBuilder value={data.surface_builder} />\n            <BiomeStarts onChange={handleStartsChange} starts={state.starts} />\n            <GenFeatures features={state.features} onChange={handleFeaturesChange} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Creatures</legend>\n            <BiomeSpawners data={state.spawners} onChange={handleSpawnersChange} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Settings</legend>\n            <div className=\"form-group form-row\">\n                <div><label htmlFor=\"scale\">Scale</label> : <input type=\"number\" name=\"scale\" step=\"0.05\" required defaultValue={data.scale || 0.05} /></div>\n                <div><label htmlFor=\"downfall\">Downfall</label> : <input type=\"number\" name=\"downfall\" step=\"0.1\" required defaultValue={data.downfall || 0.4} /></div>\n                <div><label htmlFor=\"depth\">Depth</label> : <input type=\"number\" name=\"depth\" step=\"0.01\" required defaultValue={data.depth || 0.12} /></div>\n                <div><label htmlFor=\"temperature\">Temperature</label> : <input type=\"number\" name=\"temperature\" step=\"0.1\" required defaultValue={data.temperature || 0.8} /></div>\n                <p className=\"mts\"><small className=\"text-muted\">The <em>scale</em> parameter defines terrain amplitude, <em>downfall</em> controls grass and foliage color, <em>depth</em> is the difference from sea level, <em>temperature</em> controls some gameplay features like whether snow golems take damage. The default values are those of the plains biome.</small></p>\n            </div>\n        </fieldset>\n        <div className=\"form-group mlm mbm\">\n            <Button type=\"submit\">Save</Button>\n        </div>\n    </form>;\n}\n\nfunction BiomeCategory({category = 'plains'}) {\n\n    const options = [\n        { value: 'beach', label: 'Beach' },\n        { value: 'desert', label: 'Desert' },\n        { value: 'extreme_hills', label: 'Extreme hills' },\n        { value: 'icy', label: 'Icy' },\n        { value: 'jungle', label: 'Jungle' },\n        { value: 'mesa', label: 'Mesa' },\n        { value: 'nether', label: 'Nether' },\n        { value: 'none', label: 'None' },\n        { value: 'ocean', label: 'Ocean' },\n        { value: 'plains', label: 'Plains' },\n        { value: 'river', label: 'River' },\n        { value: 'savanna', label: 'Savanna' },\n        { value: 'swamp', label: 'Swamp' },\n        { value: 'taiga', label: 'Taiga' },\n        { value: 'the_end', label: 'The end' },\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"category\">Category</label>\n        <Select options={options} defaultValue={options.find(o => o.value === category)} name=\"category\" />\n    </div>;\n}\n\nfunction BiomePrecipitation({value = 'rain'}) {\n\n    const options = [\n        { value: 'none', label: 'None' },\n        { value: 'rain', label: 'Rain' },\n        { value: 'snow', label: 'Snow' }\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"precipitation\">Precipitation</label>\n        <Select options={options} defaultValue={options.find(o => o.value === value)} name=\"precipitation\" />\n    </div>;\n}\n\nfunction SurfaceBuilder({value = 'minecraft:grass'}) {\n\n    const options = [\n        { value: 'badlands', label: 'Badlands' },\n        { value: 'basalt_deltas', label: 'Basalt Deltas' },\n        { value: 'crimson_forest', label: 'Crimson forest' },\n        { value: 'deset', label: 'Desert' },\n        { value: 'end', label: 'End' },\n        { value: 'eroded_badlands', label: 'Eroded Badlands' },\n        { value: 'frozen_ocean', label: 'Frozen ocean' },\n        { value: 'full_sand', label: 'Full sand' },\n        { value: 'giant_tree_taiga', label: 'Giant tree taiga' },\n        { value: 'grass', label: 'Grass' },\n        { value: 'gravelly_mountain', label: 'Gravelly mountain' },\n        { value: 'ice_spikes', label: 'Ice spikes' },\n        { value: 'mountain', label: 'Mountain' },\n        { value: 'mycelium', label: 'Mycelium' },\n        { value: 'nether', label: 'Nether' },\n        { value: 'nope', label: 'Nope' },\n        { value: 'ocean_sand', label: 'Ocean sand' },\n        { value: 'shattered_savanna', label: 'Shattered savanna' },\n        { value: 'soul_sand_valley', label: 'Soul sand valley' },\n        { value: 'stone', label: 'Stone' },\n        { value: 'swamp', label: 'Swamp' },\n        { value: 'warped_forest', label: 'Warped forest' },\n        { value: 'wooded_badlands', label: 'Wooded badlands' },\n    ].map(option => {\n        option.value = 'minecraft:' + option.value;\n        return option;\n    });\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"surface_builder\">Surface builder</label>\n        <Select options={options} defaultValue={options.find(o => o.value === value)} name=\"surface_builder\" />\n    </div>;\n}","import React from 'react';\n\nexport function MenuItem({active, children, onClick}) {\n    const className = 'tabs-menu-link' + (active ? ' is-active' : '');\n    return <a href=\"#_\" className={className} onClick={onClick}>{children}</a>\n}","import React from 'react';\nimport Select from 'react-select';\n\nexport function DimensionType({type = 'minecraft:overworld'}) {\n    const options = [\n        { value: 'minecraft:overworld', label: 'Overworld' },\n        { value: 'minecraft:overworld_cave', label: 'Overworld caves' },\n        { value: 'minecraft:the_nether', label: 'The Nether' },\n        { value: 'minecraft:the_end', label: 'The End' },\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"dimension-type\">Dimension type</label>\n        <Select name=\"dimension-type\" options={options} defaultValue={options.find(o => o.value === type)} />\n    </div>;\n}","import React, { useContext, useState } from 'react';\nimport { DataContext } from '../../context/DataContext';\nimport Select from 'react-select';\nimport { SeedField } from './DimensionGenerator';\n\nexport function FixedBiomeSource({source, onChange}) {\n    const context = useContext(DataContext);\n    const options = context.custom.biomes.map(biome => ({ value: context.namespace + ':' + biome.key, label: '(Custom) ' + biome.key }));\n\n    const [state, setState] = useState(source);\n\n    context.vanilla.biomes.forEach(biome => {\n        options.push({ value: 'minecraft:' + biome.name, label: biome.displayName });\n    });\n\n    const handleSeedChange = function(seed) {\n        setState(s => {\n            s.seed = seed;\n            return s;\n        });\n        onChange(state);\n    } \n\n    const handleBiomeChange = function(biome) {\n        setState(s => {\n            s.biome = biome.value;\n            return s;\n        });\n        onChange(state);\n    }\n    \n    return <div className=\"mtm\">\n        <h5>Fixed biome source</h5>\n        <p className=\"help\"><small className=\"text-muted\">Note that there are other types of biome sources and generators, but this generator is still a WIP.</small></p>\n        <SeedField value={state.seed} onChange={handleSeedChange} />\n        <div className=\"form-group\">\n            <label htmlFor=\"fixed-biome\">Biome</label><Select options={options} defaultValue={options.find(o => o.value === state.biome)} onChange={handleBiomeChange} />\n        </div>\n    </div>;\n}","export const FIXED_GENERATOR = {\n    type: 'minecraft:noise',\n    seed: 286956243,\n    biome_source: {\n        type: 'minecraft:fixed',\n        seed: 286956243,\n        biome: 'minecraft:plains',\n    },\n    settings: 'minecraft:overworld'\n}","import React, { useState, useCallback, useEffect } from 'react';\nimport { FixedBiomeSource } from './BiomeSource';\nimport { FIXED_GENERATOR } from './DimensionDefaults';\nimport { hashCode } from './../../utils/hash';\nimport Select from 'react-select';\n\nexport function DimensionGenerator({generator = FIXED_GENERATOR, onChange}) {\n\n    const [data, setData] = useState(generator);\n\n    const handleSeedChange = useCallback(function(seed) {\n        setData(data => {\n            data.seed = seed;\n            return data;\n        });\n        onChange(data);\n    }, [data, onChange]);\n\n    const handleSettingsChange = useCallback(function(settings) {\n        setData(data => {\n            data.settings = settings;\n            return data;\n        });\n        onChange(data);\n    }, [data, onChange]);\n\n    const handleBiomeSourceChange = useCallback(function(biome_source) {\n        setData(data => {\n            data.biome_source = biome_source;\n            return data;\n        });\n        onChange(data);\n    }, [data, onChange]);\n\n    useEffect(function () {\n        onChange(data);\n    }, [data, onChange]);\n\n    return <fieldset>\n        <legend>Noise dimension generator</legend>\n        <div className=\"form-group\">\n            <SeedField value={data.seed} onChange={handleSeedChange} />\n            <Settings settings={data.settings} onChange={handleSettingsChange} />\n            <FixedBiomeSource source={data.biome_source} onChange={handleBiomeSourceChange} />\n        </div>\n    </fieldset>;\n}\n\nexport const SeedField = React.memo(function({onChange, value = '286956243'}) {\n    const [text, setText] = useState(value);\n\n    const handleChange = function(e) {\n        const value = e.target.value;\n        setText(value);\n        onChange(isNaN(value) ? hashCode(value) :  value);\n    };\n\n    return <div className=\"form-group\">\n        <label>Seed</label> : <input type=\"text\" value={text} onChange={handleChange} />\n    </div>\n});\n\nconst Settings = React.memo(function({onChange, settings = 'minecraft:overworld'}) {\n    const handleChange = useCallback(function(option) {\n        onChange(option.value);\n    }, [onChange]);\n\n    const options = [\n        { value: 'minecraft:overworld', label: 'Overworld' },\n        { value: 'minecraft:nether', label: 'Nether' },\n        { value: 'minecraft:end', label: 'End' },\n        { value: 'minecraft:amplified', label: 'Amplified' },\n        { value: 'minecraft:caves', label: 'Caves' },\n        { value: 'minecraft:floating_islands', label: 'Floating islands' }\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"settings\">Settings</label><Select options={options} defaultValue={options.find(o => o.value === settings)} onChange={handleChange} />\n    </div>;\n});","export function hashCode(s) {\n    let hash;\n    for (let i = 0; i < s.length; i++) { \n        hash = Math.imul(31, hash) + s.charCodeAt(i) | 0;\n    }\n    return hash;\n}","import React, { useCallback, useState } from 'react';\nimport { DimensionType } from './DimensionType';\nimport { DimensionGenerator } from './DimensionGenerator';\nimport { Button } from '../../ui/Button';\n\nexport function Dimension({data = {}, onSave}) {\n\n    const [state, setState] = useState(data);\n\n    const handleGeneratorChange = useCallback(function(generator) {\n        setState(s => {\n            s.generator = generator;\n            return s;\n        });\n    }, []);\n\n    const handleSubmit = function (e) {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        const data = {...state};\n        data.key = formData.get('key');\n        data.type = formData.get('dimension-type');\n        onSave(data);\n    }\n\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit dimension</h3>\n        <div className=\"form-group\">\n            <label htmlFor=\"key\">Identifier</label> : <input type=\"text\" name=\"key\" id=\"key\" required pattern=\"[a-z0-9._-]+\" placeholder=\"Ex. : blue-dim\" defaultValue={data.key} />\n        </div>\n        <DimensionType type={data.type} />\n        <fieldset>\n            <legend>Generator configuration</legend>\n            <DimensionGenerator data={data.generator} onChange={handleGeneratorChange} />\n        </fieldset>\n        <div className=\"form-group mlm mbm\">\n            <Button type=\"submit\">Save</Button>\n        </div>\n    </form>\n}","import React, { useCallback, useState, useContext } from 'react';\nimport { Biome } from './biome/Biome';\nimport { Button } from './../ui/Button';\nimport { MenuItem } from './../ui/Menu';\nimport { Dimension } from './dimension/Dimension';\nimport { DataContext } from './../context/DataContext';\nimport { saveAs } from 'file-saver';\nimport JSZip from 'jszip';\n\nexport function Datapack() {\n    const context = useContext(DataContext);\n    const custom = context.custom;\n    const namespace = context.namespace;\n    const [menu, setMenu] = useState({page: 'stats'});\n\n    const handleStatsClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'stats'});\n    }, []);\n\n    const handleAddBiomeClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'biome'});\n    }, []);\n\n    const handleAddDimensionClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'dimension'});\n    }, []);\n\n    const onBiomeSave = useCallback(function(biome) {\n        custom.updateBiomes(biome);\n        setMenu({page: 'stats'});\n    }, [custom]);\n\n    const onDimensionSave = useCallback(function(dimension) {\n        custom.updateDimensions(dimension);\n        setMenu({page: 'stats'});\n    }, [custom]);\n\n    const editBiome = useCallback(function(index) {\n        setMenu({page: 'biome', index});\n    }, []);\n\n    const editDimension = useCallback(function(index) {\n        setMenu({page: 'dimension', index});\n    }, []);\n\n    return <div>\n        <h2>Datapack {namespace}</h2>\n        <div className=\"tabs\"><nav className=\"tabs-menu\">\n            <MenuItem onClick={handleStatsClick} active={menu.page === 'stats'}>Stats</MenuItem>\n            <MenuItem onClick={handleAddBiomeClick} active={menu.page === 'biome'}>Biome</MenuItem>\n            <MenuItem onClick={handleAddDimensionClick} active={menu.page === 'dimension'}>Dimension</MenuItem>\n        </nav></div>\n        {menu.page === 'biome' && <Biome onSave={onBiomeSave} data={custom.biomes[menu.index]} />}\n        {menu.page === 'dimension' && <Dimension onSave={onDimensionSave} data={custom.dimensions[menu.index]} />}\n        {menu.page === 'stats' && <Stats biomes={custom.biomes} dimensions={custom.dimensions} namespace={namespace} editBiome={editBiome} editDimension={editDimension} />}\n    </div>\n}\n\nfunction Stats({biomes, dimensions, namespace, editBiome, editDimension}) {\n\n    const handleBiomeClick = function(e, index) {\n        e.preventDefault();\n        editBiome(index);\n    }\n\n    const handleDimensionClick = function(e, index) {\n        e.preventDefault();\n        editDimension(index);\n    }\n\n    const handleGenerateClick = function(e) {\n        e.preventDefault();\n        const zip = new JSZip();\n        zip.file('pack.mcmeta', JSON.stringify({ pack: { pack_format: 5, description: 'Custom dimension' } }, null, 4));\n        const dims = zip.folder('data/minecraft/dimension/' + namespace);\n        for (const dimension of dimensions) {\n            const w = {...dimension};\n            delete w.key;\n            dims.file(dimension.key + '.json', JSON.stringify(w, null, 2));\n        }\n        const b = zip.folder('data/minecraft/worldgen/biome/' + namespace);\n        for (const biome of biomes) {\n            const w = {...biome};\n            delete w.key;\n            b.file(biome.key + '.json', JSON.stringify(w, null, 2));\n        }\n        zip.generateAsync({ type: 'blob' })\n            .then(function(content) {\n                saveAs(content, 'generated_datapack.zip');\n            });\n    }\n\n    return <div className=\"mtm\">\n        <h5><strong>{biomes.length}</strong> custom biomes</h5>\n        <ul>{biomes.map((biome, i) => <li key={i}><a href=\"#edit-biome\" onClick={(e) => handleBiomeClick(e, i)}>{biome.key}</a></li>)}</ul>\n        \n        <h5><strong>{dimensions.length}</strong> custom dimensions</h5>\n        <ul>{dimensions.map((dim, i) => <li key={i}><a href=\"#edit-dimension\" onClick={(e) => handleDimensionClick(e, i)}>{dim.key}</a></li>)}</ul>\n        \n        {dimensions.length > 0 &&\n            <p><Button onClick={handleGenerateClick}>Generate</Button></p>\n        }\n    </div>\n}","import React from 'react';\nimport { Button } from '../ui/Button';\n\nexport function DatapackForm({onCreate}) {\n\n    const handleCreate = function(e) {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const namespace = data.get('namespace');\n        onCreate(namespace);\n    };\n\n    return <form onSubmit={handleCreate}>\n        <h2>Create a new dimension datapack</h2>\n        <div className=\"form-group\">\n            <label htmlFor=\"namespace\">Namespace</label> : <input type=\"text\" name=\"namespace\" id=\"namespace\" required pattern=\"[a-z0-9._-]+\" className=\"form-control\" aria-describedby=\"namespaceHelp\" />\n            <p><small id=\"namespaceHelp\" className=\"form-text text-muted\">This differentiates the datapack from the vanilla functions. Namespaces and identifiers may only contain letters, numbers and <code>._-</code> characters.</small></p>\n        </div>\n        <Button type=\"submit\">Create</Button>\n        <div className=\"mtl\">\n            <div className=\"alert--warning\">This generator as well as the in-game functionality is unstable. Use this tool with caution.</div>\n        </div>\n    </form>\n}","import React, { useState } from 'react';\nimport './../node_modules/knacss/css/knacss.css';\nimport './App.css';\nimport { Datapack } from './components/Datapack';\nimport { DataContextProvider } from './context/DataContext';\nimport { DatapackForm } from './components/DatapackForm';\n\nfunction App() {\n    const [namespace, setNamespace] = useState(null);\n\n    return <>\n        {namespace !== null ? <DataContextProvider namespace={namespace}><Datapack /></DataContextProvider> : <DatapackForm onCreate={setNamespace} />}\n    </>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}