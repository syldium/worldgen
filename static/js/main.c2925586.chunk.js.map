{"version":3,"sources":["components/biome/BiomeDefaults.js","components/biome/BiomeStarts.jsx","ui/Button.jsx","utils/fetch.js","components/feature/FeatureDefaults.js","components/surface/SurfaceBuilderDefaults.js","components/noise/NoiseDefaults.js","components/dimension/DimensionDefaults.js","context/DataContext.jsx","hooks/context.js","hooks/form.js","hooks/ui.js","components/biome/BiomeSpawners.jsx","components/biome/Features.jsx","utils/color.js","components/biome/BiomeEffects.jsx","components/biome/Biome.jsx","ui/Menu.jsx","components/dimension/DimensionType.jsx","utils/data.js","ui/NumberList.jsx","components/dimension/BiomeSource.jsx","components/dimension/DimensionGenerator.jsx","utils/hash.js","components/dimension/Dimension.jsx","components/state/BlockState.jsx","components/feature/TreeFeature.jsx","components/feature/Decorator.jsx","components/feature/RandomPatchFeature.jsx","components/state/BlockPredicate.jsx","components/feature/OreFeature.jsx","components/feature/ConfiguredFeature.jsx","utils/zip.js","components/surface/SurfaceBuilder.jsx","ui/Input.jsx","components/noise/Structures.jsx","components/noise/NoiseSettings.jsx","components/Datapack.jsx","components/DatapackForm.jsx","App.js","serviceWorker.js","index.js"],"names":["EFFECTS","mood_sound","sound","tick_delay","block_search_extent","offset","sky_color","fog_color","water_color","water_fog_color","FEATURES","STARTS","SPAWNERS_AMBIENT","type","weight","minCount","maxCount","SPAWNERS_CREATURE","SPAWNERS_MONSTER","BiomeStarts","onChange","starts","useEffect","handleChange","useCallback","selectedOptions","map","option","value","options","useMemo","label","className","htmlFor","isMulti","id","defaultValue","filter","o","includes","Button","loading","cat","buttonProps","jsonFetch","url","a","fetch","headers","Accept","response","json","responseData","ok","VANILLA_FEATURES","TAGS_OPTIONS","tag","DECORATORS_OPTIONS","ORE_FEATURE_CONFIG","target","predicate_type","state","Name","size","DECORATED_ORE_FEATURE_CONFIG","config","feature","decorator","bottom_offset","top_offset","maximum","count","TREE_FEATURE_CONFIG","heightmap","minimum_size","limit","lower_size","upper_size","decorators","trunk_provider","Properties","axis","leaves_provider","persistent","distance","foliage_placer","radius","height","trunk_placer","base_height","height_rand_a","height_rand_b","RANDOM_PATCH_FEATURE_CONFIG","can_replace","project","need_water","xspread","yspread","zspread","whitelist","snowy","blacklist","tries","state_provider","block_placer","DECORATED_RANDOM_PATCH_CONFIG","outer","inner","chance","DECORATED_TREE_CONFIG","extra_chance","extra_count","DECORATOR_EXTRA_COUNT_DEFAULTS","DECORATOR_DECORATED_DEFAULTS","DECORATOR_RANGE_DEFAULTS","VANILLA_SURFACE_BUILDERS","SURFACE_TYPES_OPTIONS","SURFACE_BUILDER","top_material","under_material","underwater_material","VANILLA_NOISES","STRUCTURES","OVERWORLD_NOISE","bedrock_roof_position","bedrock_floor_position","sea_level","disable_mob_generation","structures","stronghold","spread","spacing","separation","salt","noise","sampling","xz_scale","y_scale","xz_factor","y_factor","top_slide","bottom_slide","size_horizontal","size_vertical","density_factor","density_offset","simplex_surface_noise","random_density_offset","island_noise_override","amplified","default_block","default_fluid","level","DIMENSION","generator","seed","biome_source","biome","settings","VANILLA_DIMENSION_TYPES","MULTI_NOISE_BIOME_SOURCE","temperature_noise","firstOctave","amplitudes","humidity_noise","altitude_noise","weirdness_noise","biomes","DataContext","React","createContext","vanilla","blocks","dimension_types","entities","features","noises","surfaces","custom","dimensions","updateBiomes","updateDimensions","dimension","updateDimensionTypes","dimension_type","updateFeatures","updateNoises","updateSurfacesBuilders","surface_builder","namespace","DataContextProvider","children","initial","useState","setBiomes","setBlocks","setEntities","useData","customBiomes","then","entity","name","displayName","Provider","data","setData","updateData","object","stored","i","findIndex","key","push","useKeyedListOptions","category","context","useContext","keyed","struct","forEach","hasOwnProperty","crudReducer","action","ADD","unshift","payload","UPDATE","element","REMOVE","useCrud","useReducer","useValueChange","changeCallback","obj","e","isNaN","parseFloat","dataset","checked","useKeyedOptionsState","multiple","Array","isArray","length","selection","setSelection","setSelectionFromOptions","selected","CRUD","useToggle","status","setState","toggle","preventDefault","current","BiomeSpawners","ambient","creature","misc","monster","water_ambient","water_creature","spawners","setSpawners","group","groupSpawners","SpawnGroup","visibility","text","dispatch","handleAdd","original","spawner","handleRemove","values","def","SpawnDefinition","onDelete","onClick","memo","definition","setDefinition","field","parseInt","handleCountChange","selectedOption","find","required","min","prev","next","GenFeatures","levels","setLevels","handleLevelChange","priority","list","elements","GenFeaturesLevel","integerColorToHex","color","toString","padStart","BiomeEffects","effects","colors","setColors","optional","toggleOption","handleColorChange","replace","handleToggleChange","foliage_color","grass_color","Biome","onSave","handleStartsChange","handleEffectsChange","handleFeaturesChange","handleSpawnersChange","handleSubmit","formData","Object","fromEntries","FormData","spawn_costs","carvers","air","keys","onSubmit","pattern","placeholder","BiomeCategory","BiomePrecipitation","precipitation","SurfaceBuilder","step","scale","downfall","depth","temperature","MenuItem","active","href","DimensionType","objectsEqual","b","every","p","findDecorators","f","buildDecorated","decorated","dataUpper","refitKeys","build","destKey","source","NumberList","numbers","val","pos","n","NumberInput","number","BiomeSource","setSource","handleSeedChange","handleTypeChange","handleCheckerboardSourceChange","handleFixedSourceChange","handleMultiSourceChange","s","SeedField","CheckerboardBiomeSource","FixedBiomeSource","MultiNoiseBiomeSource","setNumber","useNumber","setScale","isClearable","setBiome","advanced","toggleAdvanced","handleNoiseChange","handleAddClick","parameters","altitude","weirdness","humidity","previous","handleDeleteClick","index","entry","BiomeSelection","biomesOptions","style","alignItems","PerlinNoiseParameters","str","toUpperCase","substr","objects","hasDuplicatedObjects","handleFirstOctaveChange","handleAmplitudesChange","handleBiomeChange","rainfall","handleParameterChange","max","DimensionGenerator","handleSettingsChange","handleBiomeSourceChange","Settings","setText","hash","Math","imul","charCodeAt","hashCode","Dimension","handleGeneratorChange","get","BlockStateProvider","block","provider","setProvider","handleSimpleStateChange","handleWeighestStateChange","entries","BlockState","WeightedStateProvider","states","properties","actual","getStateValue","handlePropertiesChange","BlockStateProperties","BlocksList","setProperties","handlePropertyChange","handleCheckboxChange","handleNumberChange","selects","possible","num_values","TreeFeatureConfig","configuration","setConfig","handleTrunkProviderChange","handleLeavesProviderChange","handleFoliagePlacerChange","handleTrunkPlacerChange","FoliagePlacer","placer","TrunkPlacer","handleValueChange","DecoratorsList","some","d","Decorator","setDecorator","handleSelectChange","handleConfigChange","ChanceDecorator","CountDecorator","ExtraCountDecorator","DecoratedDecorator","RangeDecorator","setChance","handleChanceChange","setCount","configured","RandomPatchFeature","handleStateProviderChange","handleWhitelistChange","handleBlacklistChange","BlockPredicate","predicate","setPredicate","handleBlockChange","handleTagChange","t","OreFeatureConfig","handlePredicateChange","RawConfiguredFeature","default","handleSave","document","getElementById","alert","ConfiguredFeature","deco","configure","setDecorators","handleConfigurationChange","handleDecoratorsChange","handleSaveClick","DIMENSIONS_PATH","WORLDGEN_PATH","LEGACY_PATH_DETECTION","LEGACY_DIMENSIONS_PATH","LEGACY_WORLDGEN_PATH","readZip","file","Promise","resolve","reject","Error","JSZip","loadAsync","zip","mcmeta","promises","path","dir","legacy","match","regex","parseFile","async","all","catch","extractDatapack","getFolderType","folder","pathRegex","filename","contentPromise","exec","success","content","JSON","parse","console","error","message","writeFile","el","w","stringify","handleTopMaterialChange","handleUnderMaterialChange","handleUnderwaterMaterialChange","ConfInput","attr","defaultChecked","uId","random","data-name","Structures","handleStrongholdChange","handleStructuresChange","Stronghold","StructuresList","enabled","setStronghold","structure","Structure","handleSpacingChange","handleDelete","width","NoiseSettings","NoiseConfig","handleSamplingChange","handleTopSlideChange","handleBottomSlideChange","NoiseSamplingConfig","SlideConfig","Datapack","page","menu","setMenu","handleStatsClick","handleAddBiomeClick","handleAddDimensionClick","handleAddFeatureClick","handleAddNoiseClick","handleAddSurfaceBuilderClick","onBiomeSave","onDimensionSave","onFeatureSave","onNoiseSave","onSurfaceBuilderSave","editBiome","editDimension","editFeature","editNoise","editSurface","Stats","mayGenerate","StatsTitle","pack","pack_format","description","generateAsync","saveAs","buildZip","DatapackForm","onCreate","setError","handleFile","stopPropagation","dataTransfer","files","handleDrag","undefined","onDragStart","onDragEnter","onDragOver","onDrop","aria-describedby","accept","App","Boolean","window","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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A,YACA,WACA,eACA,SACA,QACA,aACA,YACA,YACA,cACA,YACA,mBACA,cACA,sBACA,eACA,cACA,SACA,qBACA,cACA,eACA,gBACA,uBACA,cACA,eACA,WACA,aACA,YACA,WACA,eACA,aACA,kBACA,uBACA,qBACA,sBACA,kBACA,gBACA,oBACA,mBACA,oBACA,qBACA,uBACA,sBACA,qBACA,oBACA,sBACA,qBACA,kBACA,oBACA,2BACA,cACA,qBACA,wBACA,mBACA,mBACA,qBACA,mBACA,eACA,sBACA,yBACA,yBACA,0BACA,4BACA,mBACA,wBACA,sBACA,wBACA,sBACA,uBACA,qBACA,uBACA,qBACA,uBACA,qBACA,YACA,gBACA,kBACA,oBACA,kBACA,oBACA,oBACA,iBACA,WACA,aACA,cACA,cACA,eACA,WACA,WACA,iBACA,WACA,eACA,cACA,YACA,eACA,cACA,mBACA,mBACA,gBACA,wBACA,eACA,uBACA,sBACA,oBACA,MACA,WACA,QACA,SACA,SACA,OACA,cACA,YACA,sBACA,mBACA,cACA,YACA,aACA,cACA,eACA,eACA,cACA,iBACA,gBACA,eACA,eACA,yBACA,kCACA,2BACA,+BACA,6BACA,wBACA,sBACA,mBACA,0BACA,gBACA,aACA,sBACA,iBACA,cACA,cACA,mBACA,oBACA,qBACA,cACA,eACA,oBACA,6BAGSC,EAAe,CACxB,cACA,QACA,sBACA,UACA,oBACA,uBACA,qBACA,OACA,WACA,gBACA,aACA,UACA,YACA,UACA,YACA,SACA,eACA,eACA,gBACA,QACA,gBACA,QACA,gBACA,oBACA,cACA,SACA,OACA,UACA,cACA,YACA,qBACA,oBACA,MACA,cACA,iBACA,oBACA,uBACA,cACA,SACA,OACA,iBACA,4BACA,qBACA,WACA,oBACA,SACA,UACA,kBACA,8BACA,QACA,OACA,WACA,gBACA,QACA,QACA,gBACA,wBACA,oBACA,cACA,SACA,iBACA,eACA,wBACA,sBACA,eACA,YACA,uBACA,yBACA,cACA,QACA,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","file":"static/js/main.c2925586.chunk.js","sourcesContent":["export const EFFECTS = {\n    mood_sound: {\n        sound: \"minecraft:ambient.cave\",\n        tick_delay: 6000,\n        block_search_extent: 8,\n        offset: 2.0\n    },\n    sky_color: 7907327,\n    fog_color: 12638463,\n    water_color: 4159204,\n    water_fog_color: 329011\n}\n\nexport const FEATURES = [\n    [],\n    [\n      \"minecraft:lake_water\",\n      \"minecraft:lake_lava\"\n    ],\n    [],\n    [\n      \"minecraft:monster_room\"\n    ],\n    [],\n    [],\n    [\n      \"minecraft:ore_dirt\",\n      \"minecraft:ore_gravel\",\n      \"minecraft:ore_granite\",\n      \"minecraft:ore_diorite\",\n      \"minecraft:ore_andesite\",\n      \"minecraft:ore_coal\",\n      \"minecraft:ore_iron\",\n      \"minecraft:ore_gold\",\n      \"minecraft:ore_redstone\",\n      \"minecraft:ore_diamond\",\n      \"minecraft:ore_lapis\",\n      \"minecraft:disk_sand\",\n      \"minecraft:disk_clay\",\n      \"minecraft:disk_gravel\"\n    ],\n    [],\n    [\n      \"minecraft:patch_tall_grass_2\",\n      \"minecraft:plain_vegetation\",\n      \"minecraft:flower_plain_decorated\",\n      \"minecraft:patch_grass_plain\",\n      \"minecraft:brown_mushroom_normal\",\n      \"minecraft:red_mushroom_normal\",\n      \"minecraft:patch_sugar_cane\",\n      \"minecraft:patch_pumpkin\",\n      \"minecraft:spring_water\",\n      \"minecraft:spring_lava\"\n    ],\n    [\n      \"minecraft:freeze_top_layer\"\n    ]\n]\n\nexport const STARTS = [\n    \"minecraft:village_plains\",\n    \"minecraft:pillager_outpost\",\n    \"minecraft:mineshaft\",\n    \"minecraft:stronghold\",\n    \"minecraft:ruined_portal\"\n]\n\nexport const SPAWNERS_AMBIENT = [\n    {\n        type: \"minecraft:bat\",\n        weight: 10,\n        minCount: 8,\n        maxCount: 8\n    }\n];\n\nexport const SPAWNERS_CREATURE = [\n    {\n        type: \"minecraft:sheep\",\n        weight: 12,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:pig\",\n        weight: 10,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:chicken\",\n        weight: 10,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:cow\",\n        weight: 8,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:horse\",\n        weight: 5,\n        minCount: 2,\n        maxCount: 6\n    },\n    {\n        type: \"minecraft:donkey\",\n        weight: 1,\n        minCount: 1,\n        maxCount: 3\n    }\n];\n\nexport const SPAWNERS_MONSTER = [\n    {\n        type: \"minecraft:spider\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:zombie\",\n        weight: 95,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:zombie_villager\",\n        weight: 5,\n        minCount: 1,\n        maxCount: 1\n    },\n    {\n        type: \"minecraft:skeleton\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:creeper\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:slime\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:enderman\",\n        weight: 10,\n        minCount: 1,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:witch\",\n        weight: 5,\n        minCount: 1,\n        maxCount: 1\n    },\n];","import React, { useCallback, useMemo, useEffect } from 'react';\nimport Select from 'react-select';\nimport { STARTS } from './BiomeDefaults';\n\nexport default function BiomeStarts({onChange, starts = STARTS}) {\n    useEffect(function () {\n        onChange(starts);\n    }, [onChange, starts]);\n\n    const handleChange = useCallback(function(selectedOptions) {\n        onChange(selectedOptions === null ? [] : selectedOptions.map(option => option.value));\n    }, [onChange]);\n\n    const options = useMemo(function() {\n        return [\n            \"pillager_outpost\",\n            \"mineshaft\",\n            \"mineshaft_mesa\",\n            \"mansion\",\n            \"jungle_pyramid\",\n            \"desert_pyramid\",\n            \"igloo\",\n            \"shipwreck\",\n            \"shipwreck_beached\",\n            \"swamp_hut\",\n            \"stronghold\",\n            \"monument\",\n            \"ocean_ruin_cold\",\n            \"ocean_ruin_warm\",\n            \"fortress\",\n            \"nether_fossil\",\n            \"end_city\",\n            \"buried_treasure\",\n            \"bastion_remnant\",\n            \"village_plains\",\n            \"village_desert\",\n            \"village_savanna\",\n            \"village_snovy\",\n            \"village_taiga\",\n            \"ruined_portal\",\n            \"ruined_portal_desert\",\n            \"ruined_portal_jungle\",\n            \"ruined_portal_swamp\",\n            \"ruined_portal_mountain\",\n            \"ruined_portal_ocean\",\n            \"ruined_portal_nether\"\n        ].map(option => ({ value: 'minecraft:' + option, label: 'minecraft:' + option }));\n    }, []);\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"starts\">Structures</label>\n        <Select isMulti id=\"starts\" options={options} onChange={handleChange} defaultValue={options.filter(o => starts.includes(o.value))} />\n    </div>;\n}","import React from 'react';\n\nexport function Button ({loading, cat = 'primary', ...buttonProps}) {\n    return <button className={`btn btn--${cat}`} {...buttonProps}></button>\n}\n","/**\n * @param {string} url\n * @param {object} options\n */\nexport async function jsonFetch(url, options) {\n    const response = await fetch(url, {\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        ...options\n    });\n\n    const responseData = await response.json();\n    if (response.ok) {\n        return responseData;\n    }\n    throw responseData;\n}","export const VANILLA_FEATURES = [\n    \"nope\",\n    \"end_spike\",\n    \"end_gateway\",\n    \"end_gateway_delayed\",\n    \"chorus_plant\",\n    \"end_island\",\n    \"end_island_decorated\",\n    \"delta\",\n    \"small_basalt_columns\",\n    \"large_basalt_columns\",\n    \"basalt_blobs\",\n    \"blackstone_blobs\",\n    \"glowstone_extra\",\n    \"glowstone\",\n    \"crimson_forest_vegetation\",\n    \"warped_forest_vegetation\",\n    \"nether_sprouts\",\n    \"twisting_vines\",\n    \"weeping_vines\",\n    \"basalt_pillar\",\n    \"seagrass_cold\",\n    \"seagrass_deep_cold\",\n    \"seagrass_normal\",\n    \"seagrass_river\",\n    \"seagrass_deep\",\n    \"seagrass_swamp\",\n    \"seagrass_warm\",\n    \"seagrass_deep_warm\",\n    \"sea_pickle\",\n    \"ice_spike\",\n    \"ice_patch\",\n    \"forest_rock\",\n    \"seagrass_simple\",\n    \"iceberg_packed\",\n    \"iceberg_blue\",\n    \"kelp_cold\",\n    \"kelp_warm\",\n    \"blue_ice\",\n    \"bamboo_light\",\n    \"bamboo\",\n    \"vines\",\n    \"lake_water\",\n    \"lake_lava\",\n    \"disk_clay\",\n    \"disk_gravel\",\n    \"disk_sand\",\n    \"freeze_top_layer\",\n    \"bonus_chest\",\n    \"void_start_platform\",\n    \"monster_room\",\n    \"desert_well\",\n    \"fossil\",\n    \"spring_lava_double\",\n    \"spring_lava\",\n    \"spring_delta\",\n    \"spring_closed\",\n    \"spring_closed_double\",\n    \"spring_open\",\n    \"spring_water\",\n    \"pile_hay\",\n    \"pile_melon\",\n    \"pile_snow\",\n    \"pile_ice\",\n    \"pile_pumpkin\",\n    \"patch_fire\",\n    \"patch_soul_fire\",\n    \"patch_brown_mushroom\",\n    \"patch_red_mushroom\",\n    \"patch_crimson_roots\",\n    \"patch_sunflower\",\n    \"patch_pumpkin\",\n    \"patch_taiga_grass\",\n    \"patch_berry_bush\",\n    \"patch_grass_plain\",\n    \"patch_grass_forest\",\n    \"patch_grass_badlands\",\n    \"patch_grass_savanna\",\n    \"patch_grass_normal\",\n    \"patch_grass_taiga\",\n    \"patch_grass_taiga_2\",\n    \"patch_grass_jungle\",\n    \"patch_dead_bush\",\n    \"patch_dead_bush_2\",\n    \"patch_dead_bush_badlands\",\n    \"patch_melon\",\n    \"patch_berry_sparse\",\n    \"patch_berry_decorated\",\n    \"patch_waterlilly\",\n    \"patch_tall_grass\",\n    \"patch_tall_grass_2\",\n    \"patch_large_fern\",\n    \"patch_cactus\",\n    \"patch_cactus_desert\",\n    \"patch_cactus_decorated\",\n    \"patch_sugar_cane_swamp\",\n    \"patch_sugar_cane_desert\",\n    \"patch_sugar_cane_badlands\",\n    \"patch_sugar_cane\",\n    \"brown_mushroom_nether\",\n    \"red_mushroom_nether\",\n    \"brown_mushroom_normal\",\n    \"red_mushroom_normal\",\n    \"brown_mushroom_taiga\",\n    \"red_mushroom_taiga\",\n    \"brown_mushroom_giant\",\n    \"red_mushroom_giant\",\n    \"brown_mushroom_swamp\",\n    \"red_mushroom_swamp\",\n    \"ore_magma\",\n    \"ore_soul_sand\",\n    \"ore_gold_deltas\",\n    \"ore_quartz_deltas\",\n    \"ore_gold_nether\",\n    \"ore_quartz_nether\",\n    \"ore_gravel_nether\",\n    \"ore_blackstone\",\n    \"ore_dirt\",\n    \"ore_gravel\",\n    \"ore_granite\",\n    \"ore_diorite\",\n    \"ore_andesite\",\n    \"ore_coal\",\n    \"ore_iron\",\n    \"ore_gold_extra\",\n    \"ore_gold\",\n    \"ore_redstone\",\n    \"ore_diamond\",\n    \"ore_lapis\",\n    \"ore_infested\",\n    \"ore_emerald\",\n    \"ore_debris_large\",\n    \"ore_debris_small\",\n    \"crimson_fungi\",\n    \"crimson_fungi_planted\",\n    \"warped_fungi\",\n    \"warped_fungi_planted\",\n    \"huge_brown_mushroom\",\n    \"huge_red_mushroom\",\n    \"oak\",\n    \"dark_oak\",\n    \"birch\",\n    \"acacia\",\n    \"spruce\",\n    \"pine\",\n    \"jungle_tree\",\n    \"fancy_oak\",\n    \"jungle_tree_no_vine\",\n    \"mega_jungle_tree\",\n    \"mega_spruce\",\n    \"mega_pine\",\n    \"swamp_tree\",\n    \"jungle_bush\",\n    \"oak_badlands\",\n    \"spruce_snovy\",\n    \"flower_warm\",\n    \"flower_default\",\n    \"flower_forest\",\n    \"flower_swamp\",\n    \"flower_plain\",\n    \"flower_plain_decorated\",\n    \"forest_flower_vegetation_common\",\n    \"forest_flower_vegetation\",\n    \"dark_forest_vegetation_brown\",\n    \"dark_forest_vegetation_red\",\n    \"warm_ocean_vegetation\",\n    \"forest_flower_trees\",\n    \"taiga_vegetation\",\n    \"trees_shattered_savanna\",\n    \"trees_savanna\",\n    \"birch_tall\",\n    \"trees_mountain_edge\",\n    \"trees_mountain\",\n    \"trees_water\",\n    \"birch_other\",\n    \"plain_vegetation\",\n    \"trees_jungle_edge\",\n    \"trees_giant_spruce\",\n    \"trees_giant\",\n    \"trees_jungle\",\n    \"bamboo_vegetation\",\n    \"mushroom_field_vegetation\"\n];\n\nexport const TAGS_OPTIONS = [\n    'acacia_logs',\n    'anvil',\n    'bamboo_plantable_on',\n    'banners',\n    'base_stone_nether',\n    'base_stone_overworld',\n    'beacon_base_blocks',\n    'beds',\n    'beehives',\n    'bee_growables',\n    'birch_logs',\n    'buttons',\n    'campfires',\n    'carpets',\n    'climbable',\n    'corals',\n    'coral_blocks',\n    'coral_plants',\n    'crimson_stems',\n    'crops',\n    'dark_oak_logs',\n    'doors',\n    'dragon_immune',\n    'enderman_holdable',\n    'fence_gates',\n    'fences',\n    'fire',\n    'flowers',\n    'flower_pots',\n    'gold_ores',\n    'guarded_by_piglins',\n    'hoglin_repellents',\n    'ice',\n    'impermeable',\n    'infiniburn_end',\n    'infiniburn_nether',\n    'infiniburn_overworld',\n    'jungle_logs',\n    'leaves',\n    'logs',\n    'logs_that_burn',\n    'mushroom_grow_block‌',\n    'non_flammable_wood',\n    'oak_logs',\n    'piglin_repellents',\n    'planks',\n    'portals',\n    'pressure_plates',\n    'prevent_mob_spawning_inside',\n    'rails',\n    'sand',\n    'saplings',\n    'shulker_boxes',\n    'signs',\n    'slabs',\n    'small_flowers',\n    'soul_fire_base_blocks',\n    'soul_speed_blocks',\n    'spruce_logs',\n    'stairs',\n    'standing_signs',\n    'stone_bricks',\n    'stone_pressure_plates',\n    'strider_warm_blocks',\n    'tall_flowers',\n    'trapdoors',\n    'underwater_bonemeals',\n    'unstable_bottom_center',\n    'valid_spawn',\n    'walls',\n    'wall_corals',\n    'wall_post_override',\n    'wall_signs',\n    'warped_stems',\n    'wart_blocks',\n    'wither_immune',\n    'wither_summon_base_blocks',\n    'wooden_buttons',\n    'wooden_doors',\n    'wooden_fences',\n    'wooden_pressure_plates',\n    'wooden_slabs',\n    'wooden_stairs',\n    'wooden_trapdoors',\n    'wool'\n].map(tag => ({ value: 'minecraft:' + tag, label: tag }));\n\nexport const DECORATORS_OPTIONS = [\n    { value: 'chance', label: 'Chance' },\n    { value: 'count', label: 'Count' },\n    { value: 'count_extra', label: 'Count extra' },\n    { value: 'count_multilayer', label: 'Count multi layer' },\n    { value: 'decorated', label: 'Decorated' },\n    { value: 'fire', label: 'Fire' },\n    { value: 'range', label: 'Range' },\n    { value: 'range_very_biased', label: 'Range very biased' },\n    { value: 'square', label: 'Square' }\n].map(o => {\n    o.value = 'minecraft:' + o.value;\n    return o;\n});\n\nexport const ORE_FEATURE_CONFIG = {\n    target: {\n        tag: \"minecraft:base_stone_overworld\",\n        predicate_type: \"minecraft:tag_match\"\n    },\n    state: {\n        Name: \"minecraft:gold_ore\"\n    },\n    size: 30\n};\n\nexport const DECORATED_ORE_FEATURE_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        feature: {\n                            config: ORE_FEATURE_CONFIG,\n                            type: \"minecraft:ore\"\n                        },\n                        decorator: {\n                            config: {\n                                bottom_offset: 0,\n                                top_offset: 0,\n                                maximum: 32\n                            },\n                            type: \"minecraft:range\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                },\n                decorator: {\n                    config: {},\n                    type: \"minecraft:square\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 2\n            },\n            type: \"minecraft:count\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const TREE_FEATURE_CONFIG = {\n    heightmap: \"OCEAN_FLOOR\",\n    minimum_size: {\n        limit: 1,\n        lower_size: 0,\n        upper_size: 1,\n        type: \"minecraft:two_layers_feature_size\"\n    },\n    decorators: [],\n    trunk_provider: {\n        state: {\n            Properties: {\n                axis: \"y\"\n            },\n            Name: \"minecraft:birch_log\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    leaves_provider: {\n        state: {\n            Properties: {\n                persistent: \"false\",\n                distance: \"7\"\n            },\n            Name: \"minecraft:birch_leaves\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    foliage_placer: {\n        radius: 2,\n        offset: 0,\n        height: 3,\n        type: \"minecraft:blob_foliage_placer\"\n    },\n    trunk_placer: {\n        base_height: 5,\n        height_rand_a: 2,\n        height_rand_b: 0,\n        type: \"minecraft:straight_trunk_placer\"\n    }\n};\n\nexport const RANDOM_PATCH_FEATURE_CONFIG = {\n    can_replace: false,\n    project: false,\n    need_water: false,\n    xspread: 7,\n    yspread: 3,\n    zspread: 7,\n    whitelist: [\n        {\n            Properties: {\n                snowy: \"false\"\n            },\n            Name: \"minecraft:grass_block\"\n        }\n    ],\n    blacklist: [],\n    tries: 64,\n    state_provider: {\n        state: {\n            Name: \"minecraft:pumpkin\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    block_placer: {\n        type: \"minecraft:simple_block_placer\"\n    }\n}\n\nexport const DECORATED_RANDOM_PATCH_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: RANDOM_PATCH_FEATURE_CONFIG,\n                    type: \"minecraft:random_patch\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:heightmap_spread_double\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                chance: 32\n            },\n            type: \"minecraft:chance\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_TREE_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: TREE_FEATURE_CONFIG,\n                    type: \"minecraft:tree\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:heightmap\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 10,\n                extra_chance: 0.1,\n                extra_count: 1\n            },\n            type: \"minecraft:count_extra\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATOR_EXTRA_COUNT_DEFAULTS = {\n    count: 10,\n    extra_chance: 0.1,\n    extra_count: 1\n}\n\nexport const DECORATOR_DECORATED_DEFAULTS = {\n    outer: {\n        config: {},\n        type: \"minecraft:square\"\n    },\n    inner: {\n        config: {},\n        type: \"minecraft:heightmap\"\n    }\n}\n\nexport const DECORATOR_RANGE_DEFAULTS = {\n    bottom_offset: 4,\n    top_offset: 0,\n    maximum: 64\n}\n","export const VANILLA_SURFACE_BUILDERS = [\n    { value: 'badlands', label: 'Badlands' },\n    { value: 'basalt_deltas', label: 'Basalt Deltas' },\n    { value: 'crimson_forest', label: 'Crimson forest' },\n    { value: 'deset', label: 'Desert' },\n    { value: 'end', label: 'End' },\n    { value: 'eroded_badlands', label: 'Eroded Badlands' },\n    { value: 'frozen_ocean', label: 'Frozen ocean' },\n    { value: 'full_sand', label: 'Full sand' },\n    { value: 'giant_tree_taiga', label: 'Giant tree taiga' },\n    { value: 'grass', label: 'Grass' },\n    { value: 'gravelly_mountain', label: 'Gravelly mountain' },\n    { value: 'ice_spikes', label: 'Ice spikes' },\n    { value: 'mountain', label: 'Mountain' },\n    { value: 'mycelium', label: 'Mycelium' },\n    { value: 'nether', label: 'Nether' },\n    { value: 'nope', label: 'Nope' },\n    { value: 'ocean_sand', label: 'Ocean sand' },\n    { value: 'shattered_savanna', label: 'Shattered savanna' },\n    { value: 'soul_sand_valley', label: 'Soul sand valley' },\n    { value: 'stone', label: 'Stone' },\n    { value: 'swamp', label: 'Swamp' },\n    { value: 'warped_forest', label: 'Warped forest' },\n    { value: 'wooded_badlands', label: 'Wooded badlands' },\n].map(option => {\n    option.value = 'minecraft:' + option.value;\n    return option;\n});\n\nexport const SURFACE_TYPES_OPTIONS = [\n    { value: 'default', label: 'Default' },\n    { value: 'mountain', label: 'Mountain' },\n    { value: 'shattered_savanna', label: 'Shattered savanna' },\n    { value: 'gravelly_mountain', label: 'Gravelly mountain' },\n    { value: 'giant_tree_taiga', label: 'Giant tree taiga' },\n    { value: 'swamp', label: 'Swamp' },\n    { value: 'badlands', label: 'Badlands' },\n    { value: 'wooded_badlands', label: 'Wooded badlands' },\n    { value: 'eroded_badlands', label: 'Eroded badlands' },\n    { value: 'frozen_ocean', label: 'Frozen ocean' },\n    { value: 'nether', label: 'Nether' },\n    { value: 'nether_forest', label: 'Nether forest' },\n    { value: 'soul_sand_valley', label: 'Soul sand valley' },\n    { value: 'basalt_deltas', label: 'Basalt deltas' },\n    { value: 'nope', label: 'Nope' }\n].map(option => {\n    option.value = 'minecraft:' + option.value;\n    return option;\n});\n\nexport const SURFACE_BUILDER = {\n    config: {\n        top_material: {\n            Properties: {\n                snowy: \"false\"\n            },\n            Name: \"minecraft:grass_block\"\n        },\n        under_material: {\n            Name: \"minecraft:dirt\"\n        },\n        underwater_material: {\n            Name: \"minecraft:gravel\"\n        }\n    },\n    type: \"minecraft:default\"\n}","export const VANILLA_NOISES = [\n    { value: 'minecraft:overworld', label: 'Overworld' },\n    { value: 'minecraft:nether', label: 'Nether' },\n    { value: 'minecraft:end', label: 'End' },\n    { value: 'minecraft:amplified', label: 'Amplified' },\n    { value: 'minecraft:caves', label: 'Caves' },\n    { value: 'minecraft:floating_islands', label: 'Floating islands' }\n];\n\nexport const STRUCTURES = [\n    \"ocean_ruin\",\n    \"bastion_remnant\",\n    \"fortress\",\n    \"nether_fossil\",\n    \"igloo\",\n    \"shipwreck\",\n    \"swamp_hut\",\n    \"jungle_pyramid\",\n    \"village\",\n    \"ruined_portal\",\n    \"endcity\",\n    \"buried_treasure\",\n    \"mansion\",\n    \"monument\",\n    \"stronghold\",\n    \"pillager_outpost\",\n    \"desert_pyramid\",\n    \"mineshaft\"\n].map(tag => ({ value: 'minecraft:' + tag, label: tag }));;\n\nexport const OVERWORLD_NOISE = {\n    bedrock_roof_position: -10,\n    bedrock_floor_position: 0,\n    sea_level: 63,\n    disable_mob_generation: false,\n    structures: {\n        stronghold: {\n            distance: 32,\n            spread: 3,\n            count: 128\n        },\n        structures: {\n            \"minecraft:ocean_ruin\": {\n                spacing: 20,\n                separation: 8,\n                salt: 14357621\n            },\n            \"minecraft:bastion_remnant\": {\n                spacing: 27,\n                separation: 4,\n                salt: 30084232\n            },\n            \"minecraft:fortress\": {\n                spacing: 27,\n                separation: 4,\n                salt: 30084232\n            },\n            \"minecraft:nether_fossil\": {\n                spacing: 2,\n                separation: 1,\n                salt: 14357921\n            },\n            \"minecraft:igloo\": {\n                spacing: 32,\n                separation: 8,\n                salt: 14357618\n            },\n            \"minecraft:shipwreck\": {\n                spacing: 24,\n                separation: 4,\n                salt: 165745295\n            },\n            \"minecraft:swamp_hut\": {\n                spacing: 32,\n                separation: 8,\n                salt: 14357620\n            },\n            \"minecraft:jungle_pyramid\": {\n                spacing: 32,\n                separation: 8,\n                salt: 14357619\n            },\n            \"minecraft:village\": {\n                spacing: 32,\n                separation: 8,\n                salt: 10387312\n            },\n            \"minecraft:ruined_portal\": {\n                spacing: 40,\n                separation: 15,\n                salt: 34222645\n            },\n            \"minecraft:endcity\": {\n                spacing: 20,\n                separation: 11,\n                salt: 10387313\n            },\n            \"minecraft:buried_treasure\": {\n                spacing: 1,\n                separation: 0,\n                salt: 0\n            },\n            \"minecraft:mansion\": {\n                spacing: 80,\n                separation: 20,\n                salt: 10387319\n            },\n            \"minecraft:monument\": {\n                spacing: 32,\n                separation: 5,\n                salt: 10387313\n            },\n            \"minecraft:stronghold\": {\n                spacing: 1,\n                separation: 0,\n                salt: 0\n            },\n            \"minecraft:pillager_outpost\": {\n                spacing: 32,\n                separation: 8,\n                salt: 165745296\n            },\n            \"minecraft:desert_pyramid\": {\n                spacing: 32,\n                separation: 8,\n                salt: 14357617\n            },\n            \"minecraft:mineshaft\": {\n                spacing: 1,\n                separation: 0,\n                salt: 0\n            }\n        }\n    },\n    noise: {\n        height: 256,\n        sampling: {\n            xz_scale: 1,\n            y_scale: 1,\n            xz_factor: 80.0,\n            y_factor: 160.0\n        },\n        top_slide: {\n            target: -10,\n            size: 3,\n            offset: 0\n        },\n        bottom_slide: {\n            target: -30,\n            size: 0,\n            offset: 0\n        },\n        size_horizontal: 1,\n        size_vertical: 2,\n        density_factor: 1.0,\n        density_offset: -0.47,\n        simplex_surface_noise: true,\n        random_density_offset: true,\n        island_noise_override: false,\n        amplified: false\n        \n    },\n    default_block: {\n        Name: \"minecraft:stone\"\n    },\n    default_fluid: {\n        Properties: {\n            level: \"0\"\n        },\n        Name: \"minecraft:water\"\n    }\n}\n","export const DIMENSION = {\n    generator: {\n        type: \"minecraft:noise\",\n        seed: 286956243,\n        biome_source: {\n            type: \"minecraft:fixed\",\n            seed: 286956243,\n            biome: \"minecraft:plains\"\n        },\n        settings: \"minecraft:overworld\"\n    },\n    type: \"minecraft:overworld\"\n}\n\nexport const VANILLA_DIMENSION_TYPES = [\n    { value: 'minecraft:overworld', label: 'Overworld' },\n    { value: 'minecraft:overworld_cave', label: 'Overworld caves' },\n    { value: 'minecraft:the_nether', label: 'The Nether' },\n    { value: 'minecraft:the_end', label: 'The End' },\n]\n\nexport const MULTI_NOISE_BIOME_SOURCE = {\n    type: 'minecraft:multi_noise',\n    seed: 286956243,\n    temperature_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    humidity_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    altitude_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    weirdness_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    biomes: []\n};\n\nexport const OVERWORLD_DIMENSION_TYPE = {\n    has_raids: true,\n    logical_height: 256,\n    infiniburn: \"minecraft:infiniburn_overworld\",\n    ambient_light: 0.0,\n    piglin_safe: false,\n    bed_works: true,\n    respawn_anchor_works: false,\n    ultrawarm: false,\n    natural: true,\n    shrunk: false,\n    has_skylight: true,\n    has_ceiling: false\n}\n\nexport const THE_NETHER_DIMENSION_TYPE = {\n    has_raids: false,\n    logical_height: 128,\n    infiniburn: \"minecraft:infiniburn_nether\",\n    ambient_light: 0.1,\n    piglin_safe: true,\n    bed_works: false,\n    respawn_anchor_works: true,\n    ultrawarm: true,\n    natural: false,\n    shrunk: true,\n    fixed_time: 18000,\n    has_skylight: false,\n    has_ceiling: true\n}\n\nexport const THE_END_DIMENSION_TYPE = {\n    has_raids: true,\n    logical_height: 256,\n    infiniburn: \"minecraft:infiniburn_end\",\n    ambient_light: 0.0,\n    piglin_safe: false,\n    bed_works: false,\n    respawn_anchor_works: false,\n    ultrawarm: false,\n    natural: false,\n    shrunk: false,\n    fixed_time: 6000,\n    has_skylight: false,\n    has_ceiling: false\n}\n","import React, { useState, useEffect } from 'react';\nimport { jsonFetch } from '../utils/fetch';\nimport { VANILLA_FEATURES } from '../components/feature/FeatureDefaults';\nimport { useData } from '../hooks/context';\nimport { VANILLA_SURFACE_BUILDERS } from '../components/surface/SurfaceBuilderDefaults';\nimport { VANILLA_NOISES } from '../components/noise/NoiseDefaults';\nimport { VANILLA_DIMENSION_TYPES } from '../components/dimension/DimensionDefaults';\n\nexport const DataContext = React.createContext({\n    vanilla: {\n        biomes: [],\n        blocks: [],\n        dimension_types: [],\n        entities: [],\n        features: [],\n        noises: [],\n        surfaces: []\n    },\n    custom: {\n        biomes: [],\n        dimensions: [],\n        dimension_types: [],\n        features: [],\n        noises: [],\n        surfaces: [],\n        updateBiomes: (biome) => {},\n        updateDimensions: (dimension) => {},\n        updateDimensionTypes: (dimension_type) => {},\n        updateFeatures: (feature) => {},\n        updateNoises: (noise) => {},\n        updateSurfacesBuilders: (surface_builder) => {}\n    },\n    namespace: ''\n});\n\nexport function DataContextProvider({children, namespace, initial = {}}) {\n    const [biomes, setBiomes] = useState([]);\n    const [blocks, setBlocks] = useState([]);\n    const [entities, setEntities] = useState([]);\n\n    const [customBiomes, updateBiomes] = useData(initial.biomes);\n    const [dimensions, updateDimensions] = useData(initial.dimensions);\n    const [dimension_types, updateDimensionTypes] = useData(initial.dimension_types);\n    const [features, updateFeatures] = useData(initial.features);\n    const [noises, updateNoises] = useData(initial.noises);\n    const [surfaces, updateSurfacesBuilders] = useData(initial.surfaces);\n\n    useEffect(() => {\n        (async function () {\n            jsonFetch('https://unpkg.com/minecraft-data@2.63.0/minecraft-data/data/pc/1.16.1/biomes.json')\n                .then(biomes => setBiomes(biomes));\n            jsonFetch('https://unpkg.com/minecraft-data@2.63.0/minecraft-data/data/pc/1.16.1/blocks.json')\n                .then(blocks => setBlocks(blocks));\n            jsonFetch('https://unpkg.com/minecraft-data@2.63.0/minecraft-data/data/pc/1.16.1/entities.json')\n                .then(entities => setEntities(entities.map(entity => ({ value: 'minecraft:' + entity.name, label: entity.displayName }))));\n        })();\n    }, []);\n\n    return <DataContext.Provider value={{\n        vanilla: { biomes, blocks, dimension_types: VANILLA_DIMENSION_TYPES, entities, features: VANILLA_FEATURES, noises: VANILLA_NOISES, surfaces: VANILLA_SURFACE_BUILDERS },\n        custom: { biomes: customBiomes, dimensions, dimension_types, features, noises, surfaces,\n            updateBiomes, updateDimensions, updateDimensionTypes, updateFeatures, updateNoises, updateSurfacesBuilders },\n        namespace\n    }}>{children}</DataContext.Provider>\n}","import { useState, useContext, useMemo } from \"react\";\nimport { DataContext } from \"../context/DataContext\";\n\n/**\n * @param {object[]} initial\n * @returns {[object[], function(object): void]} \n */\nexport function useData(initial = []) {\n    const [data, setData] = useState(initial);\n    const updateData = function(object) {\n        setData(stored => {\n            const i = stored.findIndex(({key}) => key === object.key);\n            if (i < 0) {\n                stored.push(object);\n            } else {\n                stored[i] = object;\n            }\n            return stored;\n        });\n    }\n    return [data, updateData];\n}\n\n/**\n * @param {('biomes'|'dimension_types'|'features'|'noises'|'surfaces')} category Data category\n * @returns {{ value: string, label: string }[]} Options list for react-select\n */\nexport function useKeyedListOptions(category) {\n    const context = useContext(DataContext);\n    return useMemo(function() {\n        const options = context.custom[category]\n            .map(keyed => ({ value: context.namespace + ':' + keyed.key, label: '(Custom) ' + keyed.key }));\n\n        let struct = null;\n        context.vanilla[category].forEach(keyed => {\n            if (struct === null) {\n                struct = keyed.hasOwnProperty('displayName') ? 1 : (keyed.hasOwnProperty('label') ? 2 : 3);\n            }\n            switch(struct) {\n                case 1: // displayName\n                    options.push({ value: 'minecraft:' + keyed.name, label: keyed.displayName });\n                    return;\n                case 2: // already option\n                    options.push(keyed);\n                    return;\n                default:\n                    options.push({ value: 'minecraft:' + keyed, label: keyed });\n            }\n        });\n        return options;\n    }, [category, context.custom, context.namespace, context.vanilla]);\n}","import { useReducer, useState, useCallback } from \"react\";\nimport { useKeyedListOptions } from \"./context\";\n\nfunction crudReducer(state, action) {\n    switch (action.type) {\n        case ADD:\n            if (action.unshift) {\n                return [action.payload, ...state];\n            }\n            return [...state, action.payload];\n        case UPDATE:\n          return state.map(element => element === action.target ? action.payload : element);\n        case REMOVE:\n          return state.filter(element => element !== action.payload);\n        default:\n          return state;\n    }\n}\n\nexport function useCrud(data = []) {\n    return useReducer(crudReducer, data);\n}\n\n/**\n * @param {number} [initial] \n * @returns {function(SyntheticEvent|string|number): void} \n */\nexport function useNumber(initial = 0) {\n    const [n, setState] = useState(initial);\n    const setNumber = function(n) {\n        if (typeof n === 'object') {\n            n = n.target.value;\n        }\n        if (typeof n === 'string') {\n            n = isNaN(n) ? initial : parseInt(n);\n        }\n        setState(n);\n    }\n    return [n, setNumber];\n}\n\nexport function useValueChange(changeCallback, obj) {\n    return useCallback(function(e) {\n        if (e.target.type === 'checkbox') {\n            changeCallback({ ...obj, [e.target.dataset.name || e.target.id || e.target.name]: e.target.checked });\n            return;\n        }\n        const value = isNaN(e.target.value) ? e.target.value : parseFloat(e.target.value);\n        changeCallback({ ...obj, [e.target.dataset.name || e.target.id || e.target.name]: value });\n    }, [changeCallback, obj]);\n}\n\n/**\n * Fast way to provide a list of options for react-select\n * and store selection as string (list).\n * \n * @param {('biomes'|'blocks'|'features'|'surfaces')} category Data category\n * @param {string|string[]} initial Initial selection\n * @param {boolean} [multiple]\n * @returns {[{ value: string, label: string }[], string|string[], function({ value: string }): void]} Options list, currently selected list and his updater\n */\nexport function useKeyedOptionsState(category, initial, multiple) {\n    const options = useKeyedListOptions(category); // Get options\n\n    // Default value for 'multiple' argument\n    if (typeof multiple === 'undefined') {\n        multiple = Array.isArray(initial);\n    }\n\n    // Enhanced use state - usage of options for default value if needed\n    const [selection, setSelection] = useState(initial || function() {\n        if (multiple) {\n            return options.length > 0 ? [options[0].value] : [];\n        }\n        return options.length > 0 ? options[0].value : '';\n    }());\n\n    // End chain react-select change handler\n    const setSelectionFromOptions = useCallback(function(selected) {\n        if (multiple) {\n            setSelection(selected === null ? [] : selected.map(o => o.value));\n        } else {\n            setSelection(selected.value);\n        }\n    }, [multiple]);\n\n    return [options, selection, setSelectionFromOptions];\n}\n\nconst ADD = 'ADD';\nconst UPDATE = 'UPDATE';\nconst REMOVE = 'REMOVE';\nexport const CRUD = { ADD, UPDATE, REMOVE };","import { useState } from \"react\";\n\n/**\n * @param {boolean} initial \n * @returns {[boolean, function(): void]}\n */\nexport function useToggle(initial = false) {\n    const [status, setState] = useState(initial);\n    const toggle = function (e = null) {\n        if (typeof e === 'boolean') {\n            setState(e);\n            return;\n        }\n        if (e !== null) {\n            e.preventDefault();\n        }\n        setState(current => !current);\n    }\n    return [status, toggle];\n}","import React, { useContext, useEffect, useMemo, useState, useCallback } from 'react';\nimport Select from 'react-select';\nimport { CRUD, useCrud } from \"../../hooks/form\";\nimport { useToggle } from '../../hooks/ui';\nimport { Button } from '../../ui/Button';\nimport { DataContext } from '../../context/DataContext';\nimport { SPAWNERS_AMBIENT, SPAWNERS_CREATURE, SPAWNERS_MONSTER } from './BiomeDefaults';\n\nexport function BiomeSpawners({onChange, data = { ambient: SPAWNERS_AMBIENT, creature: SPAWNERS_CREATURE, misc: [], monster: SPAWNERS_MONSTER, water_ambient: [], water_creature: [] }}) {\n\n    const entities = useContext(DataContext).vanilla.entities;\n    const [spawners, setSpawners] = useState(data);\n\n    const handleChange = useCallback(function(group, groupSpawners) {\n        setSpawners(function(spawners) {\n            const state = {\n                ...spawners,\n                [group]: groupSpawners\n            };\n            onChange(state);\n            return state;\n        });\n    }, [onChange]);\n\n    return <div>\n        <SpawnGroup group=\"ambient\" data={spawners.ambient} onChange={handleChange} entities={entities}>Ambient</SpawnGroup>\n        <SpawnGroup group=\"creature\" data={spawners.creature} onChange={handleChange} entities={entities}>Creature</SpawnGroup>\n        <SpawnGroup group=\"misc\" data={spawners.misc} onChange={handleChange} entities={entities}>Miscellaneous</SpawnGroup>\n        <SpawnGroup group=\"monster\" data={spawners.monster} onChange={handleChange} entities={entities}>Monster</SpawnGroup>\n        <SpawnGroup group=\"water_ambient\" data={spawners.water_ambient} onChange={handleChange} entities={entities}>Water ambient</SpawnGroup>\n        <SpawnGroup group=\"water_creature\" data={spawners.water_creature} onChange={handleChange} entities={entities}>Water creature</SpawnGroup>\n    </div>;\n}\n\nfunction SpawnGroup({children, entities, data = [], group, onChange}) {\n    const [visibility, toggle] = useToggle();\n    const text = visibility ? 'Less...' : 'More...';\n\n    const [spawners, dispatch] = useCrud(data);\n\n    const handleAdd = useCallback(function(e) {\n        e.preventDefault();\n        dispatch({ type: CRUD.ADD, payload: {\n            type: 'minecraft:cow',\n            weight: 1,\n            minCount: 1,\n            maxCount: 1,\n        }});\n        if (!visibility) {\n            toggle();\n        }\n    }, [dispatch, toggle, visibility]);\n\n    const handleChange = useCallback(function(original, spawner) {\n        dispatch({ type: CRUD.UPDATE, target: original, payload: spawner });\n    }, [dispatch]);\n\n    const handleRemove = useCallback(function(spawner) {\n        dispatch({ type: CRUD.REMOVE, payload: spawner });\n    }, [dispatch]);\n\n    useEffect(function() {\n        onChange(group, spawners);\n    }, [group, onChange, spawners]);\n\n    const values = [];\n    if (visibility) {\n        spawners.forEach((def, i) => {\n            const key = `${i}-${def.type}-${def.weight}-${def.minCount}-${def.maxCount}`;\n            values.push(<SpawnDefinition data={def} key={key} onChange={handleChange} onDelete={handleRemove} entities={entities} />);\n        });\n        return <div>\n            <div className=\"toggle-label\">\n                {children} \n                <div className=\"btn-group\">\n                    <Button onClick={handleAdd}>Add</Button>\n                    {spawners.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{text}</Button>} \n                </div>\n            </div>\n            {values}\n        </div>;\n    }\n    \n    return <div className=\"toggle-label\">\n        {children}\n        <div className=\"btn-group\">\n            {spawners.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{text}</Button>}\n            {(spawners.length < 1) && <Button onClick={handleAdd}>Add</Button>}\n        </div>\n    </div>;\n}\n\nconst SpawnDefinition = React.memo(function({entities, onChange, onDelete, data}) {\n\n    const [definition, setDefinition] = useState(data);\n\n    const handleChange = function(e) {\n        const field = typeof e.target === 'undefined' ? 'type' : e.target.id;\n        const value = typeof e.target === 'undefined' ? e.value : parseInt(e.target.value);\n        setDefinition(definition => ({\n            ...definition,\n            [field]: value\n        }));\n        onChange(data, {...data, [field]: value});\n    };\n\n    const handleCountChange = function(e) {\n        const value = parseInt(e.target.value);\n        if ((e.target.id === 'minCount' && value <= definition.maxCount)\n            || (e.target.id === 'maxCount' && value >= definition.minCount)) {\n            setDefinition(definition => ({\n                ...definition,\n                [e.target.id]: value\n            }));\n            onChange(data, {...data, [e.target.id]: value});\n        } \n    };\n\n    const handleDelete = function(e) {\n        e.preventDefault();\n        onDelete(data);\n    };\n\n    const selectedOption = useMemo(function() {\n        return entities.find(o => o.value === definition.type);\n    }, [definition.type, entities]);\n\n    return <div>\n        <div className=\"form-group\">\n            <label>Mob type</label> : <Select options={entities} value={selectedOption} onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <div className=\"form-inline\">\n                <label htmlFor=\"weight\">Weight</label> : <input type=\"number\" id=\"weight\" required value={definition.weight} onChange={handleChange} />\n            </div>\n            <div className=\"form-inline\">\n                <label htmlFor=\"minCount\">Min count</label> : <input type=\"number\" id=\"minCount\" min=\"0\" required value={definition.minCount} onChange={handleCountChange} />\n            </div>\n            <div className=\"form-inline\">\n                <label htmlFor=\"maxCount\">Max count</label> : <input type=\"number\" id=\"maxCount\" min=\"0\" required value={definition.maxCount} onChange={handleCountChange} />\n            </div>\n            <div className=\"form-inline\"><Button cat=\"danger\" onClick={handleDelete}>Delete</Button></div>\n        </div>\n        <hr /> \n    </div>\n}, function(prev, next) {\n    return prev.entities.length === next.entities.length && prev.data === next.data;\n});","import React, { useCallback, useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport { FEATURES } from './BiomeDefaults';\nimport { useKeyedListOptions } from '../../hooks/context';\n\nexport default function GenFeatures({ onChange, features = FEATURES }) {\n\n    const [levels, setLevels] = useState(features);\n\n    const handleLevelChange = useCallback(function(priority, list) {\n        setLevels(levels => {\n            levels[priority] = list;\n            return levels;\n        })\n        onChange(levels);\n    }, [levels, onChange]);\n\n    useEffect(function() {\n        onChange(levels);\n    }, [levels, onChange]);\n\n    const elements = [];\n    levels.forEach((level, i) => {\n        elements.push(<li key={i}><GenFeaturesLevel value={level} onChange={handleLevelChange} priority={i} /></li>);\n    });\n    return <div className=\"form-group\">\n        <label>Features</label>\n        <p className=\"help\"><small className=\"text-muted\">Each generation feature is associated with a priority. The higher the priority, the later the feature will be applied.</small></p>\n        <ol>{elements}</ol>\n    </div>;\n}\n\nfunction GenFeaturesLevel({ onChange, priority, value }) {\n    const options = useKeyedListOptions('features');\n\n    const handleChange = useCallback(function(selectedOptions) {\n        onChange(priority, selectedOptions === null ? [] : selectedOptions.map(option => option.value));\n    }, [onChange, priority]);\n\n    return <Select isMulti options={options} onChange={handleChange} defaultValue={options.filter(o => value.includes(o.value))} />;\n}","export function hexColorToInteger(color) {\n    return parseInt(color.replace(/^#/, ''), 16);\n}\n\nexport function integerColorToHex(color) {\n    return '#' + (color & 0xFFFFFF).toString(16).padStart(6, '0');\n}","import React, { useState, useEffect, useCallback } from 'react';\nimport { integerColorToHex, hexColorToInteger } from '../../utils/color';\nimport { EFFECTS } from './BiomeDefaults';\nimport { useToggle } from '../../hooks/ui';\n\nexport function BiomeEffects({effects = EFFECTS, onChange}) {\n\n    const [colors, setColors] = useState(effects);\n    const [optional, toggleOption] = useToggle(effects.hasOwnProperty('foliage_color') || effects.hasOwnProperty('grass_color'));\n\n    const handleColorChange = useCallback(function(e) {\n        const id = e.target.id;\n        const value = e.target.value;\n        setColors(colors => ({\n            ...colors,\n            [id]: hexColorToInteger(value)\n        }));\n    }, []);\n\n    const handleToggleChange = useCallback(function(e) {\n        toggleOption(e.target.checked);\n    }, [toggleOption]);\n\n    useEffect(function () {\n        const next = { ...colors };\n        if (!optional) {\n            delete next.foliage_color;\n            delete next.grass_color;\n        }\n        onChange(next);\n    }, [optional, colors, onChange]);\n\n    return <>\n        <div className=\"form-inline\">\n            <label htmlFor=\"sky_color\">Sky color</label> : <input type=\"color\" id=\"sky_color\" required value={integerColorToHex(colors.sky_color)} onChange={handleColorChange} />\n        </div>\n        <div className=\"form-inline\">\n            <label htmlFor=\"fog_color\">Fog color</label> : <input type=\"color\" id=\"fog_color\" value={integerColorToHex(colors.fog_color)} onChange={handleColorChange} />\n        </div>\n        <div className=\"form-inline\">\n            <label htmlFor=\"water_color\">Water color</label> : <input type=\"color\" id=\"water_color\" value={integerColorToHex(colors.water_color)} onChange={handleColorChange} />\n        </div>\n        <div className=\"form-inline\">\n            <label htmlFor=\"water_fog_color\">Water fog color</label> : <input type=\"color\" id=\"water_fog_color\" value={integerColorToHex(colors.water_fog_color)} onChange={handleColorChange} />\n        </div>\n        {optional && <>\n            <div className=\"form-inline\">\n                <label htmlFor=\"foliage_color\">Foliage color</label> : <input type=\"color\" id=\"foliage_color\" value={integerColorToHex(colors.foliage_color || 10387789)} onChange={handleColorChange} />\n            </div>\n            <div className=\"form-inline\">\n                <label htmlFor=\"grass_color\">Grass color</label> : <input type=\"color\" id=\"grass_color\" value={integerColorToHex(colors.grass_color || 9470285)} onChange={handleColorChange} />\n            </div>\n        </>}\n        <div className=\"form-inline\">\n            <label htmlFor=\"block-toggle\">Optionals</label> : <input type=\"checkbox\" id=\"block-toggle\" className=\"checkbox\" checked={optional} onChange={handleToggleChange} />\n        </div>\n    </>\n}","import React, { useCallback, useState } from 'react';\nimport BiomeStarts from './BiomeStarts';\nimport Select from 'react-select';\nimport { Button } from '../../ui/Button';\nimport { BiomeSpawners } from './BiomeSpawners';\nimport { STARTS } from './BiomeDefaults';\nimport GenFeatures from './Features';\nimport { BiomeEffects } from './BiomeEffects';\nimport { useKeyedListOptions } from '../../hooks/context';\n\nexport function Biome({data = {}, onSave}) {\n\n    const [state, setState] = useState(data || { starts: STARTS, spawners: []});\n\n    const handleStartsChange = useCallback(function(starts) {\n        setState(state => {\n            state.starts = starts;\n            return state;\n        });\n    }, []);\n\n    const handleEffectsChange = useCallback(function(effects) {\n        setState(state => {\n            state.effects = effects;\n            return state;\n        });\n    }, []);\n\n    const handleFeaturesChange = useCallback(function(features) {\n        setState(state => {\n            state.features = features;\n            return state;\n        });\n    }, []);\n\n    const handleSpawnersChange = useCallback(function(spawners) {\n        setState(state => {\n            state.spawners = spawners;\n            return state;\n        });\n    }, []);\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        const formData = Object.fromEntries(new FormData(e.target));\n        const data = { ...formData, ...state };\n        data.spawn_costs = {};\n        data.carvers =  {\n            air: [\n              \"minecraft:cave\",\n              \"minecraft:canyon\"\n            ]\n        }; // @todo\n        Object.keys(formData).forEach(function(key) {\n            if (!isNaN(formData[key])) {\n                data[key] = parseFloat(formData[key]);\n            }\n        });\n        onSave(data);\n    }, [onSave, state]);\n\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit biome</h3>\n        <div className=\"form-group\">\n            <label htmlFor=\"key\">Identifier</label> : <input type=\"text\" name=\"key\" id=\"key\" required pattern=\"[a-z0-9._-]+\" placeholder=\"Ex. : my-biome\" defaultValue={data.key} />\n        </div>\n\n        <fieldset>\n            <legend>Colors</legend>\n            <div className=\"form-row\">\n                <BiomeEffects effects={state.effects} onChange={handleEffectsChange} />\n            </div>\n        </fieldset>\n\n        <fieldset>\n            <BiomeCategory category={data.category} />\n            <BiomePrecipitation value={data.precipitation} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Generation</legend>\n            <SurfaceBuilder value={data.surface_builder} />\n            <BiomeStarts onChange={handleStartsChange} starts={state.starts} />\n            <GenFeatures features={state.features} onChange={handleFeaturesChange} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Creatures</legend>\n            <BiomeSpawners data={state.spawners} onChange={handleSpawnersChange} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Settings</legend>\n            <div className=\"form-group form-row\">\n                <div><label htmlFor=\"scale\">Scale</label> : <input type=\"number\" name=\"scale\" step=\"0.05\" required defaultValue={data.scale || 0.05} /></div>\n                <div><label htmlFor=\"downfall\">Downfall</label> : <input type=\"number\" name=\"downfall\" step=\"0.1\" required defaultValue={data.downfall || 0.4} /></div>\n                <div><label htmlFor=\"depth\">Depth</label> : <input type=\"number\" name=\"depth\" step=\"0.01\" required defaultValue={data.depth || 0.12} /></div>\n                <div><label htmlFor=\"temperature\">Temperature</label> : <input type=\"number\" name=\"temperature\" step=\"0.1\" required defaultValue={data.temperature || 0.8} /></div>\n                <p className=\"mts\"><small className=\"text-muted\">The <em>scale</em> parameter defines terrain amplitude, <em>downfall</em> controls grass and foliage color, <em>depth</em> is the difference from sea level, <em>temperature</em> controls some gameplay features like whether snow golems take damage. The default values are those of the plains biome.</small></p>\n            </div>\n        </fieldset>\n        <div className=\"form-group mlm mbm\">\n            <Button type=\"submit\">Save</Button>\n        </div>\n    </form>;\n}\n\nfunction BiomeCategory({category = 'plains'}) {\n\n    const options = [\n        { value: 'beach', label: 'Beach' },\n        { value: 'desert', label: 'Desert' },\n        { value: 'extreme_hills', label: 'Extreme hills' },\n        { value: 'forest', label: 'Forest' },\n        { value: 'icy', label: 'Icy' },\n        { value: 'jungle', label: 'Jungle' },\n        { value: 'mesa', label: 'Mesa' },\n        { value: 'nether', label: 'Nether' },\n        { value: 'none', label: 'None' },\n        { value: 'ocean', label: 'Ocean' },\n        { value: 'plains', label: 'Plains' },\n        { value: 'river', label: 'River' },\n        { value: 'savanna', label: 'Savanna' },\n        { value: 'swamp', label: 'Swamp' },\n        { value: 'taiga', label: 'Taiga' },\n        { value: 'the_end', label: 'The end' },\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"category\">Category</label>\n        <Select options={options} defaultValue={options.find(o => o.value === category)} name=\"category\" />\n    </div>;\n}\n\nfunction BiomePrecipitation({value = 'rain'}) {\n\n    const options = [\n        { value: 'none', label: 'None' },\n        { value: 'rain', label: 'Rain' },\n        { value: 'snow', label: 'Snow' }\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"precipitation\">Precipitation</label>\n        <Select options={options} defaultValue={options.find(o => o.value === value)} name=\"precipitation\" />\n    </div>;\n}\n\nfunction SurfaceBuilder({value = 'minecraft:grass'}) {\n    const options = useKeyedListOptions('surfaces');\n    return <div className=\"form-group\">\n        <label htmlFor=\"surface_builder\">Surface builder</label>\n        <Select options={options} defaultValue={options.find(o => o.value === value)} name=\"surface_builder\" />\n    </div>;\n}\n","import React from 'react';\n\nexport function MenuItem({active, children, onClick}) {\n    const className = 'tabs-menu-link' + (active ? ' is-active' : '');\n    return <a href=\"#_\" className={className} onClick={onClick}>{children}</a>\n}","import React from 'react';\nimport Select from 'react-select';\nimport { useKeyedListOptions } from '../../hooks/context';\n\nexport function DimensionType({type = 'minecraft:overworld'}) {\n    const options = useKeyedListOptions('dimension_types');\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"dimension-type\">Dimension type</label>\n        <Select name=\"dimension-type\" options={options} defaultValue={options.find(o => o.value === type) || options[0]} />\n    </div>;\n}\n","import { MULTI_NOISE_BIOME_SOURCE } from './../components/dimension/DimensionDefaults';\n\n/**\n * @param {object} a \n * @param {object} b \n * @returns {boolean}\n */\nexport function objectsEqual(a, b) {\n    return Object.keys(a).length === Object.keys(b).length\n        && Object.keys(a).every(p => a[p] === b[p]);\n}\n\n/**\n * @param {string} str \n * @returns {string}\n */\nexport function capitalize(str) {\n    return str[0].toUpperCase() + str.substr(1);\n}\n\nexport function getStateValue(state, properties = {}) {\n    const actual = properties[state.name];\n    switch (state.type) {\n        case 'bool':\n            return actual === 'true' ? 'true' : 'false';\n        case 'int':\n            return actual || 0;\n        default:\n            return actual || state.values[0];\n    }\n}\n\nexport function hasDuplicatedObjects(objects) {\n    for (const a of objects) {\n        for (const b of objects) {\n            if (a !== b && objectsEqual(a, b)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n/**\n * @param {object} feature Unserialized feature\n * @returns {{type: string, config: object}[]} Decorators list\n */\nexport function findDecorators(feature) {\n    const decorators = [];\n\n    let f = null;\n    (function find(obj) {\n        for (const key of Object.keys(obj)) {\n            if (key === 'decorator') {\n                decorators.unshift(obj[key]);\n                if (f === null && !obj.feature.hasOwnProperty('decorator')) {\n                    f = obj.feature;\n                }\n            } else if (typeof obj[key] === 'object') {\n                find(obj[key]);\n            }\n        }\n    }(feature));\n\n    if (f === null) {\n        f = {};\n    }\n    return [decorators, f];\n}\n\n/**\n * @param {object} feature \n * @param {{type: string, config: object}[]} decorators \n * @param {string} name\n * @returns {object} Decorated feature\n */\nexport function buildDecorated(feature, decorators, name) {\n    if (decorators.length < 1) {\n        return feature;\n    }\n\n    const decorated = { type: 'minecraft:decorated', key: name };\n    let current = decorated;\n    decorators.forEach((decorator, i) => {\n        const f = i === (decorators.length - 1) ? feature : { type: 'minecraft:decorated' };\n        current.config = {\n            feature: f,\n            decorator\n        };\n        current = f;\n        if (i < 1) {\n            f.name = name;\n        }\n    });\n    return decorated;\n}\n\n/**\n * Rename object keys.\n * \n * @param {object} obj \n * @param {object} map \n * @returns {object}\n */\nfunction refitKeys(obj, map) {\n    const build = {};\n    for (const key in obj) {\n        const destKey = map[key] || key;\n\n        let value = obj[key];\n        if (typeof value === 'object') {\n            value = refitKeys(value, map);\n        }\n        build[destKey] = value;\n    }\n    return build;\n}\n\n/**\n * @param {string} group \n * @param {object} data \n * @returns {object}\n */\nexport function dataUpper(group, data) {\n    switch (group) {\n        case 'biomes':\n            // 20w30a: sky_color into effects\n            if (data.hasOwnProperty('sky_color')) {\n                data.effects.sky_color = data.sky_color;\n            }\n            return data;\n        case 'features':\n            // 20w30a: name -> type\n            const [decorators, feature] = findDecorators(data);\n            if (!feature.hasOwnProperty('type')) {\n                feature.type = feature.name;\n                delete feature.name;\n                return buildDecorated(\n                    feature,\n                    decorators.map(decorator => refitKeys(decorator, { name: 'type' })),\n                    data.key\n                );\n            }\n            return data;\n        case 'dimensions':\n            // 20w30a: multi_noise: firstOctave and amplitudes parameters\n            const source = data.generator.biome_source;\n            if (source.type === 'minecraft:multi_noise' && !source.hasOwnProperty('altitude_noise')) {\n                data.generator.biome_source = { ...MULTI_NOISE_BIOME_SOURCE, ...source };\n            }\n            return data;\n        default:\n            // 20w30a: name -> type\n            if (data.hasOwnProperty('name') && !data.hasOwnProperty('type')) {\n                data.type = data.name;\n            }\n            return data;\n    }\n}\n","import React from 'react';\n\nexport const NumberList = React.memo(function ({ numbers = [], onChange }) {\n\n    const handleChange = function(val, pos) {\n        onChange(numbers.map((n, i) => i === pos ? val : n));\n    };\n\n    return <div className=\"flex-container\">\n        {numbers.map((n, i) => <NumberInput key={i} number={n} onChange={(n) => handleChange(n, i)} />)}\n    </div>\n});\n\nconst NumberInput = React.memo(function ({ number, onChange }) {\n    return <input type=\"number\" value={number} onChange={e => onChange(parseInt(e.target.value))} />\n});","import React, { useState, useCallback, useContext, useEffect } from 'react';\nimport Select from 'react-select';\nimport { SeedField } from './DimensionGenerator';\nimport { useKeyedListOptions } from '../../hooks/context';\nimport { useMemo } from 'react';\nimport { useCrud, CRUD, useNumber, useKeyedOptionsState } from '../../hooks/form';\nimport { useToggle } from '../../hooks/ui';\nimport { DataContext } from '../../context/DataContext';\nimport { Button } from '../../ui/Button';\nimport { capitalize, hasDuplicatedObjects } from '../../utils/data';\nimport { NumberList } from '../../ui/NumberList';\nimport { MULTI_NOISE_BIOME_SOURCE } from './DimensionDefaults';\n\nexport function BiomeSource({biome_source = { type: 'minecraft:fixed' }, onChange}) {\n    const [source, setSource] = useState(biome_source);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:checkerboard', label: 'Checkerboard' },\n            { value: 'minecraft:fixed', label: 'Fixed' },\n            { value: 'minecraft:multi_noise', label: 'Multi noise' },\n        ];\n    }, []);\n\n    const handleSeedChange = useCallback(function(seed) {\n        setSource(source => ({ ...source, seed }));\n    }, []);\n    const handleTypeChange = useCallback(function(option) {\n        setSource(source => ({ type: option.value, seed: source.seed }));\n    }, []);\n    const handleCheckerboardSourceChange = useCallback(function(settings) {\n        setSource(source => ({ ...source, ...settings }));\n    }, []);\n    const handleFixedSourceChange = useCallback(function(biome) {\n        setSource(source => ({ ...source, biome }));\n    }, []);\n    const handleMultiSourceChange = useCallback(function(s) {\n        setSource(source => ({ ...source, ...s }));\n    }, []);\n\n    useEffect(() => onChange(source), [onChange, source]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === source.type);\n    }, [options, source.type]);\n\n    return <fieldset>\n        <legend>Biome source</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"biome-source-type\">Type</label><Select id=\"biome-source-type\" options={options} value={selected} onChange={handleTypeChange} />\n        </div>\n        <SeedField value={source.seed} onChange={handleSeedChange} />\n        <hr />\n        {source.type === 'minecraft:checkerboard' && <CheckerboardBiomeSource source={source} onChange={handleCheckerboardSourceChange} />}\n        {source.type === 'minecraft:fixed' && <FixedBiomeSource source={source.biome} onChange={handleFixedSourceChange} />}\n        {source.type === 'minecraft:multi_noise' && <MultiNoiseBiomeSource source={source} onChange={handleMultiSourceChange} />}\n    </fieldset>\n}\n\nconst CheckerboardBiomeSource = React.memo(function({source, onChange}) {\n    const [options, biomes, setBiomes] = useKeyedOptionsState('biomes', source.biomes, true);\n    const [scale, setScale] = useNumber(source.scale);\n\n    useEffect(() => onChange({ biomes, scale }), [biomes, onChange, scale]);\n\n    return <div className=\"form-group\">\n        <div className=\"form-group\">\n            <label htmlFor=\"biomes\">Biomes</label><Select options={options} isMulti isClearable={false} value={options.filter(o => biomes.includes(o.value))} onChange={setBiomes} id=\"biomes\" />\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"scale\">Scale (squares of 2<sup>scale</sup> chunks) : </label><input type=\"number\" id=\"scale\" value={scale} onChange={setScale} min=\"0\" />\n        </div>\n        {biomes.length < 1 && <p className=\"alert--warning\">Warning: a dimension must contain at least one biome!</p>}\n    </div>;\n});\n\nconst FixedBiomeSource = React.memo(function({source = 'minecraft:plains', onChange}) {\n    const [options, biome, setBiome] = useKeyedOptionsState('biomes', source);\n    useEffect(() => onChange(biome), [biome, onChange]);\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"fixed-biome\">Biome</label><Select options={options} value={options.find(o => o.value === biome)} onChange={setBiome} />\n    </div>;\n});\n\nconst MultiNoiseBiomeSource = React.memo(function({source = MULTI_NOISE_BIOME_SOURCE, onChange}) {\n    const options = useKeyedListOptions('biomes');\n    const [biomes, dispatch] = useCrud(source.biomes);\n\n    const [advanced, toggleAdvanced] = useToggle();\n    const handleNoiseChange = useCallback(function(type, noise) {\n        onChange(({ ...source, [type]: noise }));\n    }, [source, onChange]);\n\n    const handleAddClick = useCallback(function(e) {\n        e.preventDefault();\n        dispatch({ type: CRUD.ADD, payload: { biome: 'minecraft:plains', parameters: {\n            altitude: 0,\n            weirdness: 0,\n            offset: 0,\n            temperature: 0.8,\n            humidity: 0.4\n        } } });\n    }, [dispatch]);\n    const handleChange = useCallback(function(state, previous) {\n        dispatch({ type: CRUD.UPDATE, target: previous, payload: state });\n    }, [dispatch]);\n    const handleDeleteClick = useCallback(function(e, index) {\n        e.preventDefault();\n        dispatch({ type: CRUD.REMOVE, payload: biomes[index] });\n    }, [biomes, dispatch]);\n\n    const vanilla = useContext(DataContext).vanilla.biomes;\n    const custom = useContext(DataContext).custom.biomes;\n    const namespace = useContext(DataContext).namespace;\n    useEffect(function() {\n        if (biomes !== source.biomes) {\n            onChange({ ...source, biomes });\n        }\n    }, [biomes, onChange, source]);\n\n    const values = [];\n    biomes.forEach((entry, i) => {\n        const key = i;\n        values.push(<BiomeSelection namespace={namespace} vanilla={vanilla} custom={custom} biomesOptions={options} entry={entry} key={key} onChange={handleChange}><Button cat=\"danger\" onClick={(e) => handleDeleteClick(e, i)}>Delete</Button></BiomeSelection>);\n    });\n    return <>\n        <div className=\"flex-container\" style={{ alignItems: 'baseline' }}>\n            <h5>Biomes list</h5>\n            <Button onClick={handleAddClick} cat=\"primary mlm\">Add biome</Button>\n            <Button onClick={toggleAdvanced} cat=\"secondary\">Advanced</Button>\n        </div>\n        {advanced && <div className=\"grid-2-small-1 has-gutter mbm\">\n            {['temperature_noise', 'humidity_noise', 'altitude_noise', 'weirdness_noise']\n                .map(noise => <PerlinNoiseParameters\n                    key={noise}\n                    noise={source[noise] || MULTI_NOISE_BIOME_SOURCE[noise]}\n                    onChange={(n) => handleNoiseChange(noise, n)}>{capitalize(noise.replace('_', ' '))}</PerlinNoiseParameters>)}\n        </div>}\n        {values}\n        {hasDuplicatedObjects(biomes.map(biome => biome.parameters)) && <p className=\"alert--warning\">Warning: every biome must have a unique combination of parameters!</p>}\n    </>;\n});\n\nconst PerlinNoiseParameters = React.memo(function({children, noise = { firstOctave: -7, amplitudes: [1, 1] }, onChange}) {\n\n    const handleFirstOctaveChange = useCallback(function(e) {\n        onChange({ ...noise, firstOctave: parseInt(e.target.value) });\n    }, [noise, onChange]);\n    const handleAmplitudesChange = useCallback(function(amplitudes) {\n        onChange({ ...noise, amplitudes });\n    }, [noise, onChange]);\n\n    return <fieldset>\n        <legend>{children}</legend>\n        <div className=\"form-group form-row\">\n            <div><label>First octave</label> : <input type=\"number\" name=\"firstOctave\" defaultValue={noise.firstOctave} onChange={handleFirstOctaveChange} /></div>\n            <div className=\"form-row\"><div><label>Amplitudes</label> : </div><NumberList numbers={noise.amplitudes} onChange={handleAmplitudesChange} /></div>\n        </div>\n    </fieldset>;\n});\n\nconst BiomeSelection = React.memo(function({namespace, vanilla, custom, biomesOptions, entry, onChange, children}) {\n    const [selection, setSelection] = useState(entry);\n\n    const handleBiomeChange = useCallback(function(option) {\n        const biome = option.value;\n        const data = (vanilla.find(b => 'minecraft:' + b.name === biome) || custom.find(b => namespace + ':' + b.key === biome) || { rainfall: 0, temperature: 0 });\n        setSelection(selection => {\n            const parameters = {\n                altitude: selection.parameters.altitude || 0,\n                weirdness: selection.parameters.weirdness || 0,\n                offset: selection.parameters.offset || 0,\n                temperature: data.temperature || 0.8,\n                humidity: data.rainfall || 0.4\n            };\n            return { biome, parameters };\n        });\n    }, [custom, namespace, vanilla]);\n\n    const handleParameterChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = e.target.value;\n        setSelection(selection => {\n            const parameters = { ...selection.parameters, [name]: parseFloat(value) };\n            return { biome: selection.biome, parameters };\n        });\n    }, []);\n\n    useEffect(() => onChange(selection, entry), [entry, onChange, selection]);\n\n    const selected = useMemo(function() {\n        return biomesOptions.find(o => o.value === selection.biome);\n    }, [biomesOptions, selection.biome]);\n    return <div className=\"form-group\">\n        <Select options={biomesOptions} value={selected} onChange={handleBiomeChange} />\n        <div className=\"form-group form-row\">\n            <div><label>Altitude</label> : <input type=\"number\" id=\"altitude\" value={selection.parameters.altitude} onChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\" /></div>\n            <div><label>Weirdness</label> : <input type=\"number\" id=\"weirdness\" value={selection.parameters.weirdness} onChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\" /></div>\n            <div><label>Offset</label> : <input type=\"number\" id=\"offset\" value={selection.parameters.offset} onChange={handleParameterChange} step=\"0.1\" min=\"0\" max=\"1\"  /></div>\n            <div><label>Temperature</label> : <input type=\"number\" id=\"temperature\" value={selection.parameters.temperature} onChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\" /></div>\n            <div><label>Humidity</label> : <input type=\"number\" id=\"humidity\" value={selection.parameters.humidity} onChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\" /></div>\n            {children}\n        </div>\n    </div>\n});\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { BiomeSource } from './BiomeSource';\nimport { hashCode } from './../../utils/hash';\nimport Select from 'react-select';\nimport { useKeyedListOptions } from '../../hooks/context';\n\nexport function DimensionGenerator({generator, onChange}) {\n    \n    const [data, setData] = useState(generator);\n\n    const handleSeedChange = useCallback(function(seed) {\n        setData(data => {\n            data.seed = seed;\n            return data;\n        });\n        onChange(data);\n    }, [data, onChange]);\n\n    const handleSettingsChange = useCallback(function(settings) {\n        setData(data => {\n            data.settings = settings;\n            return data;\n        });\n        onChange(data);\n    }, [data, onChange]);\n\n    const handleBiomeSourceChange = useCallback(function(biome_source) {\n        setData(data => {\n            data.biome_source = biome_source;\n            return data;\n        });\n        onChange(data);\n    }, [data, onChange]);\n\n    useEffect(function () {\n        onChange(data);\n    }, [data, onChange]);\n\n    return <fieldset>\n        <legend>Noise dimension generator</legend>\n        <div className=\"form-group\">\n            <SeedField value={data.seed} onChange={handleSeedChange} />\n            <Settings settings={data.settings} onChange={handleSettingsChange} />\n            <BiomeSource biome_source={data.biome_source} onChange={handleBiomeSourceChange} />\n        </div>\n    </fieldset>;\n}\n\nexport const SeedField = React.memo(function({onChange, value = 286956243}) {\n    const [text, setText] = useState(value);\n\n    const handleChange = function(e) {\n        const value = e.target.value;\n        setText(value);\n        onChange(isNaN(value) ? hashCode(value) : parseInt(value));\n    };\n\n    return <div className=\"form-group\">\n        <label>Seed</label> : <input type=\"text\" value={text} onChange={handleChange} />\n    </div>\n});\n\nconst Settings = React.memo(function({onChange, settings = 'minecraft:overworld'}) {\n    const handleChange = useCallback(function(option) {\n        onChange(option.value);\n    }, [onChange]);\n\n    const options = useKeyedListOptions('noises');\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"settings\">Settings</label><Select options={options} defaultValue={options.find(o => o.value === settings)} onChange={handleChange} />\n    </div>;\n});","export function hashCode(s) {\n    let hash;\n    for (let i = 0; i < s.length; i++) { \n        hash = Math.imul(31, hash) + s.charCodeAt(i) | 0;\n    }\n    return hash;\n}","import React, { useCallback, useState } from 'react';\nimport { DimensionType } from './DimensionType';\nimport { DimensionGenerator } from './DimensionGenerator';\nimport { Button } from '../../ui/Button';\nimport { DIMENSION } from './DimensionDefaults';\n\nexport function Dimension({data = DIMENSION, onSave}) {\n\n    const [state, setState] = useState(data);\n\n    const handleGeneratorChange = useCallback(function(generator) {\n        setState(s => {\n            s.generator = generator;\n            return s;\n        });\n    }, []);\n\n    const handleSubmit = function (e) {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        const data = {...state};\n        data.key = formData.get('key');\n        data.type = formData.get('dimension-type');\n        onSave(data);\n    }\n\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit dimension</h3>\n        <div className=\"form-group\">\n            <label htmlFor=\"key\">Identifier</label> : <input type=\"text\" name=\"key\" id=\"key\" required pattern=\"[a-z0-9._-]+\" placeholder=\"Ex. : blue-dim\" defaultValue={data.key} />\n        </div>\n        <DimensionType type={state.type} />\n        <fieldset>\n            <legend>Generator configuration</legend>\n            <DimensionGenerator generator={state.generator} onChange={handleGeneratorChange} />\n        </fieldset>\n        <div className=\"form-group mlm mbm\">\n            <Button type=\"submit\">Save</Button>\n        </div>\n    </form>\n}","import React, { useState, useCallback, useContext, useMemo } from \"react\";\nimport Select from \"react-select\";\nimport { DataContext } from \"../../context/DataContext\";\nimport { Button } from '../../ui/Button';\nimport { getStateValue } from \"../../utils/data\";\nimport { useEffect } from \"react\";\nimport { CRUD, useCrud } from \"../../hooks/form\";\n\nexport const BlockStateProvider = React.memo(function({block = { type: 'minecraft:simple_state_provider' }, onChange}) {\n    const [provider, setProvider] = useState(block);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:simple_state_provider', label: 'Simple state provider' },\n            { value: 'minecraft:weighted_state_provider', label: 'Weighted state provider' }\n        ];\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        setProvider({ type: option.value });\n    }, []);\n\n    const handleSimpleStateChange = useCallback(function(state) {\n        setProvider(provider => ({ ...provider, state }));\n    }, []);\n\n    const handleWeighestStateChange = useCallback(function(entries) {\n        setProvider(provider => ({ ...provider, entries }));\n    }, []);\n\n    useEffect(() => onChange(provider), [onChange, provider]);\n\n    return <div>\n        <label>Type</label>\n        <Select options={options} value={options.find(o => o.value === provider.type)} onChange={handleTypeChange} />\n        {(provider.type === 'minecraft:simple_state_provider' || provider.type === 'minecraft:rotated_block_provider') && <BlockState block={provider.state} onChange={handleSimpleStateChange} />}\n        {provider.type === 'minecraft:weighted_state_provider' && <WeightedStateProvider entries={(provider.entries || []).map(entry => entry.data)} onChange={handleWeighestStateChange} />}\n    </div>\n});\n\nexport const BlockState = React.memo(function({block = {}, children, name, onChange}) {\n    const context = useContext(DataContext);\n    const [data, setData] = useState(block);\n\n    const handleTypeChange = useCallback(function(option) {\n        const Name = option.value;\n        const Properties = {};\n        (context.vanilla.blocks.find(b => 'minecraft:' + b.name === Name) || { states: [] }).states.forEach(state => {\n            Properties[state.name] = getStateValue(state);\n        })\n        if (Object.keys(Properties).length > 0) {\n            setData({ Name, Properties });\n        } else {\n            setData({ Name });\n        }\n    }, [context.vanilla.blocks]);\n    const handlePropertiesChange = useCallback(function(Properties) {\n        setData(data => ({ ...data, Properties }))\n    }, []);\n    useEffect(() => {\n        if (data !== block) {\n            onChange(data, block);\n        }\n    }, [onChange, data, block]);\n\n    const options = useMemo(function() {\n        return context.vanilla.blocks.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n    }, [context.vanilla.blocks]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === data.Name);\n    }, [options, data.Name]);\n\n    return <div className=\"form-group\">\n        <Select options={options} value={selected} name={name} onChange={handleTypeChange} />\n        <BlockStateProperties block={data.Name} Properties={block.Properties} onChange={handlePropertiesChange}>{children}</BlockStateProperties>\n    </div>;\n});\n\nexport const BlocksList = React.memo(function({list, onChange}) {\n    const [blocks, dispatch] = useCrud(list);\n\n    const handleAddClick = useCallback(function(e) {\n        e.preventDefault();\n        dispatch({ type: CRUD.ADD, payload: { Name: 'minecraft:stone', Properties: {} } });\n    }, [dispatch]);\n    const handleChange = useCallback(function(state, previous) {\n        dispatch({ type: CRUD.UPDATE, target: previous, payload: state });\n    }, [dispatch]);\n    const handleDeleteClick = useCallback(function(e, index) {\n        e.preventDefault();\n        dispatch({ type: CRUD.REMOVE, payload: blocks[index] });\n    }, [blocks, dispatch]);\n\n    useEffect(() => onChange(blocks), [blocks, onChange]);\n\n    const values = [];\n    blocks.forEach((entry, i) => {\n        const key = i;\n        values.push(<BlockState block={entry} key={key} onChange={handleChange}><Button cat=\"danger\" onClick={(e) => handleDeleteClick(e, i)}>Delete</Button></BlockState>);\n    });\n\n    return <div className=\"form-group\">{values}<Button onClick={handleAddClick}>Add</Button></div>;\n});\n\nconst WeightedStateProvider = React.memo(function({entries = [], onChange}) {\n\n    const handleChange = useCallback(function(blocks) {\n        onChange(blocks.map(data => ({ data })));\n    }, [onChange]);\n\n    return <BlocksList list={entries} onChange={handleChange} />;\n});\n\nfunction BlockStateProperties({block, children, onChange, Properties = {}}) {\n    const states = (useContext(DataContext).vanilla.blocks.find(b => 'minecraft:' + b.name === block) || { states: [] }).states;\n    const [properties, setProperties] = useState(Properties);\n\n    const handlePropertyChange = useCallback(function(option) {\n        setProperties(properties => ({ ...properties, [option.name]: option.value }));\n    }, []);\n    const handleCheckboxChange = useCallback(function(e) {\n        const value = e.target.checked.toString();\n        setProperties(properties => ({ ...properties, [e.target.id]: value }));\n    }, []);\n    const handleNumberChange = useCallback(function(e) {\n        const value = e.target.value;\n        setProperties(properties => ({ ...properties, [e.target.id]: value }));\n    }, []);\n    useEffect(() => onChange(properties), [onChange, properties]);\n\n    const selects = [];\n    states.forEach(possible => {\n        switch(possible.type) {\n            case 'bool':\n                selects.push(<div key={possible.name}>\n                    <label>{possible.name}</label> : <input type=\"checkbox\" id={possible.name} className=\"checkbox\" checked={Properties[possible.name] === 'true'} onChange={handleCheckboxChange} />\n                </div>);\n                break;\n            case 'int':\n                selects.push(<div key={possible.name}>\n                    <label>{possible.name}</label> : <input type=\"number\" id={possible.name} value={Properties[possible.name] || 0} onChange={handleNumberChange} min=\"0\" max={possible.num_values - 1} />\n                </div>);\n                break;\n            default:\n                const options = possible.values.map(value => ({ value, name: possible.name, label: value }));\n                const defaultValue = options.find(o => o.value === Properties[possible.name]) || options[0];\n                selects.push(<div key={possible.name}>\n                    <label>{possible.name}</label> : <div className=\"inbl\"><Select options={options} value={defaultValue} onChange={handlePropertyChange} /></div>\n                </div>);\n        }\n    });\n    return <div className=\"form-group form-row\">\n        {selects}{children}\n    </div>;\n}","import React, { useCallback, useMemo, useState, useEffect } from 'react';\nimport { BlockStateProvider } from '../state/BlockState';\nimport Select from 'react-select';\nimport { TREE_FEATURE_CONFIG } from './FeatureDefaults';\n\nexport function TreeFeatureConfig({configuration = TREE_FEATURE_CONFIG, onChange}) {\n\n    const [config, setConfig] = useState(configuration);\n\n    const handleTrunkProviderChange = useCallback(function(trunk_provider) {\n        setConfig(config => ({ ...config, trunk_provider }));\n    }, []);\n    const handleLeavesProviderChange = useCallback(function(leaves_provider) {\n        setConfig(config => ({ ...config, leaves_provider }));\n    }, []);\n    const handleFoliagePlacerChange = useCallback(function(foliage_placer) {\n        setConfig(config => ({ ...config, foliage_placer }));\n    }, []);\n    const handleTrunkPlacerChange = useCallback(function(trunk_placer) {\n        setConfig(config => ({ ...config, trunk_placer }));\n    }, []);\n\n    useEffect(function() {\n        onChange(config);\n    }, [config, onChange]);\n\n    return <div>\n        <fieldset>\n            <legend>Trunk provider</legend>\n            <BlockStateProvider block={config.trunk_provider} onChange={handleTrunkProviderChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Leaves provider</legend>\n            <BlockStateProvider block={config.leaves_provider} onChange={handleLeavesProviderChange} />\n        </fieldset>\n        <FoliagePlacer placer={config.foliage_placer} onChange={handleFoliagePlacerChange} />\n        <TrunkPlacer placer={config.trunk_placer} onChange={handleTrunkPlacerChange} />\n    </div>;\n}\n\nconst FoliagePlacer = React.memo(function({placer, onChange}) {\n    const [data, setData] = useState(placer);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'blob_foliage_placer', label: 'Blob foliage placer' },\n            { value: 'fancy_foliage_placer', label: 'Fancy foliage placer' }\n        ].map(o => {\n            o.value = 'minecraft:' + o.value;\n            return o;\n        });\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        const type = option.value;\n        setData(data => ({ ...data, type }));\n    }, []);\n\n    const handleValueChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = parseInt(e.target.value);\n        setData(data => {\n            const n = { ...data, [name]: value };\n            onChange(n);\n            return n;\n        });\n    }, [onChange]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === data.type) || options[0];\n    }, [options, data.type]);\n\n    return <fieldset>\n        <legend>Foliage placer</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"foliage_placer_type\">Type</label>\n            <Select options={options} name=\"foliage_placer_type\" value={selected} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <div><label htmlFor=\"radius\">Radius</label> : <input type=\"number\" id=\"radius\" value={data.radius} onChange={handleValueChange} /></div>\n            <div><label htmlFor=\"offset\">Offset</label> : <input type=\"number\" id=\"offset\" value={data.offset} onChange={handleValueChange} /></div>\n            {(data.type === 'minecraft:blob_foliage_placer' ||\n                data.type === 'minecraft:bush_foliage_placer' ||\n                data.type === 'minecraft:fancy_foliage_placer' ||\n                data.type === 'minecraft:jungle_foliage_placer'\n            ) && <div><label htmlFor=\"height\">Height</label> : <input type=\"number\" id=\"height\" value={data.height} onChange={handleValueChange} /></div>}\n        </div>\n    </fieldset>\n});\n\nconst TrunkPlacer = React.memo(function({placer, onChange}) {\n    const [data, setData] = useState(placer);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'straight_trunk_placer', label: 'Straight trunk placer' },\n            { value: 'forking_trunk_placer', label: 'Forking trunk placer' },\n            { value: 'giant_trunk_placer', label: 'Giant trunk placer' },\n            { value: 'mega_jungle_trunk_placer', label: 'Mega jungle trunk placer' },\n            { value: 'dark_oak_trunk_placer', label: 'Dark oak trunk placer' },\n            { value: 'fancy_trunk_placer', label: 'Fancy trunk placer' }\n        ].map(o => {\n            o.value = 'minecraft:' + o.value;\n            return o;\n        });\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        const type = option.value;\n        setData(data => ({ ...data, type }));\n    }, []);\n\n    const handleValueChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = parseInt(e.target.value);\n        setData(data => {\n            const n = { ...data, [name]: value };\n            onChange(n);\n            return n;\n        });\n    }, [onChange]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === data.type) || options[0];\n    }, [data.type, options]);\n\n    return <fieldset>\n        <legend>Trunk placer</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"foliage_placer_type\">Type</label>\n            <Select options={options} name=\"foliage_placer_type\" defaultValue={selected} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <div><label htmlFor=\"base_height\">Base height</label> : <input type=\"number\" id=\"base_height\" min=\"0\" max=\"32\" value={placer.base_height} onChange={handleValueChange} /></div>\n            <div><label htmlFor=\"height_rand_a\">First height rand</label> : <input type=\"number\" id=\"height_rand_a\" min=\"0\" max=\"24\" value={placer.height_rand_a} onChange={handleValueChange} /></div>\n            <div><label htmlFor=\"height_rand_b\">Second height rand</label> : <input type=\"number\" id=\"height_rand_b\" min=\"0\" max=\"24\" value={placer.height_rand_b} onChange={handleValueChange} /></div>\n        </div>\n    </fieldset>\n});","import React, { useCallback, useState, useMemo, useEffect } from 'react';\nimport { useCrud, CRUD } from '../../hooks/form';\nimport { Button } from '../../ui/Button';\nimport Select from 'react-select';\nimport { DECORATORS_OPTIONS, DECORATOR_EXTRA_COUNT_DEFAULTS, DECORATOR_DECORATED_DEFAULTS, DECORATOR_RANGE_DEFAULTS } from './FeatureDefaults';\n\nexport const DecoratorsList = React.memo(function({data, onChange}) {\n    const [decorators, dispatch] = useCrud(data);\n\n    const handleAddClick = useCallback(function(e) {\n        e.preventDefault();\n        const type = (DECORATORS_OPTIONS.filter(o => !decorators.some(d => d.type === o.value))[0] || { value: 'minecraft:count' }).value;\n        dispatch({ type: CRUD.ADD, payload: { type }, unshift: true });\n    }, [decorators, dispatch]);\n    const handleChange = useCallback(function(state, previous) {\n        dispatch({ type: CRUD.UPDATE, target: previous, payload: state });\n    }, [dispatch]);\n    const handleDeleteClick = useCallback(function(e, index) {\n        e.preventDefault();\n        dispatch({ type: CRUD.REMOVE, payload: decorators[index] });\n    }, [decorators, dispatch]);\n    useEffect(() => onChange(decorators), [decorators, onChange]);\n\n    const values = [];\n    decorators.forEach((decorator, i) => {\n        const key = decorator.type + '-' + i;\n        values.push(<Decorator data={decorator} key={key} onChange={handleChange}><Button cat=\"danger\" onClick={(e) => handleDeleteClick(e, i)}>Delete</Button></Decorator>);\n    });\n    return <fieldset>\n        <legend>Decorators wrappers</legend>\n        {values}\n        <Button onClick={handleAddClick}>Add decorator</Button>\n    </fieldset>\n});\n\nconst Decorator = React.memo(function({children, data = { type: 'minecraft:count' }, onChange}) {\n    const [decorator, setDecorator] = useState(data);\n\n    const handleSelectChange = useCallback(function(option) {\n        setDecorator({ type: option.value });\n    }, []);\n    const handleConfigChange = useCallback(function(config) {\n        setDecorator(decorator => ({ type: decorator.type, config }));\n    }, []);\n    useEffect(() => onChange(decorator, data), [data, decorator, onChange]);\n\n    const selected = useMemo(function() {\n        return DECORATORS_OPTIONS.find(o => o.value === decorator.type);\n    }, [decorator.type]);\n    return <div>\n        <div className=\"form-group\">\n            <label>Type</label>\n            <Select options={DECORATORS_OPTIONS} value={selected} onChange={handleSelectChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            {decorator.type === 'minecraft:chance' && <ChanceDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.type === 'minecraft:count' || decorator.type === 'minecraft:fire' || decorator.type === 'minecraft:count_multilayer') && <CountDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {decorator.type === 'minecraft:count_extra' && <ExtraCountDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.type === 'minecraft:decorated' || decorator.type === 'minecraft:square') && <DecoratedDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.type === 'minecraft:range' || decorator.type === 'minecraft:range_very_biased') && <RangeDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {children}\n        </div>\n    </div>;\n});\n\nconst ChanceDecorator = React.memo(function({config = {}, onChange}) {\n    const [chance, setChance] = useState(config.count || 32);\n\n    const handleChanceChange = useCallback(function(e) {\n        setChance(parseInt(e.target.value));\n    }, []);\n\n    useEffect(() => onChange({ chance }), [chance, onChange]);\n\n    return <div><label>Chance</label> : <input type=\"number\" value={chance} onChange={handleChanceChange} /></div>;\n});\n\nconst CountDecorator = React.memo(function({config = {}, onChange}) {\n    const [count, setCount] = useState(config.count || 25);\n\n    const handleCountChange = useCallback(function(e) {\n        setCount(parseInt(e.target.value));\n    }, []);\n\n    useEffect(() => onChange({ count }), [count, onChange]);\n\n    return <div><label>Count</label> : <input type=\"number\" value={count} onChange={handleCountChange} /></div>;\n});\n\nconst ExtraCountDecorator = React.memo(function({config = DECORATOR_EXTRA_COUNT_DEFAULTS, onChange}) {\n    const [configured, setConfig] = useState(config);\n\n    const handleNumberChange = useCallback(function(e) {\n        const value = parseFloat(e.target.value);\n        setConfig(configured => ({ ...configured, [e.target.id]: value }));\n    }, []);\n\n    useEffect(() => onChange(configured), [configured, onChange]);\n\n    return <>\n        <div><label>Count</label> : <input type=\"number\" id=\"count\" value={configured.count} onChange={handleNumberChange} /></div>\n        <div><label>Extra chance</label> : <input type=\"number\" id=\"extra_chance\" value={configured.extra_chance} onChange={handleNumberChange} step=\"0.1\" /></div>\n        <div><label>Extra count</label> : <input type=\"number\" id=\"extra_count\" value={configured.extra_count} onChange={handleNumberChange} /></div>\n    </>\n});\n\nconst DecoratedDecorator = React.memo(function({config = DECORATOR_DECORATED_DEFAULTS, onChange}) {\n\n    useEffect(() => onChange(config), [config, onChange]);\n    return <div></div>;\n});\n\nconst RangeDecorator = React.memo(function({config = DECORATOR_RANGE_DEFAULTS, onChange}) {\n    const [configured, setConfig] = useState(config);\n\n    const handleNumberChange = useCallback(function(e) {\n        const value = parseInt(e.target.value);\n        setConfig(configured => ({ ...configured, [e.target.id]: value }));\n    }, []);\n\n    useEffect(() => onChange(configured), [configured, onChange]);\n\n    return <>\n        <div><label>Bottom offset</label> : <input type=\"number\" id=\"bottom_offset\" value={configured.bottom_offset} onChange={handleNumberChange} /></div>\n        <div><label>Top offset</label> : <input type=\"number\" id=\"top_offset\" value={configured.top_offset} onChange={handleNumberChange} /></div>\n        <div><label>Y maximum</label> : <input type=\"number\" id=\"maximum\" value={configured.maximum} onChange={handleNumberChange} /></div>\n    </>\n});","import React, { useCallback, useState, useEffect } from 'react';\nimport { BlocksList, BlockStateProvider } from '../state/BlockState';\nimport { RANDOM_PATCH_FEATURE_CONFIG } from './FeatureDefaults';\n\nexport function RandomPatchFeature({configuration = RANDOM_PATCH_FEATURE_CONFIG, onChange}) {\n\n    const [config, setConfig] = useState(configuration);\n\n    const handleStateProviderChange = useCallback(function(state_provider) {\n        setConfig(config => ({ ...config, state_provider }));\n    }, []);\n    const handleWhitelistChange = useCallback(function(whitelist) {\n        setConfig(config => ({ ...config, whitelist }));\n    }, []);\n    const handleBlacklistChange = useCallback(function(blacklist) {\n        setConfig(config => ({ ...config, blacklist }));\n    }, []);\n    const handleValueChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = parseInt(e.target.value);\n        setConfig(config => ({ ...config, [name]: value }));\n    }, []);\n    const handleCheckboxChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = e.target.checked;\n        setConfig(config => ({ ...config, [name]: value }));\n    }, []);\n\n    useEffect(function() {\n        onChange(config);\n    }, [config, onChange]);\n\n    return <div>\n        <fieldset>\n            <legend>State provider</legend>\n            <BlockStateProvider block={config.state_provider} onChange={handleStateProviderChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Whitelist</legend>\n            <BlocksList list={config.whitelist} onChange={handleWhitelistChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Blacklist</legend>\n            <BlocksList list={config.blacklist} onChange={handleBlacklistChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Settings</legend>\n            <div className=\"form-group form-row\">\n                <div><label htmlFor=\"xspread\">X spread</label> : <input type=\"number\" id=\"xspread\" value={config.xspread} onChange={handleValueChange} /></div>\n                <div><label htmlFor=\"yspread\">Y spread</label> : <input type=\"number\" id=\"yspread\" value={config.yspread} onChange={handleValueChange} /></div>\n                <div><label htmlFor=\"zspread\">Z spread</label> : <input type=\"number\" id=\"zspread\" value={config.zspread} onChange={handleValueChange} /></div>\n                <div><label htmlFor=\"tries\">Tries</label> : <input type=\"number\" id=\"tries\" value={config.tries} onChange={handleValueChange} /></div>\n            </div>\n            <div className=\"form-group form-row\">\n                <div><label htmlFor=\"need_water\">Need water</label> : <input type=\"checkbox\" className=\"checkbox\" id=\"need_water\" checked={config.need_water} onChange={handleCheckboxChange} /></div>\n                <div><label htmlFor=\"project\">Project</label> : <input type=\"checkbox\" className=\"checkbox\" id=\"project\" checked={config.project} onChange={handleCheckboxChange} /></div>\n                <div><label htmlFor=\"can_replace\">Can replace</label> : <input type=\"checkbox\" className=\"checkbox\" id=\"can_replace\" checked={config.can_replace} onChange={handleCheckboxChange} /></div>\n            </div>\n        </fieldset>\n    </div>;\n}","import React, { useState, useCallback, useMemo, useContext, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport { DataContext } from \"../../context/DataContext\";\nimport { TAGS_OPTIONS } from \"../feature/FeatureDefaults\";\n\nexport const BlockPredicate = React.memo(function({target, onChange}) {\n    const [predicate, setPredicate] = useState(target);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:block_match', label: 'Block match' },\n            { value: 'minecraft:tag_match', label: 'Tag match' }\n        ];\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        setPredicate({ predicate_type: option.value });\n    }, []);\n    const handleBlockChange = useCallback(function(option) {\n        setPredicate(predicate => ({ ...predicate, block: option.value }));\n    }, []);\n    const handleTagChange = useCallback(function(option) {\n        setPredicate(predicate => ({ ...predicate, tag: option.value }));\n    }, []);\n    useEffect(() => onChange(predicate), [onChange, predicate]);\n\n    const context = useContext(DataContext);\n    const blocks = useMemo(function() {\n        return context.vanilla.blocks.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n    }, [context.vanilla.blocks]);\n\n    return <div>\n        <label>Predicate type</label>\n        <Select options={options} value={options.find(o => o.value === predicate.predicate_type)} onChange={handleTypeChange} />\n        {(predicate.predicate_type === 'minecraft:block_match') && <Select options={blocks} value={blocks.find(b => b.value === predicate.block)} onChange={handleBlockChange} />}\n        {(predicate.predicate_type === 'minecraft:tag_match') && <Select options={TAGS_OPTIONS} value={TAGS_OPTIONS.find(t => t.value === predicate.tag)} onChange={handleTagChange} />}\n    </div>;\n});","import React, { useCallback, useState, useEffect } from 'react';\nimport { ORE_FEATURE_CONFIG } from \"./FeatureDefaults\";\nimport { BlockPredicate } from '../state/BlockPredicate';\nimport { BlockState } from '../state/BlockState';\n\nexport function OreFeatureConfig({configuration = ORE_FEATURE_CONFIG, onChange}) {\n    const [config, setConfig] = useState(configuration);\n\n    const handlePredicateChange = useCallback(function(target) {\n        setConfig(config => ({ ...config, target }));\n    }, []);\n    const handleBlockChange = useCallback(function(state) {\n        setConfig(config => ({ ...config, state }));\n    }, []);\n    const handleValueChange = useCallback(function(e) {\n        const name = e.target.id;\n        const value = parseInt(e.target.value);\n        setConfig(config => ({ ...config, [name]: value }));\n    }, []);\n\n    useEffect(function() {\n        onChange(config);\n    }, [config, onChange]);\n\n    return <div>\n        <fieldset>\n            <legend>Target</legend>\n            <BlockPredicate target={config.target} onChange={handlePredicateChange} />\n        </fieldset>\n        <fieldset>\n            <legend>State</legend>\n            <BlockState block={config.state} onChange={handleBlockChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Settings</legend>\n            <div className=\"form-group\">\n                <label htmlFor=\"size\">Size</label> : <input type=\"number\" id=\"size\" value={config.size} onChange={handleValueChange} />\n            </div>\n        </fieldset>\n    </div>;\n}","import React, { useCallback, useMemo } from 'react';\nimport Select from 'react-select';\nimport { useState } from 'react';\nimport { TreeFeatureConfig } from './TreeFeature';\nimport { Button } from '../../ui/Button';\nimport { DecoratorsList } from './Decorator';\nimport { buildDecorated, findDecorators } from '../../utils/data';\nimport { DECORATED_TREE_CONFIG, DECORATED_RANDOM_PATCH_CONFIG, DECORATED_ORE_FEATURE_CONFIG } from './FeatureDefaults';\nimport { RandomPatchFeature } from './RandomPatchFeature';\nimport { OreFeatureConfig } from './OreFeature';\n\nexport function RawConfiguredFeature({data = DECORATED_TREE_CONFIG, onSave}) {\n    const [state, setState] = useState(data);\n\n    const [decorators, feature, type] = useMemo(function() {\n        const a = findDecorators(state);\n        return [...a, a[1].type];\n    }, [state]);\n\n    const handleSelectChange = useCallback(function(option) {\n        setState({...option.default});\n    }, []);\n    const handleSave = useCallback(function(feature, decorators) {\n        const name = document.getElementById('name').value;\n        const data = buildDecorated(feature, decorators, name);\n        if (data.key === '') {\n            alert('You must specify a key!')\n            return;\n        }\n        onSave(data);\n    }, [onSave]);\n\n    const options = useMemo(function() {\n        return [\n            { value: 'ore', label: 'Ore', default: DECORATED_ORE_FEATURE_CONFIG },\n            { value: 'random_patch', label: 'Random patch', default: DECORATED_RANDOM_PATCH_CONFIG },\n            { value: 'tree', label: 'Tree', default: DECORATED_TREE_CONFIG }\n        ].map(o => {\n            o.value = 'minecraft:' + o.value;\n            return o;\n        });\n    }, []);\n\n    return <div>\n        <h3>Edit configured feature</h3>\n        <div className=\"form-group\">\n            <label htmlFor=\"name\">Name</label> : <input type=\"text\" name=\"name\" id=\"name\" required pattern=\"[a-z0-9._-]+\" placeholder=\"Ex. : prismarine-tree\" defaultValue={(data || {}).key} />\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"type\">Type</label>\n            <Select options={options} value={options.find(o => o.value === type)} onChange={handleSelectChange} />\n        </div>\n        <hr />\n        <ConfiguredFeature key={type} feature={feature} deco={decorators} onSave={handleSave} />\n    </div>\n}\n\nfunction ConfiguredFeature({feature, deco, onSave}) {\n    const [configuration, configure] = useState(feature);\n    const [decorators, setDecorators] = useState(deco);\n\n    const handleConfigurationChange = useCallback(function(config) {\n        configure(configuration => ({ ...configuration, config }));\n    }, []);\n    const handleDecoratorsChange = useCallback(function(decorators) {\n        setDecorators(decorators);\n    }, []);\n\n    const handleSaveClick = useCallback(function(e) {\n        e.preventDefault();\n        onSave(configuration, decorators)\n    }, [configuration, decorators, onSave]);\n\n    return <>\n        {feature.type === 'minecraft:ore' && <OreFeatureConfig configuration={configuration.config} onChange={handleConfigurationChange} />}\n        {feature.type === 'minecraft:random_patch' && <RandomPatchFeature configuration={configuration.config} onChange={handleConfigurationChange} />}\n        {feature.type === 'minecraft:tree' && <TreeFeatureConfig configuration={configuration.config} onChange={handleConfigurationChange} />}\n        <DecoratorsList data={decorators} onChange={handleDecoratorsChange} />\n        <div className=\"form-group mlm mbm\">\n            <Button type=\"submit\" onClick={handleSaveClick}>Save</Button>\n        </div>\n    </>;\n}","import JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\nimport { dataUpper } from \"./data\";\n\nconst DIMENSIONS_PATH = /^data\\/([a-z0-9._-]+)\\/(dimension|dimension_type)\\/([a-z0-9._-]+).json$/;\nconst WORLDGEN_PATH = /^data\\/([a-z0-9._-]+)\\/worldgen\\/(biome|configured_feature|configured_surface_builder|noise_settings)\\/([a-z0-9._-]+).json$/;\n\nconst LEGACY_PATH_DETECTION = /^data\\/minecraft\\/(dimension|dimension_type|worldgen)\\/?\\w*\\/([a-z0-9._-]+)\\/([a-z0-9._-]+).json$/;\nconst LEGACY_DIMENSIONS_PATH = /^data\\/minecraft\\/(dimension|dimension_type)\\/([a-z0-9._-]+)\\/([a-z0-9._-]+).json$/;\nconst LEGACY_WORLDGEN_PATH = /^data\\/minecraft\\/worldgen\\/(biome|configured_feature|configured_surface_builder|noise_settings)\\/([a-z0-9._-]+)\\/([a-z0-9._-]+).json$/;\n\n/**\n * Build zip in blob.\n * \n * @param {string} namespace \n * @param {{ biomes: object[], dimensions: object[], features: object[], surfaces: object[] }} custom \n */\nexport function buildZip(namespace, custom) {\n    const zip = new JSZip();\n    zip.file('pack.mcmeta', JSON.stringify({ pack: { pack_format: 5, description: 'Custom dimension' } }, null, 4));\n    writeFile(zip, `data/${namespace}/dimension`, custom.dimensions);\n    writeFile(zip, `data/${namespace}/dimension_type`, custom.dimension_types);\n    writeFile(zip, `data/${namespace}/worldgen/biome`, custom.biomes);\n    writeFile(zip, `data/${namespace}/worldgen/configured_feature`, custom.features);\n    writeFile(zip, `data/${namespace}/worldgen/configured_surface_builder`, custom.surfaces);\n    writeFile(zip, `data/${namespace}/worldgen/noise_settings`, custom.noises);\n    zip.generateAsync({ type: 'blob' })\n        .then(function(content) {\n            saveAs(content, 'generated_datapack.zip');\n        });\n}\n\n/**\n * @param {File} file\n * @returns {Promise<[string, { biomes: object[], dimensions: object[], features: object[], surfaces: object[] }]>}\n */\nexport function readZip(file) {\n    return new Promise((resolve, reject) => {\n        if (file.type !== 'application/zip') {\n            reject(new Error('File is not a .zip'));\n        }\n\n        JSZip.loadAsync(file).then((zip) => {\n            extractDatapack(zip)\n                .then(resolve)\n                .catch(reject);\n        }).catch(reject);\n    });\n}\n\n/**\n * @param {JSZip} zip \n * @returns {Promise<string, object>}\n */\nfunction extractDatapack(zip) {\n    let mcmeta = false;\n    let namespace = 'test';\n    const data = {\n        biomes: [],\n        dimensions: [],\n        dimension_types: [],\n        features: [],\n        noises: [],\n        surfaces: []\n    };\n\n    return new Promise((resolve, reject) => {\n        const promises = [];\n        zip.forEach(function(path, entry) {\n            if (entry.dir) {\n                return;\n            }\n            if (entry.name === 'pack.mcmeta') {\n                mcmeta = true;\n                return;\n            }\n            const legacy = entry.name.match(LEGACY_PATH_DETECTION);\n            let regex = entry.name.match(DIMENSIONS_PATH) ? DIMENSIONS_PATH : WORLDGEN_PATH;\n            if (legacy) {\n                regex = entry.name.match(LEGACY_DIMENSIONS_PATH) ? LEGACY_DIMENSIONS_PATH : LEGACY_WORLDGEN_PATH;\n            }\n            promises.push(parseFile(legacy, regex, entry.name, zip.file(entry.name).async('text')));\n        });\n\n        if (!mcmeta) {\n            reject(new Error('Invalid datapack: no pack.mcmeta'));\n        }\n\n        Promise.all(promises).then(function(values) {\n            values.forEach(function(value) {\n                if (value === null) {\n                    return;\n                }\n\n                namespace = value.namespace;\n                data[value.type].push(value.data);\n            });\n            resolve([namespace, data]);\n        }).catch(e => reject(e));\n    });\n}\n\nfunction getFolderType(folder) {\n    switch (folder) {\n        case 'configured_feature':\n            return 'features';\n        case 'configured_surface_builder':\n            return 'surfaces';\n        case 'noise_settings':\n            return 'noises';\n        default:\n            return folder + 's';\n    }\n}\n\n/**\n * Parse json file when it will be ready.\n * \n * @param {boolean} legacy\n * @param {RegExp} pathRegex \n * @param {string} filename \n * @param {Promise<string>} contentPromise \n * @returns {Promise<{namespace: string, data: object, type: string}>}\n */\nasync function parseFile(legacy, pathRegex, filename, contentPromise) {\n    const d = pathRegex.exec(filename);\n    if (d === null) {\n        return new Promise((success) => success(null)); // Skip file\n    }\n\n    return new Promise((resolve, reject) => {\n        contentPromise.then(content => {\n            const obj = JSON.parse(content);\n            obj.key = d[3];\n            const data = dataUpper(getFolderType(d[1]), obj);\n            resolve({\n                namespace: d[legacy ? 2 : 1],\n                data,\n                type: getFolderType(d[legacy ? 1 : 2])\n            });\n        }).catch(e => {\n            if (e.name !== 'SyntaxError') {\n                console.error(e);\n            }\n            reject(new Error(`Cannot read ${filename}:\\n${e.message}`));\n        });\n    });\n}\n\nfunction writeFile(zip, path, elements) {\n    if (elements.length < 1) {\n        return;\n    }\n    const folder = zip.folder(path);\n    for (const el of elements) {\n        const w = {...el};\n        delete w.key;\n        folder.file(el.key + '.json', JSON.stringify(w, null, 2));\n    }\n}","import React, { useCallback, useState } from 'react';\nimport { BlockState } from '../state/BlockState';\nimport { Button } from '../../ui/Button';\nimport { SURFACE_TYPES_OPTIONS, SURFACE_BUILDER } from './SurfaceBuilderDefaults';\nimport Select from 'react-select';\n\nexport function SurfaceBuilder({data = SURFACE_BUILDER, onSave}) {\n    const [config, setConfig] = useState(data.config);\n\n    const handleTopMaterialChange = useCallback(function(top_material) {\n        setConfig(config => ({ ...config, top_material }));\n    }, []);\n    const handleUnderMaterialChange = useCallback(function(under_material) {\n        setConfig(config => ({ ...config, under_material }));\n    }, []);\n    const handleUnderwaterMaterialChange = useCallback(function(underwater_material) {\n        setConfig(config => ({ ...config, underwater_material }));\n    }, []);\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        onSave({\n            config,\n            type: formData.get('type'),\n            key: formData.get('key')\n        });\n    }, [config, onSave]);\n\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit surface builder</h3>\n        <div className=\"form-group\">\n            <label htmlFor=\"key\">Identifier</label> : <input type=\"text\" name=\"key\" id=\"key\" required pattern=\"[a-z0-9._-]+\" placeholder=\"Ex. : blackstone\" defaultValue={data.key} />\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"type\">Type</label> : <Select options={SURFACE_TYPES_OPTIONS} defaultValue={SURFACE_TYPES_OPTIONS.find(o => o.value === data.type)} name=\"type\" />\n            <p><small className=\"text-muted\">The builder type defines the shape of the surface. For example, the <em>swamp</em> type will create puddles while the <em>badlands</em> types will create small rocky peaks; the <em>nether</em> types will add a mix of nether blocks and expose more of the underneath material.</small></p>\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"top_material\">Top material</label> : <BlockState block={config.top_material} name=\"top_material\" onChange={handleTopMaterialChange} />\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"under_material\">Under material</label> : <BlockState block={config.under_material} name=\"under_material\" onChange={handleUnderMaterialChange} />\n        </div>\n        <div className=\"form-group\">\n            <label htmlFor=\"sea_lantern\">Underwater material</label> : <BlockState block={config.underwater_material} name=\"underwater_material\" onChange={handleUnderwaterMaterialChange} />\n        </div>\n        <div className=\"form-group mlm mbm\">\n            <Button type=\"submit\">Save</Button>\n        </div>\n    </form>;\n}","import React from 'react';\n\nexport const ConfInput = React.memo(function ({\n    attr,\n    checked, defaultChecked,\n    children,\n    name, id,\n    onChange,\n    value, defaultValue,\n    min, max, step,\n    style\n}) {\n\n    const uId = name || Math.random().toString(36).substr(2, 5) + '-' + id;\n\n    if (typeof checked !== 'undefined' || typeof defaultChecked !== 'undefined') {\n        return <div>\n            <label htmlFor={uId}>{children}</label> : <input type=\"checkbox\" data-name={name || id} name={name} id={uId} className=\"checkbox\" {...{ ...attr, checked, defaultChecked, onChange, value, style }} />\n        </div>\n    }\n    return <div>\n        <label htmlFor={uId}>{children}</label> : <input type={isNaN(typeof value === 'undefined' ? defaultValue : value) ? 'text' : 'number'} data-name={name || id} name={name} id={uId} {...{ ...attr, onChange, value, defaultValue, min, max, step, style }} />\n    </div>\n});","import React, { useCallback, useEffect, useState } from 'react';\nimport { ConfInput } from '../../ui/Input';\nimport { useToggle } from '../../hooks/ui';\nimport { useCrud, CRUD } from '../../hooks/form';\nimport Select from 'react-select';\nimport { STRUCTURES } from './NoiseDefaults';\nimport { Button } from '../../ui/Button';\n\nexport const Structures = React.memo(function ({ data, onChange }) {\n\n    const handleStrongholdChange = useCallback(function(stronghold) {\n        if (stronghold === false) {\n            onChange({ structures: data.structures });\n        } else {\n            onChange({ structures: data.structures, stronghold });\n        }\n    }, [data.structures, onChange]);\n    const handleStructuresChange = useCallback(function(structures) {\n        onChange({ ...data, structures });\n    }, [data, onChange]);\n\n    return <fieldset>\n        <legend>Structures</legend>\n        <Stronghold data={data.stronghold} onChange={handleStrongholdChange} />\n        <StructuresList data={data.structures} onChange={handleStructuresChange} />\n    </fieldset>\n});\n\nconst Stronghold = React.memo(function ({ data, onChange }) {\n\n    const [enabled, toggle] = useToggle(typeof data === 'object');\n    const [stronghold, setStronghold] = useState(data || { distance: 32, spread: 3, count: 128 });\n\n    const handleChange = useCallback(function(e) {\n        e.preventDefault();\n        const name = e.target.dataset.name;\n        const value = parseInt(e.target.value);\n        setStronghold(stronghold => ({ ...stronghold, [name]: value }));\n    }, [setStronghold]);\n\n    useEffect(function() {\n        if (data !== stronghold\n            || (enabled && typeof data === 'undefined')\n            || (!enabled && typeof data === 'object')) {\n                onChange(enabled ? stronghold : false);\n        }\n    }, [data, enabled, onChange, stronghold]);\n\n    return <div>\n        <div className=\"toggle-label\">Stronghold<Button cat=\"secondary\" onClick={toggle}>{enabled ? 'Disable' : 'Enable'}</Button></div>\n        {enabled && <div className=\"form-group form-row\">\n            <ConfInput id=\"distance\" defaultValue={stronghold.distance} onChange={handleChange} min=\"0\" max=\"1023\">Distance</ConfInput>\n            <ConfInput id=\"spread\" defaultValue={stronghold.spread} onChange={handleChange} min=\"0\" max=\"1023\">Spread</ConfInput>\n            <ConfInput id=\"count\" defaultValue={stronghold.count} onChange={handleChange} min=\"1\" max=\"4095\">Count</ConfInput>\n        </div>}\n    </div>\n});\n\nconst StructuresList = React.memo(function({ data, onChange }) {\n    const [visibility, toggle] = useToggle();\n    const [structures, dispatch] = useCrud(Object.entries(data).map(([type, d]) => ({ ...d, type })));\n\n    const handleAdd = useCallback(function(e) {\n        e.preventDefault();\n        dispatch({ type: CRUD.ADD, payload: {\n            type: 'minecraft:village',\n            spacing: 32,\n            separation: 8,\n            salt: 10387312\n        }, unshift: true });\n        if (!visibility) {\n            toggle();\n        }\n    }, [dispatch, toggle, visibility]);\n    const handleChange = useCallback(function(original, structure) {\n        dispatch({ type: CRUD.UPDATE, target: original, payload: structure });\n    }, [dispatch]);\n    const handleRemove = useCallback(function(structure) {\n        dispatch({ type: CRUD.REMOVE, payload: structure });\n    }, [dispatch]);\n\n    useEffect(function() {\n        const obj = {};\n        for (const structure of structures) {\n            obj[structure.type] = {\n                spacing: structure.spacing,\n                separation: structure.separation,\n                salt: structure.salt\n            };\n        }\n        onChange(obj);\n    }, [onChange, structures]);\n\n    return <div>\n        <div className=\"toggle-label\">\n            Structures\n            <div className=\"btn-group\">\n                <Button onClick={handleAdd}>Add</Button>\n                {structures.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{visibility ? 'Less...' : 'More...'}</Button>}\n            </div>\n        </div>\n        {visibility && structures.map((def, i) => \n            <Structure data={def} key={i} onChange={handleChange} onDelete={handleRemove} />\n        )}\n    </div>\n});\n\nconst Structure = React.memo(function ({ data, onChange, onDelete }) {\n\n    const handleChange = useCallback(function(e) {\n        const field = typeof e.target === 'undefined' ? 'type' : e.target.dataset.name;\n        const value = typeof e.target === 'undefined' ? e.value : parseInt(e.target.value);\n        onChange(data, { ...data, [field]: value });\n    }, [data,  onChange]);\n    const handleSpacingChange = useCallback(function(e) {\n        const name = e.target.dataset.name;\n        const value = parseInt(e.target.value);\n        if ((name === 'spacing' && value > data.separation)\n            || (e.target.dataset.name === 'separation' && value < data.spacing)) {\n            onChange(data, {...data, [name]: value});\n        } \n    }, [data,  onChange]);\n    const handleDelete = useCallback(function (e) {\n        e.preventDefault();\n        onDelete(data);\n    }, [data, onDelete]);\n\n    return <div>\n        <div className=\"form-group\">\n            <label>Type</label> : <Select options={STRUCTURES} value={STRUCTURES.find(s => s.value === data.type)} onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <ConfInput id=\"spacing\" value={data.spacing} onChange={handleSpacingChange} min=\"0\" max=\"4096\">Spacing</ConfInput>\n            <ConfInput id=\"separation\" value={data.separation} onChange={handleSpacingChange} min=\"0\" max=\"4096\">Spacing</ConfInput>\n            <ConfInput id=\"salt\" value={data.salt} onChange={handleChange} min=\"0\" max={0x7FFFFFFF} style={{ width: '150px' }}>Spacing</ConfInput>\n            <div className=\"form-inline\"><Button cat=\"danger\" onClick={handleDelete}>Delete</Button></div>\n        </div>\n        <hr /> \n    </div>\n});\n","import React, { useCallback, useState } from 'react';\nimport { BlockState } from '../state/BlockState';\nimport { Button } from '../../ui/Button';\nimport { useValueChange } from '../../hooks/form';\nimport { ConfInput } from '../../ui/Input';\nimport { OVERWORLD_NOISE } from './NoiseDefaults';\nimport { Structures } from './Structures';\n\nexport const NoiseSettings = React.memo(function ({ data = OVERWORLD_NOISE, onSave }) {\n\n    const [state, setState] = useState(data);\n\n    const handleSubmit = useCallback(function (e) {\n        e.preventDefault();\n        const formData = Object.fromEntries(new FormData(e.target));\n        const data = { ...formData, ...state };\n        Object.keys(formData).forEach(function (key) {\n            if (!isNaN(formData[key])) {\n                data[key] = parseFloat(formData[key]);\n            }\n        });\n        onSave(data);\n    }, [onSave, state]);\n\n    const handleBlockChange = useCallback(function (name, s) {\n        setState(state => ({ ...state, [name]: s }));\n    }, []);\n    const handleStructuresChange = useCallback(function (structures) {\n        setState(state => ({ ...state, structures }));\n    }, []);\n    const handleNoiseChange = useCallback(function (noise) {\n        setState(state => ({ ...state, noise }));\n    }, []);\n\n    return <form onSubmit={handleSubmit}>\n        <h3>Edit noise</h3>\n        <div className=\"form-group\">\n            <label htmlFor=\"key\">Identifier</label> : <input type=\"text\" name=\"key\" id=\"key\" required pattern=\"[a-z0-9._-]+\" placeholder=\"Example: epic\" defaultValue={data.key} />\n        </div>\n\n        <Structures data={data.structures} onChange={handleStructuresChange} />\n\n        <fieldset>\n            <legend>Defaults</legend>\n            <div className=\"form-group\">\n                <label>Block</label> : <BlockState block={state.default_block} onChange={state => handleBlockChange('default_block', state)} />\n            </div>\n            <div className=\"form-group\">\n                <label>Fluid</label> : <BlockState block={state.default_fluid} onChange={state => handleBlockChange('default_fluid', state)} />\n            </div>\n        </fieldset>\n\n        <fieldset>\n            <legend>Main</legend>\n            <div className=\"form-group form-row\">\n                <ConfInput name=\"bedrock_roof_position\" defaultValue={data.bedrock_roof_position}>Bedrock roof position</ConfInput>\n                <ConfInput name=\"bedrock_floor_position\" defaultValue={data.bedrock_floor_position}>Bedrock floor position</ConfInput>\n                <ConfInput name=\"sea_level\" defaultValue={data.sea_level}>Sea level</ConfInput>\n                <ConfInput name=\"disable_mob_generation\" defaultChecked={data.disable_mob_generation}>Disable mob generation</ConfInput>\n            </div>\n        </fieldset>\n\n        <NoiseConfig data={data.noise} onChange={handleNoiseChange} />\n\n        <div className=\"form-group mlm mbm\">\n            <Button type=\"submit\">Save</Button>\n        </div>\n    </form>;\n});\n\nconst NoiseConfig = React.memo(function ({ data, onChange }) {\n\n    const handleChange = useValueChange(onChange, data);\n    const handleSamplingChange = useCallback(function (sampling) {\n        onChange({ ...data, sampling });\n    }, [data, onChange]);\n    const handleTopSlideChange = useCallback(function (top_slide) {\n        onChange({ ...data, top_slide });\n    }, [data, onChange]);\n    const handleBottomSlideChange = useCallback(function (bottom_slide) {\n        onChange({ ...data, bottom_slide });\n    }, [data, onChange]);\n\n    return <fieldset>\n        <legend>Noise config (advanced)</legend>\n        <div className=\"form-group form-row\">\n            <ConfInput id=\"height\" defaultValue={data.height} onChange={handleChange} min=\"0\" max=\"256\">Height</ConfInput>\n            <ConfInput id=\"size_horizontal\" defaultValue={data.size_horizontal} onChange={handleChange} min=\"1\" max=\"4\">Size horizontal</ConfInput>\n            <ConfInput id=\"size_vertical\" defaultValue={data.size_vertical} onChange={handleChange} min=\"1\" max=\"4\">Size vertical</ConfInput>\n            <ConfInput id=\"density_factor\" defaultValue={data.density_factor} onChange={handleChange} step=\"0.01\">Density factor</ConfInput>\n            <ConfInput id=\"density_offset\" defaultValue={data.density_offset} onChange={handleChange} step=\"0.01\">Density offset</ConfInput>\n        </div>\n        <div className=\"form-group form-row\">\n            <ConfInput id=\"simplex_surface_noise\" defaultChecked={data.simplex_surface_noise} onChange={handleChange}>Simplex surface noise</ConfInput>\n            <ConfInput id=\"random_density_offset\" defaultChecked={data.random_density_offset} onChange={handleChange}>Random density offset</ConfInput>\n            <ConfInput id=\"island_noise_override\" defaultChecked={data.island_noise_override} onChange={handleChange}>Island noise override</ConfInput>\n            <ConfInput id=\"amplified\" defaultChecked={data.amplified} onChange={handleChange}>Amplified</ConfInput>\n        </div>\n\n        <NoiseSamplingConfig data={data.sampling} onChange={handleSamplingChange}>Sampling</NoiseSamplingConfig>\n        <SlideConfig data={data.top_slide} onChange={handleTopSlideChange}>Top slide</SlideConfig>\n        <SlideConfig data={data.bottom_slide} onChange={handleBottomSlideChange}>Bottom slide</SlideConfig>\n    </fieldset>\n});\n\nconst NoiseSamplingConfig = React.memo(function ({ children, data, onChange }) {\n\n    const handleChange = useValueChange(onChange, data);\n\n    return <fieldset>\n        <legend>{children}</legend>\n        <div className=\"form-group form-row\">\n            <ConfInput name=\"xz_scale\" defaultValue={data.xz_scale} onChange={handleChange}>XY scale</ConfInput>\n            <ConfInput name=\"y_scale\" defaultValue={data.y_scale} onChange={handleChange}>Y scale</ConfInput>\n            <ConfInput name=\"xz_factor\" defaultValue={data.xz_factor} onChange={handleChange}>XZ factor</ConfInput>\n            <ConfInput name=\"y_factor\" defaultValue={data.y_factor} onChange={handleChange}>Y factor</ConfInput>\n        </div>\n    </fieldset>\n});\n\nconst SlideConfig = React.memo(function ({ children, data, onChange }) {\n\n    const handleChange = useValueChange(onChange, data);\n\n    return <fieldset>\n        <legend>{children}</legend>\n        <div className=\"form-group form-row\">\n            <ConfInput id=\"target\" defaultValue={data.target} onChange={handleChange}>Target</ConfInput>\n            <ConfInput id=\"size\" defaultValue={data.size} onChange={handleChange}>Size</ConfInput>\n            <ConfInput id=\"offset\" defaultValue={data.offset} onChange={handleChange}>Offset</ConfInput>\n        </div>\n    </fieldset>\n});\n","import React, { useCallback, useState, useContext } from 'react';\nimport { Biome } from './biome/Biome';\nimport { Button } from './../ui/Button';\nimport { MenuItem } from './../ui/Menu';\nimport { Dimension } from './dimension/Dimension';\nimport { DataContext } from './../context/DataContext';\nimport { RawConfiguredFeature } from './feature/ConfiguredFeature';\nimport { buildZip } from '../utils/zip';\nimport { SurfaceBuilder } from './surface/SurfaceBuilder';\nimport { NoiseSettings } from './noise/NoiseSettings';\n\nexport function Datapack() {\n    const context = useContext(DataContext);\n    const custom = context.custom;\n    const namespace = context.namespace;\n    const [menu, setMenu] = useState({page: 'stats'});\n\n    const handleStatsClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'stats'});\n    }, []);\n    const handleAddBiomeClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'biome'});\n    }, []);\n    const handleAddDimensionClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'dimension'});\n    }, []);\n    const handleAddFeatureClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'feature'});\n    }, []);\n    const handleAddNoiseClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'noise'});\n    }, []);\n    const handleAddSurfaceBuilderClick = useCallback(function(e) {\n        e.preventDefault();\n        setMenu({page: 'surface'});\n    }, []);\n\n    const onBiomeSave = useCallback(function(biome) {\n        custom.updateBiomes(biome);\n        setMenu({page: 'stats'});\n    }, [custom]);\n    const onDimensionSave = useCallback(function(dimension) {\n        custom.updateDimensions(dimension);\n        setMenu({page: 'stats'});\n    }, [custom]);\n    const onFeatureSave = useCallback(function(feature) {\n        custom.updateFeatures(feature);\n        setMenu({page: 'stats'});\n    }, [custom]);\n    const onNoiseSave = useCallback(function(noise) {\n        custom.updateNoises(noise);\n        setMenu({page: 'stats'});\n    }, [custom]);\n    const onSurfaceBuilderSave = useCallback(function(surface_builder) {\n        custom.updateSurfacesBuilders(surface_builder);\n        setMenu({page: 'stats'});\n    }, [custom]);\n\n    const editBiome = useCallback(function(index) {\n        setMenu({page: 'biome', index});\n    }, []);\n    const editDimension = useCallback(function(index) {\n        setMenu({page: 'dimension', index});\n    }, []);\n    const editFeature = useCallback(function(index) {\n        setMenu({page: 'feature', index});\n    }, []);\n    const editNoise = useCallback(function(index) {\n        setMenu({page: 'noise', index});\n    }, []);\n    const editSurface = useCallback(function(index) {\n        setMenu({page: 'surface', index});\n    }, []);\n\n    return <div>\n        <h2>Datapack {namespace}</h2>\n        <div className=\"tabs\"><nav className=\"tabs-menu\">\n            <MenuItem onClick={handleStatsClick} active={menu.page === 'stats'}>Stats</MenuItem>\n            <MenuItem onClick={handleAddBiomeClick} active={menu.page === 'biome'}>Biome</MenuItem>\n            <MenuItem onClick={handleAddSurfaceBuilderClick} active={menu.page === 'surface'}>Surfaces builder</MenuItem>\n            <MenuItem onClick={handleAddFeatureClick} active={menu.page === 'feature'}>Feature</MenuItem>\n            <MenuItem onClick={handleAddDimensionClick} active={menu.page === 'dimension'}>Dimension</MenuItem>\n            <MenuItem onClick={handleAddNoiseClick} active={menu.page === 'noise'}>Noise</MenuItem>\n        </nav></div>\n        {menu.page === 'biome' && <Biome onSave={onBiomeSave} data={custom.biomes[menu.index]} />}\n        {menu.page === 'surface' && <SurfaceBuilder onSave={onSurfaceBuilderSave} data={custom.surfaces[menu.index]} />}\n        {menu.page === 'feature' && <RawConfiguredFeature onSave={onFeatureSave} data={custom.features[menu.index]} />}\n        {menu.page === 'noise' && <NoiseSettings onSave={onNoiseSave} data={custom.noises[menu.index]} />}\n        {menu.page === 'dimension' && <Dimension onSave={onDimensionSave} data={custom.dimensions[menu.index]} />}\n        {menu.page === 'stats' && <Stats custom={custom} namespace={namespace} editBiome={editBiome} editDimension={editDimension} editFeature={editFeature} editNoise={editNoise} editSurface={editSurface} />}\n    </div>\n}\n\nfunction Stats({custom, namespace, editBiome, editDimension, editFeature, editNoise, editSurface}) {\n\n    const handleBiomeClick = function(e, index) {\n        e.preventDefault();\n        editBiome(index);\n    }\n    const handleDimensionClick = function(e, index) {\n        e.preventDefault();\n        editDimension(index);\n    }\n    const handleFeatureClick = function(e, index) {\n        e.preventDefault();\n        editFeature(index);\n    }\n    const handleNoiseClick = function(e, index) {\n        e.preventDefault();\n        editNoise(index);\n    }\n    const handleSurfaceClick = function(e, index) {\n        e.preventDefault();\n        editSurface(index);\n    }\n\n    const handleGenerateClick = function(e) {\n        e.preventDefault();\n        buildZip(namespace, custom);\n    }\n\n    const mayGenerate = Object.values(custom).some(content => {\n        if (Array.isArray(content)) {\n            return content.length;\n        }\n        return false;\n    });\n\n    return <div className=\"mtm\">\n        <StatsTitle data={custom.biomes} onClick={handleBiomeClick}>custom biome</StatsTitle>\n        <StatsTitle data={custom.dimensions} onClick={handleDimensionClick}>custom dimension</StatsTitle>\n        <StatsTitle data={custom.features} onClick={handleFeatureClick}>configured feature</StatsTitle>\n        <StatsTitle data={custom.surfaces} onClick={handleSurfaceClick}>configured surface builder</StatsTitle>\n        <StatsTitle data={custom.noises} onClick={handleNoiseClick}>custom noise</StatsTitle>\n        {mayGenerate && <p><Button onClick={handleGenerateClick}>Generate</Button></p>}\n    </div>\n}\n\nfunction StatsTitle({ children, data, onClick }) {\n    return <>\n        <h5><strong>{data.length}</strong> {children}{data.length > 1 && 's'}</h5>\n        <ul>\n            {data.map((d, i) => <li key={i}><a href=\"#edit\" onClick={(e) => onClick(e, i)}>{d.key}</a></li>)}\n        </ul>\n    </>\n}","import React, { useState } from 'react';\nimport { Button } from '../ui/Button';\nimport { readZip } from '../utils/zip';\n\nexport function DatapackForm({onCreate}) {\n\n    const [error, setError] = useState(null);\n\n    const handleCreate = function(e) {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const namespace = data.get('namespace');\n        onCreate([namespace, undefined]);\n    };\n\n    const handleFile = function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const file = (e.dataTransfer || e.target).files[0];\n        readZip(file)\n            .then(onCreate)\n            .catch(error => {\n                console.error(error);\n                setError(error.message);\n            });\n    };\n    const handleDrag = function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n    };\n\n    return <form onSubmit={handleCreate} onDragStart={handleDrag} onDragEnter={handleDrag} onDragOver={handleDrag} onDrop={handleFile}>\n        <h2>Create a new dimension datapack</h2>\n        <div className=\"form-group\">\n            <label htmlFor=\"namespace\">Namespace</label> : <input type=\"text\" name=\"namespace\" id=\"namespace\" required pattern=\"[a-z0-9._-]+\" className=\"form-control\" aria-describedby=\"namespaceHelp\" />\n            <p><small id=\"namespaceHelp\" className=\"form-text text-muted\">This differentiates the datapack from the vanilla functions. Namespaces and identifiers may only contain letters, numbers and <code>._-</code> characters.</small></p>\n        </div>\n        <div className=\"flex-container\">\n            <Button type=\"submit\">Create</Button>\n            <input type=\"file\" name=\"load-existing-zip\" id=\"load-existing-zip\" accept=\".zip\" onChange={handleFile} /><label htmlFor=\"load-existing-zip\" className=\"btn--info\">Use existing datapack</label>\n        </div>\n        {error !== null && <div className=\"mtl\">\n            <div className=\"alert--danger\">{error}</div>\n        </div>}\n        <div className=\"mtl\">\n            <div className=\"alert--warning\">\n                This generator as well as the in-game functionality is unstable. Use this tool with caution.<br />\n                Currently built for pre-release 1. Datapacks created in snapshots will be converted to work in this pre-release.\n            </div>\n        </div>\n    </form>\n}","import React, { useState } from 'react';\nimport './../node_modules/knacss/css/knacss.css';\nimport './App.css';\nimport { Datapack } from './components/Datapack';\nimport { DataContextProvider } from './context/DataContext';\nimport { DatapackForm } from './components/DatapackForm';\n\nfunction App() {\n    const [data, setData] = useState(null);\n\n    return <>\n        {data !== null ? <DataContextProvider namespace={data[0]} initial={data[1]}><Datapack /></DataContextProvider> : <DatapackForm onCreate={setData} />}\n    </>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}