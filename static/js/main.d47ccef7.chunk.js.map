{"version":3,"sources":["serviceWorker.js","components/carver/CarverDefaults.js","components/dimension/DimensionDefaults.js","components/feature/VanillaFeatures.js","components/noise/NoiseDefaults.js","components/processor/ProcessorDefaults.js","components/surface/SurfaceBuilderDefaults.js","context/Paths.js","utils/fetch.js","utils/data.js","hooks/context.js","context/DataContext.jsx","ui/Toggle.jsx","ui/DarkModeToggle.jsx","ui/Menu.jsx","utils/math.js","utils/color.js","ui/Input.jsx","components/biome/BiomeDefaults.js","hooks/form.js","ui/Select.jsx","components/state/Tags.js","components/state/BlockPredicate.jsx","ui/Button.jsx","components/state/BlockState.jsx","components/biome/BiomeEffects.jsx","hooks/ui.js","components/biome/BiomeSpawners.jsx","components/biome/BiomeStarts.jsx","ui/Modal.jsx","ui/JsonViewer.jsx","components/NamespacedKey.jsx","hooks/select.js","components/carver/ConfiguredCarver.jsx","components/biome/Features.jsx","components/biome/Biome.jsx","viewers/biome_multi_noise/PerlinSamplers.js","utils/hash.js","viewers/biome_multi_noise/MultiNoiseDimension.js","components/dimension/MultiNoiseBiomeSource.jsx","ui/NumberList.jsx","components/dimension/BiomeSource.jsx","components/noise/Structures.jsx","components/dimension/FlatChunkSettings.jsx","components/noise/NoiseSettings.jsx","components/dimension/DimensionGenerator.jsx","components/dimension/DimensionType.jsx","components/dimension/Dimension.jsx","components/processor/PositionPredicate.jsx","components/processor/ProcessorList.jsx","components/feature/config/FeatureConfigDefaults.js","components/feature/DecoratedFeatureDefaults.js","components/state/BlockStateProvider.jsx","components/feature/decorator/DecoratorDefaults.js","components/utils/UniformInt.jsx","components/feature/decorator/Decorator.jsx","components/feature/config/DiskFeature.jsx","components/feature/config/ProbabilityFeature.jsx","components/feature/config/SingleStateFeature.jsx","components/feature/config/TreeFeature.jsx","components/feature/ConfiguredFeature.jsx","components/feature/config/BlockPileFeature.jsx","components/feature/config/DeltaFeature.jsx","components/feature/config/HugeFungusFeature.jsx","components/feature/config/NetherrackReplaceBlobsFeature.jsx","components/feature/config/OreFeature.jsx","components/feature/config/SimpleBlockFeature.jsx","components/feature/config/SpringFeature.jsx","components/feature/config/RandomPatchFeature.jsx","components/surface/SurfaceBuilder.jsx","utils/zip.js","components/Datapack.jsx","components/DatapackForm.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","VANILLA_CARVERS","value","label","probability","map","option","DIMENSION","generator","type","seed","biome_source","biome","settings","CHUNK_GENERATOR_TYPES","VANILLA_DIMENSION_TYPES","NOISES_NAMES","MULTI_NOISE_BIOME_SOURCE","temperature_noise","firstOctave","amplitudes","humidity_noise","altitude_noise","weirdness_noise","biomes","DIMENSION_TYPE_EFFECTS","DIMENSION_TYPE_INFINIBURN","OVERWORLD_DIMENSION_TYPE","has_raids","logical_height","infiniburn","effects","ambient_light","piglin_safe","bed_works","respawn_anchor_works","ultrawarm","natural","coordinate_scale","has_skylight","has_ceiling","OVERWORLD_CAVES_DIMENSION_TYPE","THE_NETHER_DIMENSION_TYPE","fixed_time","THE_END_DIMENSION_TYPE","VANILLA_FEATURES","VANILLA_NOISES","STRUCTURES","tag","OVERWORLD_NOISE","bedrock_roof_position","bedrock_floor_position","sea_level","disable_mob_generation","structures","stronghold","distance","spread","count","spacing","separation","salt","noise","height","sampling","xz_scale","y_scale","xz_factor","y_factor","top_slide","target","size","offset","bottom_slide","size_horizontal","size_vertical","density_factor","density_offset","simplex_surface_noise","default_block","Name","default_fluid","Properties","level","VANILLA_PROCESSORS","processor_list","PROCESSORS_OPTIONS","o","PROCESSOR_RULE_DEFAULTS","output_state","age","input_predicate","block","predicate_type","location_predicate","VANILLA_SURFACE_BUILDERS","SURFACE_TYPES_OPTIONS","SURFACE_BUILDER","config","top_material","snowy","under_material","underwater_material","PATHS","dimensions","dimension_types","carvers","features","surfaces","noises","processors","getAbsolutePath","namespace","identifier","replace","jsonFetch","url","options","a","headers","Accept","fetch","response","json","responseData","ok","objectsEqual","b","Object","keys","length","every","p","capitalize","str","toUpperCase","substr","displayNamespacedKey","key","defaultNamespace","startsWith","split","findDecorators","feature","decorators","f","find","obj","unshift","name","buildDecorated","decorated","current","forEach","decorator","i","dataUpper","group","data","hasOwnProperty","sky_color","refitKeys","build","destKey","source","some","n","shrunk","useData","initial","useState","setData","updateData","object","previous","stored","splice","findIndex","existing","push","indexOf","useKeyedListOptions","category","includeCustom","empty","context","useContext","DataContext","custom","keyed","struct","vanilla","displayName","React","createContext","blocks","entities","sounds","getVanillaResource","updateBiomes","updateCarvers","carver","updateDimensions","dimension","updateDimensionTypes","dimension_type","updateFeatures","updateNoises","updateProcessors","processor","updateSurfacesBuilders","surface_builder","DataContextProvider","children","setBiomes","setBlocks","setEntities","setSounds","customBiomes","vanillaZip","setVanillaZip","useEffect","then","entity","values","sound","useCallback","zip","blob","JSZip","loadAsync","Promise","reject","Error","message","absolute","file","JSON","async","parse","resolve","Provider","filter","includes","Toggle","ariaLabel","checked","id","onChange","className","aria-label","htmlFor","DarkModeToggle","darkMode","useDarkMode","title","onClick","disable","tabIndex","toggle","enable","MenuItem","active","href","role","aria-current","NavBar","rel","maintainPrecision","parseFloat","toFixed","perlinFade","t","lerp","delta","start","end","lerp2","deltaX","deltaY","n00","n10","n01","n11","grad","hash","x","y","z","h","u","v","hexColorToInteger","color","parseInt","integerColorToHex","toString","padStart","ConfInput","memo","attr","defaultChecked","defaultValue","min","max","step","style","uId","Math","random","isNaN","data-name","NumberInput","upChange","required","val","setValue","prevVal","setPrevValue","click","setClick","handleChange","e","endsWith","stepUpDown","addition","handleMouseDown","preventDefault","classList","contains","setInterval","handleClick","handleMouseUp","clearInterval","width","numeric","decimals","countDecimals","ceil","smooth","getNumberSize","onMouseDown","onMouseOut","onMouseUp","ColorInput","FEATURES","STARTS","SPAWNERS_DEFAULTS","ambient","weight","minCount","maxCount","creature","misc","monster","water_ambient","water_creature","BIOME_DEFAULTS","mood_sound","tick_delay","block_search_extent","fog_color","water_color","water_fog_color","air","starts","spawners","precipitation","scale","downfall","depth","temperature","player_spawn_friendly","spawn_costs","PARTICLES","particle","PARTICLE_DEFAULTS","crudReducer","state","action","ADD","payload","UPDATE","arrayMove","element","REMOVE","REPLACE","useCrudState","useReducer","useCrudPreset","add","update","oldIndex","newIndex","remove","useBlocksOptions","mapped","useMemo","useJsonEffect","props","stringify","CRUD","styles","control","backgroundColor","borderColor","boxShadow","transition","singleValue","menuList","input","menu","isFocused","isSelected","cursor","multiValue","multiValueLabel","multiValueRemove","TAGS_OPTIONS","BlockPredicate","handleTypeChange","handleBlockChange","handleBlockStateChange","block_state","handleTagChange","content","BlockSelect","BlockState","RandomBlockMatch","flexGrow","inputId","Button","loading","cat","buttonProps","states","properties","actual","getStateValue","handlePropertiesChange","selected","BlockStateProperties","BlocksList","addButton","list","handleAdd","handleRemove","filteredOptions","d","BlocksNamesList","handlePropertyChange","handleCheckboxChange","dataset","handleNumberChange","selects","possible","num_values","BiomeEffects","blockColor","setBlockColor","setParticle","handleColorChange","handleBlockColorChange","handleAmbientSoundChange","ambient_sound","handleMoodSoundChange","handleParticleChange","handleBlockColorToggle","foliage_color","grass_color","handleParticleToggle","blockColorChecked","particleChecked","ParticleEffect","flexShrink","isClearable","MoodSound","handleSoundChange","marginTop","handleScaleChange","handleProbabilityChange","op","DustColor","r","g","undefined","useToggle","status","setState","BiomeSpawners","groupSpawners","SpawnGroup","visibility","text","s","insert","spawner","index","SpawnDefinition","onDelete","handleValueChange","handleCountChange","handleDelete","selectedOption","BiomeStarts","selectedOptions","isMulti","Modal","open","onClose","modal","useModal","el","document","createElement","body","appendChild","removeChild","createPortal","JsonViewer","toggleModal","xmlns","viewBox","NamespacedKey","example","expectBreakage","inline","mayReplaceVanilla","defaultReplace","onSelect","onSelectLoad","hidden","useRef","setKey","fill","toggleFill","mayFill","setMayFill","handleKeyChange","toLowerCase","handleReplaceTargetChange","catch","console","error","handleKeyDown","form","dispatchEvent","Event","cancelable","handleToggle","handleFillToggle","inputValue","hiddenInputValue","apply","isFinite","dummyOnChange","log","pattern","placeholder","autoCapitalize","spellCheck","autoComplete","onKeyPress","ref","opacity","position","useInlineResources","resources","mutable","getInline","resource","res","ConfiguredCarver","handleAirChange","handleLiquidChange","liquid","handleNewClick","handleCarverCreated","optionsAir","selectedAir","optionsLiquid","selectedLiquid","ConfiguredCarverForm","onSave","setCarver","handleSelectChange","handleSubmit","stopPropagation","c","fromEntries","FormData","onSubmit","GenFeatures","handleLevelChange","priority","GenFeaturesLevel","Biome","handleCarversChange","handleStartsChange","handleEffectsChange","handleFeaturesChange","handleSpawnersChange","handleSurfaceBuilderChange","handlePrecipitationChange","handleCategoryChange","handleSpawnFriendlyChange","formData","BiomeCategory","BiomePrecipitation","SurfaceBuilder","creature_spawn_probability","DoublePerlinSampler","this","firstSampler","OctaveSimplexNoise","secondSampler","amplitude","createAmplitude","sample","sampler","PerlinNoiseSampler","j","k","octaveSamplers","Array","l","consumeRandom","m","random2","Random","lacunarity","pow","persistence","bl","originY","originX","nextDouble","originZ","permutations","buildPermutationsTable","Uint8Array","nextInt","rx","ry","rz","fx","floor","fy","fz","dx","dy","dz","fadeX","fadeY","fadeZ","_sample","sectionX","sectionY","sectionZ","localX","localY","localZ","fadeLocalX","fadeLocalY","fadeLocalZ","n001","n101","n011","n111","getGradient","q","hashCode","imul","charCodeAt","MultiNoiseDimension","temperatureNoise","humidityNoise","altitudeNoise","weirdnessNoise","biomeX","biomeY","biomeZ","humidity","altitude","weirdness","minDistance","Number","MAX_SAFE_INTEGER","getDistanceToBiome","parameters","image","offsetX","offsetY","buffer","ArrayBuffer","buf8","Uint8ClampedArray","data32","Uint32Array","endX","endY","biomesColors","getBiomesColors","getBiomeAt","set","MultiNoiseRepresentation","auto","setScale","reference","render","canvas","ctx","getContext","alpha","img","createImageData","putImageData","display","alignItems","moz-opaque","justifyContent","entries","marginLeft","marginRight","verticalAlign","NumberList","numbers","pos","BiomeSource","handleSeedChange","handleFixedSourceChange","SeedField","CheckerboardBiomeSource","FixedBiomeSource","MultiNoiseBiomeSource","VanillaLayeredBiomeSource","handleBiomesChange","selection","isArray","advanced","toggleAdvanced","handleNoiseChange","entry","BiomeSelection","biomesOptions","PerlinNoiseParameters","objects","hasDuplicatedObjects","handleLegacyBiomeToggle","legacy_biome_init_layer","handleLargeBiomesToggle","large_biomes","handleFirstOctaveChange","handleAmplitudesChange","margin","handleBiomeChange","rainfall","handleParameterChange","Structures","handleStrongholdChange","handleStructuresChange","Stronghold","StructuresList","enabled","setStronghold","dispatch","setPrevious","original","structure","def","Structure","handleSpacingChange","handleSaltChange","FlatChunkSettings","layers","handleLayersChange","handleLakesToggle","lakes","GeneratorLayers","shouldCancelStart","parentNode","handleReversedSort","SortableLayersList","onRemove","onSortEnd","SortableContainer","layer","Layer","reverse","SortableElement","handleHeightChange","NoiseGenerator","NoiseSettings","handleDisableMobGenerationChange","NoiseConfig","changeCallback","handleSamplingChange","handleTopSlideChange","handleBottomSlideChange","random_density_offset","island_noise_override","amplified","NoiseSamplingConfig","SlideConfig","DimensionGenerator","previousGenerator","setPreviousGenerator","handleChunkGeneratorChange","handleSettingsChange","handleBiomeSourceChange","fontWeight","fontSize","setText","DimensionType","handleTypeCreated","DimensionTypeForm","setConfig","handleVanillaSelect","handleFixedTimeToggle","InfiniburnIdentifier","marginBottom","textAlign","Dimension","handleGeneratorChange","PositionPredicate","predicate","LinearPosPredicate","AxisAlignedLinearPos","min_chance","max_chance","min_dist","max_dist","axis","handleAxisChange","ProcessorList","processor_type","StructureProcessor","handleAddBlockClick","handleAddProcessorClick","rules","CustomTag","BlockAgeProcessor","BlockIgnoreProcessor","BlockRotProcessor","BlockGravityProcessor","RuleProcessor","mossiness","integrity","rule","ProcessorRule","handleInputPredicate","handleLocationPredicate","handlePositionPredicate","position_predicate","handleOutputState","TREE_DECORATORS_OPTIONS","default","BLOCK_PILE_FEATURE_CONFIG","state_provider","HUGE_FUNGUS_FEATURE_CONFIG","hat_state","decor_state","planted","valid_base_block","stem_state","RANDOM_PATCH_FEATURE_CONFIG","can_replace","project","need_water","xspread","yspread","zspread","whitelist","blacklist","tries","block_placer","DECORATED_BLOCK_PILE_CONFIG","chance","DECORATED_HUGE_FUNGUS_CONFIG","DECORATED_ORE_FEATURE_CONFIG","bottom_offset","top_offset","maximum","DECORATED_RANDOM_PATCH_CONFIG","outer","inner","DECORATED_SPRING_FEATURE_CONFIG","rock_count","hole_count","valid_blocks","falling","requires_block_below","DECORATED_TREE_CONFIG","heightmap","minimum_size","limit","lower_size","upper_size","trunk_provider","leaves_provider","persistent","foliage_placer","radius","trunk_placer","base_height","height_rand_a","height_rand_b","extra_chance","extra_count","BlockStateProvider","similarities","handleSimpleStateChange","handleWeighestStateChange","filteredBlocks","WeightedStateProvider","handleStateChange","handleWeightChange","DECORATORS_OPTIONS","CARVERS_OPTIONS","DECORATOR_CARVING_MASK_DEFAULTS","DECORATOR_EXTRA_COUNT_DEFAULTS","DECORATOR_DECORATED_DEFAULTS","DECORATOR_RANGE_DEFAULTS","UniformInt","minBase","maxBase","maxSpread","base","DecoratorsList","SortableDecoratorsList","Decorator","setDecorator","handleConfigChange","CarvingMaskDecorator","ChanceDecorator","CountDecorator","ExtraCountDecorator","NoiseCountDecorator","NoiseBiasedCountDecorator","DecoratedDecorator","RangeDecorator","handleStepChange","noise_level","below_noise","above_noise","noise_to_count_ratio","noise_factor","noise_offset","DiskFeature","configuration","handleTargetsChange","targets","half_height","ProbabilityFeature","SingleStateFeature","FoliagePlacer","placer","crown_height","trunk_height","TrunkPlacer","TreeDecorators","TreeDecorator","handleAlterGroundChange","provider","contents","rim","rim_size","handleContentsChange","handleRimChange","handleDecorStateChange","handleHatStateChange","handlePlantedChange","handleStemStateChange","handleValidBaseBlockChange","handleTargetChange","handlePredicateChange","to_place","place_on","place_in","place_under","handleToPlaceChange","handlePlaceOnChange","handlePlaceInChange","handlePlaceUnderChange","handlRequiresBlockBelowChange","handleValidBlocksChange","handleStateProviderChange","handleWhitelistChange","handleBlacklistChange","handleTrunkProviderChange","handleLeavesProviderChange","handleFoliagePlacerChange","handleTrunkPlacerChange","handleDecoratorsChange","OPTIONS","RawConfiguredFeature","decorators_","feature_","setFeature","setDecorators","handleFeatureChange","configured_feature","get","FeatureConfig","handleTopMaterialChange","handleUnderMaterialChange","handleUnderwaterMaterialChange","DIMENSIONS_PATH","WORLDGEN_PATH","LEGACY_DIMENSIONS_PATH","LEGACY_WORLDGEN_PATH","buildZip","modified","elements","pack","pack_format","description","path","w","filename","folder","writeFile","generateAsync","saveAs","readZip","extractDatapack","legacy","mcmeta","promises","dir","regex","parseFile","all","getFolderType","pathRegex","contentPromise","exec","success","Datapack","page","setPage","useMenu","setMenu","handleSave","method","scrollTo","mayGenerate","surface","disabled","Main","Masonry","itemSelector","gutter","StatsTitle","invisible","confirm","DatapackForm","onCreate","setError","handleFile","dataTransfer","files","handleDrag","onDragStart","onDragEnter","onDragOver","onDrop","aria-describedby","accept","App","addEventListener","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gMAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,4EClBOC,EAAkB,CAC3B,CAAEC,MAAO,SAAUC,MAAO,SAAUC,YAAa,KACjD,CAAEF,MAAO,OAAQC,MAAO,OAAQC,YAAa,MAC7C,CAAEF,MAAO,cAAeC,MAAO,cAAeC,YAAa,IAC3D,CAAEF,MAAO,oBAAqBC,MAAO,oBAAqBC,YAAa,KACvE,CAAEF,MAAO,kBAAmBC,MAAO,kBAAmBC,YAAa,OACrEC,KAAI,SAAAC,GAEF,OADAA,EAAOJ,MAAQ,aAAeI,EAAOJ,MAC9BI,K,OCREC,EAAY,CACrBC,UAAW,CACPC,KAAM,kBACNC,KAAM,UACNC,aAAc,CACVF,KAAM,kBACNC,KAAM,UACNE,MAAO,oBAEXC,SAAU,uBAEdJ,KAAM,uBAGGK,EAAwB,CACjC,CAAEZ,MAAO,iBAAkBC,MAAO,wBAClC,CAAED,MAAO,kBAAmBC,MAAO,yBACnC,CAAED,MAAO,kBAAmBC,MAAO,0BAG1BY,EAA0B,CACnC,CAAEb,MAAO,sBAAuBC,MAAO,aACvC,CAAED,MAAO,4BAA6BC,MAAO,mBAC7C,CAAED,MAAO,uBAAwBC,MAAO,cACxC,CAAED,MAAO,oBAAqBC,MAAO,YAG5Ba,EAAe,CACxB,oBACA,iBACA,iBACA,mBAGSC,EAA2B,CACpCR,KAAM,wBACNC,KAAM,UACNQ,kBAAmB,CACfC,aAAc,EACdC,WAAY,CAAC,EAAG,IAEpBC,eAAgB,CACZF,aAAc,EACdC,WAAY,CAAC,EAAG,IAEpBE,eAAgB,CACZH,aAAc,EACdC,WAAY,CAAC,EAAG,IAEpBG,gBAAiB,CACbJ,aAAc,EACdC,WAAY,CAAC,EAAG,IAEpBI,OAAQ,IAGCC,EAAyB,CAClC,CAAEvB,MAAO,sBAAuBC,MAAO,aACvC,CAAED,MAAO,uBAAwBC,MAAO,cACxC,CAAED,MAAO,oBAAqBC,MAAO,YAG5BuB,EAA4B,CACrC,CAAExB,MAAO,iCAAkCC,MAAO,aAClD,CAAED,MAAO,8BAA+BC,MAAO,cAC/C,CAAED,MAAO,2BAA4BC,MAAO,YAGnCwB,EAA2B,CACpCC,WAAW,EACXC,eAAgB,IAChBC,WAAY,iCACZC,QAAS,sBACTC,cAAe,EACfC,aAAa,EACbC,WAAW,EACXC,sBAAsB,EACtBC,WAAW,EACXC,SAAS,EACTC,iBAAkB,EAClBC,cAAc,EACdC,aAAa,GAGJC,EAA8B,2BAAQd,GAAR,IAAkCa,aAAa,IAE7EE,EAA4B,CACrCd,WAAW,EACXC,eAAgB,IAChBC,WAAY,8BACZC,QAAS,uBACTC,cAAe,GACfC,aAAa,EACbC,WAAW,EACXC,sBAAsB,EACtBC,WAAW,EACXC,SAAS,EACTC,iBAAkB,EAClBK,WAAY,KACZJ,cAAc,EACdC,aAAa,GAGJI,EAAyB,CAClChB,WAAW,EACXC,eAAgB,IAChBC,WAAY,2BACZC,QAAS,oBACTC,cAAe,EACfC,aAAa,EACbC,WAAW,EACXC,sBAAsB,EACtBC,WAAW,EACXC,SAAS,EACTC,iBAAkB,EAClBK,WAAY,IACZJ,cAAc,EACdC,aAAa,GCrHJK,EAAmB,CAC5B,YACA,cACA,sBACA,eACA,aACA,uBACA,QACA,uBACA,uBACA,eACA,mBACA,kBACA,YACA,4BACA,2BACA,iBACA,iBACA,gBACA,gBACA,gBACA,qBACA,kBACA,iBACA,gBACA,iBACA,gBACA,qBACA,aACA,YACA,YACA,cACA,kBACA,iBACA,eACA,YACA,YACA,WACA,eACA,SACA,QACA,aACA,YACA,YACA,cACA,YACA,mBACA,cACA,sBACA,eACA,cACA,SACA,qBACA,cACA,eACA,gBACA,uBACA,cACA,eACA,WACA,aACA,YACA,WACA,eACA,aACA,kBACA,uBACA,qBACA,sBACA,kBACA,gBACA,oBACA,mBACA,oBACA,qBACA,uBACA,sBACA,qBACA,sBACA,oBACA,qBACA,oBACA,kBACA,2BACA,cACA,qBACA,wBACA,mBACA,qBACA,mBACA,mBACA,eACA,sBACA,yBACA,yBACA,0BACA,4BACA,mBACA,wBACA,sBACA,wBACA,sBACA,uBACA,qBACA,uBACA,qBACA,uBACA,qBACA,YACA,gBACA,kBACA,oBACA,kBACA,oBACA,oBACA,iBACA,WACA,aACA,cACA,cACA,eACA,WACA,WACA,iBACA,WACA,eACA,cACA,YACA,eACA,cACA,mBACA,mBACA,gBACA,wBACA,eACA,uBACA,sBACA,oBACA,MACA,WACA,QACA,SACA,SACA,OACA,cACA,YACA,sBACA,mBACA,cACA,YACA,wBACA,aACA,cACA,gBACA,eACA,eACA,kBACA,iBACA,iBACA,sBACA,qBACA,qBACA,eACA,eACA,cACA,iBACA,gBACA,eACA,eACA,yBACA,kCACA,2BACA,+BACA,6BACA,wBACA,sBACA,mBACA,0BACA,gBACA,aACA,cACA,sBACA,iBACA,cACA,cACA,mBACA,oBACA,qBACA,cACA,eACA,oBACA,6BC/LSC,EAAiB,CAC1B,CAAE5C,MAAO,sBAAuBC,MAAO,aACvC,CAAED,MAAO,mBAAoBC,MAAO,UACpC,CAAED,MAAO,gBAAiBC,MAAO,OACjC,CAAED,MAAO,sBAAuBC,MAAO,aACvC,CAAED,MAAO,kBAAmBC,MAAO,SACnC,CAAED,MAAO,6BAA8BC,MAAO,qBAGrC4C,EAAa,CACtB,aACA,kBACA,WACA,gBACA,QACA,YACA,YACA,iBACA,UACA,gBACA,UACA,kBACA,UACA,WACA,aACA,mBACA,iBACA,aACF1C,KAAI,SAAA2C,GAAG,MAAK,CAAE9C,MAAO,aAAe8C,EAAK7C,MAAO6C,MAErCC,EAAkB,CAC3BC,uBAAwB,GACxBC,uBAAwB,EACxBC,UAAW,GACXC,wBAAwB,EACxBC,WAAY,CACRC,WAAY,CACRC,SAAU,GACVC,OAAQ,EACRC,MAAO,KAEXJ,WAAY,CACR,uBAAwB,CACpBK,QAAS,GACTC,WAAY,EACZC,KAAM,UAEV,4BAA6B,CACzBF,QAAS,GACTC,WAAY,EACZC,KAAM,UAEV,qBAAsB,CAClBF,QAAS,GACTC,WAAY,EACZC,KAAM,UAEV,0BAA2B,CACvBF,QAAS,EACTC,WAAY,EACZC,KAAM,UAEV,kBAAmB,CACfF,QAAS,GACTC,WAAY,EACZC,KAAM,UAEV,sBAAuB,CACnBF,QAAS,GACTC,WA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AAW,iCAEfC,WAAY,SAEhBC,YAAa,SAAAN,GAAM,kCACZA,GADY,IAEf7G,MAAO,0BAEXoH,SAAU,SAAAP,GAAM,kCACTA,GADS,IAEZ7G,MAAO,uBACP+G,gBAAiB,0BACjB,SAAS,2BACFF,EAAO,WADd,IAEI7G,MAAO,mCAGfqH,MAAO,SAAAR,GAAM,kCACNA,GADM,IAET7G,MAAO,0BAEXsH,KAAM,SAAAT,GAAM,kCACLA,GADK,IAERE,gBAAiB,6BAErB9Y,OAAQ,SAAC4Y,EAAD,OAAWU,EAAX,EAAWA,UAAWC,EAAtB,EAAsBA,WAAtB,mBAAC,eACFX,GADC,IAEJ7G,MAAO,uBACPyH,OAAQ,UACRV,gBAAiBS,EACX,+BACAD,EACI,8BACA,KACV,UAAU,2BACHV,EAAO,YADd,IAEIE,gBAAiBS,EACX,+BACA,mCAGdE,WAAY,SAAAb,GAAM,kCACXA,GADW,IAEd7G,MAAO,uBACP+G,gBAAiB,yBAErBY,gBAAiB,SAAAd,GAAM,kCAChBA,GADgB,IAEnB7G,MAAO,uBACP+G,gBAAiB,yBAErBa,iBAAkB,SAAAf,GAAM,kCACjBA,GADiB,IAEpB,SAAS,2BACFA,EAAO,WADd,IAEIE,gBAAiB,6BAIzBL,OC7EHmB,GAAe,CACxB,cACA,QACA,sBACA,UACA,oBACA,uBACA,qBACA,OACA,gBACA,WACA,aACA,UACA,YACA,UACA,YACA,eACA,eACA,SACA,gBACA,QACA,gBACA,QACA,gBACA,oBACA,cACA,SACA,OACA,cACA,UACA,YACA,qBACA,oBACA,MACA,cACA,iBACA,oBACA,uBACA,cACA,SACA,OACA,iBACA,sBACA,qBACA,SACA,WACA,oBACA,SACA,UACA,kBACA,8BACA,QACA,OACA,WACA,gBACA,QACA,QACA,gBACA,wBACA,oBACA,cACA,SACA,iBACA,eACA,wBACA,sBACA,eACA,YACA,uBACA,yBACA,cACA,cACA,qBACA,aACA,QACA,eACA,cACA,gBACA,4BACA,iBACA,eACA,gBACA,yBACA,eACA,gBACA,mBACA,QACF7Z,KAAI,SAAA2C,GAAG,MAAK,CAAE9C,M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","file":"static/js/main.d47ccef7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const VANILLA_CARVERS = [\n    { value: 'canyon', label: 'Canyon', probability: 0.02 },\n    { value: 'cave', label: 'Cave', probability: 0.143 },\n    { value: 'nether_cave', label: 'Nether cave', probability: 0.2 },\n    { value: 'underwater_canyon', label: 'Underwater canyon', probability: 0.02  },\n    { value: 'underwater_cave', label: 'Underwater cave', probability: 0.067 }\n].map(option => {\n    option.value = 'minecraft:' + option.value;\n    return option;\n});\n","export const DIMENSION = {\n    generator: {\n        type: \"minecraft:noise\",\n        seed: 286956243,\n        biome_source: {\n            type: \"minecraft:fixed\",\n            seed: 286956243,\n            biome: \"minecraft:plains\"\n        },\n        settings: \"minecraft:overworld\"\n    },\n    type: \"minecraft:overworld\"\n};\n\nexport const CHUNK_GENERATOR_TYPES = [\n    { value: 'minecraft:flat', label: 'Flat chunk generator' },\n    { value: 'minecraft:debug', label: 'Debug chunk generator' },\n    { value: 'minecraft:noise', label: 'Noise chunk generator' }\n];\n\nexport const VANILLA_DIMENSION_TYPES = [\n    { value: 'minecraft:overworld', label: 'Overworld' },\n    { value: 'minecraft:overworld_caves', label: 'Overworld caves' },\n    { value: 'minecraft:the_nether', label: 'The Nether' },\n    { value: 'minecraft:the_end', label: 'The End' }\n];\n\nexport const NOISES_NAMES = [\n    'temperature_noise',\n    'humidity_noise',\n    'altitude_noise',\n    'weirdness_noise'\n];\n\nexport const MULTI_NOISE_BIOME_SOURCE = {\n    type: 'minecraft:multi_noise',\n    seed: 286956243,\n    temperature_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    humidity_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    altitude_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    weirdness_noise: {\n        firstOctave: -7,\n        amplitudes: [1, 1]\n    },\n    biomes: []\n};\n\nexport const DIMENSION_TYPE_EFFECTS = [\n    { value: 'minecraft:overworld', label: 'Overworld' },\n    { value: 'minecraft:the_nether', label: 'The Nether' },\n    { value: 'minecraft:the_end', label: 'The End' }\n];\n\nexport const DIMENSION_TYPE_INFINIBURN = [\n    { value: 'minecraft:infiniburn_overworld', label: 'Overworld' },\n    { value: 'minecraft:infiniburn_nether', label: 'The Nether' },\n    { value: 'minecraft:infiniburn_end', label: 'The End' }\n];\n\nexport const OVERWORLD_DIMENSION_TYPE = {\n    has_raids: true,\n    logical_height: 256,\n    infiniburn: \"minecraft:infiniburn_overworld\",\n    effects: \"minecraft:overworld\",\n    ambient_light: 0.0,\n    piglin_safe: false,\n    bed_works: true,\n    respawn_anchor_works: false,\n    ultrawarm: false,\n    natural: true,\n    coordinate_scale: 1,\n    has_skylight: true,\n    has_ceiling: false\n}\n\nexport const OVERWORLD_CAVES_DIMENSION_TYPE = { ...OVERWORLD_DIMENSION_TYPE, has_ceiling: true };\n\nexport const THE_NETHER_DIMENSION_TYPE = {\n    has_raids: false,\n    logical_height: 128,\n    infiniburn: \"minecraft:infiniburn_nether\",\n    effects: \"minecraft:the_nether\",\n    ambient_light: 0.1,\n    piglin_safe: true,\n    bed_works: false,\n    respawn_anchor_works: true,\n    ultrawarm: true,\n    natural: false,\n    coordinate_scale: 8,\n    fixed_time: 18000,\n    has_skylight: false,\n    has_ceiling: true\n}\n\nexport const THE_END_DIMENSION_TYPE = {\n    has_raids: true,\n    logical_height: 256,\n    infiniburn: \"minecraft:infiniburn_end\",\n    effects: \"minecraft:the_end\",\n    ambient_light: 0.0,\n    piglin_safe: false,\n    bed_works: false,\n    respawn_anchor_works: false,\n    ultrawarm: false,\n    natural: false,\n    coordinate_scale: 1,\n    fixed_time: 6000,\n    has_skylight: false,\n    has_ceiling: false\n}\n","export const VANILLA_FEATURES = [\n    \"end_spike\",\n    \"end_gateway\",\n    \"end_gateway_delayed\",\n    \"chorus_plant\",\n    \"end_island\",\n    \"end_island_decorated\",\n    \"delta\",\n    \"small_basalt_columns\",\n    \"large_basalt_columns\",\n    \"basalt_blobs\",\n    \"blackstone_blobs\",\n    \"glowstone_extra\",\n    \"glowstone\",\n    \"crimson_forest_vegetation\",\n    \"warped_forest_vegetation\",\n    \"nether_sprouts\",\n    \"twisting_vines\",\n    \"weeping_vines\",\n    \"basalt_pillar\",\n    \"seagrass_cold\",\n    \"seagrass_deep_cold\",\n    \"seagrass_normal\",\n    \"seagrass_river\",\n    \"seagrass_deep\",\n    \"seagrass_swamp\",\n    \"seagrass_warm\",\n    \"seagrass_deep_warm\",\n    \"sea_pickle\",\n    \"ice_spike\",\n    \"ice_patch\",\n    \"forest_rock\",\n    \"seagrass_simple\",\n    \"iceberg_packed\",\n    \"iceberg_blue\",\n    \"kelp_cold\",\n    \"kelp_warm\",\n    \"blue_ice\",\n    \"bamboo_light\",\n    \"bamboo\",\n    \"vines\",\n    \"lake_water\",\n    \"lake_lava\",\n    \"disk_clay\",\n    \"disk_gravel\",\n    \"disk_sand\",\n    \"freeze_top_layer\",\n    \"bonus_chest\",\n    \"void_start_platform\",\n    \"monster_room\",\n    \"desert_well\",\n    \"fossil\",\n    \"spring_lava_double\",\n    \"spring_lava\",\n    \"spring_delta\",\n    \"spring_closed\",\n    \"spring_closed_double\",\n    \"spring_open\",\n    \"spring_water\",\n    \"pile_hay\",\n    \"pile_melon\",\n    \"pile_snow\",\n    \"pile_ice\",\n    \"pile_pumpkin\",\n    \"patch_fire\",\n    \"patch_soul_fire\",\n    \"patch_brown_mushroom\",\n    \"patch_red_mushroom\",\n    \"patch_crimson_roots\",\n    \"patch_sunflower\",\n    \"patch_pumpkin\",\n    \"patch_taiga_grass\",\n    \"patch_berry_bush\",\n    \"patch_grass_plain\",\n    \"patch_grass_forest\",\n    \"patch_grass_badlands\",\n    \"patch_grass_savanna\",\n    \"patch_grass_normal\",\n    \"patch_grass_taiga_2\",\n    \"patch_grass_taiga\",\n    \"patch_grass_jungle\",\n    \"patch_dead_bush_2\",\n    \"patch_dead_bush\",\n    \"patch_dead_bush_badlands\",\n    \"patch_melon\",\n    \"patch_berry_sparse\",\n    \"patch_berry_decorated\",\n    \"patch_waterlilly\",\n    \"patch_tall_grass_2\",\n    \"patch_tall_grass\",\n    \"patch_large_fern\",\n    \"patch_cactus\",\n    \"patch_cactus_desert\",\n    \"patch_cactus_decorated\",\n    \"patch_sugar_cane_swamp\",\n    \"patch_sugar_cane_desert\",\n    \"patch_sugar_cane_badlands\",\n    \"patch_sugar_cane\",\n    \"brown_mushroom_nether\",\n    \"red_mushroom_nether\",\n    \"brown_mushroom_normal\",\n    \"red_mushroom_normal\",\n    \"brown_mushroom_taiga\",\n    \"red_mushroom_taiga\",\n    \"brown_mushroom_giant\",\n    \"red_mushroom_giant\",\n    \"brown_mushroom_swamp\",\n    \"red_mushroom_swamp\",\n    \"ore_magma\",\n    \"ore_soul_sand\",\n    \"ore_gold_deltas\",\n    \"ore_quartz_deltas\",\n    \"ore_gold_nether\",\n    \"ore_quartz_nether\",\n    \"ore_gravel_nether\",\n    \"ore_blackstone\",\n    \"ore_dirt\",\n    \"ore_gravel\",\n    \"ore_granite\",\n    \"ore_diorite\",\n    \"ore_andesite\",\n    \"ore_coal\",\n    \"ore_iron\",\n    \"ore_gold_extra\",\n    \"ore_gold\",\n    \"ore_redstone\",\n    \"ore_diamond\",\n    \"ore_lapis\",\n    \"ore_infested\",\n    \"ore_emerald\",\n    \"ore_debris_large\",\n    \"ore_debris_small\",\n    \"crimson_fungi\",\n    \"crimson_fungi_planted\",\n    \"warped_fungi\",\n    \"warped_fungi_planted\",\n    \"huge_brown_mushroom\",\n    \"huge_red_mushroom\",\n    \"oak\",\n    \"dark_oak\",\n    \"birch\",\n    \"acacia\",\n    \"spruce\",\n    \"pine\",\n    \"jungle_tree\",\n    \"fancy_oak\",\n    \"jungle_tree_no_vine\",\n    \"mega_jungle_tree\",\n    \"mega_spruce\",\n    \"mega_pine\",\n    \"super_birch_bees_0002\",\n    \"swamp_tree\",\n    \"jungle_bush\",\n    \"oak_bees_0002\",\n    \"oak_bees_002\",\n    \"oak_bees_005\",\n    \"birch_bees_0002\",\n    \"birch_bees_002\",\n    \"birch_bees_005\",\n    \"fancy_oak_bees_0002\",\n    \"fancy_oak_bees_002\",\n    \"fancy_oak_bees_005\",\n    \"oak_badlands\",\n    \"spruce_snowy\",\n    \"flower_warm\",\n    \"flower_default\",\n    \"flower_forest\",\n    \"flower_swamp\",\n    \"flower_plain\",\n    \"flower_plain_decorated\",\n    \"forest_flower_vegetation_common\",\n    \"forest_flower_vegetation\",\n    \"dark_forest_vegetation_brown\",\n    \"dark_forest_vegetation_red\",\n    \"warm_ocean_vegetation\",\n    \"forest_flower_trees\",\n    \"taiga_vegetation\",\n    \"trees_shattered_savanna\",\n    \"trees_savanna\",\n    \"birch_tall\",\n    \"trees_birch\",\n    \"trees_mountain_edge\",\n    \"trees_mountain\",\n    \"trees_water\",\n    \"birch_other\",\n    \"plain_vegetation\",\n    \"trees_jungle_edge\",\n    \"trees_giant_spruce\",\n    \"trees_giant\",\n    \"trees_jungle\",\n    \"bamboo_vegetation\",\n    \"mushroom_field_vegetation\"\n];\n","export const VANILLA_NOISES = [\n    { value: 'minecraft:overworld', label: 'Overworld' },\n    { value: 'minecraft:nether', label: 'Nether' },\n    { value: 'minecraft:end', label: 'End' },\n    { value: 'minecraft:amplified', label: 'Amplified' },\n    { value: 'minecraft:caves', label: 'Caves' },\n    { value: 'minecraft:floating_islands', label: 'Floating islands' }\n];\n\nexport const STRUCTURES = [\n    \"ocean_ruin\",\n    \"bastion_remnant\",\n    \"fortress\",\n    \"nether_fossil\",\n    \"igloo\",\n    \"shipwreck\",\n    \"swamp_hut\",\n    \"jungle_pyramid\",\n    \"village\",\n    \"ruined_portal\",\n    \"endcity\",\n    \"buried_treasure\",\n    \"mansion\",\n    \"monument\",\n    \"stronghold\",\n    \"pillager_outpost\",\n    \"desert_pyramid\",\n    \"mineshaft\"\n].map(tag => ({ value: 'minecraft:' + tag, label: tag }));;\n\nexport const OVERWORLD_NOISE = {\n    bedrock_roof_position: -10,\n    bedrock_floor_position: 0,\n    sea_level: 63,\n    disable_mob_generation: false,\n    structures: {\n        stronghold: {\n            distance: 32,\n            spread: 3,\n            count: 128\n        },\n        structures: {\n            \"minecraft:ocean_ruin\": {\n                spacing: 20,\n                separation: 8,\n                salt: 14357621\n            },\n            \"minecraft:bastion_remnant\": {\n                spacing: 27,\n                separation: 4,\n                salt: 30084232\n            },\n            \"minecraft:fortress\": {\n                spacing: 27,\n                separation: 4,\n                salt: 30084232\n            },\n            \"minecraft:nether_fossil\": {\n                spacing: 2,\n                separation: 1,\n                salt: 14357921\n            },\n            \"minecraft:igloo\": {\n                spacing: 32,\n                separation: 8,\n                salt: 14357618\n            },\n            \"minecraft:shipwreck\": {\n                spacing: 24,\n                separation: 4,\n                salt: 165745295\n            },\n            \"minecraft:swamp_hut\": {\n                spacing: 32,\n                separation: 8,\n                salt: 14357620\n            },\n            \"minecraft:jungle_pyramid\": {\n                spacing: 32,\n                separation: 8,\n                salt: 14357619\n            },\n            \"minecraft:village\": {\n                spacing: 32,\n                separation: 8,\n                salt: 10387312\n            },\n            \"minecraft:ruined_portal\": {\n                spacing: 40,\n                separation: 15,\n                salt: 34222645\n            },\n            \"minecraft:endcity\": {\n                spacing: 20,\n                separation: 11,\n                salt: 10387313\n            },\n            \"minecraft:buried_treasure\": {\n                spacing: 1,\n                separation: 0,\n                salt: 0\n            },\n            \"minecraft:mansion\": {\n                spacing: 80,\n                separation: 20,\n                salt: 10387319\n            },\n            \"minecraft:monument\": {\n                spacing: 32,\n                separation: 5,\n                salt: 10387313\n            },\n            \"minecraft:stronghold\": {\n                spacing: 1,\n                separation: 0,\n                salt: 0\n            },\n            \"minecraft:pillager_outpost\": {\n                spacing: 32,\n                separation: 8,\n                salt: 165745296\n            },\n            \"minecraft:desert_pyramid\": {\n                spacing: 32,\n                separation: 8,\n                salt: 14357617\n            },\n            \"minecraft:mineshaft\": {\n                spacing: 1,\n                separation: 0,\n                salt: 0\n            }\n        }\n    },\n    noise: {\n        height: 256,\n        sampling: {\n            xz_scale: 1,\n            y_scale: 1,\n            xz_factor: 80.0,\n            y_factor: 160.0\n        },\n        top_slide: {\n            target: -10,\n            size: 3,\n            offset: 0\n        },\n        bottom_slide: {\n            target: -30,\n            size: 0,\n            offset: 0\n        },\n        size_horizontal: 1,\n        size_vertical: 2,\n        density_factor: 1.0,\n        density_offset: -0.47,\n        simplex_surface_noise: true\n    },\n    default_block: {\n        Name: \"minecraft:stone\"\n    },\n    default_fluid: {\n        Properties: {\n            level: \"0\"\n        },\n        Name: \"minecraft:water\"\n    }\n}\n","export const VANILLA_PROCESSORS = [\n    'empty',\n    'zombie_plains',\n    'zombie_savanna',\n    'zombie_snowy',\n    'zombie_taiga',\n    'zombie_desert',\n    'mossify_10_percent',\n    'mossify_20_percent',\n    'mossify_70_percent',\n    'street_plains',\n    'street_savanna',\n    'street_snowy_or_taiga',\n    'farm_plains',\n    'farm_savanna',\n    'farm_snowy',\n    'farm_taiga',\n    'farm_desert',\n    'outpost_rot',\n    'bottom_rampart',\n    'treasure_rooms',\n    'housing',\n    'side_wall_degradation',\n    'stable_degradation',\n    'bastion_generic_degradation',\n    'rampart_degradation',\n    'entrance_replacement',\n    'bridge',\n    'roof',\n    'high_wall',\n    'high_rampart'\n].map(processor_list => ({ value: 'minecraft:' + processor_list, label: processor_list }));\n\nexport const PROCESSORS_OPTIONS = [\n    { value: 'blackstone_replace', label: 'Blackstone replace' },\n    { value: 'block_age', label: 'Block age' },\n    { value: 'block_ignore', label: 'Block ignore' },\n    { value: 'block_rot', label: 'Block rot' },\n    { value: 'gravity', label: 'Gravity' },\n    { value: 'jigsaw_replacement', label: 'Jigsaw replacement' },\n    { value: 'lava_submerged_block', label: 'Lava submerged block' },\n    { value: 'nop', label: 'Nop' },\n    { value: 'rule', label: 'Rule' }\n].map(o => {\n    o.value = 'minecraft:' + o.value;\n    return o;\n});\n\nexport const PROCESSOR_RULE_DEFAULTS = {\n    output_state: {\n        Properties: {\n            age: \"0\"\n        },\n        Name: \"minecraft:potatoes\"\n    },\n    input_predicate: {\n        block: \"minecraft:wheat\",\n        probability: 0.2,\n        predicate_type: \"minecraft:random_block_match\"\n    },\n    location_predicate: {\n        predicate_type: \"minecraft:always_true\"\n    }\n};\n","export const VANILLA_SURFACE_BUILDERS = [\n    { value: 'badlands', label: 'Badlands' },\n    { value: 'basalt_deltas', label: 'Basalt Deltas' },\n    { value: 'crimson_forest', label: 'Crimson forest' },\n    { value: 'desert', label: 'Desert' },\n    { value: 'end', label: 'End' },\n    { value: 'eroded_badlands', label: 'Eroded Badlands' },\n    { value: 'frozen_ocean', label: 'Frozen ocean' },\n    { value: 'full_sand', label: 'Full sand' },\n    { value: 'giant_tree_taiga', label: 'Giant tree taiga' },\n    { value: 'grass', label: 'Grass' },\n    { value: 'gravelly_mountain', label: 'Gravelly mountain' },\n    { value: 'ice_spikes', label: 'Ice spikes' },\n    { value: 'mountain', label: 'Mountain' },\n    { value: 'mycelium', label: 'Mycelium' },\n    { value: 'nether', label: 'Nether' },\n    { value: 'nope', label: 'Nope' },\n    { value: 'ocean_sand', label: 'Ocean sand' },\n    { value: 'shattered_savanna', label: 'Shattered savanna' },\n    { value: 'soul_sand_valley', label: 'Soul sand valley' },\n    { value: 'stone', label: 'Stone' },\n    { value: 'swamp', label: 'Swamp' },\n    { value: 'warped_forest', label: 'Warped forest' },\n    { value: 'wooded_badlands', label: 'Wooded badlands' },\n].map(option => {\n    option.value = 'minecraft:' + option.value;\n    return option;\n});\n\nexport const SURFACE_TYPES_OPTIONS = [\n    { value: 'default', label: 'Default' },\n    { value: 'mountain', label: 'Mountain' },\n    { value: 'shattered_savanna', label: 'Shattered savanna' },\n    { value: 'gravelly_mountain', label: 'Gravelly mountain' },\n    { value: 'giant_tree_taiga', label: 'Giant tree taiga' },\n    { value: 'swamp', label: 'Swamp' },\n    { value: 'badlands', label: 'Badlands' },\n    { value: 'wooded_badlands', label: 'Wooded badlands' },\n    { value: 'eroded_badlands', label: 'Eroded badlands' },\n    { value: 'frozen_ocean', label: 'Frozen ocean' },\n    { value: 'nether', label: 'Nether' },\n    { value: 'nether_forest', label: 'Nether forest' },\n    { value: 'soul_sand_valley', label: 'Soul sand valley' },\n    { value: 'basalt_deltas', label: 'Basalt deltas' },\n    { value: 'nope', label: 'Nope' }\n].map(option => {\n    option.value = 'minecraft:' + option.value;\n    return option;\n});\n\nexport const SURFACE_BUILDER = {\n    config: {\n        top_material: {\n            Properties: {\n                snowy: \"false\"\n            },\n            Name: \"minecraft:grass_block\"\n        },\n        under_material: {\n            Name: \"minecraft:dirt\"\n        },\n        underwater_material: {\n            Name: \"minecraft:gravel\"\n        }\n    },\n    type: \"minecraft:default\"\n}","const namespace = '%namespace%';\nexport const PATHS = {\n    dimensions: `data/${namespace}/dimension`,\n    dimension_types: `data/${namespace}/dimension_type`,\n    biomes: `data/${namespace}/worldgen/biome`,\n    carvers: `data/${namespace}/worldgen/configured_carver`,\n    features: `data/${namespace}/worldgen/configured_feature`,\n    surfaces: `data/${namespace}/worldgen/configured_surface_builder`,\n    noises: `data/${namespace}/worldgen/noise_settings`,\n    processors: `data/${namespace}/worldgen/processor_list`\n};\n\n/**\n * @param {('dimensions'|'dimension_types'|'biomes'|'carvers'|'features'|'surfaces'|'noises'|'processors')} type \n * @param {string} namespace \n * @param {string} identifier \n * @returns {string}\n */\nexport function getAbsolutePath(type, namespace, identifier) {\n    return PATHS[type].replace('%namespace%', namespace) + '/' + identifier + '.json';\n}\n","/**\n * @param {string} url\n * @param {object} options\n * @param {object} [headers]\n * @returns {Promise<object>}\n */\nexport async function jsonFetch(url, options, headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json'\n}) {\n    const response = await fetch(url, {\n        headers,\n        ...options\n    });\n\n    const responseData = await response.json();\n    if (response.ok) {\n        return responseData;\n    }\n    throw responseData;\n}\n","import { MULTI_NOISE_BIOME_SOURCE, NOISES_NAMES } from './../components/dimension/DimensionDefaults';\n\n/**\n * @param {object} a \n * @param {object} b \n * @returns {boolean}\n */\nexport function objectsEqual(a, b) {\n    return Object.keys(a).length === Object.keys(b).length\n        && Object.keys(a).every(p => a[p] === b[p]);\n}\n\n/**\n * @param {string} str \n * @returns {string}\n */\nexport function capitalize(str) {\n    return str[0].toUpperCase() + str.substr(1);\n}\n\n/**\n * @param {string} key \n * @param {string} [defaultNamespace]\n * @returns {string}\n */\nexport function displayNamespacedKey(key = 'undefined', defaultNamespace) {\n    return key.startsWith(defaultNamespace + ':') ? key.split(':')[1] : key;\n}\n\nexport function getStateValue(state, properties = {}) {\n    const actual = properties[state.name];\n    switch (state.type) {\n        case 'bool':\n            return actual === 'true' ? 'true' : 'false';\n        case 'int':\n            return typeof actual === 'string' ? actual : '0';\n        default:\n            return actual || state.values[0];\n    }\n}\n\nexport function hasDuplicatedObjects(objects) {\n    for (const a of objects) {\n        for (const b of objects) {\n            if (a !== b && objectsEqual(a, b)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n/**\n * @param {object} feature Unserialized feature\n * @returns {{type: string, config: object}[]} Decorators list\n */\nexport function findDecorators(feature) {\n    const decorators = [];\n\n    let f = feature;\n    (function find(obj) {\n        for (const key of Object.keys(obj)) {\n            if (key === 'decorator') {\n                decorators.unshift(obj[key]);\n                if ((obj.feature.type || obj.feature.name) !== 'minecraft:decorated') {\n                    f = obj.feature;\n                }\n            } else if (typeof obj[key] === 'object') {\n                find(obj[key]);\n            }\n        }\n    }(feature));\n\n    if (f === null) {\n        f = {};\n    }\n    return [decorators, f];\n}\n\n/**\n * @param {object} feature \n * @param {{type: string, config: object}[]} decorators \n * @param {string} name\n * @returns {object} Decorated feature\n */\nexport function buildDecorated(feature, decorators, name) {\n    if (decorators.length < 1) {\n        feature.key = name;\n        return feature;\n    }\n\n    const decorated = { type: 'minecraft:decorated', key: name };\n    let current = decorated;\n    decorators.forEach((decorator, i) => {\n        const f = i === (decorators.length - 1) ? feature : { type: 'minecraft:decorated' };\n        current.config = {\n            feature: f,\n            decorator\n        };\n        current = f;\n        if (i < 1) {\n            f.name = name;\n        }\n    });\n    return decorated;\n}\n\n/**\n * Rename object keys.\n * \n * @param {object} obj \n * @param {object} map \n * @returns {object}\n */\nfunction refitKeys(obj, map) {\n    const build = {};\n    for (const key in obj) {\n        const destKey = map[key] || key;\n\n        let value = obj[key];\n        if (typeof value === 'object') {\n            value = refitKeys(value, map);\n        }\n        build[destKey] = value;\n    }\n    return build;\n}\n\n/**\n * @param {string} group \n * @param {object} data \n * @returns {object}\n */\nexport function dataUpper(group, data) {\n    switch (group) {\n        case 'biomes':\n            // 20w30a: sky_color into effects\n            if (data.hasOwnProperty('sky_color')) {\n                data.effects.sky_color = data.sky_color;\n            }\n            return data;\n        case 'features':\n            // 20w30a: name -> type\n            const [decorators, feature] = findDecorators(data);\n            if (!feature.hasOwnProperty('type')) {\n                feature.type = feature.name;\n                delete feature.name;\n                return buildDecorated(\n                    feature,\n                    decorators.map(decorator => refitKeys(decorator, { name: 'type' })),\n                    data.key\n                );\n            }\n            return data;\n        case 'dimensions':\n            // 20w30a: multi_noise: firstOctave and amplitudes parameters\n            const source = data.generator.biome_source;\n            if (source.type === 'minecraft:multi_noise' && NOISES_NAMES.some(n => !source.hasOwnProperty(n))) {\n                data.generator.biome_source = { ...MULTI_NOISE_BIOME_SOURCE, ...source };\n            }\n            return data;\n        case 'dimension_types':\n            // 1.16.2-pre-2 : shrunk -> coordinate_scale\n            if (data.hasOwnProperty('shrunk')) {\n                data.coordinate_scale = data.shrunk ? 8 : 1;\n                delete data.shrunk;\n            }\n            return data;\n        default:\n            // 20w30a: name -> type\n            if (data.hasOwnProperty('name') && !data.hasOwnProperty('type')) {\n                data.type = data.name;\n            }\n            return data;\n    }\n}\n","import { useContext, useState } from \"react\";\nimport { DataContext } from \"../context/DataContext\";\nimport { displayNamespacedKey } from \"../utils/data\";\n\n/**\n * @param {object[]} initial\n * @returns {[object[], function(object): void]} \n */\nexport function useData(initial = []) {\n    const [data, setData] = useState(initial);\n\n    const updateData = function(object, previous) {\n        setData(stored => {\n            if (!object.hasOwnProperty('key')) {\n                stored.splice(stored.findIndex(obj => obj === (previous || object)), 1);\n                return stored;\n            }\n\n            const existing = stored.find(({ key }) => object.key === key);\n            if (typeof existing !== 'undefined' && existing !== previous) {\n                do {\n                    object.key += '2';\n                } while (stored.findIndex(({ key }) => object.key === key) > -1)\n                stored.push(object);\n                return stored;\n            }\n\n            if (typeof previous === 'undefined' || !previous.hasOwnProperty('key')) {\n                stored.push(object);\n            } else {\n                stored[stored.indexOf(previous)] = object;\n            }\n            return stored;\n        });\n    }\n    return [data, updateData];\n}\n\n/**\n * @param {('dimensions'|'dimension_types'|'biomes'|'carvers'|'features'|'surfaces'|'noises')} category Data category\n * @param {boolean} [includeCustom]\n * @param {boolean} [empty]\n * @returns {{ value: string, label: string }[]} Options list for react-select\n */\nexport function useKeyedListOptions(category, includeCustom = true, empty = false) {\n    const context = useContext(DataContext);\n    if (empty) {\n        return [];\n    }\n\n    const options = includeCustom ? context.custom[category]\n        .map(keyed => {\n            const name = displayNamespacedKey(keyed.key, context.namespace);\n            return { value: keyed.key, label: '(Custom) ' + name };\n        }) : [];\n\n    let struct = null;\n    context.vanilla[category].forEach(keyed => {\n        if (struct === null) {\n            struct = keyed.hasOwnProperty('displayName') ? 1 : (keyed.hasOwnProperty('label') ? 2 : 3);\n        }\n        switch(struct) {\n            case 1: // displayName\n                options.push({ value: 'minecraft:' + keyed.name, label: keyed.displayName });\n                return;\n            case 2: // already option\n                options.push(keyed);\n                return;\n            default:\n                options.push({ value: 'minecraft:' + keyed, label: keyed });\n        }\n    });\n    return options;\n}\n","import React, { useCallback, useEffect, useState } from 'react';\n\nimport JSZip from 'jszip';\nimport { VANILLA_CARVERS } from '../components/carver/CarverDefaults';\nimport { VANILLA_DIMENSION_TYPES } from '../components/dimension/DimensionDefaults';\nimport { VANILLA_FEATURES } from '../components/feature/VanillaFeatures';\nimport { VANILLA_NOISES } from '../components/noise/NoiseDefaults';\nimport { VANILLA_PROCESSORS } from '../components/processor/ProcessorDefaults';\nimport { VANILLA_SURFACE_BUILDERS } from '../components/surface/SurfaceBuilderDefaults';\nimport { getAbsolutePath } from './Paths';\nimport { jsonFetch } from '../utils/fetch';\nimport { useData } from '../hooks/context';\n\nexport const DataContext = React.createContext({\n    vanilla: {\n        biomes: [],\n        blocks: [],\n        carvers: [],\n        dimensions: [],\n        dimension_types: [],\n        entities: [],\n        features: [],\n        noises: [],\n        processors: [],\n        sounds: [],\n        surfaces: [],\n        /**\n         * @param {string} type \n         * @param {string} key \n         * @returns {Promise<object>}  \n         */\n        getVanillaResource: (type, key) => {}\n    },\n    custom: {\n        biomes: [],\n        carvers: [],\n        dimensions: [],\n        dimension_types: [],\n        features: [],\n        noises: [],\n        processors: [],\n        surfaces: [],\n        updateBiomes: (biome) => {},\n        updateCarvers: (carver) => {},\n        updateDimensions: (dimension) => {},\n        updateDimensionTypes: (dimension_type) => {},\n        updateFeatures: (feature) => {},\n        updateNoises: (noise) => {},\n        updateProcessors: (processor) => {},\n        updateSurfacesBuilders: (surface_builder) => {}\n    },\n    namespace: ''\n});\n\nexport function DataContextProvider({children, namespace, initial = {}}) {\n    const [biomes, setBiomes] = useState([]);\n    const [blocks, setBlocks] = useState([]);\n    const [entities, setEntities] = useState([]);\n    const [sounds, setSounds] = useState([]);\n\n    const [customBiomes, updateBiomes] = useData(initial.biomes);\n    const [carvers, updateCarvers] = useData(initial.carvers);\n    const [dimensions, updateDimensions] = useData(initial.dimensions);\n    const [dimension_types, updateDimensionTypes] = useData(initial.dimension_types);\n    const [features, updateFeatures] = useData(initial.features);\n    const [noises, updateNoises] = useData(initial.noises);\n    const [processors, updateProcessors] = useData(initial.processors);\n    const [surfaces, updateSurfacesBuilders] = useData(initial.surfaces);\n\n    const [vanillaZip, setVanillaZip] = useState(null);\n\n    useEffect(() => {\n        (async function () {\n            jsonFetch('https://unpkg.com/minecraft-data@2.65.0/minecraft-data/data/pc/1.16.1/biomes.json')\n                .then(biomes => setBiomes(biomes));\n            jsonFetch('https://unpkg.com/minecraft-data@2.65.0/minecraft-data/data/pc/1.16.1/blocks.json')\n                .then(blocks => setBlocks(blocks));\n            jsonFetch('https://unpkg.com/minecraft-data@2.65.0/minecraft-data/data/pc/1.16.1/entities.json')\n                .then(entities => setEntities(entities.map(entity => ({ value: 'minecraft:' + entity.name, label: entity.displayName }))));\n            jsonFetch('https://raw.githubusercontent.com/Arcensoth/mcdata/master/processed/reports/registries/sound_event/data.min.json', {}, {})\n                .then(sounds => setSounds(sounds.values.map(sound => ({ value: sound, label: sound.substr(10) }))));\n        })();\n    }, []);\n\n    const getVanillaResource = useCallback(async function (type, key) {\n        let zip = vanillaZip;\n        if (zip === null) {\n            const blob = (await fetch('https://raw.githubusercontent.com/slicedlime/examples/master/vanilla_worldgen.zip')).blob();\n            try {\n                zip = await JSZip.loadAsync(blob);\n            } catch (e) {\n                setVanillaZip(e);\n                return Promise.reject(new Error(`Unable to download the vanilla resource archive for reference.\\n${e.message}`));\n            }\n            setVanillaZip(zip);\n        } else if (zip instanceof Error) {\n            return Promise.reject(zip);\n        }\n        const absolute = getAbsolutePath(type, 'minecraft', key).substr(15).replace('minecraft:', '');\n        const file = zip.file(absolute);\n        if (file === null) {\n            return Promise.reject(new Error(`Unable to find the associated vanilla file (tested ${absolute}).`));\n        }\n        return Promise.resolve(JSON.parse(await file.async('text')));\n    }, [vanillaZip]);\n\n    return <DataContext.Provider value={{\n        vanilla: {\n            biomes,\n            blocks,\n            carvers: VANILLA_CARVERS,\n            dimensions: VANILLA_DIMENSION_TYPES.filter(o => !o.value.includes('cave')),\n            dimension_types: VANILLA_DIMENSION_TYPES,\n            entities,\n            features: VANILLA_FEATURES,\n            noises: VANILLA_NOISES,\n            processors: VANILLA_PROCESSORS,\n            sounds,\n            surfaces: VANILLA_SURFACE_BUILDERS,\n            getVanillaResource\n        },\n        custom: {\n            biomes: customBiomes, carvers, dimensions, dimension_types, features, noises, processors, surfaces,\n            updateBiomes, updateCarvers, updateDimensions, updateDimensionTypes, updateFeatures, updateNoises, updateProcessors, updateSurfacesBuilders\n        },\n        namespace\n    }}>{children}</DataContext.Provider>\n}","import React from 'react';\n\nexport const Toggle = ({ ariaLabel, checked, id, onChange }) => (\n    <span className=\"toggle-control\">\n        <input\n            aria-label={ariaLabel}\n            className=\"dmcheck\"\n            type=\"checkbox\"\n            checked={checked}\n            onChange={onChange}\n            id={id}\n        />\n        <label htmlFor={id} />\n    </span>\n);\n","import React from 'react';\nimport { Toggle } from './Toggle';\nimport useDarkMode from 'use-dark-mode';\n\nexport function DarkModeToggle() {\n    const darkMode = useDarkMode(true);\n\n    return <div className=\"dark-mode-toggle\" title=\"Dark mode toggle\">\n        <button type=\"button\" onClick={darkMode.disable} tabIndex=\"-1\">☀</button>\n        <Toggle ariaLabel=\"Dark mode toggle\" checked={darkMode.value} onChange={darkMode.toggle} />\n        <button type=\"button\" onClick={darkMode.enable} tabIndex=\"-1\">☾</button>\n    </div>\n}","import { DarkModeToggle } from './DarkModeToggle';\nimport React from 'react';\n\nexport function MenuItem({active, children, onClick}) {\n    return <li><a href=\"#_\" role=\"menuitem\" aria-current={active} onClick={onClick}>{children}</a></li>\n}\n\nexport function NavBar({ children }) {\n    return <div className=\"navbar\">\n        {children}\n        <p className=\"github\"><a href=\"https://github.com/syldium/worldgen\" target=\"_blank\" rel=\"noopener noreferrer\">View on GitHub</a></p>\n        <DarkModeToggle />\n    </div>\n}\n","export const INT_MIN_VALUE = 0x80000000 & 0x80000000;\nexport const INT_MAX_VALUE = 0x7FFFFFFF;\n\n/**\n * @param {number} n \n * @returns {number}\n */\nexport function maintainPrecision(n) {\n    return parseFloat(n.toFixed(12));\n}\n\n/**\n * @param {number} t \n * @returns {number}\n */\nexport function perlinFade(t) {\n    return t * t * t * (t * (t * 6 - 15) + 10);\n}\n\nexport function lerp(delta, start, end) {\n    return start + delta * (end - start);\n}\n\nexport function lerp2(deltaX, deltaY, n00, n10, n01, n11) {\n    return lerp(deltaY, lerp(deltaX, n00, n10), lerp(deltaX, n01, n11));\n}\n\nexport function lerp3(deltaX, deltaY, deltaZ, n000, n100, n010, n110, n001, n101, n011, n111) {\n    return lerp(deltaZ, lerp2(deltaX, deltaY, n000, n100, n010, n110), lerp2(deltaX, deltaY, n001, n101, n011, n111));\n}\n\nexport function grad(hash, x, y, z) {\n    const h = hash & 15;\n    const u = h < 8 ? x : y;\n    const v = h < 4 ? y : h === 12 || h === 14 ? x : z;\n    return ((h & 1) === 0 ? u : -u) + ((h & 2) === 0 ? v : -v);\n}\n","export function hexColorToInteger(color) {\n    return parseInt(color.replace(/^#/, ''), 16);\n}\n\nexport function integerColorToHex(color) {\n    return '#' + (color & 0xFFFFFF).toString(16).padStart(6, '0');\n}","import { INT_MAX_VALUE, maintainPrecision } from '../utils/math';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { hexColorToInteger, integerColorToHex } from '../utils/color';\n\nexport const ConfInput = React.memo(function ({\n    attr, type,\n    checked, defaultChecked,\n    children,\n    name, id,\n    onChange,\n    value, defaultValue,\n    min, max, step,\n    className, style\n}) {\n\n    const uId = name || Math.random().toString(36).substr(2, 5) + '-' + id;\n\n    if (typeof type !== 'string') {\n        if (typeof checked !== 'undefined' || typeof defaultChecked !== 'undefined') {\n            type = 'checkbox';\n        } else if (typeof step === 'number' || typeof max === 'number' || !isNaN(typeof value === 'undefined' ? defaultValue : value)) {\n            type = 'number';\n        } else {\n            type = 'text';\n        }\n    }\n\n    if (type === 'checkbox') {\n        return <div className={className}>\n            <label htmlFor={uId}>{children}</label>&nbsp;:&nbsp;<input type={type || 'checkbox'} data-name={name || id} name={name} id={uId} className=\"checkbox\" {...{ ...attr, checked, defaultChecked, onChange, value, style }} />\n        </div>\n    }\n    return <div className={className}>\n        {typeof children === 'undefined' || <><label htmlFor={uId}>{children}</label> : </>}\n        <input\n            type={type} data-name={name || id} name={name} id={uId}\n            {...{ ...attr, value, onChange, defaultValue, min, max, step, style }} />\n    </div>\n});\n\nexport const NumberInput = React.memo(function ({\n    className, style = {}, children, defaultValue = 0,\n    id, name, onChange, upChange,\n    required = true, title, value,\n    type = 'number', step = 1, min = 0, max = INT_MAX_VALUE\n}) {\n\n    const uId = name || Math.random().toString(36).substr(2, 5) + '-' + id;\n    const n = parseFloat(typeof value === 'number' || typeof value === 'string' ? value : defaultValue);\n    const [val, setValue] = useState(n);\n    const [prevVal, setPrevValue] = useState(n);\n    const [click, setClick] = useState(null);\n\n    value = parseFloat(value);\n    min = parseFloat(min);\n    step = parseFloat(step);\n    max = parseFloat(max);\n\n    if (n !== prevVal && n !== val && !isNaN(val) && val !== '') {\n        setValue(n);\n        setPrevValue(n);\n    }\n\n    const handleChange = useCallback(function (e) {\n        const value = e.target.value;\n        const n = parseFloat(value);\n        if (value === '') {\n            setValue(value);\n        } else if (value.length <= INT_MAX_VALUE.toString().length) {\n            if (value.endsWith('.00001')) {\n                // Fix browser step\n                setValue(val => maintainPrecision(val + (n > val ? step : -step)));\n            } else {\n                setValue(value);\n            }\n        }\n    }, [step]);\n\n    const stepUpDown = useCallback(function (addition) {\n        setValue(val => {\n            if (!isNaN(val)) {\n                const n = maintainPrecision(val + (addition ? step : -step));\n                if (n >= min && n <= max) {\n                    return n;\n                }\n                return val;\n            }\n            return val;\n        });\n    }, [max, min, step]);\n\n    const handleMouseDown = useCallback(function (e) {\n        e.preventDefault();\n        const addition = e.target.classList.contains('btn-plus');\n        if (val === '') {\n            return;\n        }\n        stepUpDown(addition);\n        setClick(window.setInterval(() => stepUpDown(addition), 150));\n    }, [stepUpDown, val]);\n\n    const handleClick = useCallback(function (e) {\n        e.preventDefault();\n    }, []);\n\n    const handleMouseUp = useCallback(function (e) {\n        e.preventDefault();\n        window.clearInterval(click);\n        setClick(null);\n    }, [click]);\n\n    useEffect(function () {\n        let n = val;\n        if (typeof n === 'string') {\n            const value = val.replace(',', '.');\n            const parse = typeof step === 'undefined' ? parseInt : parseFloat;\n            n = parse(value);\n        }\n\n        if (isNaN(value) && n === defaultValue && !required) {\n            return;\n        }\n\n        if (!isNaN(n) && val !== value && n >= min && n < max && click === null) {\n            if (typeof upChange === 'function') {\n                upChange({ [id || name]: n });\n            } else if (typeof onChange === 'function') {\n                onChange(n);\n            }\n        }\n    }, [click, defaultValue, id, min, max, name, onChange, required, step, type, upChange, val, value]);\n\n    style.width = getNumberSize(val, max, step);\n    className = (className || '') + ' number-wrapper';\n\n    return <div className={className} title={title}>\n        {typeof children === 'undefined' || <div className=\"label\"><label htmlFor={uId}>{children}</label> :&nbsp;</div>}\n            <div className=\"number-input-wrapper\"><input\n                type={type} name={name} id={uId} style={style}\n                min={min} max={max}\n                value={val} data-name={name || id} required={required}\n                step={step < 1 ? 'any' : 1} onChange={handleChange}\n            />\n            {type === 'number' &&\n                <div className=\"number-controls\">\n                    <button className=\"btn-plus\" tabIndex=\"-1\" onMouseDown={handleMouseDown} onClick={handleClick} onMouseOut={handleMouseUp} onMouseUp={handleMouseUp}></button>\n                    <button className=\"btn-minus\" tabIndex=\"-1\" onMouseDown={handleMouseDown} onClick={handleClick} onMouseOut={handleMouseUp} onMouseUp={handleMouseUp}></button>\n                </div>\n            }</div>\n    </div>\n});\n\nexport const ColorInput = React.memo(function({ children, defaultValue = 0, id, onChange, upChange, value }) {\n    const uId = Math.random().toString(36).substr(2, 5) + '-' + id;\n\n    const handleChange = useCallback(function(e) {\n        const value = e.target.value;\n\n        if (typeof upChange === 'function') {\n            upChange({ [id]: hexColorToInteger(value) });\n        } else if (typeof onChange === 'function') {\n            onChange(hexColorToInteger(value));\n        }\n    }, [id, onChange, upChange]);\n\n    \n    useEffect(() => {\n        if (typeof value !== 'number' && defaultValue !== 0) {\n            if (typeof upChange === 'function') {\n                upChange({ [id]: parseFloat(defaultValue) });\n            } else if (typeof onChange === 'function') {\n                onChange(parseFloat(defaultValue));\n            }\n        }\n    }, [defaultValue, id, onChange, upChange, value]);\n\n    return <div>\n        {typeof children === 'undefined' || <><label htmlFor={uId}>{children}</label> : </>}\n        <input type=\"color\" id={uId} data-name={id} onChange={handleChange} value={integerColorToHex(value || defaultValue)} />\n    </div>\n});\n\nfunction getNumberSize(numeric, max = 10, step = 1) {\n    if (numeric === '') {\n        return 12 + 'ch';\n    }\n    const decimals = countDecimals(step);\n\n    let n, str;\n    if (typeof numeric === 'number') {\n        n = numeric;\n        str = numeric.toString();\n    } else {\n        n = parseFloat(numeric);\n        str = numeric;\n    }\n\n    let length = str.length;\n    if (!isNaN(n)) {\n        length = Math.max(length, n.toFixed(decimals).toString().length);\n    }\n    const ceil = max > 9 && n < 10;\n    const smooth = step === 1 ? 4 : 2;\n    return length + smooth + (ceil ? 1 : 0) + 'ch';\n}\nfunction countDecimals(n) {\n    if (typeof n !== 'number') {\n        return 0;\n    }\n    if ((n % 1) !== 0)\n        return n.toString().split(\".\")[1].length;\n    return 0;\n}\n","export const EFFECTS = {\n    mood_sound: {\n        sound: \"minecraft:ambient.cave\",\n        tick_delay: 6000,\n        block_search_extent: 8,\n        offset: 2.0\n    },\n    sky_color: 7907327,\n    fog_color: 12638463,\n    water_color: 4159204,\n    water_fog_color: 329011\n}\n\nexport const FEATURES = [\n    [],\n    [\n        \"minecraft:lake_water\",\n        \"minecraft:lake_lava\"\n    ],\n    [],\n    [\n        \"minecraft:monster_room\"\n    ],\n    [],\n    [],\n    [\n        \"minecraft:ore_dirt\",\n        \"minecraft:ore_gravel\",\n        \"minecraft:ore_granite\",\n        \"minecraft:ore_diorite\",\n        \"minecraft:ore_andesite\",\n        \"minecraft:ore_coal\",\n        \"minecraft:ore_iron\",\n        \"minecraft:ore_gold\",\n        \"minecraft:ore_redstone\",\n        \"minecraft:ore_diamond\",\n        \"minecraft:ore_lapis\",\n        \"minecraft:disk_sand\",\n        \"minecraft:disk_clay\",\n        \"minecraft:disk_gravel\"\n    ],\n    [],\n    [\n        \"minecraft:patch_tall_grass_2\",\n        \"minecraft:plain_vegetation\",\n        \"minecraft:flower_plain_decorated\",\n        \"minecraft:patch_grass_plain\",\n        \"minecraft:brown_mushroom_normal\",\n        \"minecraft:red_mushroom_normal\",\n        \"minecraft:patch_sugar_cane\",\n        \"minecraft:patch_pumpkin\",\n        \"minecraft:spring_water\",\n        \"minecraft:spring_lava\"\n    ],\n    [\n        \"minecraft:freeze_top_layer\"\n    ]\n]\n\nexport const STARTS = [\n    \"minecraft:village_plains\",\n    \"minecraft:pillager_outpost\",\n    \"minecraft:mineshaft\",\n    \"minecraft:stronghold\",\n    \"minecraft:ruined_portal\"\n]\n\nconst SPAWNERS_AMBIENT = [\n    {\n        type: \"minecraft:bat\",\n        weight: 10,\n        minCount: 8,\n        maxCount: 8\n    }\n];\n\nconst SPAWNERS_CREATURE = [\n    {\n        type: \"minecraft:sheep\",\n        weight: 12,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:pig\",\n        weight: 10,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:chicken\",\n        weight: 10,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:cow\",\n        weight: 8,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:horse\",\n        weight: 5,\n        minCount: 2,\n        maxCount: 6\n    },\n    {\n        type: \"minecraft:donkey\",\n        weight: 1,\n        minCount: 1,\n        maxCount: 3\n    }\n];\n\nconst SPAWNERS_MONSTER = [\n    {\n        type: \"minecraft:spider\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:zombie\",\n        weight: 95,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:zombie_villager\",\n        weight: 5,\n        minCount: 1,\n        maxCount: 1\n    },\n    {\n        type: \"minecraft:skeleton\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:creeper\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:slime\",\n        weight: 100,\n        minCount: 4,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:enderman\",\n        weight: 10,\n        minCount: 1,\n        maxCount: 4\n    },\n    {\n        type: \"minecraft:witch\",\n        weight: 5,\n        minCount: 1,\n        maxCount: 1\n    },\n];\n\nexport const SPAWNERS_DEFAULTS = {\n    ambient: SPAWNERS_AMBIENT,\n    creature: SPAWNERS_CREATURE,\n    misc: [],\n    monster: SPAWNERS_MONSTER,\n    water_ambient: [],\n    water_creature: []\n};\n\nexport const BIOME_DEFAULTS = {\n    effects: EFFECTS,\n    carvers: {\n        air: [\n            \"minecraft:cave\",\n            \"minecraft:canyon\"\n        ]\n    },\n    starts: STARTS,\n    features: FEATURES,\n    spawners: SPAWNERS_DEFAULTS,\n    category: \"plains\",\n    precipitation: \"rain\",\n    surface_builder: \"minecraft:grass\",\n    scale: 0.05,\n    downfall: 0.4,\n    depth: 0.12,\n    temperature: 0.8,\n    player_spawn_friendly: true,\n    spawn_costs: {}\n}\n\nexport const PARTICLES = [\n    'ambient_entity_effect',\n    'angry_villager',\n    'ash',\n    'barrier',\n    'block',\n    'bubble',\n    'bubble_column_up',\n    'bubble_pop',\n    'campfire_cosy_smoke',\n    'campfire_signal_smoke',\n    'cloud',\n    'composter',\n    'crimson_spore',\n    'crit',\n    'current_down',\n    'damage_indicator',\n    'dolphin',\n    'dragon_breath',\n    'dripping_honey',\n    'dripping_lava',\n    'dripping_obsidian_tear',\n    'dripping_water',\n    'dust',\n    'effect',\n    'elder_guardian',\n    'enchant',\n    'enchanted_hit',\n    'end_rod',\n    'entity_effect',\n    'explosion',\n    'explosion_emitter',\n    'falling_dust',\n    'falling_honey',\n    'falling_lava',\n    'falling_nectar',\n    'falling_obsidian_tear',\n    'falling_water',\n    'firework',\n    'fishing',\n    'flame',\n    'flash',\n    'happy_villager',\n    'heart',\n    'instant_effect',\n    'item',\n    'item_slime',\n    'item_snowball',\n    'landing_honey',\n    'landing_lava',\n    'landing_obsidian_tear',\n    'large_smoke',\n    'lava',\n    'mycelium',\n    'nautilus',\n    'note',\n    'poof',\n    'portal',\n    'rain',\n    'reverse_portal',\n    'smoke',\n    'sneeze',\n    'soul',\n    'soul_fire_flame',\n    'spit',\n    'splash',\n    'squid_ink',\n    'sweep_attack',\n    'totem_of_undying',\n    'underwater',\n    'warped_spore',\n    'white_ash',\n    'witch'\n].map(particle => ({ value: 'minecraft:' + particle, label: particle }));\n\nexport const PARTICLE_DEFAULTS = {\n    options: {\n        type: \"minecraft:crimson_spore\"\n    },\n    probability: 0.015\n}\n","import { useCallback, useContext, useEffect, useMemo, useReducer, useState } from \"react\";\n\nimport { DataContext } from \"../context/DataContext\";\nimport arrayMove from \"array-move\";\nimport { useKeyedListOptions } from \"./context\";\n\nfunction crudReducer(state, action) {\n    switch (action.type) {\n        case ADD:\n            if (action.unshift) {\n                return [action.payload, ...state];\n            }\n            return [...state, action.payload];\n        case UPDATE:\n            if (typeof action.target === 'number' && typeof action.payload === 'number') {\n                return arrayMove(state, action.target, action.payload);\n            }\n            if (typeof action.target === 'undefined') {\n                throw new Error('Cannot update an element without its previous state.');\n            }\n            return state.map(element => element === action.target ? action.payload : element);\n        case REMOVE:\n            return state.filter(element => element !== action.payload);\n        case REPLACE:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport function useCrudState(data = []) {\n    return useReducer(crudReducer, data);\n}\n\n/**\n * @param {object[]} [data] \n * @param {object|function (object[]): object} [initial] \n * @returns {[object[], function (SyntheticEvent): void, function (number|object, number|object): void, function (SyntheticEvent, number): void, function (object[]): void}\n */\nexport function useCrudPreset(onChange, data = [], initial = {}, unshift = false) {\n    const add = useCallback(function(e) {\n        e.preventDefault();\n        const n = typeof initial === 'function' ? initial(data) : { ...initial };\n        if (unshift) {\n            onChange([n, ...data]);\n        }\n        onChange([...data, n]);\n    }, [data, initial, onChange, unshift]);\n    const update = useCallback(function(state, previous) {\n        if (state.hasOwnProperty('oldIndex') && state.hasOwnProperty('newIndex')) {\n            onChange(arrayMove(data, state.oldIndex, state.newIndex));\n        } else {\n            if (typeof previous === 'undefined') {\n                throw new Error('Cannot update an element without its previous state.');\n            }\n            onChange(data.map(element => element === previous ? state : element));\n        }\n    }, [data, onChange]);\n    const remove = useCallback(function(e, entity) {\n        e.preventDefault();\n        if (typeof entity === 'number') {\n            entity = data[entity];\n        }\n        onChange(data.filter(element => element !== entity));\n    }, [data, onChange]);\n    const replace = useCallback(function(entities) {\n        onChange(entities);\n    }, [onChange]);\n\n    return [data, add, update, remove, replace];\n}\n\nexport function useBlocksOptions(mapped = true) {\n    const blocks = useContext(DataContext).vanilla.blocks;\n    return useMemo(function() {\n        return mapped ? blocks.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName })): blocks;\n    }, [blocks, mapped]);\n}\n\n/**\n * @param {number} [initial] \n * @returns {function(SyntheticEvent|string|number): void} \n */\nexport function useNumber(initial = 0) {\n    const [n, setState] = useState(initial);\n    const setNumber = function(n) {\n        if (typeof n === 'object') {\n            n = n.target.value;\n        }\n        if (typeof n === 'string') {\n            n = isNaN(n) ? initial : parseInt(n);\n        }\n        setState(n);\n    }\n    return [n, setNumber];\n}\n\nexport function useValueChange(changeCallback, obj) {\n    return useCallback(function(e) {\n        if (e.target.type === 'checkbox') {\n            changeCallback({ ...obj, [e.target.dataset.name || e.target.id || e.target.name]: e.target.checked });\n            return;\n        }\n        const value = isNaN(e.target.value) ? e.target.value : parseFloat(e.target.value);\n        changeCallback({ ...obj, [e.target.dataset.name || e.target.id || e.target.name]: value });\n    }, [changeCallback, obj]);\n}\n\nexport function useJsonEffect(state, props, onChange) {\n    useEffect(() => {\n        if (state === props) {\n            return;\n        }\n        if (JSON.stringify(state) !== JSON.stringify(props)) {\n            onChange(state, props);\n        }\n    }, [state, props, onChange]);\n    return state;\n}\n\n/**\n * Fast way to provide a list of options for react-select\n * and store selection as string (list).\n * \n * @param {('biomes'|'dimensions'|'dimension_types'|'features'|'noises'|'surfaces')} category Data category\n * @param {string|string[]} initial Initial selection\n * @param {boolean} [multiple]\n * @returns {[{ value: string, label: string }[], string|string[], function({ value: string }): void]} Options list, currently selected list and his updater\n */\nexport function useKeyedOptionsState(category, initial, multiple) {\n    const options = useKeyedListOptions(category); // Get options\n\n    // Default value for 'multiple' argument\n    if (typeof multiple === 'undefined') {\n        multiple = Array.isArray(initial);\n    }\n\n    // Enhanced use state - usage of options for default value if needed\n    const [selection, setSelection] = useState(initial || function() {\n        if (multiple) {\n            return options.length > 0 ? [options[0].value] : [];\n        }\n        return options.length > 0 ? options[0].value : '';\n    }());\n\n    // End chain react-select change handler\n    const setSelectionFromOptions = useCallback(function(selected) {\n        if (multiple) {\n            setSelection(selected === null ? [] : selected.map(o => o.value));\n        } else {\n            setSelection(selected.value);\n        }\n    }, [multiple]);\n\n    return [options, selection, setSelectionFromOptions];\n}\n\nconst ADD = 'ADD';\nconst UPDATE = 'UPDATE';\nconst REMOVE = 'REMOVE';\nconst REPLACE = 'REPLACE';\nexport const CRUD = { ADD, UPDATE, REMOVE, REPLACE };","import React from 'react';\nimport ReactSelect from 'react-select';\n\nconst Select = props => {\n    return (\n        <ReactSelect\n            styles={{\n                control: styles => ({\n                    ...styles,\n                    backgroundColor: 'var(--bg-color-input)',\n                    borderColor: 'var(--border-color)',\n                    ':hover': {\n                        ...styles[':hover'],\n                        backgroundColor: 'var(--bg-color-input-hover)',\n                        borderColor: 'var(--border-color)'\n                    },\n                    ':focus': {\n                        ...styles[':focus'],\n                        boxShadow: '0 0 0 1px var(--focus-color)'\n                    },\n                    transition: '.1s',\n                }),\n                singleValue: styles => ({\n                    ...styles,\n                    color: 'var(--primary-color)',\n                }),\n                menuList: styles => ({\n                    ...styles,\n                    color: 'var(--primary-color)',\n                    backgroundColor: 'var(--bg-color-section)',\n                    ':hover': {\n                        ...styles[':hover'],\n                        color: 'var(--bg-color-input-hover)',\n                    },\n                }),\n                input: styles => ({\n                    ...styles,\n                    color: 'var(--primary-color)',\n                }),\n                menu: styles => ({\n                    ...styles,\n                    backgroundColor: 'var(--bg-color-section)',\n                }),\n                option: (styles, { isFocused, isSelected }) => ({\n                    ...styles,\n                    color: 'var(--primary-color)',\n                    cursor: 'pointer',\n                    backgroundColor: isSelected\n                        ? 'var(--bg-color-select-focus)'\n                        : isFocused\n                            ? 'var(--bg-color-input-hover)'\n                            : null,\n                    ':active': {\n                        ...styles[':active'],\n                        backgroundColor: isSelected\n                            ? 'var(--bg-color-select-focus)'\n                            : 'var(--bg-color-input-hover)',\n                    },\n                }),\n                multiValue: styles => ({\n                    ...styles,\n                    color: 'var(--primary-color)',\n                    backgroundColor: 'var(--select-label)'\n                }),\n                multiValueLabel: styles => ({\n                    ...styles,\n                    color: 'var(--primary-color)',\n                    backgroundColor: 'var(--select-label)'\n                }),\n                multiValueRemove: styles => ({\n                    ...styles,\n                    ':hover': {\n                        ...styles[':hover'],\n                        backgroundColor: 'var(--select-label)',\n                    },\n                }),\n            }}\n            {...props}\n        />\n    );\n};\n\nexport default React.memo(Select);\n","export const TAGS_OPTIONS = [\n    'acacia_logs',\n    'anvil',\n    'bamboo_plantable_on',\n    'banners',\n    'base_stone_nether',\n    'base_stone_overworld',\n    'beacon_base_blocks',\n    'beds',\n    'bee_growables',\n    'beehives',\n    'birch_logs',\n    'buttons',\n    'campfires',\n    'carpets',\n    'climbable',\n    'coral_blocks',\n    'coral_plants',\n    'corals',\n    'crimson_stems',\n    'crops',\n    'dark_oak_logs',\n    'doors',\n    'dragon_immune',\n    'enderman_holdable',\n    'fence_gates',\n    'fences',\n    'fire',\n    'flower_pots',\n    'flowers',\n    'gold_ores',\n    'guarded_by_piglins',\n    'hoglin_repellents',\n    'ice',\n    'impermeable',\n    'infiniburn_end',\n    'infiniburn_nether',\n    'infiniburn_overworld',\n    'jungle_logs',\n    'leaves',\n    'logs',\n    'logs_that_burn',\n    'mushroom_grow_block',\n    'non_flammable_wood',\n    'nylium',\n    'oak_logs',\n    'piglin_repellents',\n    'planks',\n    'portals',\n    'pressure_plates',\n    'prevent_mob_spawning_inside',\n    'rails',\n    'sand',\n    'saplings',\n    'shulker_boxes',\n    'signs',\n    'slabs',\n    'small_flowers',\n    'soul_fire_base_blocks',\n    'soul_speed_blocks',\n    'spruce_logs',\n    'stairs',\n    'standing_signs',\n    'stone_bricks',\n    'stone_pressure_plates',\n    'strider_warm_blocks',\n    'tall_flowers',\n    'trapdoors',\n    'underwater_bonemeals',\n    'unstable_bottom_center',\n    'valid_spawn',\n    'wall_corals',\n    'wall_post_override',\n    'wall_signs',\n    'walls',\n    'warped_stems',\n    'wart_blocks',\n    'wither_immune',\n    'wither_summon_base_blocks',\n    'wooden_buttons',\n    'wooden_doors',\n    'wooden_fences',\n    'wooden_pressure_plates',\n    'wooden_slabs',\n    'wooden_stairs',\n    'wooden_trapdoors',\n    'wool'\n].map(tag => ({ value: 'minecraft:' + tag, label: tag }));\n","import React, { useCallback, useContext, useMemo } from \"react\";\n\nimport { BlockState } from \"./BlockState\";\nimport { DataContext } from \"../../context/DataContext\";\nimport { NumberInput } from \"../../ui/Input\";\nimport Select from \"../../ui/Select\";\nimport { TAGS_OPTIONS } from \"./Tags\";\n\nexport const BlockPredicate = React.memo(function({target, onChange}) {\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:always_true', label: 'Always true' },\n            { value: 'minecraft:block_match', label: 'Block match' },\n            { value: 'minecraft:blockstate_match', label: 'Block state match' },\n            { value: 'minecraft:random_block_match', label: 'Random block match' },\n            { value: 'minecraft:random_blockstate_match', label: 'Random block state match' },\n            { value: 'minecraft:tag_match', label: 'Tag match' }\n        ];\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        onChange({ predicate_type: option.value });\n    }, [onChange]);\n    const handleBlockChange = useCallback(function(option) {\n        onChange({ ...target, block: option.value });\n    }, [target, onChange]);\n    const handleBlockStateChange = useCallback(function(block_state) {\n        onChange({ ...target, block_state });\n    }, [target, onChange]);\n    const handleTagChange = useCallback(function(option) {\n        onChange({ ...target, tag: option.value });\n    }, [target, onChange]);\n    const handleChange = useCallback(function(content) {\n        onChange({ ...target, ...content });\n    }, [target, onChange]);\n\n    const type = target.predicate_type;\n\n    return <div>\n        <label>Predicate type</label>\n        <Select options={options} value={options.find(o => o.value === target.predicate_type)} onChange={handleTypeChange} />\n        {type === 'minecraft:block_match' && <BlockSelect block={target.block} onChange={handleBlockChange} />}\n        {type === 'minecraft:blockstate_match' && <BlockState block={target.block_state} onChange={handleBlockStateChange} />}\n        {(type === 'minecraft:random_block_match' || type === 'minecraft:random_blockstate_match') &&\n            <RandomBlockMatch block={target.block} probability={target.probability} onChange={handleChange} type={type} />\n        }\n        {type === 'minecraft:tag_match' && <Select options={TAGS_OPTIONS} value={TAGS_OPTIONS.find(t => t.value === target.tag)} onChange={handleTagChange} />}\n    </div>;\n});\n\nconst RandomBlockMatch = React.memo(function({block, onChange, type, probability}) {\n    const handleBlockChange = useCallback(function(option) {\n        onChange({ block: option.value });\n    }, [onChange]);\n    const handleBlockStateChange = useCallback(function(block_state) {\n        onChange({ block_state });\n    }, [onChange]);\n\n    return <div className=\"form-group form-row\">\n        <div style={{ flexGrow: 1 }}>\n        {type === 'minecraft:random_block_match' && <BlockSelect block={block} onChange={handleBlockChange} />}\n        {type === 'minecraft:random_blockstate_match' && <BlockState block={block} onChange={handleBlockStateChange} />}\n        </div>\n        <NumberInput id=\"probability\" value={probability} defaultValue=\"0.1\"\n            step=\"0.01\" min=\"0\" max=\"1\" className=\"mlm\" upChange={onChange}>\n                Probability\n        </NumberInput>\n    </div>\n});\n\nexport const BlockSelect = React.memo(function({block, inputId, onChange, options}) {\n    const context = useContext(DataContext);\n    const blocks = useMemo(function () {\n        if (typeof options === 'undefined') {\n            return context.vanilla.blocks.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n        }\n        return options;\n    }, [context.vanilla.blocks, options]);\n    return <Select options={blocks} value={blocks.find(b => b.value === block)} onChange={onChange} inputId={inputId} />;\n});\n","import React from 'react';\n\nexport function Button ({loading, cat = 'primary', ...buttonProps}) {\n    return <button className={`btn btn--${cat}`} {...buttonProps} tabIndex=\"0\"></button>\n}\n","import { ConfInput, NumberInput } from \"../../ui/Input\";\nimport React, { useCallback, useContext, useMemo } from \"react\";\nimport { useBlocksOptions, useCrudPreset } from \"../../hooks/form\";\n\nimport { BlockSelect } from \"./BlockPredicate\";\nimport { Button } from '../../ui/Button';\nimport { DataContext } from \"../../context/DataContext\";\nimport Select from \"../../ui/Select\";\nimport { getStateValue } from \"../../utils/data\";\n\nexport const BlockState = React.memo(function ({ block = {}, children, className = 'form-group', inputId, name, onChange, options }) {\n    const context = useContext(DataContext);\n\n    const handleTypeChange = useCallback(function (option) {\n        const Name = option.value;\n        const Properties = {};\n        (context.vanilla.blocks.find(b => 'minecraft:' + b.name === Name) || { states: [] }).states.forEach(state => {\n            Properties[state.name] = getStateValue(state, block.Properties);\n        })\n        delete block.Properties;\n        if (Object.keys(Properties).length > 0) {\n            onChange({ ...block, Name, Properties }, block);\n        } else {\n            onChange({ ...block, Name }, block);\n        }\n    }, [block, context.vanilla.blocks, onChange]);\n    const handlePropertiesChange = useCallback(function (properties) {\n        onChange({ ...block, Properties: { ...block.Properties, ...properties } }, block);\n    }, [block, onChange]);\n\n    const blocks = useMemo(function () {\n        if (typeof options === 'undefined') {\n            return context.vanilla.blocks.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n        }\n        return options;\n    }, [context.vanilla.blocks, options]);\n\n    const selected = useMemo(function () {\n        return blocks.find(o => o.value === block.Name);\n    }, [blocks, block.Name]);\n\n    return <div className={className}>\n        <div className=\"form-row\">\n            <div style={{ flexGrow: 1 }}><Select options={blocks} value={selected} name={name} onChange={handleTypeChange} inputId={inputId} /></div>\n            {children}\n        </div>\n        <BlockStateProperties block={block.Name} properties={block.Properties} onChange={handlePropertiesChange} />\n    </div>;\n});\n\nexport const BlocksList = React.memo(function ({ addButton = true, list, onChange }) {\n    const options = useBlocksOptions();\n\n    const [blocks, handleAdd, handleChange, handleRemove] = useCrudPreset(onChange, list, function (blocks) {\n        // Get the first non taken block name\n        return { Name: (options.find(o => !blocks.some(b => b.Name === o.value)) || { value: 'minecraft:stone' }).value };\n    });\n\n    return <div className=\"form-group\">\n        {blocks.map((block, i) => {\n            const filteredOptions = options.filter(o => o.value === block.Name || !blocks.some(d => d.Name === o.value));\n            return <BlockState block={block} options={filteredOptions} key={block.Name} onChange={handleChange}>\n                <Button cat=\"danger mlm\" onClick={e => handleRemove(e, i)}>Remove</Button>\n            </BlockState>\n        })}\n        {addButton && <Button onClick={handleAdd}>Add block</Button>}\n    </div>;\n});\n\nexport const BlocksNamesList = React.memo(function ({ list, onChange }) {\n    const options = useBlocksOptions();\n\n    const [blocks, handleAdd, handleChange, handleRemove] = useCrudPreset(onChange, list, function (blocks) {\n        // Get the first non taken block name\n        return (options.find(o => !blocks.some(b => b === o.value)) || { value: 'minecraft:stone' }).value;\n    });\n\n    return <div className=\"form-group\">\n        {blocks.map((block, i) => {\n            const filteredOptions = options.filter(o => o.value === block || !blocks.some(d => d === o.value));\n            return <div className=\"form-group form-row\" key={block}>\n                <div style={{ flexGrow: 1 }}><BlockSelect block={block} options={filteredOptions} onChange={o => handleChange(o.value, block)} /></div>\n                <Button cat=\"danger mlm\" onClick={e => handleRemove(e, i)}>Remove</Button>\n            </div>\n        })}\n        <Button cat=\"primary mts\" onClick={handleAdd}>Add block</Button>\n    </div>;\n});\n\nfunction BlockStateProperties({ block, children, onChange, properties = {} }) {\n    const states = (useContext(DataContext).vanilla.blocks.find(b => 'minecraft:' + b.name === block) || { states: [] }).states;\n\n    const handlePropertyChange = useCallback(function (option) {\n        onChange({ ...properties, [option.name]: option.value });\n    }, [onChange, properties]);\n    const handleCheckboxChange = useCallback(function (e) {\n        const value = e.target.checked.toString();\n        onChange({ ...properties, [e.target.dataset.name]: value });\n    }, [onChange, properties]);\n    const handleNumberChange = useCallback(function (value) {\n        const key = Object.keys(value)[0];\n        onChange({ ...properties, [key]: value[key].toString() });\n    }, [onChange, properties]);\n\n    const selects = [];\n    states.forEach(possible => {\n        switch (possible.type) {\n            case 'bool':\n                selects.push(\n                    <ConfInput key={possible.name} id={possible.name}\n                        checked={properties[possible.name] === 'true'}\n                        onChange={handleCheckboxChange}>\n                        {possible.name}\n                    </ConfInput>\n                );\n                break;\n            case 'int':\n                selects.push(\n                    <NumberInput key={possible.name} id={possible.name}\n                        value={properties[possible.name] || 0} upChange={handleNumberChange}\n                        min=\"0\" max={possible.num_values - 1}>\n                        {possible.name}\n                    </NumberInput>\n                );\n                break;\n            default:\n                const options = possible.values.map(value => ({ value, name: possible.name, label: value }));\n                const defaultValue = options.find(o => o.value === properties[possible.name]) || options[0];\n                selects.push(<div key={possible.name}>\n                    <label>{possible.name}</label> : <div className=\"inbl\">\n                        <Select options={options} value={defaultValue} onChange={handlePropertyChange} />\n                    </div>\n                </div>);\n        }\n    });\n    return <div className=\"form-group form-row\">\n        {selects}{children}\n    </div>;\n}\n","import { ColorInput, ConfInput, NumberInput } from '../../ui/Input';\nimport { PARTICLES, PARTICLE_DEFAULTS } from './BiomeDefaults';\nimport React, { useCallback, useContext, useState } from 'react';\n\nimport { BlockState } from '../state/BlockState';\nimport { DataContext } from '../../context/DataContext';\nimport Select from '../../ui/Select';\nimport { useJsonEffect } from '../../hooks/form';\n\nexport const BiomeEffects = React.memo(function ({ effects, onChange }) {\n\n    const [blockColor, setBlockColor] = useState(effects);\n    const [particle, setParticle] = useState(effects.particle);\n\n    const sounds = useContext(DataContext).vanilla.sounds;\n\n    const handleColorChange = useCallback(function (color) {\n        onChange({ ...effects, ...color });\n    }, [effects, onChange]);\n\n    const handleBlockColorChange = useCallback(function (color) {\n        onChange({ ...effects, ...color });\n        setBlockColor({ ...blockColor, ...color });\n    }, [blockColor, effects, onChange]);\n    const handleAmbientSoundChange = useCallback(function (option) {\n        if (option === null) {\n            onChange((({ ambient_sound, ...effects }) => effects)(effects));\n        } else {\n            onChange({ ...effects, ambient_sound: option.value });\n        }\n    }, [effects, onChange]);\n    const handleMoodSoundChange = useCallback(function (mood_sound) {\n        if (mood_sound === null) {\n            onChange((({ mood_sound, ...effects }) => effects)(effects));\n        } else {\n            if (typeof effects.mood_sound === 'undefined') {\n                onChange({\n                    ...effects, mood_sound: {\n                        tick_delay: 6000,\n                        block_search_extent: 8,\n                        offset: 2.0, ...mood_sound\n                    }\n                });\n            } else {\n                onChange({ ...effects, mood_sound: { ...effects.mood_sound, ...mood_sound } });\n            }\n        }\n    }, [effects, onChange]);\n    const handleParticleChange = useCallback(function (particle) {\n        onChange({ ...effects, particle });\n        setParticle(particle);\n    }, [effects, onChange]);\n\n    const handleBlockColorToggle = useCallback(function (e) {\n        if (e.target.checked) {\n            onChange({ ...effects, foliage_color: blockColor.foliage_color || 10387789, grass_color: blockColor.grass_color || 9470285 });\n        } else {\n            onChange((({ foliage_color, grass_color, ...effects }) => effects)(effects));\n        }\n    }, [blockColor, effects, onChange]);\n    const handleParticleToggle = useCallback(function (e) {\n        if (e.target.checked) {\n            onChange({ ...effects, particle: particle || PARTICLE_DEFAULTS });\n        } else {\n            onChange((({ particle, ...effects }) => effects)(effects));\n        }\n    }, [onChange, effects, particle]);\n\n    const blockColorChecked = effects.hasOwnProperty('foliage_color') || effects.hasOwnProperty('grass_color');\n    const particleChecked = effects.hasOwnProperty('particle');\n\n    return <>\n        <fieldset>\n            <legend>Biome effects</legend>\n            <div className=\"form-group form-row\">\n                <ColorInput id=\"sky_color\" value={effects.sky_color} upChange={handleColorChange}>Sky color</ColorInput>\n                <ColorInput id=\"fog_color\" value={effects.fog_color} upChange={handleColorChange}>Fog color</ColorInput>\n                <ColorInput id=\"water_color\" value={effects.water_color} upChange={handleColorChange}>Water color</ColorInput>\n                <ColorInput id=\"water_fog_color\" value={effects.water_fog_color} upChange={handleColorChange}>Water fog color</ColorInput>\n                {blockColorChecked && <>\n                    <ColorInput id=\"foliage_color\" value={effects.foliage_color || 10387789} upChange={handleBlockColorChange}>Foliage color</ColorInput>\n                    <ColorInput id=\"grass_color\" value={effects.grass_color || 9470285} upChange={handleBlockColorChange}>Grass color</ColorInput>\n                </>}\n                <ConfInput id=\"block-toggle\" checked={blockColorChecked} onChange={handleBlockColorToggle}>Optionals</ConfInput>\n                <ConfInput id=\"particle\" checked={particleChecked} onChange={handleParticleToggle}>Particle</ConfInput>\n            </div>\n            {particleChecked && <ParticleEffect particle={effects.particle} onChange={handleParticleChange} />}\n        </fieldset>\n        <fieldset>\n            <legend>Optionals sounds</legend>\n            <div className=\"form-group form-row\">\n                Ambient :\n            <div style={{ flexGrow: 0.95, flexShrink: 1 }}><Select options={sounds} value={sounds.find(o => effects.ambient_sound === o.value)} onChange={handleAmbientSoundChange} isClearable={true} /></div>\n            </div>\n            <MoodSound options={sounds} sound={effects.mood_sound} onChange={handleMoodSoundChange} />\n        </fieldset>\n    </>\n});\n\nconst MoodSound = React.memo(function ({ onChange, options, sound }) {\n    const handleSoundChange = useCallback(function (option) {\n        onChange(option === null ? null : { sound: option.value });\n    }, [onChange]);\n\n    return <>\n        <div className=\"form-group form-row\">\n            Mood :\n            <div style={{ flexGrow: 0.95, flexShrink: 1 }}><Select options={options} value={options.find(o => (sound || {}).sound === o.value)} onChange={handleSoundChange} isClearable={true} /></div>\n        </div>\n        {typeof sound === 'object' && <div className=\"form-row\" style={{ marginTop: '0.5rem' }}>\n            <NumberInput id=\"tick_delay\" value={sound.tick_delay} upChange={onChange} className=\"mls\">Tick delay</NumberInput>\n            <NumberInput id=\"block_search_extent\" value={sound.block_search_extent} upChange={onChange} className=\"mls\">Block search extent</NumberInput>\n            <NumberInput id=\"offset\" value={sound.offset} upChange={onChange} step={0.1} className=\"mls\">Offset</NumberInput>\n        </div>}\n    </>\n});\n\nconst ParticleEffect = React.memo(function ({ onChange, particle }) {\n\n    particle = useJsonEffect(particle || PARTICLE_DEFAULTS, particle, onChange);\n    const handleTypeChange = useCallback(function (option) {\n        onChange({ ...particle, options: { type: option.value } });\n    }, [particle, onChange]);\n    const handleBlockChange = useCallback(function (block) {\n        onChange({ ...particle, options: { ...particle.options, ...block } });\n    }, [particle, onChange]);\n    const handleColorChange = useCallback(function (color) {\n        onChange({ ...particle, options: { ...particle.options, ...color } });\n    }, [particle, onChange]);\n    const handleScaleChange = useCallback(function (scale) {\n        onChange({ ...particle, options: { ...particle.options, scale } });\n    }, [particle, onChange]);\n    const handleProbabilityChange = useCallback(function (probability) {\n        onChange({ ...particle, probability });\n    }, [particle, onChange]);\n\n    const o = particle.options;\n    return <div className=\"form-group form-row\">\n        <div style={{ flexGrow: 0.95, flexShrink: 1 }}><Select options={PARTICLES} value={PARTICLES.find(op => o.type === op.value)} onChange={handleTypeChange} /></div>\n        {(o.type === 'minecraft:block' || o.type === 'minecraft:falling_dust') && <div style={{ flexGrow: 1 }}><BlockState block={o} onChange={handleBlockChange} /></div>}\n        {o.type === 'minecraft:dust' && <>\n            <DustColor r={o.r} g={o.g} b={o.b} onChange={handleColorChange} />\n            <NumberInput id=\"scale\" value={o.scale} onChange={handleScaleChange} defaultValue=\"1\" step=\"0.1\" className=\"mls\">Scale</NumberInput>\n        </>}\n        <NumberInput id=\"probability\" value={particle.probability} onChange={handleProbabilityChange} step=\"0.005\" className=\"mlm\">Probability</NumberInput>\n    </div>\n});\n\nconst DustColor = React.memo(function ({ r, g, b, onChange }) {\n    const handleColorChange = useCallback(function (color) {\n        const r = ((color >> 16) & 0xFF) / 0xFF;\n        const g = ((color >> 8) & 0xFF) / 0xFF;\n        const b = (color & 0xFF) / 0xFF;\n        onChange({ r, g, b });\n    }, [onChange]);\n\n    let value = undefined;\n    if (typeof r === 'number' && typeof g === 'number' && typeof b === 'number') {\n        r = (r * 0xFF) & 0xFF;\n        g = (g * 0xFF) & 0xFF;\n        b = (b * 0xFF) & 0xFF;\n        value = ((r << 16) | (g << 8) | b);\n    }\n\n    return <ColorInput value={value} defaultValue={0x38470} onChange={handleColorChange} className=\"mls\">Color</ColorInput>\n});\n","import { useCallback, useEffect, useRef, useState } from \"react\";\n\n/**\n * @param {boolean} initial \n * @returns {[boolean, function(): void]}\n */\nexport function useToggle(initial = false) {\n    const [status, setState] = useState(initial);\n    const toggle = useCallback(function (e = null) {\n        if (e !== null && (typeof e === 'boolean' || typeof e.target.checked === 'boolean')) {\n            setState(typeof e === 'boolean' ? e : e.target.checked);\n            return;\n        }\n        \n        if (e !== null && typeof e.preventDefault === 'function') {\n            e.preventDefault();\n        }\n        setState(current => !current);\n    }, []);\n    return [status, toggle];\n}\n\n/**\n * \n * @param {string} [page] \n * @param {number} [index] \n * @returns {[string, number, function (SyntheticEvent, string, number): void]}\n */\nexport function useMenu(page = 'main', index = -1) {\n    const [state, setState] = useState({ page, index });\n\n    const setPage = function (e, page = 'main', index = -1) {\n        if (e !== null) {\n            e.preventDefault();\n        }\n        if (index < 0) {\n            setState({ page });\n        } else {\n            setState({ page, index });\n        }\n    }\n\n    return [\n        state.page,\n        state.index,\n        setPage\n    ];\n}\n\n/**\n * @param {function(HTMLCanvasElement, CanvasRenderingContext2D): void} callback\n * @returns {React.MutableRefObject}\n */\nexport function useCanvas(callback) {\n    const reference = useRef(null);\n\n    useEffect(function() {\n        const canvas = reference.current;\n        const ctx = canvas.getContext('2d');\n        callback(canvas, ctx);\n    }, [callback]);\n\n    return reference;\n}","import React, { useCallback, useContext, useMemo } from 'react';\nimport { useCrudPreset, useJsonEffect } from \"../../hooks/form\";\n\nimport { Button } from '../../ui/Button';\nimport { DataContext } from '../../context/DataContext';\nimport { NumberInput } from '../../ui/Input';\nimport { SPAWNERS_DEFAULTS } from './BiomeDefaults';\nimport Select from '../../ui/Select';\nimport { useToggle } from '../../hooks/ui';\n\nexport const BiomeSpawners = React.memo(function({onChange, data}) {\n\n    const spawners = useJsonEffect(data || SPAWNERS_DEFAULTS, data, onChange);\n    const entities = useContext(DataContext).vanilla.entities;\n\n    const handleChange = useCallback(function(group, groupSpawners) {\n        onChange({ ...spawners, [group]: groupSpawners });\n    }, [spawners, onChange]);\n\n    return <div>\n        <SpawnGroup group=\"ambient\" data={spawners.ambient} onChange={handleChange} entities={entities}>Ambient</SpawnGroup>\n        <SpawnGroup group=\"creature\" data={spawners.creature} onChange={handleChange} entities={entities}>Creature</SpawnGroup>\n        <SpawnGroup group=\"misc\" data={spawners.misc} onChange={handleChange} entities={entities}>Miscellaneous</SpawnGroup>\n        <SpawnGroup group=\"monster\" data={spawners.monster} onChange={handleChange} entities={entities}>Monster</SpawnGroup>\n        <SpawnGroup group=\"water_ambient\" data={spawners.water_ambient} onChange={handleChange} entities={entities}>Water ambient</SpawnGroup>\n        <SpawnGroup group=\"water_creature\" data={spawners.water_creature} onChange={handleChange} entities={entities}>Water creature</SpawnGroup>\n    </div>;\n});\n\nconst SpawnGroup = React.memo(function({children, entities, data = [], group, onChange}) {\n    const [visibility, toggle] = useToggle();\n    const text = visibility ? 'Less...' : 'More...';\n\n    const [spawners, insert, handleChange, handleRemove] = useCrudPreset(spawners => onChange(group, spawners), data, function(spawners) {\n        // Get the first non taken entity\n        return { type: (entities.filter(o => !spawners.some(s => s.type === o.value))[0] || { value: 'minecraft:cow' }).value, minCount: 1, maxCount: 1, weight: 1 };\n    }, true);\n\n    const handleAdd = useCallback(function(e) {\n        insert(e);\n        if (!visibility) {\n            toggle();\n        }\n    }, [insert, toggle, visibility]);\n\n    if (visibility) {\n        return <div>\n            <div className=\"toggle-label\">\n                {children}\n                <div className=\"btn-group\">\n                    {entities.length > spawners.length && <Button onClick={handleAdd}>Add</Button>}\n                    {spawners.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{text}</Button>} \n                </div>\n            </div>\n            {spawners.map((spawner, index) => {\n                const options = entities.filter(o => spawner.type === o.value || !spawners.some(s => s.type === o.value));\n                return <SpawnDefinition data={spawner} key={spawner.type} onChange={handleChange} onDelete={handleRemove} index={index} options={options} />;\n            })}\n        </div>;\n    }\n    \n    return <div className=\"toggle-label\">\n        {children}\n        <div className=\"btn-group\">\n            {spawners.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{text}</Button>}\n            {(spawners.length < 1) && <Button onClick={handleAdd}>Add</Button>}\n        </div>\n    </div>;\n});\n\nconst SpawnDefinition = React.memo(function({data, index, options, onChange, onDelete}) {\n\n    const handleTypeChange = useCallback(function(option) {\n        onChange({ ...data, type: option.value }, data);\n    }, [data, onChange]);\n    const handleValueChange = useCallback(function(value) {\n        onChange({ ...data, ...value }, data);\n    }, [data, onChange]);\n    const handleCountChange = function(count) {\n        const name = Object.keys(count)[0];\n        const value = count[name];\n        if ((name === 'minCount' && value <= data.maxCount)\n            || (name === 'maxCount' && value >= data.minCount)) {\n                onChange({ ...data, [name]: value }, data);\n        } \n    };\n    const handleDelete = useCallback(function(e) {\n        onDelete(e, index);\n    }, [index, onDelete]);\n\n    const selectedOption = useMemo(function() {\n        return options.find(o => o.value === data.type);\n    }, [data.type, options]);\n\n    return <div>\n        <div className=\"form-group\">\n            <label>Mob type</label> : <Select options={options} value={selectedOption} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"weight\" value={data.weight} upChange={handleValueChange}>Weight</NumberInput>\n            <NumberInput id=\"minCount\" value={data.minCount} max={data.maxCount} upChange={handleCountChange}>Min count</NumberInput>\n            <NumberInput id=\"maxCount\" value={data.maxCount} min={data.minCount} upChange={handleCountChange}>Max count</NumberInput>\n            <div className=\"form-inline\"><Button cat=\"danger\" onClick={handleDelete}>Delete</Button></div>\n        </div>\n        <hr /> \n    </div>\n});\n","import React, { useCallback, useMemo } from 'react';\n\nimport { STARTS } from './BiomeDefaults';\nimport Select from '../../ui/Select';\nimport { useJsonEffect } from '../../hooks/form';\n\nexport const BiomeStarts = React.memo(function({onChange, starts}) {\n    starts = useJsonEffect(starts || STARTS, starts, onChange);\n\n    const handleChange = useCallback(function(selectedOptions) {\n        onChange(selectedOptions === null ? [] : selectedOptions.map(option => option.value));\n    }, [onChange]);\n\n    const options = useMemo(function() {\n        return [\n            \"pillager_outpost\",\n            \"mineshaft\",\n            \"mineshaft_mesa\",\n            \"mansion\",\n            \"jungle_pyramid\",\n            \"desert_pyramid\",\n            \"igloo\",\n            \"shipwreck\",\n            \"shipwreck_beached\",\n            \"swamp_hut\",\n            \"stronghold\",\n            \"monument\",\n            \"ocean_ruin_cold\",\n            \"ocean_ruin_warm\",\n            \"fortress\",\n            \"nether_fossil\",\n            \"end_city\",\n            \"buried_treasure\",\n            \"bastion_remnant\",\n            \"village_plains\",\n            \"village_desert\",\n            \"village_savanna\",\n            \"village_snovy\",\n            \"village_taiga\",\n            \"ruined_portal\",\n            \"ruined_portal_desert\",\n            \"ruined_portal_jungle\",\n            \"ruined_portal_swamp\",\n            \"ruined_portal_mountain\",\n            \"ruined_portal_ocean\",\n            \"ruined_portal_nether\"\n        ].map(option => ({ value: 'minecraft:' + option, label: 'minecraft:' + option }));\n    }, []);\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"starts\">Structures</label>\n        <Select isMulti id=\"starts\" options={options} onChange={handleChange} value={options.filter(o => starts.includes(o.value))} />\n    </div>;\n});\n","import React, { useEffect } from 'react';\n\nimport { Button } from './Button';\nimport { createPortal } from 'react-dom';\nimport useModal from '@delangle/use-modal';\n\nexport const Modal = ({ children, open, onClose }) => {\n    const modal = useModal({ open, onClose: () => onClose(false) });\n\n    const el = document.createElement('div');\n    el.classList.add('modal-wrapper');\n\n    useEffect(() => {\n        document.body.appendChild(el);\n        return () => document.body.removeChild(el);\n    }, [el]);\n\n    return createPortal(\n        <dialog open={modal.state === 'opened'}>\n            <Button cat=\"close\" onClick={onClose}></Button>\n            {children}\n        </dialog>\n    , el);\n}\n","import React, { useCallback } from 'react';\n\nimport { JsonView } from 'json-view-for-react'\nimport { Modal } from './Modal';\nimport { useToggle } from '../hooks/ui';\n\nexport function JsonViewer({ data }) {\n    const [open, toggleModal] = useToggle();\n\n    const obj = useCallback(function () {\n        const obj = typeof data === 'object' ? { ...data } : data();\n        delete obj.key;\n        delete obj.index;\n        return obj;\n    }, [data]);\n\n    return <>\n        <i className=\"code mls\" onClick={toggleModal}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M.7 9.3l4.8-4.8 1.4 1.4-4 4.1 4 4-1.4 1.5L0 10l.7-.7zm18.6 1.4l.7-.7-5.5-5.5L13.1 6l4 4.1-4 4 1.4 1.5 4.8-4.8z\"/></svg></i>\n        {open &&\n            <Modal open={open} onClose={toggleModal}><JsonView obj={obj()} /></Modal>\n        }\n    </>\n}\n","import React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\n\nimport { Button } from '../ui/Button';\nimport { DataContext } from '../context/DataContext';\nimport Select from '../ui/Select';\nimport { useKeyedListOptions } from '../hooks/context';\nimport { useToggle } from '../hooks/ui';\n\nexport function NamespacedKey({ children, example = 'daily_resource', type, value = '', expectBreakage = false, inline = true, mayReplaceVanilla = true, defaultReplace = false, onChange, onSelect, onSelectLoad }) {\n    // To trigger form submit\n    const hidden = useRef(null);\n\n    // Final namespaced key\n    const [key, setKey] = useState(value);\n    const [fill, toggleFill] = useToggle(true);\n    const [mayFill, setMayFill] = useToggle(value !== '');\n\n    const options = useKeyedListOptions(type, false, !mayReplaceVanilla);\n\n    const context = useContext(DataContext);\n    const defaultNamespace = context.namespace;\n    const [replace, toggle] = useToggle(value === '' ? defaultReplace : options.some(o => key === o.value));\n\n    // Adjust value with default namespace if needed\n    const handleKeyChange = useCallback(function (e) {\n        const value = e.target.value.toLowerCase();\n        if (value.includes(':')) {\n            setKey(value);\n        } else {\n            setKey(defaultNamespace + ':' + value);\n        }\n    }, [defaultNamespace, setKey]);\n\n    const handleReplaceTargetChange = useCallback((selected) => {\n        const key = selected.value;\n        setKey(key);\n        setMayFill(true);\n        if (typeof onSelect === 'function') {\n            onSelect(key);\n        }\n        if (fill && typeof onSelectLoad === 'function') {\n            context.vanilla.getVanillaResource(type, key)\n                .then(onSelectLoad)\n                .then(setMayFill)\n                .catch(console.error);\n        }\n    }, [context.vanilla, fill, onSelect, onSelectLoad, setKey, setMayFill, type]);\n\n    // Fire onChange\n    useEffect(function() {\n        if (typeof onChange === 'function' && key !== value) {\n            onChange(key);\n        }\n    }, [key, onChange, value]);\n\n    // Allow form submit by pressing enter\n    const handleKeyDown = useCallback(function (e) {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            const form = hidden.current.form;\n            if (form !== null) {\n                form.dispatchEvent(new Event('submit', { cancelable: true }));\n            }\n        }\n    }, []);\n\n    // Remove the \"minecraft:\" part when changing mode\n    const handleToggle = useCallback(function (e) {\n        if (replace && key.startsWith('minecraft:')) {\n            setKey(key => defaultNamespace + ':' + key.split(':')[1]);\n        }\n        toggle(e);\n    }, [defaultNamespace, key, setKey, replace, toggle]);\n\n    const handleFillToggle = useCallback(function (e) {\n        if (e.target.checked && mayFill && typeof onSelectLoad === 'function') {\n            context.vanilla.getVanillaResource(type, key)\n                .then(onSelectLoad)\n                .then(setMayFill)\n                .catch(console.error);\n        }\n        toggleFill(e);\n    }, [context.vanilla, key, mayFill, onSelectLoad, setMayFill, toggleFill, type]);\n\n    // Displayed input value - trim namespace if default\n    const inputValue = useMemo(function () {\n        if (key.startsWith(defaultNamespace + ':')) {\n            return key.split(':')[1];\n        }\n        return key;\n    }, [defaultNamespace, key]);\n\n    // Hidden input value - set to empty when nothing is selected (keeps the key from text mode)\n    const hiddenInputValue = useMemo(function () {\n        if (replace && !options.some(o => o.value === key)) {\n            return '';\n        }\n        return key;\n    }, [key, options, replace]);\n\n    // Adapt select width to its content\n    const style = useMemo(function () {\n        let width = 8 * Math.max.apply(Math, options.map(o => o.label.length)) + 60;\n        if (!isFinite(width)) {\n            width = '250px';\n        }\n        return { width };\n    }, [options]);\n\n    const dummyOnChange = useCallback(console.log, []);\n\n    return <>\n        {typeof children !== 'undefined' && <h3>{(typeof value === 'undefined' || value === '') ? 'Create new ' : 'Edit '}{children}</h3>}\n        <div className=\"form-group\">\n            <label htmlFor=\"key\">{replace ? 'Replace' : 'Key'}</label> :&nbsp;\n            {replace && <div className=\"inbl\" style={style}>\n                <Select options={options} value={options.find(o => key === o.value)} onChange={handleReplaceTargetChange} inputId=\"key\" />\n            </div>}\n            {!replace &&\n                <input type=\"text\" id=\"key\" required pattern=\"^([\\w.-]+:[\\w/.-]+)$|^[\\w/.-]+$\" placeholder={`Example: ${example}`}\n                    autoCapitalize=\"none\" spellCheck=\"false\" autoComplete=\"off\" value={inputValue}\n                    onChange={handleKeyChange} onKeyPress={handleKeyDown} />\n            }\n            <input type={replace ? 'text' : 'hidden'} name=\"key\" value={hiddenInputValue} onChange={dummyOnChange} ref={hidden}\n                required tabIndex=\"-1\" style={{ opacity: 0, height: 0, position: 'absolute' }} />\n            {mayReplaceVanilla && <Button cat=\"info mlm\" onClick={handleToggle}>{replace ? 'Create a new one' : 'Replace vanilla'}</Button>}\n            {!inline && <br />}{replace && <><input type=\"checkbox\" className=\"checkbox mls\" id=\"fill-values\" checked={fill} onChange={handleFillToggle} /> Fill with values</>}\n        \n            {expectBreakage && value !== key && !key.startsWith('minecraft:') &&\n                <p className=\"alert--warning\">Warning: changing the name of a resource may break other resources that depend on it.</p>\n            }\n            {!mayReplaceVanilla && !replace && key.startsWith('minecraft:') &&\n                <p className=\"alert--warning\">Warning: datapacks cannot currently replace vanilla {type}.</p>\n            }\n        </div>\n    </>;\n}","import { useMemo } from \"react\";\n\n/**\n * @typedef RESOURCE_OPTION\n * @type {object}\n * @property {string} value Unique option value \n * @property {string} label Text label \n * @property {string|object} resource\n */\n\n/**\n * \n * @param {{ value: string, label: string }[]} options \n * @param {string|object[]} [resources] \n * @param {boolean} [mutable] \n * @returns {[RESOURCE_OPTION[], RESOURCE_OPTION[]]} Options and selected options\n */\nexport function useInlineResources(options, resources = [], mutable = true) {\n    const inline = getInline(resources);\n\n    let values = options.map(option => {\n        if (mutable) {\n            option.resource = option.value;\n            return option;\n        }\n        return { ...option, resource: option.value };\n    });\n    if (inline.length > 0) {\n        if (mutable) {\n            values.push(...inline);\n        } else {\n            values = [ ...options, ...inline ];\n        }\n    }\n    return [\n        values,\n        useMemo(() => values.filter(o => resources.includes(o.resource)), [resources, values])\n    ];\n}\n\n/**\n * @param {string|object[]} resources \n * @returns {RESOURCE_OPTION[]}\n */\nfunction getInline(resources) {\n    return resources\n        .filter(res => typeof res === 'object')\n        .map((res, i) => {\n            const inline = 'inline' + (i+1);\n            return {\n                value: inline,\n                label: inline,\n                resource: res\n            }\n        });\n}\n","import React, { useCallback, useContext, useState } from 'react';\n\nimport { Button } from '../../ui/Button';\nimport { DataContext } from '../../context/DataContext';\nimport { JsonViewer } from '../../ui/JsonViewer';\nimport { Modal } from '../../ui/Modal';\nimport { NamespacedKey } from \"../NamespacedKey\";\nimport { NumberInput } from '../../ui/Input';\nimport Select from '../../ui/Select';\nimport { VANILLA_CARVERS } from './CarverDefaults';\nimport { useInlineResources } from '../../hooks/select';\nimport { useJsonEffect } from '../../hooks/form';\nimport { useKeyedListOptions } from '../../hooks/context';\nimport { useToggle } from '../../hooks/ui';\n\nexport const ConfiguredCarver = React.memo(function({ carvers, onChange }) {\n\n    carvers = useJsonEffect(carvers || { air: [ 'minecraft:cave', 'minecraft:canyon' ] }, carvers, onChange);\n    const [open, toggleModal] = useToggle();\n\n    const options = useKeyedListOptions('carvers');\n\n    const handleAirChange = useCallback(function (options) {\n        onChange({ ...carvers, air: options === null ? [] : options.map(option => option.resource) });\n    }, [carvers, onChange]);\n    const handleLiquidChange = useCallback(function (options) {\n        onChange({ ...carvers, liquid: options === null ? [] : options.map(option => option.resource) });\n    }, [carvers, onChange]);\n    const handleNewClick = useCallback(function (e) {\n        e.preventDefault();\n        toggleModal(true);\n    }, [toggleModal]);\n    const handleCarverCreated = useCallback(function(carver) {\n        onChange({ ...carvers, air: [ ...(carvers.air || []), carver.key ] });\n        toggleModal(false);\n    }, [carvers, onChange, toggleModal]);\n\n    const [optionsAir, selectedAir] = useInlineResources(options, carvers.air);\n    const [optionsLiquid, selectedLiquid] = useInlineResources(options, carvers.liquid);\n\n    return <fieldset>\n        <legend>Carvers <Button onClick={handleNewClick}>Create new</Button></legend>\n\n        <label htmlFor=\"air\">Air</label>\n        <Select isMulti options={optionsAir} onChange={handleAirChange} value={selectedAir} inputId=\"air\" />\n        <div className=\"form-group\">\n            <label htmlFor=\"liquid\">Liquid</label>\n            <Select isMulti options={optionsLiquid} onChange={handleLiquidChange} value={selectedLiquid} inputId=\"liquid\" />\n        </div>\n        {open && <Modal open={open} onClose={toggleModal}>\n            <ConfiguredCarverForm onSave={handleCarverCreated} />\n        </Modal>}\n    </fieldset>\n});\n\nexport function ConfiguredCarverForm({ data = { type: 'minecraft:cave', config: { probability: 0.143 } }, onSave }) {\n\n    const [carver, setCarver] = useState(data);\n\n    const handleSelectChange = useCallback(function (option) {\n        setCarver({\n            config: {\n                probability: option.probability\n            },\n            type: option.value\n        });\n    }, []);\n    const handleProbabilityChange = useCallback(function (probability) {\n        setCarver(carver => ({ ...carver, config: { probability } }));\n    }, []);\n\n    const updateCarvers = useContext(DataContext).custom.updateCarvers;\n    const handleSubmit = useCallback(function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const c = ({\n            ...data,\n            ...carver,\n            ...Object.fromEntries(new FormData(e.target))\n        });\n        updateCarvers(c, data);\n        if (typeof onSave === 'function') {\n            onSave(c);\n        }\n    }, [data, carver, onSave, updateCarvers]);\n\n    return <form onSubmit={handleSubmit}>\n        <NamespacedKey example=\"pit\" type=\"carvers\" value={data.key} inline={false} expectBreakage={typeof data.key !== 'undefined'} onSelectLoad={setCarver}>\n            configured carver\n            <JsonViewer data={carver} />\n        </NamespacedKey>\n        <div className=\"form-group\">\n            <label htmlFor=\"type\">Type</label>\n            <Select options={VANILLA_CARVERS} value={VANILLA_CARVERS.find(o => o.value === carver.type)} onChange={handleSelectChange} inputId=\"type\" />\n        </div>\n        <div className=\"form-group\">\n            <NumberInput value={carver.config.probability} max=\"1\" step=\"0.001\" onChange={handleProbabilityChange}>Probability</NumberInput>\n        </div>\n        <Button type=\"submit\">Save</Button>\n    </form>\n}\n","import React, { useCallback } from 'react';\n\nimport { FEATURES } from './BiomeDefaults';\nimport Select from '../../ui/Select';\nimport { useJsonEffect } from '../../hooks/form';\nimport { useKeyedListOptions } from '../../hooks/context';\n\nexport const GenFeatures = React.memo(function({ onChange, features }) {\n\n    const handleLevelChange = useCallback(function(priority, list) {\n        onChange(features.map((level, p) => priority === p ? list : level));\n    }, [features, onChange]);\n    useJsonEffect(features || FEATURES, features, onChange);\n\n    return <div className=\"form-group\">\n        <label>Features</label>\n        <p className=\"help\"><small className=\"text-muted\">Each generation feature is associated with a priority. The higher the priority, the later the feature will be applied.</small></p>\n        <ol>\n            {features.map((level, i) =>\n                <li key={i}><GenFeaturesLevel value={level} onChange={handleLevelChange} priority={i} /></li>\n            )}\n        </ol>\n    </div>;\n});\n\nexport const GenFeaturesLevel = React.memo(function({ onChange, priority, value }) {\n    const options = useKeyedListOptions('features');\n\n    const handleChange = useCallback(function(selectedOptions) {\n        onChange(priority, selectedOptions === null ? [] : selectedOptions.map(option => option.value));\n    }, [onChange, priority]);\n\n    return <Select isMulti options={options} onChange={handleChange} defaultValue={options.filter(o => value.includes(o.value))} />;\n});\n","import { ConfInput, NumberInput } from '../../ui/Input';\nimport React, { useCallback, useState } from 'react';\n\nimport { BIOME_DEFAULTS } from './BiomeDefaults';\nimport { BiomeEffects } from './BiomeEffects';\nimport { BiomeSpawners } from './BiomeSpawners';\nimport { BiomeStarts } from './BiomeStarts';\nimport { Button } from '../../ui/Button';\nimport { ConfiguredCarver } from '../carver/ConfiguredCarver';\nimport { GenFeatures } from './Features';\nimport { INT_MIN_VALUE } from '../../utils/math';\nimport { JsonViewer } from '../../ui/JsonViewer';\nimport { NamespacedKey } from '../NamespacedKey';\nimport Select from '../../ui/Select';\nimport { useKeyedListOptions } from '../../hooks/context';\n\nexport function Biome({data = BIOME_DEFAULTS, onSave}) {\n\n    const [state, setState] = useState(data);\n\n    const handleCarversChange = useCallback(function(carvers) {\n        setState(state => ({ ...state, carvers }));\n    }, []);\n    const handleStartsChange = useCallback(function(starts) {\n        setState(state => ({ ...state, starts }));\n    }, []);\n    const handleEffectsChange = useCallback(function(effects) {\n        setState(state => ({ ...state, effects }));\n    }, []);\n    const handleFeaturesChange = useCallback(function(features) {\n        setState(state => ({ ...state, features }));\n    }, []);\n    const handleSpawnersChange = useCallback(function(spawners) {\n        setState(state => ({ ...state, spawners }));\n    }, []);\n    const handleSurfaceBuilderChange = useCallback(function(option) {\n        setState(state => ({ ...state, surface_builder: option.value }));\n    }, []);\n    const handlePrecipitationChange = useCallback(function(option) {\n        setState(state => ({ ...state, precipitation: option.value }));\n    }, []);\n    const handleCategoryChange = useCallback(function(option) {\n        setState(state => ({ ...state, category: option.value }));\n    }, []);\n    const handleChange = useCallback(function(value) {\n        setState(state => ({ ...state, ...value }));\n    }, []);\n    const handleSpawnFriendlyChange = useCallback(function(e) {\n        const player_spawn_friendly = e.target.checked;\n        setState(state => ({ ...state, player_spawn_friendly }));\n    }, []);\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        const formData = Object.fromEntries(new FormData(e.target));\n        onSave({ ...state, ...formData });\n    }, [onSave, state]);\n\n    return <form onSubmit={handleSubmit}>\n        <NamespacedKey example=\"arctic\" type=\"biomes\" value={state.key} expectBreakage={typeof data.key !== 'undefined'} onSelectLoad={setState}>\n            biome\n            <JsonViewer data={state} />\n        </NamespacedKey>\n\n        <BiomeEffects effects={state.effects} onChange={handleEffectsChange} />\n\n        <fieldset>\n            <BiomeCategory category={state.category} onChange={handleCategoryChange} />\n            <BiomePrecipitation value={state.precipitation} onChange={handlePrecipitationChange} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Generation</legend>\n            <SurfaceBuilder value={state.surface_builder} onChange={handleSurfaceBuilderChange} />\n            <BiomeStarts starts={state.starts} onChange={handleStartsChange} />\n            <GenFeatures features={state.features} onChange={handleFeaturesChange} />\n        </fieldset>\n\n        <ConfiguredCarver carvers={state.carvers} onChange={handleCarversChange} />\n\n        <fieldset>\n            <legend>Creatures</legend>\n            <BiomeSpawners data={state.spawners} onChange={handleSpawnersChange} />\n        </fieldset>\n\n        <fieldset>\n            <legend>Settings</legend>\n            <div className=\"form-group form-row\">\n                <ConfInput id=\"player_spawn_friendly\" checked={typeof state.player_spawn_friendly === 'boolean' ? state.player_spawn_friendly : true} onChange={handleSpawnFriendlyChange}>Player spawn friendly</ConfInput>\n                <NumberInput id=\"creature_spawn_probability\" value={state.creature_spawn_probability} defaultValue={0.1} step={0.1} required={false} upChange={handleChange}>Creature spawn probability</NumberInput>\n            </div>\n            <div className=\"form-group form-row\">\n                <NumberInput id=\"scale\" value={state.scale || 0.05} min={INT_MIN_VALUE} step={0.05} upChange={handleChange}>Scale</NumberInput>\n                <NumberInput id=\"downfall\" value={state.downfall || 0.4} min={INT_MIN_VALUE} step={0.1} upChange={handleChange}>Downfall</NumberInput>\n                <NumberInput id=\"depth\" value={state.depth || 0.12} min={INT_MIN_VALUE} step={0.01} upChange={handleChange}>Depth</NumberInput>\n                <NumberInput id=\"temperature\" value={state.temperature || 0.8} min={INT_MIN_VALUE} step={0.1} upChange={handleChange}>Temperature</NumberInput>\n                <p className=\"mts\"><small className=\"text-muted\">The <em>scale</em> parameter defines terrain amplitude, <em>downfall</em> controls grass and foliage color, <em>depth</em> is the difference from sea level, <em>temperature</em> controls some gameplay features like whether snow golems take damage. The default values are those of the plains biome.</small></p>\n            </div>\n        </fieldset>\n        <Button type=\"submit\">Save</Button>\n    </form>;\n}\n\nconst BiomeCategory = React.memo(function({ category = 'plains', onChange }) {\n\n    const options = [\n        { value: 'beach', label: 'Beach' },\n        { value: 'desert', label: 'Desert' },\n        { value: 'extreme_hills', label: 'Extreme hills' },\n        { value: 'forest', label: 'Forest' },\n        { value: 'icy', label: 'Icy' },\n        { value: 'jungle', label: 'Jungle' },\n        { value: 'mesa', label: 'Mesa' },\n        { value: 'nether', label: 'Nether' },\n        { value: 'none', label: 'None' },\n        { value: 'ocean', label: 'Ocean' },\n        { value: 'plains', label: 'Plains' },\n        { value: 'river', label: 'River' },\n        { value: 'savanna', label: 'Savanna' },\n        { value: 'swamp', label: 'Swamp' },\n        { value: 'taiga', label: 'Taiga' },\n        { value: 'the_end', label: 'The end' },\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"category\">Category</label>\n        <Select options={options} value={options.find(o => o.value === category)} onChange={onChange} />\n    </div>;\n});\n\nconst BiomePrecipitation = React.memo(function({ onChange, value = 'rain' }) {\n\n    const options = [\n        { value: 'none', label: 'None' },\n        { value: 'rain', label: 'Rain' },\n        { value: 'snow', label: 'Snow' }\n    ];\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"precipitation\">Precipitation</label>\n        <Select options={options} value={options.find(o => o.value === value)} onChange={onChange} />\n    </div>;\n});\n\nconst SurfaceBuilder = React.memo(function({ onChange, value = 'minecraft:grass' }) {\n    const options = useKeyedListOptions('surfaces');\n    return <div className=\"form-group\">\n        <label htmlFor=\"surface_builder\">Surface builder</label>\n        <Select options={options} value={options.find(o => o.value === value)} onChange={onChange} />\n    </div>;\n});\n","import { INT_MAX_VALUE, INT_MIN_VALUE, grad, lerp3, perlinFade } from '../../utils/math';\n\nimport Random from 'java-random';\n\nexport class DoublePerlinSampler {\n    /**\n     * @param {JavaRandom} random \n     * @param {{ firstOctave: number, amplitudes: number[] }} settings \n     */\n    constructor(random, settings) {\n        this.firstSampler = new OctaveSimplexNoise(random, settings);\n        this.secondSampler = new OctaveSimplexNoise(random, settings);\n        this.amplitude = this.createAmplitude(settings.amplitudes);\n    }\n\n    /**\n     * @param {number[]} amplitudes \n     * @returns {number}\n     */\n    createAmplitude(amplitudes) {\n        let a = INT_MAX_VALUE;\n        let b = INT_MIN_VALUE;\n        amplitudes.forEach((n, index) => {\n            if (n !== 0) {\n                a = Math.min(a, index);\n                b = Math.max(b, index);\n            }\n        });\n        return (1/6) / (0.1 * (1.0 + 1.0 / (b - a + 1)));\n    }\n\n    /**\n     * @param {number} x \n     * @param {number} y \n     * @param {number} z \n     */\n    sample(x, y, z) {\n        const d = x * 1.0181268882175227;\n        const e = y * 1.0181268882175227;\n        const f = z * 1.0181268882175227;\n        return (this.firstSampler.sample(x, y, z) + this.secondSampler.sample(d, e, f)) * this.amplitude;\n    }\n}\n\nclass OctaveSimplexNoise {\n\n    /**\n     * @param {Random} random \n     * @param {number[]} octaves \n     */\n    constructor(random, { firstOctave, amplitudes }) {\n        this.amplitudes = amplitudes;\n        const sampler = new PerlinNoiseSampler(random);\n        const j = amplitudes.length;\n        const k = -firstOctave;\n        this.octaveSamplers = new Array(j);\n\n        if (k >= 0 && k < j) {\n            const d = amplitudes[k];\n            if (d !== 0.0) {\n                this.octaveSamplers[k] = sampler;\n            }\n        }\n\n        for (let l = k - 1; l >= 0; --l) {\n            if (l < j) {\n                if (this.amplitudes[l] !== 0.0) {\n                    this.octaveSamplers[l] = new PerlinNoiseSampler(random);\n                } else {\n                    consumeRandom(random, 262);\n                }\n            } else {\n                consumeRandom(random, 262);\n            }\n        }\n\n        if (k < j - 1) {\n            const m = sampler.sample(0.0, 0.0, 0.0, 0.0, 0.0) * 9.223372036854776E18;\n            const random2 = new Random(m);\n\n            for (let n = k + 1; n < j; ++n) {\n                if (n >= 0) {\n                    if (this.amplitudes[n] !== 0.0) {\n                        this.octaveSamplers[n] = new PerlinNoiseSampler(random2);\n                    } else {\n                        consumeRandom(random, 262);\n                    }\n                } else {\n                    consumeRandom(random, 262);\n                }\n            }\n        }\n\n        this.lacunarity = Math.pow(2.0, -k);\n        this.persistence = Math.pow(2.0, j - 1) / (Math.pow(2.0, j) - 1.0);\n    }\n\n    /**\n     * @param {number} x \n     * @param {number} y \n     * @param {number} z \n     * @param {number} d \n     * @param {number} e \n     * @param {boolean} bl \n     */\n    sample(x, y, z, d = 0.0, e = 0.0, bl = false) {\n        let noise = 0.0;\n        let lacunarity = this.lacunarity;\n        let persistence = this.persistence;\n\n        this.octaveSamplers.forEach((sampler, i) => {\n            if (typeof sampler === 'object') {\n                noise += this.amplitudes[i] * sampler.sample(\n                    x * lacunarity, bl ? -sampler.originY : y * lacunarity,\n                    z * lacunarity,\n                    d * lacunarity, e * lacunarity) * persistence;\n                lacunarity *= 2.0;\n                persistence /= 2.0;\n            }\n        });\n        return noise;\n    }\n}\n\nclass PerlinNoiseSampler {\n\n    /**\n     * @param {Random} random \n     */\n    constructor(random) {\n        this.originX = random.nextDouble() * 256;\n        this.originY = random.nextDouble() * 256;\n        this.originZ = random.nextDouble() * 256;\n        this.permutations = this.buildPermutationsTable(random);\n    }\n\n    /**\n     * @param {Random} random \n     */\n    buildPermutationsTable(random) {\n        const permutations = new Uint8Array(256);\n        for (let j = 0; j < 256; ++j) {\n            permutations[j] = j;\n        }\n        for (let j = 0; j < 256; ++j) {\n            const k = random.nextInt(256 - j);\n            const b = permutations[j];\n            permutations[j] = permutations[j + k];\n            permutations[j + k] = b;\n        }\n        return permutations;\n    }\n\n    /**\n     * @param {number} x \n     * @param {number} y \n     * @param {number} z \n     * @param {number} d \n     * @param {number} e \n     * @returns {number}\n     */\n    sample(x, y, z, d, e) {\n        const rx = x + this.originX;\n        const ry = y + this.originY;\n        const rz = z + this.originZ;\n        const fx = Math.floor(rx);\n        const fy = Math.floor(ry);\n        const fz = Math.floor(rz);\n\n        const dx = rx - fx;\n        const dy = ry - fy;\n        const dz = rz - fz;\n        const fadeX = perlinFade(dx);\n        const fadeY = perlinFade(dy);\n        const fadeZ = perlinFade(dz);\n\n        const t = d === 0 ? 0 : Math.floor(Math.min(e, dy) / d) * d;\n        return this._sample(fx, fy, fz, dx, dy - t, dz, fadeX, fadeY, fadeZ);\n    }\n\n    /**\n     * @param {number} sectionX \n     * @param {number} sectionY \n     * @param {number} sectionZ \n     * @param {number} localX \n     * @param {number} localY \n     * @param {number} localZ \n     * @param {number} fadeLocalX \n     * @param {number} fadeLocalY \n     * @param {number} fadeLocalZ \n     * @returns {number}\n     */\n    _sample(sectionX, sectionY, sectionZ, localX, localY, localZ, fadeLocalX, fadeLocalY, fadeLocalZ) {\n        const i = this.getGradient(sectionX) + sectionY;\n        const j = this.getGradient(i) + sectionZ;\n        const k = this.getGradient(i + 1) + sectionZ;\n        const l = this.getGradient(sectionX + 1) + sectionY;\n        const m = this.getGradient(l) + sectionZ;\n        const n = this.getGradient(l + 1) + sectionZ;\n        const d = grad(this.getGradient(j), localX, localY, localZ);\n        const e = grad(this.getGradient(m), localX - 1.0, localY, localZ);\n        const f = grad(this.getGradient(k), localX, localY - 1.0, localZ);\n        const g = grad(this.getGradient(n), localX - 1.0, localY - 1.0, localZ);\n        const h = grad(this.getGradient(j + 1), localX, localY, localZ - 1.0);\n        const o = grad(this.getGradient(m + 1), localX - 1.0, localY, localZ - 1.0);\n        const p = grad(this.getGradient(k + 1), localX, localY - 1.0, localZ - 1.0);\n        const q = grad(this.getGradient(n + 1), localX - 1.0, localY - 1.0, localZ - 1.0);\n        return lerp3(fadeLocalX, fadeLocalY, fadeLocalZ, d, e, f, g, h, o, p, q);\n    }\n\n    getGradient(hash) {\n        return this.permutations[hash & 255];\n    }\n}\n\n/**\n * @param {Random} random \n * @param {number} count\n */\nfunction consumeRandom(random, count) {\n    for (let c = 0; c < count; c++) {\n        random.nextInt();\n    }\n}\n","export function hashCode(s) {\n    let hash;\n    for (let i = 0; i < s.length; i++) { \n        hash = Math.imul(31, hash) + s.charCodeAt(i) | 0;\n    }\n    return hash;\n}","import { DoublePerlinSampler } from './PerlinSamplers';\nimport Random from 'java-random';\nimport { hashCode } from '../../utils/hash';\n\n/**\n * @typedef Biome\n * @type {object}\n * @property {string} biome Biome name \n * @property {{\n        temperature: number,\n        humidity: number,\n        altitude: number,\n        weirdness: number,\n        offset: number\n    }} parameters Noise point parameters\n */\n\nexport class MultiNoiseDimension {\n\n    /**\n     * @param {{\n            temperature_noise: { firstOctave: number, amplitudes: number[] },\n            humidity_noise: { firstOctave: number, amplitudes: number[] },\n            altitude_noise: { firstOctave: number, amplitudes: number[] },\n            weirdness_noise: { firstOctave: number, amplitudes: number[] },\n            seed: number,\n            biomes: Biome[]\n        }} source\n    */\n    constructor(source) {\n        this.biomes = source.biomes;\n\n        this.temperatureNoise = new DoublePerlinSampler(new Random(source.seed), source.temperature_noise);\n        this.humidityNoise = new DoublePerlinSampler(new Random(source.seed + 1), source.humidity_noise);\n        this.altitudeNoise = new DoublePerlinSampler(new Random(source.seed + 2), source.altitude_noise);\n        this.weirdnessNoise = new DoublePerlinSampler(new Random(source.seed + 3), source.weirdness_noise);\n    }\n\n    /**\n     * Get biome for the given block position.\n     * \n     * @param {number} x \n     * @param {number} y \n     * @param {number} z \n     * @returns {Biome}\n     */\n    getBiomeAt(x, y, z) {\n        const biomeX = x >> 2;\n        const biomeY = y >> 2;\n        const biomeZ = z >> 2;\n\n        // Calculate a noise point using perlin noise samplers\n        const temperature = this.temperatureNoise.sample(biomeX, biomeY, biomeZ);\n        const humidity = this.humidityNoise.sample(biomeX, biomeY, biomeZ);\n        const altitude = this.altitudeNoise.sample(biomeX, biomeY, biomeZ);\n        const weirdness = this.weirdnessNoise.sample(biomeX, biomeY, biomeZ);\n\n        // Determine the biome with the parameters closest to the current noise point\n        let current = null;\n        let minDistance = Number.MAX_SAFE_INTEGER;\n        for (const biome of this.biomes) {\n            const distance = this.getDistanceToBiome(temperature, humidity, altitude, weirdness, biome.parameters);\n            if (distance < minDistance) {\n                current = biome;\n                minDistance = distance;\n            }\n        }\n        \n        return current;\n    }\n\n    /**\n     * Fill the image data with biome positions\n     * \n     * @param {ImageData} image \n     * @param {number} [scale] exponential\n     * @param {number} [every] x % every === 0 ? compute : use previous data\n     * @param {number} [offsetX] \n     * @param {number} [offsetY] \n     */\n    createImageData(image, scale = 4, every = 2, offsetX = 0, offsetY = 0) {\n        const width = image.width;\n        const height = image.height;\n        const buffer = new ArrayBuffer(image.data.length);\n        const buf8 = new Uint8ClampedArray(buffer);\n        const data32 = new Uint32Array(buffer);\n\n        const endX = offsetX + width;\n        const endY = offsetY + height;\n\n        const biomesColors = MultiNoiseDimension.getBiomesColors(this.biomes);\n\n        let color = null;\n        for (let x = offsetX; x < endX; x += 1) {\n            for (let y = offsetY; y < endY; y += 1) {\n                if (x % every === 0) {\n                    if (y % every === 0) {\n                        const biome = this.getBiomeAt(x << scale, 0, y << scale);\n                        color = biomesColors[biome.biome];\n                    }\n                    data32[y * width + x] = (255 << 24) | color;\n                } else {\n                    data32[y * width + x] = data32[y * width + x - 1];\n                }\n            }\n        }\n        image.data.set(buf8);\n    }\n\n    /**\n     * Calculates the distance from this noise point to another one.\n     * \n     * @param {number} temperature \n     * @param {number} humidity \n     * @param {number} altitude \n     * @param {number} weirdness \n     * @param {{ temperature: number, humidity: number, altitude: number, weirdness: number, offset: number }} parameters \n     */\n    getDistanceToBiome(temperature, humidity, altitude, weirdness, parameters) {\n        return (temperature - parameters.temperature) ** 2\n            + (humidity - parameters.humidity) ** 2\n            + (altitude - parameters.altitude) ** 2\n            + (weirdness - parameters.weirdness) ** 2\n            + (0 - parameters.offset) ** 2;\n    }\n\n    /**\n     * @param {Biome[]} biomes \n     * @returns {object}\n     */\n    static getBiomesColors(biomes = []) {\n        const biomesColors = {};\n        for (const biome of biomes) {\n            biomesColors[biome.biome] = hashCode(biome.biome);\n        }\n        return biomesColors;\n    }\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\n\nimport { Button } from '../../ui/Button';\nimport { MultiNoiseDimension } from '../../viewers/biome_multi_noise/MultiNoiseDimension';\nimport { integerColorToHex } from '../../utils/color';\nimport { useToggle } from '../../hooks/ui';\n\nexport const MultiNoiseRepresentation = React.memo(function ({ source }) {\n\n    const [auto, toggle] = useToggle();\n    const [scale, setScale] = useState(4);\n    const reference = useRef(null);\n\n    const render = useCallback(function () {\n        if ((source.biomes || []).length < 1) {\n            return;\n        }\n        const canvas = reference.current;\n        const ctx = canvas.getContext('2d', { alpha: false });\n        const img = ctx.createImageData(canvas.width, canvas.height);\n        const dimension = new MultiNoiseDimension(source);\n        dimension.createImageData(img, scale);\n        ctx.putImageData(img, 0, 0);\n    }, [scale, source]);\n\n    const handleClick = useCallback(function (e) {\n        e.preventDefault();\n        render();\n    }, [render]);\n\n    const handleScaleChange = useCallback(function (e) {\n        setScale(parseInt(e.target.value));\n    }, []);\n\n    useEffect(function () {\n        if (auto) {\n            render();\n        }\n    }, [auto, render]);\n\n    return <fieldset>\n        <legend>Preview</legend>\n        <div className=\"form-row\">\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n                <canvas height=\"128\" width=\"384\" ref={reference} moz-opaque=\"true\"></canvas>\n            </div>\n            <div>\n                <label htmlFor=\"scale\">Scale</label> : <input type=\"range\" id=\"scale\" min=\"1\" max=\"8\" value={scale} onChange={handleScaleChange} /> ({1 << scale} block/px)<br />\n                <label htmlFor=\"auto-update\">Auto update (affects performance)</label> : <input type=\"checkbox\" className=\"checkbox\" checked={auto} onChange={toggle} id=\"auto-update\" /><br />\n                {(source.biomes || []).length > 0 && !auto && <Button onClick={handleClick}>Render</Button>}\n            </div>\n        </div>\n        <ul className=\"form-group form-row\" style={{ justifyContent: 'start' }}>\n            {Object.entries(MultiNoiseDimension.getBiomesColors(source.biomes)).map(([biome, color]) => {\n                const b = (color >> 16) & 0xFF;\n                const g = (color >> 8) & 0xFF;\n                const r = color & 0xFF;\n                return <li key={biome} style={{ display: 'inline', marginLeft: '8px', marginRight: '4px' }}>\n                    <div style={{\n                        backgroundColor: integerColorToHex(((r << 16) | (g << 8) | b)),\n                        width: '32px', height: '16px',\n                        display: 'inline-block',\n                        marginRight: '0.5rem',\n                        verticalAlign: 'middle'\n                    }}></div>\n                    {biome}\n                </li>\n            })}\n        </ul>\n    </fieldset>\n});\n","import React from 'react';\nimport { NumberInput } from './Input';\n\nexport const NumberList = React.memo(function ({ children, numbers = [], onChange, step }) {\n\n    const handleChange = function(val, pos) {\n        onChange(numbers.map((n, i) => i === pos ? val : n));\n    };\n\n    return <div className=\"form-row\">\n        <label>{children}</label>&nbsp;:&nbsp;{numbers.map((n, i) => <NumberInput key={i} step={step} value={n} onChange={(n) => handleChange(n, i)} />)}\n    </div>\n});\n","import { ConfInput, NumberInput } from '../../ui/Input';\nimport { MULTI_NOISE_BIOME_SOURCE, NOISES_NAMES } from './DimensionDefaults';\nimport React, { useCallback, useContext, useEffect } from 'react';\nimport { capitalize, hasDuplicatedObjects } from '../../utils/data';\n\nimport { Button } from '../../ui/Button';\nimport { DataContext } from '../../context/DataContext';\nimport { MultiNoiseRepresentation } from './MultiNoiseBiomeSource';\nimport { NumberList } from '../../ui/NumberList';\nimport { SeedField } from './DimensionGenerator';\nimport Select from '../../ui/Select';\nimport { useCrudPreset } from '../../hooks/form';\nimport { useKeyedListOptions } from '../../hooks/context';\nimport { useMemo } from 'react';\nimport { useToggle } from '../../hooks/ui';\n\nexport const BiomeSource = React.memo(function({source = { type: 'minecraft:fixed' }, onChange}) {\n\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:checkerboard', label: 'Checkerboard' },\n            { value: 'minecraft:fixed', label: 'Fixed' },\n            { value: 'minecraft:multi_noise', label: 'Multi noise' },\n            { value: 'minecraft:the_end', label: 'The end' },\n            { value: 'minecraft:vanilla_layered', label: 'Vanilla layered' }\n        ];\n    }, []);\n\n    const handleChange = useCallback(function(settings) {\n        onChange(({ ...source, ...settings }));\n    }, [onChange, source]);\n    const handleSeedChange = useCallback(function(seed) {\n        onChange(({ ...source, seed }));\n    }, [onChange, source]);\n    const handleTypeChange = useCallback(function(option) {\n        onChange(({ seed: source.seed, type: option.value }));\n    }, [onChange, source.seed]);\n    const handleFixedSourceChange = useCallback(function(biome) {\n        onChange(({ ...source, biome }));\n    }, [onChange, source]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === source.type);\n    }, [options, source.type]);\n\n    return <fieldset>\n        <legend>Biome source</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"biome-source-type\">Type</label><Select inputId=\"biome-source-type\" options={options} value={selected} onChange={handleTypeChange} />\n        </div>\n        <SeedField value={source.seed} onChange={handleSeedChange} />\n        <hr />\n        {source.type === 'minecraft:checkerboard' && <CheckerboardBiomeSource source={source} onChange={handleChange} />}\n        {source.type === 'minecraft:fixed' && <FixedBiomeSource biome={source.biome} onChange={handleFixedSourceChange} />}\n        {source.type === 'minecraft:multi_noise' && <MultiNoiseBiomeSource source={source} onChange={handleChange} />}\n        {source.type === 'minecraft:vanilla_layered' && <VanillaLayeredBiomeSource source={source} onChange={handleChange} />}\n    </fieldset>\n});\n\nconst CheckerboardBiomeSource = React.memo(function({source, onChange}) {\n    const options = useKeyedListOptions('biomes');\n    const handleBiomesChange = useCallback(function(selection) {\n        onChange({ ...source, biomes: selection === null ? [] : selection.map(o => o.value) });\n    }, [onChange, source]);\n    const handleScaleChange = useCallback(function(scale) {\n        onChange({ ...source, scale });\n    }, [onChange, source]);\n\n    const biomes = source.biomes || (options.length > 0 ? [options[0].value] : []);\n    useEffect(() => {\n        if (!Array.isArray(source.biomes)) {\n            onChange({ biomes, scale: source.scale || 2 });\n        }\n    }, [biomes, source.biomes, source.scale, onChange]);\n\n    return <div className=\"form-group\">\n        <div className=\"form-group\">\n            <label htmlFor=\"biomes\">Biomes</label><Select options={options} isMulti isClearable={false} value={options.filter(o => biomes.includes(o.value))} onChange={handleBiomesChange} id=\"biomes\" />\n        </div>\n        <div className=\"form-group\">\n            <NumberInput id=\"scale\" value={source.scale} onChange={handleScaleChange} max={62} required={false} defaultValue={2}>Scale (squares of 2<sup>scale</sup> chunks)</NumberInput>\n        </div>\n        {biomes.length < 1 && <p className=\"alert--warning\">Warning: a dimension must contain at least one biome!</p>}\n    </div>;\n});\n\nexport const FixedBiomeSource = React.memo(function({biome = 'minecraft:plains', inline = false, onChange}) {\n    const options = useKeyedListOptions('biomes');\n    const handleBiomesChange = useCallback(function(option) {\n        onChange(option.value);\n    }, [onChange]);\n\n    return <div className={inline ? 'form-row flex-grow' : 'form-group'}>\n        <label htmlFor=\"fixed-biome\">Biome{inline && ' :'}&nbsp;</label><div className={inline ? 'flex-grow' : undefined}><Select options={options} value={options.find(o => o.value === biome)} onChange={handleBiomesChange} /></div>\n    </div>;\n});\n\nconst MultiNoiseBiomeSource = React.memo(function({source = MULTI_NOISE_BIOME_SOURCE, onChange}) {\n    const options = useKeyedListOptions('biomes');\n    const [biomes, handleAdd, handleChange, handleRemove] = useCrudPreset(biomes => onChange({ ...source, biomes }), source.biomes, { biome: 'minecraft:plains', parameters: {\n        altitude: 0,\n        weirdness: 0,\n        offset: 0,\n        temperature: 0.8,\n        humidity: 0.4\n    } });\n\n    const [advanced, toggleAdvanced] = useToggle();\n    const handleNoiseChange = useCallback(function(type, noise) {\n        onChange(({ ...source, [type]: noise }));\n    }, [source, onChange]);\n\n    const vanilla = useContext(DataContext).vanilla.biomes;\n    const custom = useContext(DataContext).custom.biomes;\n    const namespace = useContext(DataContext).namespace;\n    useEffect(function() {\n        for (const noise of NOISES_NAMES) {\n            if (typeof source[noise] === 'undefined') {\n                onChange({ ...MULTI_NOISE_BIOME_SOURCE, ...source, biomes });\n                return;\n            }\n        }\n    }, [biomes, onChange, source]);\n\n    const values = [];\n    biomes.forEach((entry, i) => {\n        const key = i;\n        values.push(<BiomeSelection namespace={namespace} vanilla={vanilla} custom={custom} biomesOptions={options} entry={entry} key={key} onChange={handleChange}><Button cat=\"danger\" onClick={e => handleRemove(e, i)}>Delete</Button></BiomeSelection>);\n    });\n    return <>\n        <div className=\"flex-container\" style={{ alignItems: 'baseline' }}>\n            <h4>\n                Biomes list\n                <Button onClick={handleAdd} cat=\"primary mls\">Add biome</Button>\n                <Button onClick={toggleAdvanced} cat=\"secondary\">Advanced</Button>\n            </h4>\n        </div>\n        {advanced && <div className=\"grid-2-small-1 has-gutter mbm\">\n            {NOISES_NAMES\n                .map(noise => <PerlinNoiseParameters\n                    key={noise}\n                    noise={source[noise] || MULTI_NOISE_BIOME_SOURCE[noise]}\n                    onChange={(n) => handleNoiseChange(noise, n)}>{capitalize(noise.replace('_', ' '))}</PerlinNoiseParameters>)}\n        </div>}\n        {values}\n        {hasDuplicatedObjects(biomes.map(biome => biome.parameters)) && <p className=\"alert--warning\">Warning: every biome must have a unique combination of parameters!</p>}\n        <MultiNoiseRepresentation source={source} />\n    </>;\n});\n\nconst VanillaLayeredBiomeSource = React.memo(function({source, onChange}) {\n    const handleLegacyBiomeToggle = useCallback(function(e) {\n        onChange({ ...source, legacy_biome_init_layer: e.target.checked });\n    }, [onChange, source]);\n    const handleLargeBiomesToggle = useCallback(function(e) {\n        onChange({ ...source, large_biomes: e.target.checked });\n    }, [onChange, source]);\n\n    return <div className=\"form-row\">\n        <ConfInput checked={source.legacy_biome_init_layer || false} onChange={handleLegacyBiomeToggle}>Legacy biome init layer</ConfInput>\n        <ConfInput checked={source.large_biomes || false} onChange={handleLargeBiomesToggle}>Large biomes</ConfInput>\n    </div>;\n});\n\nconst PerlinNoiseParameters = React.memo(function({children, noise = { firstOctave: -7, amplitudes: [1, 1] }, onChange}) {\n\n    const handleFirstOctaveChange = useCallback(function(firstOctave) {\n        onChange({ ...noise, firstOctave });\n    }, [noise, onChange]);\n    const handleAmplitudesChange = useCallback(function(amplitudes) {\n        onChange({ ...noise, amplitudes });\n    }, [noise, onChange]);\n\n    return <fieldset style={{ margin: 0 }}>\n        <legend>{children}</legend>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"firstOctave\" value={noise.firstOctave} onChange={handleFirstOctaveChange} min={-1000}>First octave</NumberInput>\n            <NumberList numbers={noise.amplitudes} step={0.1} onChange={handleAmplitudesChange}>Amplitudes</NumberList>\n        </div>\n    </fieldset>;\n});\n\nconst BiomeSelection = React.memo(function({namespace, vanilla, custom, biomesOptions, entry, onChange, children}) {\n    const handleBiomeChange = useCallback(function(option) {\n        const biome = option.value;\n        const data = (vanilla.find(b => 'minecraft:' + b.name === biome) || custom.find(b => namespace + ':' + b.key === biome) || { rainfall: 0, temperature: 0 });\n        const parameters = {\n            altitude: entry.parameters.altitude || 0,\n            weirdness: entry.parameters.weirdness || 0,\n            offset: entry.parameters.offset || 0,\n            temperature: data.temperature || 0.8,\n            humidity: data.rainfall || 0.4\n        };\n        onChange({ biome, parameters }, entry);\n    }, [entry, custom, namespace, onChange, vanilla]);\n\n    const handleParameterChange = useCallback(function(value) {\n        onChange({ biome: entry.biome, parameters: { ...entry.parameters, ...value } }, entry);\n    }, [entry, onChange]);\n\n    const selected = useMemo(function() {\n        return biomesOptions.find(o => o.value === entry.biome);\n    }, [biomesOptions, entry.biome]);\n    return <div className=\"form-group\">\n        <Select options={biomesOptions} value={selected} onChange={handleBiomeChange} />\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"altitude\" value={entry.parameters.altitude} upChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\">Altitude</NumberInput>\n            <NumberInput id=\"weirdness\" value={entry.parameters.weirdness} upChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\">Weirdness</NumberInput>\n            <NumberInput id=\"offset\" value={entry.parameters.offset} upChange={handleParameterChange} step=\"0.1\" max=\"1\">Offset</NumberInput>\n            <NumberInput id=\"temperature\" value={entry.parameters.temperature} upChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\">Temperature</NumberInput>\n            <NumberInput id=\"humidity\" value={entry.parameters.humidity} upChange={handleParameterChange} step=\"0.1\" min=\"-2\" max=\"2\">Humidity</NumberInput>\n            {children}\n        </div>\n    </div>\n});\n","import { CRUD, useCrudState } from '../../hooks/form';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport { Button } from '../../ui/Button';\nimport { NumberInput } from '../../ui/Input';\nimport { STRUCTURES } from './NoiseDefaults';\nimport Select from '../../ui/Select';\nimport { useToggle } from '../../hooks/ui';\n\nexport const Structures = React.memo(function ({ data, onChange }) {\n\n    const handleStrongholdChange = useCallback(function(stronghold) {\n        if (stronghold === false) {\n            onChange({ structures: data.structures });\n        } else {\n            onChange({ structures: data.structures, stronghold });\n        }\n    }, [data.structures, onChange]);\n    const handleStructuresChange = useCallback(function(structures) {\n        onChange({ ...data, structures });\n    }, [data, onChange]);\n\n    return <fieldset>\n        <legend>Structures</legend>\n        <Stronghold data={data.stronghold} onChange={handleStrongholdChange} />\n        <StructuresList data={data.structures} onChange={handleStructuresChange} />\n    </fieldset>\n});\n\nconst Stronghold = React.memo(function ({ data, onChange }) {\n\n    const [enabled, toggle] = useToggle(typeof data === 'object');\n    const [stronghold, setStronghold] = useState(data || { distance: 32, spread: 3, count: 128 });\n\n    const handleChange = useCallback(function(value) {\n        setStronghold(stronghold => ({ ...stronghold, ...value }));\n    }, [setStronghold]);\n\n    useEffect(function() {\n        if ((data !== stronghold && enabled)\n            || (enabled && typeof data === 'undefined')\n            || (!enabled && typeof data === 'object')) {\n                onChange(enabled ? stronghold : false);\n        }\n    }, [data, enabled, onChange, stronghold]);\n\n    return <div>\n        <div className=\"toggle-label\">Stronghold<Button cat=\"secondary\" onClick={toggle}>{enabled ? 'Disable' : 'Enable'}</Button></div>\n        {enabled && <div className=\"form-group form-row\">\n            <NumberInput id=\"distance\" defaultValue={stronghold.distance} upChange={handleChange} max=\"1023\">Distance</NumberInput>\n            <NumberInput id=\"spread\" defaultValue={stronghold.spread} upChange={handleChange} max=\"1023\">Spread</NumberInput>\n            <NumberInput id=\"count\" defaultValue={stronghold.count} upChange={handleChange} min=\"1\" max=\"4095\">Count</NumberInput>\n        </div>}\n    </div>\n});\n\nconst StructuresList = React.memo(function({ data, onChange }) {\n    const [visibility, toggle] = useToggle();\n    const [structures, dispatch] = useCrudState(Object.entries(data).map(([type, d]) => ({ ...d, type })));\n\n    const [previous, setPrevious] = useState(data);\n    if (data !== previous) {\n        dispatch({ type: CRUD.REPLACE, payload: Object.entries(data).map(([type, d]) => ({ ...d, type })) });\n        setPrevious(data);\n    }\n\n    const handleAdd = useCallback(function(e) {\n        e.preventDefault();\n        dispatch({ type: CRUD.ADD, payload: {\n            type: 'minecraft:village',\n            spacing: 32,\n            separation: 8,\n            salt: 10387312\n        }, unshift: true });\n        if (!visibility) {\n            toggle();\n        }\n    }, [dispatch, toggle, visibility]);\n    const handleChange = useCallback(function(original, structure) {\n        dispatch({ type: CRUD.UPDATE, target: original, payload: structure });\n    }, [dispatch]);\n    const handleRemove = useCallback(function(structure) {\n        dispatch({ type: CRUD.REMOVE, payload: structure });\n    }, [dispatch]);\n\n    useEffect(function() {\n        if (previous !== data) {\n            return;\n        }\n\n        const obj = {};\n        for (const structure of structures) {\n            obj[structure.type] = {\n                spacing: structure.spacing,\n                separation: structure.separation,\n                salt: structure.salt\n            };\n        }\n        if (JSON.stringify(obj) !== JSON.stringify(data)) {\n            onChange(obj);\n        }\n    }, [data, onChange, previous, structures]);\n\n    return <div>\n        <div className=\"toggle-label\">\n            Structures\n            <div className=\"btn-group\">\n                <Button onClick={handleAdd}>Add structure</Button>\n                {structures.length > 0 && <Button cat=\"secondary\" onClick={toggle}>{visibility ? 'Less...' : 'More...'}</Button>}\n            </div>\n        </div>\n        {visibility && structures.map((def, i) => \n            <Structure data={def} key={i} onChange={handleChange} onDelete={handleRemove} />\n        )}\n    </div>\n});\n\nconst Structure = React.memo(function ({ data, onChange, onDelete }) {\n\n    const handleTypeChange = useCallback(function(option) {\n        onChange(data, { ...data, type: option.value });\n    }, [data,  onChange]);\n    const handleSpacingChange = useCallback(function(value) {\n        const name = Object.keys(value)[0];\n        value = value[name];\n        if ((name === 'spacing' && value > data.separation)\n            || (name === 'separation' && value < data.spacing)) {\n            onChange(data, {...data, [name]: value});\n        } \n    }, [data,  onChange]);\n    const handleSaltChange = useCallback(function(salt) {\n        onChange(data, { ...data, salt });\n    }, [data,  onChange]);\n    const handleDelete = useCallback(function (e) {\n        e.preventDefault();\n        onDelete(data);\n    }, [data, onDelete]);\n\n    return <div>\n        <div className=\"form-group\">\n            <label>Type</label> : <Select options={STRUCTURES} value={STRUCTURES.find(s => s.value === data.type)} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"spacing\" value={data.spacing} min={data.separation + 1} upChange={handleSpacingChange} max=\"4096\">Spacing</NumberInput>\n            <NumberInput id=\"separation\" value={data.separation} upChange={handleSpacingChange} max={Math.min(data.spacing - 1, 4096)}>Separation</NumberInput>\n            <NumberInput id=\"salt\" value={data.salt} onChange={handleSaltChange} max={0x7FFFFFFF} style={{ width: '150px' }}>Salt</NumberInput>\n            <div className=\"form-inline\"><Button cat=\"danger\" onClick={handleDelete}>Delete</Button></div>\n        </div>\n        <hr /> \n    </div>\n});\n","import { ConfInput, NumberInput } from '../../ui/Input';\nimport React, { useCallback } from 'react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport { useCrudPreset, useJsonEffect } from '../../hooks/form';\n\nimport { BlockSelect } from '../state/BlockPredicate';\nimport { Button } from '../../ui/Button';\nimport { FixedBiomeSource } from './BiomeSource';\nimport { Structures } from '../noise/Structures';\n\nexport const FlatChunkSettings = React.memo(function ({ settings, onChange }) {\n\n    settings = useJsonEffect(settings || {\n        structures: {\n            structures: []\n        },\n        layers: [\n            { block: 'minecraft:bedrock', height: 1 },\n            { block: 'minecraft:sandstone', height: 70 }\n        ],\n        biome: 'minecraft:plains'\n    }, settings, onChange);\n\n    const handleBiomeChange = useCallback(function (biome) {\n        onChange({ ...settings, biome });\n    }, [settings, onChange]);\n    const handleLayersChange = useCallback(function (layers) {\n        onChange({ ...settings, layers });\n    }, [settings, onChange]);\n    const handleStructuresChange = useCallback(function (structures) {\n        onChange({ ...settings, structures });\n    }, [settings, onChange]);\n    const handleLakesToggle = useCallback(function (e) {\n        onChange({ ...settings, lakes: e.target.checked });\n    }, [settings, onChange]);\n\n    return <div className=\"form-group\">\n        <div className=\"form-group form-row\">\n            <FixedBiomeSource biome={settings.biome} inline={true} onChange={handleBiomeChange} />\n            <ConfInput className=\"mls\" checked={settings.lakes || false} onChange={handleLakesToggle}>Lakes</ConfInput>\n        </div>\n        <GeneratorLayers config={settings.layers} onChange={handleLayersChange} />\n        <Structures data={settings.structures} onChange={handleStructuresChange} />\n    </div>\n});\n\nconst GeneratorLayers = React.memo(function ({ config, onChange }) {\n    const [layers, handleAdd, handleChange, handleRemove] = useCrudPreset(onChange, config, { block: 'minecraft:grass_block', height: 1 });\n\n    const shouldCancelStart = useCallback(function (e) {\n        return !e.target.parentNode.classList.contains('sortable-item');\n    }, []);\n\n    const handleReversedSort = useCallback(function ({ oldIndex, newIndex }) {\n        handleChange({ oldIndex: layers.length - 1 - oldIndex, newIndex: layers.length - 1 - newIndex });\n    }, [layers, handleChange]);\n\n    return <fieldset>\n        <legend>Layers <Button onClick={handleAdd}>Add layer</Button></legend>\n        <SortableLayersList layers={layers} onChange={handleChange} onRemove={handleRemove} onSortEnd={handleReversedSort} shouldCancelStart={shouldCancelStart} />\n    </fieldset>\n});\n\nconst SortableLayersList = SortableContainer(React.memo(function ({ layers, onChange, onRemove }) {\n    let key = 0;\n    return <ol className=\"sortable-container\">\n        {layers.map((layer, index) => {\n            key += layer.height + 1;\n            return <Layer i={index} index={layers.length - 1 - index} key={key} layer={layer} onChange={onChange} onRemove={onRemove} />\n        }).reverse()}\n    </ol>\n}));\n\nconst Layer = SortableElement(React.memo(function ({ i, layer, onChange, onRemove }) {\n    const handleHeightChange = useCallback(function (height, layer) {\n        onChange({ ...layer, height }, layer);\n    }, [onChange]);\n    const handleBlockChange = useCallback(function (block, layer) {\n        onChange({ ...layer, block }, layer);\n    }, [onChange]);\n\n    return <div className=\"sortable-item\"><div className=\"form-group form-row\">\n        <div className=\"flex-grow\"><BlockSelect block={layer.block} onChange={option => handleBlockChange(option.value, layer)} /></div>\n        <NumberInput id=\"height\" className=\"mls\" value={layer.height} max={256} onChange={height => handleHeightChange(height, layer)}>Height</NumberInput>\n        <Button cat=\"danger mlm\" onClick={e => onRemove(e, i)}>Remove</Button>\n    </div></div>\n}));\n","import { ConfInput, NumberInput } from '../../ui/Input';\nimport React, { useCallback, useState } from 'react';\n\nimport { BlockState } from '../state/BlockState';\nimport { Button } from '../../ui/Button';\nimport { INT_MIN_VALUE } from '../../utils/math';\nimport { JsonViewer } from '../../ui/JsonViewer';\nimport { NamespacedKey } from '../NamespacedKey';\nimport { OVERWORLD_NOISE } from './NoiseDefaults';\nimport Select from '../../ui/Select';\nimport { Structures } from './Structures';\nimport { useKeyedListOptions } from '../../hooks/context';\nimport { useValueChange } from '../../hooks/form';\n\nexport const NoiseGenerator = React.memo(function({onChange, settings = 'minecraft:overworld'}) {\n    const options = useKeyedListOptions('noises').map(option => {\n        option.resource = option.value;\n        return option;\n    });\n\n    const handleChange = useCallback(function(option) {\n        onChange(option.resource);\n    }, [onChange]);\n\n    if (typeof settings === 'object') {\n        options.push({ value: 'inline', label: 'inline', resource: settings });\n    }\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"settings\">Noise settings</label><Select options={options} value={options.find(o => o.resource === settings)} onChange={handleChange} inputId=\"settings\" />\n    </div>;\n});\n\nexport const NoiseSettings = React.memo(function ({ data = OVERWORLD_NOISE, onSave }) {\n\n    const [state, setState] = useState(data);\n\n    const handleSubmit = useCallback(function (e) {\n        e.preventDefault();\n        const formData = Object.fromEntries(new FormData(e.target));\n        onSave({ ...state, ...formData });\n    }, [onSave, state]);\n\n    const handleBlockChange = useCallback(function (name, s) {\n        setState(state => ({ ...state, [name]: s }));\n    }, []);\n    const handleStructuresChange = useCallback(function (structures) {\n        setState(state => ({ ...state, structures }));\n    }, []);\n    const handleNoiseChange = useCallback(function (noise) {\n        setState(state => ({ ...state, noise: { ...state.noise, ...noise } }));\n    }, []);\n    const handleChange = useCallback(function(value) {\n        setState(state => ({ ...state, ...value }));\n    }, []);\n    const handleDisableMobGenerationChange = useCallback(function(e) {\n        const disable_mob_generation = e.target.checked;\n        setState(state => ({ ...state, disable_mob_generation }));\n    }, []);\n\n    return <form onSubmit={handleSubmit}>\n        <NamespacedKey example=\"epic\" type=\"noises\" value={data.key} expectBreakage={typeof data.key !== 'undefined'} onSelectLoad={setState}>\n            noise\n            <JsonViewer data={state} />\n        </NamespacedKey>\n\n        <Structures data={state.structures} onChange={handleStructuresChange} />\n\n        <fieldset>\n            <legend>Defaults</legend>\n            <div className=\"form-group\">\n                <label>Block</label> : <BlockState block={state.default_block} onChange={state => handleBlockChange('default_block', state)} />\n            </div>\n            <div className=\"form-group\">\n                <label>Fluid</label> : <BlockState block={state.default_fluid} onChange={state => handleBlockChange('default_fluid', state)} />\n            </div>\n        </fieldset>\n\n        <fieldset>\n            <legend>Main</legend>\n            <div className=\"form-group form-row\">\n                <NumberInput id=\"bedrock_roof_position\" value={state.bedrock_roof_position} min={-20} max={276} upChange={handleChange}>Bedrock roof position</NumberInput>\n                <NumberInput id=\"bedrock_floor_position\" value={state.bedrock_floor_position} min={-20} max={276} upChange={handleChange}>Bedrock floor position</NumberInput>\n                <NumberInput id=\"sea_level\" value={state.sea_level} max={255} upChange={handleChange}>Sea level</NumberInput>\n                <ConfInput id=\"disable_mob_generation\" checked={state.disable_mob_generation} onChange={handleDisableMobGenerationChange}>Disable mob generation</ConfInput>\n            </div>\n        </fieldset>\n\n        {Object.keys(state.structures.structures).includes('minecraft:nether_fossil') && (state.noise.height - 2 - state.sea_level) < 0 &&\n            <p className=\"alert--warning\">The game may crash when trying to generate nether fossils, because (height - 2 - sea_level) is negative (actually: {state.noise.height - 2 - state.sea_level}).</p>\n        }\n        <NoiseConfig data={state.noise} onChange={handleNoiseChange} />\n\n        <Button type=\"submit\">Save</Button>\n    </form>;\n});\n\nconst NoiseConfig = React.memo(function ({ data, onChange }) {\n\n    const handleChange = useValueChange(onChange, data);\n    const handleSamplingChange = useCallback(function (sampling) {\n        onChange({ ...data, sampling: { ...data.sampling, ...sampling } });\n    }, [data, onChange]);\n    const handleTopSlideChange = useCallback(function (top_slide) {\n        onChange({ ...data, top_slide: { ...data.top_slide, ...top_slide } });\n    }, [data, onChange]);\n    const handleBottomSlideChange = useCallback(function (bottom_slide) {\n        onChange({ ...data, bottom_slide: { ...data.bottom_slide, ...bottom_slide } });\n    }, [data, onChange]);\n\n    return <fieldset>\n        <legend>Noise config (advanced)</legend>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"height\" value={data.height} upChange={onChange} max={256}>Height</NumberInput>\n            <NumberInput id=\"size_horizontal\" value={data.size_horizontal} upChange={onChange} min={1} max={4}>Size horizontal</NumberInput>\n            <NumberInput id=\"size_vertical\" value={data.size_vertical} upChange={onChange} min={1} max={4}>Size vertical</NumberInput>\n            <NumberInput id=\"density_factor\" value={data.density_factor} upChange={onChange} step={0.01}>Density factor</NumberInput>\n            <NumberInput id=\"density_offset\" value={data.density_offset} upChange={onChange} min={INT_MIN_VALUE} step={0.01}>Density offset</NumberInput>\n        </div>\n        <div className=\"form-group form-row\">\n            <ConfInput id=\"simplex_surface_noise\" checked={data.simplex_surface_noise} onChange={handleChange}>Simplex surface noise</ConfInput>\n            <ConfInput id=\"random_density_offset\" checked={data.random_density_offset || false} onChange={handleChange}>Random density offset</ConfInput>\n            <ConfInput id=\"island_noise_override\" checked={data.island_noise_override || false} onChange={handleChange}>Island noise override</ConfInput>\n            <ConfInput id=\"amplified\" checked={data.amplified || false} onChange={handleChange}>Amplified</ConfInput>\n        </div>\n\n        <NoiseSamplingConfig data={data.sampling} onChange={handleSamplingChange}>Sampling</NoiseSamplingConfig>\n        <SlideConfig data={data.top_slide} onChange={handleTopSlideChange}>Top slide</SlideConfig>\n        <SlideConfig data={data.bottom_slide} onChange={handleBottomSlideChange}>Bottom slide</SlideConfig>\n    </fieldset>\n});\n\nconst NoiseSamplingConfig = React.memo(function ({ children, data, onChange }) {\n\n    return <fieldset>\n        <legend>{children}</legend>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"xz_scale\" value={data.xz_scale} min={0.001} max={1000} step={0.1} upChange={onChange}>XY scale</NumberInput>\n            <NumberInput id=\"y_scale\" value={data.y_scale} min={0.001} max={1000} step={0.1} upChange={onChange}>Y scale</NumberInput>\n            <NumberInput id=\"xz_factor\" value={data.xz_factor} min={0.001} max={1000} step={0.1} upChange={onChange}>XZ factor</NumberInput>\n            <NumberInput id=\"y_factor\" value={data.y_factor} min={0.001} max={1000} step={0.1} upChange={onChange}>Y factor</NumberInput>\n        </div>\n    </fieldset>\n});\n\nconst SlideConfig = React.memo(function ({ children, data, onChange }) {\n\n    return <fieldset>\n        <legend>{children}</legend>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"target\" value={data.target} upChange={onChange} min={INT_MIN_VALUE}>Target</NumberInput>\n            <NumberInput id=\"size\" value={data.size} upChange={onChange} max={256}>Size</NumberInput>\n            <NumberInput id=\"offset\" value={data.offset} upChange={onChange} min={INT_MIN_VALUE}>Offset</NumberInput>\n        </div>\n    </fieldset>\n});\n","import { CHUNK_GENERATOR_TYPES, DIMENSION } from './DimensionDefaults';\nimport React, { useCallback, useEffect, useState } from 'react';\n\nimport { BiomeSource } from './BiomeSource';\nimport { ConfInput } from '../../ui/Input';\nimport { FlatChunkSettings } from './FlatChunkSettings';\nimport { NoiseGenerator } from '../noise/NoiseSettings';\nimport Select from '../../ui/Select';\nimport { hashCode } from './../../utils/hash';\n\nexport function DimensionGenerator({generator, onChange}) {\n\n    const [previousGenerator, setPreviousGenerator] = useState({ type: null });\n\n    const handleChunkGeneratorChange = useCallback(function(option) {\n        if (option.value === previousGenerator.type) {\n            onChange(previousGenerator);\n        } else if (option.value === 'minecraft:noise') {\n            onChange(DIMENSION.generator);\n        } else {\n            onChange({ type: option.value });\n        }\n        setPreviousGenerator(generator);\n    }, [generator, previousGenerator, onChange]);\n\n    const handleSeedChange = useCallback(function(seed) {\n        onChange({ ...generator, seed });\n    }, [generator, onChange]);\n    const handleSettingsChange = useCallback(function(settings) {\n        onChange({ ...generator, settings });\n    }, [generator, onChange]);\n    const handleBiomeSourceChange = useCallback(function(biome_source) {\n        onChange({ ...generator, biome_source });\n    }, [generator, onChange]);\n\n    return <fieldset>\n        <legend style={{ fontWeight: 'normal', width: '28ch', fontSize: '1.05rem' }}><Select options={CHUNK_GENERATOR_TYPES} value={CHUNK_GENERATOR_TYPES.find(o => generator.type === o.value)} onChange={handleChunkGeneratorChange} /></legend>\n        <div className=\"form-group\">\n            {generator.type === 'minecraft:noise' && <>\n                <SeedField value={generator.seed} onChange={handleSeedChange} />\n                <NoiseGenerator settings={generator.settings} onChange={handleSettingsChange} />\n                <BiomeSource source={generator.biome_source} onChange={handleBiomeSourceChange} />\n            </>}\n            {generator.type === 'minecraft:flat' &&\n                <FlatChunkSettings settings={generator.settings} onChange={handleSettingsChange} />\n            }\n        </div>\n    </fieldset>;\n}\n\nexport const SeedField = React.memo(function({onChange, value}) {\n    const [text, setText] = useState(value || 286956243);\n\n    const handleChange = useCallback(function(e) {\n        const value = e.target.value;\n        setText(value);\n        onChange(isNaN(value) ? hashCode(value) : parseInt(value));\n    }, [onChange]);\n\n    useEffect(() => {\n        if (typeof value !== 'number') {\n            onChange(286956243);\n        }\n    }, [onChange, value]);\n\n    return <div className=\"form-group\">\n        <ConfInput type=\"text\" id=\"seed\" value={text} onChange={handleChange}>Seed</ConfInput>\n    </div>\n});\n","import { ConfInput, NumberInput } from '../../ui/Input';\nimport { DIMENSION_TYPE_EFFECTS, DIMENSION_TYPE_INFINIBURN, OVERWORLD_CAVES_DIMENSION_TYPE, OVERWORLD_DIMENSION_TYPE, THE_END_DIMENSION_TYPE, THE_NETHER_DIMENSION_TYPE } from './DimensionDefaults';\nimport React, { useCallback, useContext, useState } from 'react';\n\nimport { Button } from '../../ui/Button';\nimport { DataContext } from '../../context/DataContext';\nimport { JsonViewer } from '../../ui/JsonViewer';\nimport { Modal } from '../../ui/Modal';\nimport { NamespacedKey } from '../NamespacedKey';\nimport Select from '../../ui/Select';\nimport { useKeyedListOptions } from '../../hooks/context';\nimport { useToggle } from '../../hooks/ui';\n\nexport function DimensionType({ type = 'minecraft:overworld', onChange }) {\n    const [open, toggleModal] = useToggle();\n    const options = useKeyedListOptions('dimension_types').map(option => {\n        option.resource = option.value;\n        return option;\n    });\n\n    if (typeof type === 'object') {\n        options.push({ value: 'inline', label: 'inline', resource: type });\n    }\n\n    const handleTypeChange = useCallback(function (option) {\n        onChange(option.resource);\n    }, [onChange]);\n    const handleNewClick = useCallback(function (e) {\n        e.preventDefault();\n        toggleModal(true);\n    }, [toggleModal]);\n    const handleTypeCreated = useCallback(function (type) {\n        onChange(type.key);\n        toggleModal(false);\n    }, [onChange, toggleModal]);\n\n    return <div className=\"form-group\">\n        <label htmlFor=\"dimension-type\">Dimension type <Button onClick={handleNewClick}>Create new</Button></label>\n        <Select inputId=\"dimension-type\" options={options} value={options.find(o => o.resource === type)} onChange={handleTypeChange} />\n        {open && <Modal open={open} onClose={toggleModal}>\n            <DimensionTypeForm onSave={handleTypeCreated} />\n        </Modal>}\n    </div>;\n}\n\nexport function DimensionTypeForm({ data = OVERWORLD_DIMENSION_TYPE, onSave }) {\n    const [config, setConfig] = useState(data);\n\n    const handleVanillaSelect = useCallback(function (value) {\n        setConfig({\n            ...{\n                'minecraft:overworld': OVERWORLD_DIMENSION_TYPE,\n                'minecraft:overworld_caves': OVERWORLD_CAVES_DIMENSION_TYPE,\n                'minecraft:the_nether': THE_NETHER_DIMENSION_TYPE,\n                'minecraft:the_end': THE_END_DIMENSION_TYPE\n            }[value]\n        });\n    }, []);\n    const handleNumberChange = useCallback(function (value) {\n        setConfig(config => ({ ...config, ...value }))\n    }, []);\n    const handleSelectChange = useCallback(function (name, option) {\n        setConfig(config => ({ ...config, [name]: option.value }))\n    }, []);\n    const handleCheckboxChange = useCallback(function (e) {\n        const name = e.target.dataset.name;\n        const checked = e.target.checked;\n        setConfig(config => ({ ...config, [name]: checked }))\n    }, []);\n    const handleFixedTimeToggle = useCallback(function (e) {\n        if (e.target.checked) {\n            setConfig(config => ({ ...config, fixed_time: 18000 }));\n        } else {\n            setConfig((({ fixed_time, ...config }) => config));\n        }\n    }, []);\n\n    const updateDimensionTypes = useContext(DataContext).custom.updateDimensionTypes;\n    const handleSubmit = useCallback(function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const d = ({\n            ...config,\n            ...Object.fromEntries(new FormData(e.target))\n        });\n        updateDimensionTypes(d, data);\n        if (typeof onSave === 'function') {\n            onSave(d);\n        }\n    }, [config, data, onSave, updateDimensionTypes]);\n\n    return <form onSubmit={handleSubmit}>\n        <NamespacedKey example=\"typed\" type=\"dimension_types\" value={data.key} onSelect={handleVanillaSelect} expectBreakage={typeof data.key !== 'undefined'}>\n            dimension type\n            <JsonViewer data={config} />\n        </NamespacedKey>\n        <fieldset>\n            <legend>Light</legend>\n            <div className=\"form-row\">\n                <NumberInput id=\"ambient_light\" value={config.ambient_light} upChange={handleNumberChange} step=\"0.1\">Ambient light</NumberInput>\n                <ConfInput id=\"has_skylight\" checked={config.has_skylight} onChange={handleCheckboxChange}>Has skylight</ConfInput>\n            </div>\n        </fieldset>\n        <fieldset>\n            <legend>Apparence</legend>\n            <div className=\"form-row\">\n                <InfiniburnIdentifier value={config.infiniburn} onChange={handleSelectChange} inputId=\"infiniburn\" />\n                <div>\n                    <label htmlFor=\"effects\">Sky effects : </label>\n                    <div className=\"inbl\" style={{ width: '16ch' }}>\n                        <Select options={DIMENSION_TYPE_EFFECTS} value={DIMENSION_TYPE_EFFECTS.find(o => config.effects === o.value) || DIMENSION_TYPE_EFFECTS[0]} onChange={o => handleSelectChange('effects', o)} inputId=\"effects\" />\n                    </div>\n                </div>\n            </div>\n            <div className=\"form-group form-row\">\n                <NumberInput id=\"logical_height\" value={config.logical_height} upChange={handleNumberChange} max={256} title=\"Logical height from vanilla dimensions cannot be replaced due to MC-197338.\">Logical height</NumberInput>\n                <div className=\"form-row\">\n                    {typeof config.fixed_time !== 'number' && <label htmlFor=\"fixed_time-toggle\">Fixed time : </label>}\n                    {typeof config.fixed_time === 'number' && <NumberInput id=\"fixed_time\" value={config.fixed_time} upChange={handleNumberChange} step={1200}>Fixed time</NumberInput>}\n                    <input type=\"checkbox\" checked={typeof config.fixed_time === 'number'} onChange={handleFixedTimeToggle} className=\"checkbox\" id=\"fixed_time-toggle\" />\n                </div>\n            </div>\n            <p style={{ marginBottom: 0, textAlign: 'center' }}><small className=\"text-muted\">These settings are only used for appearance and some game mechanics<br />such as chorus fruits tp. To modify the world generation, change the noise parameters.</small></p>\n        </fieldset>\n        <fieldset>\n            <legend>Overworld related behavior</legend>\n            <div className=\"form-row\">\n                <ConfInput id=\"bed_works\" checked={config.bed_works} onChange={handleCheckboxChange}>Bed works</ConfInput>\n                <ConfInput id=\"has_raids\" checked={config.has_raids} onChange={handleCheckboxChange}>Has raids</ConfInput>\n                <ConfInput id=\"natural\" checked={config.natural} onChange={handleCheckboxChange}>Natural</ConfInput>\n            </div>\n        </fieldset>\n        <fieldset>\n            <legend>Nether related behavior</legend>\n            <div className=\"form-row\">\n                <ConfInput id=\"has_ceiling\" checked={config.has_ceiling} onChange={handleCheckboxChange}>Has ceiling</ConfInput>\n                <NumberInput id=\"coordinate_scale\" value={config.coordinate_scale} upChange={handleNumberChange} min={10 ** -5} max={10 ** 7} step={0.1}>Coordinate scale</NumberInput>\n            </div>\n            <div className=\"form-group form-row\">\n                <ConfInput id=\"respawn_anchor_works\" checked={config.respawn_anchor_works} onChange={handleCheckboxChange}>Respawn anchor works</ConfInput>\n                <ConfInput id=\"piglin_safe\" checked={config.piglin_safe} onChange={handleCheckboxChange}>Piglin safe</ConfInput>\n                <ConfInput id=\"ultrawarm\" checked={config.ultrawarm} onChange={handleCheckboxChange}>Ultrawarm</ConfInput>\n            </div>\n        </fieldset>\n        <Button type=\"submit\">Save</Button>\n    </form>;\n}\n\nfunction InfiniburnIdentifier({ inputId, onChange, value }) {\n    return <div>\n        <label htmlFor={inputId}>Infiniburn : </label>\n        <div className=\"inbl\" style={{ width: '16ch' }}>\n            <Select options={DIMENSION_TYPE_INFINIBURN} value={DIMENSION_TYPE_INFINIBURN.find(o => value === o.value) || DIMENSION_TYPE_INFINIBURN[0]} onChange={o => onChange('infiniburn', o)} inputId={inputId} />\n        </div>\n    </div>\n}\n","import React, { useCallback, useState } from 'react';\n\nimport { Button } from '../../ui/Button';\nimport { DIMENSION } from './DimensionDefaults';\nimport { DimensionGenerator } from './DimensionGenerator';\nimport { DimensionType } from './DimensionType';\nimport { JsonViewer } from '../../ui/JsonViewer';\nimport { NamespacedKey } from '../NamespacedKey';\n\nexport function Dimension({data = DIMENSION, onSave}) {\n\n    const [state, setState] = useState(data);\n\n    const handleTypeChange = useCallback(function(type) {\n        setState(state => ({ ...state, type }));\n    }, []);\n    const handleGeneratorChange = useCallback(function(generator) {\n        setState(state => ({ ...state, generator }));\n    }, []);\n\n    const handleVanillaSelect = function(dimension) {\n        if (state.generator.type === 'minecraft:noise') {\n            dimension.generator.seed = state.generator.seed;\n            dimension.generator.biome_source.seed = state.generator.biome_source.seed;\n        } else {\n            dimension.generator.seed = 286956243;\n            dimension.generator.biome_source.seed = 286956243;\n        }\n        setState(dimension);\n    };\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        onSave({\n            ...state,\n            ...Object.fromEntries(new FormData(e.target))\n        });\n    }, [onSave, state])\n\n    return <form onSubmit={handleSubmit}>\n        <NamespacedKey example=\"blue_dimension\" type=\"dimensions\" value={data.key} onSelectLoad={handleVanillaSelect}>\n            dimension\n            <JsonViewer data={state} />\n        </NamespacedKey>\n        <DimensionType type={state.type} onChange={handleTypeChange} />\n        <DimensionGenerator generator={state.generator} onChange={handleGeneratorChange} />\n        <Button type=\"submit\">Save</Button>\n    </form>\n}","import React, { useCallback, useMemo } from \"react\";\n\nimport { NumberInput } from \"../../ui/Input\";\nimport Select from \"../../ui/Select\";\n\nexport const PositionPredicate = React.memo(function ({ className = 'form-group', onChange, predicate = { predicate_type: 'minecraft:always_true' } }) {\n\n    const handleTypeChange = useCallback(function (option) {\n        onChange({ predicate_type: option.value }, predicate);\n    }, [onChange, predicate]);\n    const handleChange = useCallback(function (value) {\n        onChange({ ...predicate, ...value }, predicate);\n    }, [onChange, predicate]);\n\n    const options = useMemo(function () {\n        return [\n            { value: 'minecraft:always_true', label: 'Always true' },\n            { value: 'minecraft:linear_pos', label: 'Linear pos' },\n            { value: 'minecraft:axis_aligned_linear_pos', label: 'Axis aligned linear pos' }\n        ];\n    }, []);\n\n    const type = predicate.predicate_type;\n    return <div className={className}>\n        <label>Predicate type</label>\n        <Select options={options} value={options.find(o => o.value === type)} onChange={handleTypeChange} />\n        {type === 'minecraft:linear_pos' && <LinearPosPredicate predicate={predicate} onChange={handleChange} />}\n        {type === 'minecraft:axis_aligned_linear_pos' && <AxisAlignedLinearPos predicate={predicate} onChange={handleChange} />}\n    </div>\n});\n\n\nconst LinearPosPredicate = React.memo(function ({ children, onChange, predicate }) {\n    return <div className=\"form-group form-row\">\n        <NumberInput id=\"min_chance\" value={predicate.min_chance} step={0.1} upChange={onChange} required={false}>Min chance</NumberInput>\n        <NumberInput id=\"max_chance\" value={predicate.max_chance} step={0.1} upChange={onChange} required={false}>Max chance</NumberInput>\n        <NumberInput id=\"min_dist\" value={predicate.min_dist} upChange={onChange} required={false}>Min dist</NumberInput>\n        <NumberInput id=\"max_dist\" value={predicate.max_dist} upChange={onChange} required={false}>Min dist</NumberInput>\n        {children}\n    </div>\n});\n\nconst AxisAlignedLinearPos = React.memo(function ({ children, onChange, predicate }) {\n    const options = ['x', 'y', 'z'].map(axis => ({ value: axis, label: axis }));\n\n    const handleAxisChange = useCallback(function (option) {\n        onChange({ axis: option.value }, predicate);\n    }, [onChange, predicate]);\n\n    return <LinearPosPredicate predicate={predicate} onChange={onChange}>\n        <div className=\"form-row\">\n            <label htmlFor=\"axis\">Axis :&nbsp;</label>\n            <Select options={options} value={options.find(o => predicate.axis === o.value) || options[1]} onChange={handleAxisChange} inputId=\"axis\" />\n        </div>\n        {children}\n    </LinearPosPredicate>\n});\n","import { BlockState, BlocksList } from \"../state/BlockState\";\nimport { CRUD, useCrudPreset, useCrudState, useJsonEffect } from \"../../hooks/form\";\nimport { PROCESSORS_OPTIONS, PROCESSOR_RULE_DEFAULTS } from './ProcessorDefaults';\nimport React, { useCallback, useContext } from \"react\";\n\nimport { BlockPredicate } from \"../state/BlockPredicate\";\nimport { Button } from \"../../ui/Button\";\nimport { DataContext } from \"../../context/DataContext\";\nimport { JsonViewer } from \"../../ui/JsonViewer\";\nimport { NamespacedKey } from \"../NamespacedKey\";\nimport { NumberInput } from \"../../ui/Input\";\nimport { PositionPredicate } from './PositionPredicate';\nimport Select from \"../../ui/Select\";\n\nexport function ProcessorList({ data = { processors: [] }, onSave }) {\n\n    const [processors, dispatch] = useCrudState(data.processors, function (processors) {\n        if (processors.length < 1) {\n            return { processor_type: 'minecraft:rule' };\n        }\n        // Get the first non taken processor\n        return { processor_type: (PROCESSORS_OPTIONS.filter(o => !processors.some(d => d.processor_type === o.value))[0] || { value: 'minecraft:rule' }).value };\n    });\n\n    const handleAdd = useCallback(function (e) {\n        e.preventDefault();\n        let processor_type = 'minecraft:rule';\n        if (processors.length > 0) {\n            processor_type = (PROCESSORS_OPTIONS.filter(o => !processors.some(d => d.processor_type === o.value))[0] || { value: 'minecraft:rule' }).value;\n        }\n        dispatch({ type: CRUD.ADD, payload: { processor_type } });\n    }, [dispatch, processors]);\n    const handleChange = useCallback(function (processor, previous) {\n        dispatch({ type: CRUD.UPDATE, target: previous, payload: processor });\n    }, [dispatch]);\n    const handleRemove = useCallback(function (e, processor) {\n        e.preventDefault();\n        dispatch({ type: CRUD.REMOVE, payload: processor });\n    }, [dispatch]);\n\n    const handleVanillaSelect = useCallback(function (processor_list) {\n        dispatch({ type: CRUD.REPLACE, payload: processor_list.processors });\n    }, [dispatch]);\n\n    const handleSubmit = useCallback(function (e) {\n        e.preventDefault();\n        onSave({\n            processors,\n            ...Object.fromEntries(new FormData(e.target))\n        }, data);\n    }, [data, onSave, processors]);\n\n    return <form onSubmit={handleSubmit}>\n        <NamespacedKey example=\"concretify\" type=\"processors\" value={data.key} expectBreakage={typeof data.key !== 'undefined'} defaultReplace={true} onSelectLoad={handleVanillaSelect}>\n            processors list\n            <JsonViewer data={{ processors }} />\n            {(processors.length > 0 && PROCESSORS_OPTIONS.length > processors.length) && <Button onClick={handleAdd}>Add processor</Button>}\n        </NamespacedKey>\n        <div className=\"mtm mbm\">\n            {processors.map(processor => {\n                const options = PROCESSORS_OPTIONS.filter(o => processor.processor_type === o.value || !processors.some(p => p.processor_type === o.value));\n                return <StructureProcessor onChange={handleChange} processor={processor} options={options} key={JSON.stringify(processor)}>\n                    <Button cat=\"danger mls\" onClick={e => handleRemove(e, processor)}>Remove</Button>\n                </StructureProcessor>\n            })}\n            {processors.length < 1 && <p className=\"pts mll text-muted\">To begin, <a href=\"#add-processor\" onClick={handleAdd} style={{ color: 'inherit' }}>add a processor</a>...</p>}\n        </div>\n        {processors.length > 0 && <Button type=\"submit\">Save</Button>}\n    </form>\n}\n\nconst StructureProcessor = React.memo(function ({ children, processor = { processor_type: 'minecraft:block_age' }, onChange, options }) {\n\n    const handleSelectChange = useCallback(function (option) {\n        onChange({ processor_type: option.value }, processor);\n    }, [processor, onChange]);\n    const handleChange = useCallback(function (config) {\n        onChange({ ...processor, ...config }, processor);\n    }, [processor, onChange]);\n\n    const blocks = useContext(DataContext).vanilla.blocks;\n    const handleAddBlockClick = useCallback(function (e) {\n        e.preventDefault();\n        onChange({ ...processor, blocks: [...(processor.blocks || []), { Name: 'minecraft:' + (blocks.find(o => !(processor.blocks || []).some(b => b.Name.substr(10) === o.name)) || { name: 'stone' }).name }] }, processor);\n    }, [blocks, onChange, processor]);\n    const handleAddProcessorClick = useCallback(function (e) {\n        e.preventDefault();\n        onChange({ ...processor, rules: [...(processor.rules || []), PROCESSOR_RULE_DEFAULTS] }, processor);\n    }, [onChange, processor]);\n\n    const type = processor.processor_type;\n    const CustomTag = ['minecraft:jigsaw_replacement', 'minecraft:nop', 'minecraft:blackstone_replace', 'minecraft:lava_submerged_block'].includes(type) ? ({ children }) => <li style={{ marginTop: '1.5rem', marginLeft: '1.6rem' }}>{children}</li> : 'fieldset';\n    return <CustomTag>\n        <legend style={{ fontWeight: 'normal', fontSize: '1rem' }}>\n            <div className=\"inbl\" style={{ width: '28ch' }}><Select options={options} value={options.find(o => type === o.value)} onChange={handleSelectChange} /></div>\n            {type === 'minecraft:block_ignore' && <Button cat=\"primary mls\" onClick={handleAddBlockClick}>Add block</Button>}\n            {type === 'minecraft:rule' && <Button cat=\"primary mls\" onClick={handleAddProcessorClick}>Add processor</Button>}\n            {children}\n        </legend>\n        {type === 'minecraft:block_age' && <BlockAgeProcessor onChange={handleChange} processor={processor} />}\n        {type === 'minecraft:block_ignore' && <BlockIgnoreProcessor onChange={handleChange} processor={processor} />}\n        {type === 'minecraft:block_rot' && <BlockRotProcessor onChange={handleChange} processor={processor} />}\n        {type === 'minecraft:gravity' && <BlockGravityProcessor onChange={handleChange} processor={processor} />}\n        {type === 'minecraft:rule' && <RuleProcessor onChange={handleChange} processor={processor} />}\n    </CustomTag>;\n});\n\n// BlackstoneReplacementProcessor: empty config\n\nconst BlockAgeProcessor = React.memo(function ({ onChange, processor }) {\n    return <NumberInput id=\"mossiness\" value={processor.mossiness} defaultValue={0.05} step={0.05} upChange={onChange}>Mossiness</NumberInput>\n});\n\nconst BlockIgnoreProcessor = React.memo(function ({ onChange, processor }) {\n    const handleChange = useCallback(blocks => onChange({ blocks }), [onChange])\n\n    return <BlocksList addButton={false} list={processor.blocks} onChange={handleChange} />\n});\n\nconst BlockRotProcessor = React.memo(function ({ onChange, processor }) {\n    return <NumberInput id=\"integrity\" value={processor.integrity} defaultValue={0.05} step={0.05} upChange={onChange}>Integrity</NumberInput>\n});\n\nconst BlockGravityProcessor = React.memo(function ({ onChange, processor }) {\n    // @todo heightmap\n    return <NumberInput id=\"offset\" value={processor.offset} upChange={onChange}>Offset</NumberInput>\n});\n\n// JigsawReplacementProcessor: empty config\n// LavaSubmergedBlockProcessor: empty config\n// NopProcessor: empty config\n\nconst RuleProcessor = React.memo(function ({ onChange, processor }) {\n    const [rules, , handleChange, handleRemove] = useCrudPreset(rules => onChange({ rules }), processor.rules, PROCESSOR_RULE_DEFAULTS);\n\n    return <div>\n        {rules.map((rule, index) =>\n            <ProcessorRule rule={rule} key={index} onChange={handleChange}>\n                <Button cat=\"danger\" onClick={e => handleRemove(e, index)}>Remove</Button>\n            </ProcessorRule>)}\n    </div>\n});\n\nconst ProcessorRule = React.memo(function ({ children, onChange, rule }) {\n    rule = useJsonEffect(rule || PROCESSOR_RULE_DEFAULTS, rule, onChange);\n\n    const handleInputPredicate = useCallback(function (input_predicate) {\n        onChange({ ...rule, input_predicate }, rule);\n    }, [onChange, rule]);\n    const handleLocationPredicate = useCallback(function (location_predicate) {\n        onChange({ ...rule, location_predicate }, rule);\n    }, [onChange, rule]);\n    const handlePositionPredicate = useCallback(function (position_predicate) {\n        onChange({ ...rule, position_predicate }, rule);\n    }, [onChange, rule]);\n    const handleOutputState = useCallback(function (output_state) {\n        onChange({ ...rule, output_state }, rule);\n    }, [onChange, rule]);\n\n    return <fieldset>\n        <legend>{children}</legend>\n        <fieldset>\n            <legend>Input predicate</legend>\n            <BlockPredicate target={rule.input_predicate} onChange={handleInputPredicate} />\n        </fieldset>\n        <div className=\"grid-2-small-1 has-gutter mbm\">\n            <fieldset>\n                <legend>Location predicate</legend>\n                <BlockPredicate target={rule.location_predicate} onChange={handleLocationPredicate} />\n            </fieldset>\n            <fieldset>\n                <legend>Position predicate</legend>\n                <PositionPredicate predicate={rule.position_predicate} className=\"\" onChange={handlePositionPredicate} />\n            </fieldset>\n        </div>\n        <fieldset>\n            <legend>Output state</legend>\n            <BlockState block={rule.output_state} onChange={handleOutputState} />\n        </fieldset>\n    </fieldset>\n});\n","export const TREE_DECORATORS_OPTIONS = [\n    { value: 'alter_ground', label: 'Alter ground' },\n    { value: 'beehive', label: 'Beehive', default: { probability: 0.02 } },\n    { value: 'cocoa', label: 'Cocoa beans', default: { probability: 0.2 } },\n    { value: 'leave_vine', label: 'Leave vine' },\n    { value: 'trunk_vine', label: 'Trunk vine' }\n].map(o => {\n    o.value = 'minecraft:' + o.value;\n    return o;\n});\n\nexport const BLOCK_PILE_FEATURE_CONFIG = {\n    state_provider: {\n        state: {\n            Properties: {\n                axis: \"y\"\n            },\n            Name: \"minecraft:hay_block\"\n        },\n        type: \"minecraft:rotated_block_provider\"\n    }\n};\n\nexport const HUGE_FUNGUS_FEATURE_CONFIG = {\n    hat_state: {\n        Name: \"minecraft:nether_wart_block\"\n    },\n    decor_state: {\n        Name: \"minecraft:shroomlight\"\n    },\n    planted: false,\n    valid_base_block: {\n        Name: \"minecraft:crimson_nylium\"\n    },\n    stem_state: {\n        Properties: {\n            axis: \"y\"\n        },\n        Name: \"minecraft:crimson_stem\"\n    }\n};\n\nexport const ORE_FEATURE_CONFIG = {\n    target: {\n        tag: \"minecraft:base_stone_overworld\",\n        predicate_type: \"minecraft:tag_match\"\n    },\n    state: {\n        Name: \"minecraft:gold_ore\"\n    },\n    size: 30\n};\n\nexport const SPRING_FEATURE_CONFIG = {\n    rock_count: 4,\n    hole_count: 1,\n    valid_blocks: [\n        \"minecraft:stone\",\n        \"minecraft:granite\",\n        \"minecraft:diorite\",\n        \"minecraft:andesite\"\n    ],\n    state: {\n        Properties: {\n            falling: \"true\"\n        },\n        Name: \"minecraft:water\"\n    },\n    requires_block_below: true\n};\n\nexport const TREE_FEATURE_CONFIG = {\n    heightmap: \"OCEAN_FLOOR\",\n    minimum_size: {\n        limit: 1,\n        lower_size: 0,\n        upper_size: 1,\n        type: \"minecraft:two_layers_feature_size\"\n    },\n    decorators: [],\n    trunk_provider: {\n        state: {\n            Properties: {\n                axis: \"y\"\n            },\n            Name: \"minecraft:birch_log\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    leaves_provider: {\n        state: {\n            Properties: {\n                persistent: \"false\",\n                distance: \"7\"\n            },\n            Name: \"minecraft:birch_leaves\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    foliage_placer: {\n        radius: 2,\n        offset: 0,\n        height: 3,\n        type: \"minecraft:blob_foliage_placer\"\n    },\n    trunk_placer: {\n        base_height: 5,\n        height_rand_a: 2,\n        height_rand_b: 0,\n        type: \"minecraft:straight_trunk_placer\"\n    }\n};\n\nexport const RANDOM_PATCH_FEATURE_CONFIG = {\n    can_replace: false,\n    project: true,\n    need_water: false,\n    xspread: 7,\n    yspread: 3,\n    zspread: 7,\n    whitelist: [\n        {\n            Properties: {\n                snowy: \"false\"\n            },\n            Name: \"minecraft:grass_block\"\n        }\n    ],\n    blacklist: [],\n    tries: 64,\n    state_provider: {\n        state: {\n            Name: \"minecraft:pumpkin\"\n        },\n        type: \"minecraft:simple_state_provider\"\n    },\n    block_placer: {\n        type: \"minecraft:simple_block_placer\"\n    }\n};\n","import { BLOCK_PILE_FEATURE_CONFIG, HUGE_FUNGUS_FEATURE_CONFIG, ORE_FEATURE_CONFIG, RANDOM_PATCH_FEATURE_CONFIG, SPRING_FEATURE_CONFIG, TREE_FEATURE_CONFIG } from \"./config/FeatureConfigDefaults\";\n\nexport const DECORATED_BAMBOO_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        feature: {\n                            config: {\n                                probability: 0.2\n                            },\n                            type: \"minecraft:bamboo\"\n                        },\n                        decorator: {\n                            config: {},\n                            type: \"minecraft:heightmap_world_surface\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                },\n                decorator: {\n                    config: {},\n                    type: \"minecraft:square\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                noise_to_count_ratio: 160,\n                noise_factor: 80.0,\n                noise_offset: 0.3\n            },\n            type: \"minecraft:count_noise_biased\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_BLOCK_PILE_CONFIG = {\n    config: {\n        feature: {\n            type: \"minecraft:decorated\",\n            config: {\n                decorator: {\n                    type: \"minecraft:count_multilayer\",\n                    config: {\n                        \"count\": 2\n                    }\n                },\n                feature: {\n                    config: BLOCK_PILE_FEATURE_CONFIG,\n                    type: \"minecraft:block_pile\"\n                }\n            }\n        },\n        decorator: {\n            type: \"minecraft:chance\",\n            config: {\n                chance: 12\n            }\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_CHORUS_PLANT_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {},\n                    type: \"minecraft:chorus_plant\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:heightmap\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: {\n                    base: 0,\n                    spread: 4\n                }\n            },\n            type: \"minecraft:count\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_DELTA_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                contents: {\n                    Properties: {\n                        level: \"0\"\n                    },\n                    Name: \"minecraft:lava\"\n                },\n                rim: {\n                    Name: \"minecraft:magma_block\"\n                },\n                size: {\n                    base: 3,\n                    spread: 4\n                },\n                rim_size: {\n                    base: 0,\n                    spread: 2\n                }\n            },\n            type: \"minecraft:delta_feature\"\n        },\n        decorator: {\n            config: {\n                count: 40\n            },\n            type: \"minecraft:count_multilayer\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_DESERT_WELL_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {},\n                    type: \"minecraft:desert_well\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:heightmap\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                chance: 1000\n            },\n            type: \"minecraft:chance\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_DISK_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        state: {\n                            Name: \"minecraft:sand\"\n                        },\n                        radius: {\n                            base: 2,\n                            spread: 4\n                        },\n                        half_height: 2,\n                        targets: [\n                            {\n                                Name: \"minecraft:dirt\"\n                            },\n                            {\n                                Properties: {\n                                    snowy: \"false\"\n                                },\n                                Name: \"minecraft:grass_block\"\n                            }\n                        ]\n                    },\n                    type: \"minecraft:disk\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:top_solid_heightmap\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 3\n            },\n            type: \"minecraft:count\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_FOREST_ROCK_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        state: {\n                            Name: \"minecraft:mossy_cobblestone\"\n                        }\n                    },\n                    type: \"minecraft:forest_rock\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:heightmap\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: {\n                    base: 0,\n                    spread: 2\n                }\n            },\n            type: \"minecraft:count\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\n\nexport const DECORATED_FOSSIL_CONFIG = {\n    config: {\n        feature: {\n            config: {},\n            type: \"minecraft:fossil\"\n        },\n        decorator: {\n            config: {\n                chance: 64\n            },\n            type: \"minecraft:chance\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_GLOWSTONE_BLOB_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        feature: {\n                            config: {},\n                            type: \"minecraft:glowstone_blob\"\n                        },\n                        decorator: {\n                            config: {\n                                bottom_offset: 0,\n                                top_offset: 0,\n                                maximum: 128\n                            },\n                            type: \"minecraft:range\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                },\n                decorator: {\n                    config: {},\n                    type: \"minecraft:square\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 10\n            },\n            type: \"minecraft:count\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_HUGE_FUNGUS_CONFIG = {\n    config: {\n        feature: {\n            config: HUGE_FUNGUS_FEATURE_CONFIG,\n            type: \"minecraft:huge_fungus\"\n        },\n        decorator: {\n            config: {\n                count: 8\n            },\n            type: \"minecraft:count_multilayer\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_ICEBERG_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        state: {\n                            Name: \"minecraft:packed_ice\"\n                        }\n                    },\n                    type: \"minecraft:iceberg\"\n                },\n                decorator: {\n                    config: {},\n                    type: \"minecraft:iceberg\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                chance: 16\n            },\n            type: \"minecraft:chance\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_ICE_PATCH_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        state: {\n                            Name: \"minecraft:packed_ice\"\n                        },\n                        radius: {\n                            base: 2,\n                            spread: 1\n                        },\n                        half_height: 1,\n                        targets: [\n                            {\n                                Name: \"minecraft:dirt\"\n                            },\n                            {\n                                Properties: {\n                                    snowy: \"false\"\n                                },\n                                Name: \"minecraft:grass_block\"\n                            },\n                            {\n                                Properties: {\n                                    snowy: \"false\"\n                                },\n                                Name: \"minecraft:podzol\"\n                            },\n                            {\n                                Name: \"minecraft:coarse_dirt\"\n                            },\n                            {\n                                Properties: {\n                                    snowy: \"false\"\n                                },\n                                Name: \"minecraft:mycelium\"\n                            },\n                            {\n                                Name: \"minecraft:snow_block\"\n                            },\n                            {\n                                Name: \"minecraft:ice\"\n                            }\n                        ]\n                    },\n                    type: \"minecraft:ice_patch\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:heightmap\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 2\n            },\n            type: \"minecraft:count\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_ICE_SPIKE_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {},\n                    type: \"minecraft:ice_spike\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:heightmap\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 3\n            },\n            type: \"minecraft:count\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_LAKE_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                state: {\n                    Properties: {\n                        level: \"0\"\n                    },\n                    Name: \"minecraft:water\"\n                }\n            },\n            type: \"minecraft:lake\"\n        },\n        decorator: {\n            config: {\n                chance: 4\n            },\n            type: \"minecraft:water_lake\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_NETHERRACK_REPLACE_BLOBS_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        feature: {\n                            config: {\n                                target: {\n                                    Name: \"minecraft:netherrack\"\n                                },\n                                state: {\n                                    Properties: {\n                                        axis: \"y\"\n                                    },\n                                    Name: \"minecraft:basalt\"\n                                },\n                                radius: {\n                                    base: 3,\n                                    spread: 4\n                                }\n                            },\n                            type: \"minecraft:netherrack_replace_blobs\"\n                        },\n                        decorator: {\n                            config: {\n                                bottom_offset: 0,\n                                top_offset: 0,\n                                maximum: 128\n                            },\n                            type: \"minecraft:range\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                },\n                decorator: {\n                    config: {},\n                    type: \"minecraft:square\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 75\n            },\n            type: \"minecraft:count\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_ORE_FEATURE_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        feature: {\n                            config: ORE_FEATURE_CONFIG,\n                            type: \"minecraft:ore\"\n                        },\n                        decorator: {\n                            config: {\n                                bottom_offset: 0,\n                                top_offset: 0,\n                                maximum: 32\n                            },\n                            type: \"minecraft:range\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                },\n                decorator: {\n                    config: {},\n                    type: \"minecraft:square\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 2\n            },\n            type: \"minecraft:count\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_RANDOM_PATCH_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: RANDOM_PATCH_FEATURE_CONFIG,\n                    type: \"minecraft:random_patch\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:heightmap_spread_double\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                chance: 32\n            },\n            type: \"minecraft:chance\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_SEAGRASS_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        probability: 0.3\n                    },\n                    type: \"minecraft:seagrass\"\n                },\n                decorator: {\n                    config: {\n                        count: 48\n                    },\n                    type: \"minecraft:count\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                outer: {\n                    config: {},\n                    type: \"minecraft:square\"\n                },\n                inner: {\n                    config: {},\n                    type: \"minecraft:top_solid_heightmap\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_SIMPLE_BLOCK_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                to_place: {\n                    Name: \"minecraft:seagrass\"\n                },\n                place_on: [\n                    {\n                        Name: \"minecraft:stone\"\n                    }\n                ],\n                place_in: [\n                    {\n                        Properties: {\n                            level: \"0\"\n                        },\n                        Name: \"minecraft:water\"\n                    }\n                ],\n                place_under: [\n                    {\n                        Properties: {\n                            level: \"0\"\n                        },\n                        Name: \"minecraft:water\"\n                    }\n                ]\n            },\n            type: \"minecraft:simple_block\"\n        },\n        decorator: {\n            config: {\n                step: \"liquid\",\n                probability: 0.1\n            },\n            type: \"minecraft:carving_mask\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\n\nexport const DECORATED_RANDOM_SELECTOR_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        features: [\n                            {\n                                feature: \"minecraft:fancy_oak_bees_005\",\n                                chance: 0.33333334\n                            }\n                        ],\n                        default: \"minecraft:oak_bees_005\"\n                    },\n                    type: \"minecraft:random_selector\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:heightmap\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 0,\n                extra_chance: 0.05,\n                extra_count: 1\n            },\n            type: \"minecraft:count_extra\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_SPRING_FEATURE_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: {\n                        feature: {\n                            config: SPRING_FEATURE_CONFIG,\n                            type: \"minecraft:spring_feature\"\n                        },\n                        decorator: {\n                            config: {\n                                bottom_offset: 8,\n                                top_offset: 8,\n                                maximum: 256\n                            },\n                            type: \"minecraft:range_biased\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                },\n                decorator: {\n                    config: {},\n                    type: \"minecraft:square\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 50\n            },\n            type: \"minecraft:count\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_TREE_CONFIG = {\n    config: {\n        feature: {\n            config: {\n                feature: {\n                    config: TREE_FEATURE_CONFIG,\n                    type: \"minecraft:tree\"\n                },\n                decorator: {\n                    config: {\n                        outer: {\n                            config: {},\n                            type: \"minecraft:square\"\n                        },\n                        inner: {\n                            config: {},\n                            type: \"minecraft:heightmap\"\n                        }\n                    },\n                    type: \"minecraft:decorated\"\n                }\n            },\n            type: \"minecraft:decorated\"\n        },\n        decorator: {\n            config: {\n                count: 10,\n                extra_chance: 0.1,\n                extra_count: 1\n            },\n            type: \"minecraft:count_extra\"\n        }\n    },\n    type: \"minecraft:decorated\"\n};\n\nexport const DECORATED_VOID_START_PLATFORM_CONFIG = {\n    config: {},\n    type: \"minecraft:void_start_platform\"\n};\n","import React, { useCallback, useMemo } from \"react\";\nimport { useBlocksOptions, useCrudPreset } from \"../../hooks/form\";\n\nimport { BlockState } from \"./BlockState\";\nimport { Button } from '../../ui/Button';\nimport { NumberInput } from '../../ui/Input';\nimport Select from \"../../ui/Select\";\nimport { useEffect } from \"react\";\n\nexport const BlockStateProvider = React.memo(function({block = { type: 'minecraft:simple_state_provider' }, onChange}) {\n    const options = useMemo(function() {\n        return [\n            { value: 'minecraft:forest_flower_provider', label: 'Forest flower provider' },\n            { value: 'minecraft:plain_flower_provider', label: 'Plain flower provider' },\n            { value: 'minecraft:simple_state_provider', label: 'Simple state provider' },\n            { value: 'minecraft:rotated_block_provider', label: 'Rotated block provider' },\n            { value: 'minecraft:weighted_state_provider', label: 'Weighted state provider' }\n        ];\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        const similarities = ['minecraft:simple_state_provider', 'minecraft:rotated_block_provider'];\n        if (similarities.includes(block.type) && similarities.includes(option.value)) {\n            onChange({ ...block, type: option.value }, block);\n        } else {\n            onChange({ type: option.value }, block);\n        }\n    }, [block, onChange]);\n\n    const handleSimpleStateChange = useCallback(function(state) {\n        onChange({ ...block, state }, block);\n    }, [block, onChange]);\n\n    const handleWeighestStateChange = useCallback(function(entries) {\n        onChange({ ...block, entries }, block);\n    }, [block, onChange]);\n\n    const blocks = useBlocksOptions(false);\n    const filteredBlocks = useMemo(function () {\n        const filtered = block.type === 'minecraft:rotated_block_provider' ?\n            blocks.filter(b => b.states.some(state => state.name === 'axis')) : blocks;\n        return filtered.map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n    }, [blocks, block.type]);\n\n    return <div>\n        <label>Provider type</label>\n        <Select options={options} value={options.find(o => o.value === block.type)} onChange={handleTypeChange} />\n        {(block.type === 'minecraft:simple_state_provider' || block.type === 'minecraft:rotated_block_provider') && <BlockState block={block.state} options={filteredBlocks} onChange={handleSimpleStateChange} />}\n        {block.type === 'minecraft:weighted_state_provider' && <WeightedStateProvider entries={block.entries} onChange={handleWeighestStateChange} />}\n    </div>\n});\n\n\nconst WeightedStateProvider = React.memo(function({entries = [], onChange}) {\n    const options = useBlocksOptions();\n\n    const [blocks, handleAdd, handleChange, handleRemove] = useCrudPreset(onChange, entries, function(blocks) {\n        // Get the first non taken block name\n        return { data: { Name: (options.find(o => !blocks.some(b => b.data.Name === o.value)) || { value: 'minecraft:stone' }).value } };\n    });\n\n    const handleStateChange = useCallback(function(state, i) {\n        handleChange({ ...blocks[i], data: state }, blocks[i]);\n    }, [blocks, handleChange]);\n    const handleWeightChange = useCallback(function(weight, i) {\n        if (weight === 1) {\n            handleChange({ data: blocks[i].data }, blocks[i]);\n        } else {\n            handleChange({ weight, data: blocks[i].data }, blocks[i]);\n        }\n    }, [blocks, handleChange]);\n\n    useEffect(() => {\n        if (blocks !== entries) {\n            onChange(blocks);\n        }\n    }, [blocks, entries, onChange]);\n\n    return <div className=\"form-group\">\n        {blocks.map((block, i) => {\n            const filteredOptions = options.filter(o => o.value === block.data.Name || !blocks.some(d => d.data.Name === o.value));\n            return <BlockState block={block.data} options={filteredOptions} key={JSON.stringify(block)} onChange={state => handleStateChange(state, i)}>\n                <NumberInput id=\"weight\" value={block.weight || 1} min=\"1\" onChange={weight => handleWeightChange(weight, i)} className=\"mlm\">Weight</NumberInput>\n                <Button cat=\"danger mlm\" onClick={(e) => handleRemove(e, i)}>Remove</Button>\n            </BlockState>\n        })}\n        <Button onClick={handleAdd}>Add block</Button>\n    </div>;\n});","export const DECORATORS_OPTIONS = [\n    { value: 'carving_mask', label: 'Carving mask' },\n    { value: 'chance', label: 'Chance' },\n    { value: 'count', label: 'Count' },\n    { value: 'count_extra', label: 'Count extra' },\n    { value: 'count_multilayer', label: 'Count multi layer' },\n    { value: 'count_noise', label: 'Count noise' },\n    { value: 'count_noise_biased', label: 'Count noise biased' },\n    { value: 'decorated', label: 'Decorated' },\n    { value: 'fire', label: 'Fire' },\n    { value: 'heightmap_world_surface', label: 'Heightmap world surface' },\n    { value: 'iceberg', label: 'Iceberg' },\n    { value: 'lava_lake', label: 'Lava lake' },\n    { value: 'range', label: 'Range' },\n    { value: 'range_biased', label: 'Range biased' },\n    { value: 'range_very_biased', label: 'Range very biased' },\n    { value: 'square', label: 'Square' },\n    { value: 'water_lake', label: 'Water lake' }\n].map(o => {\n    o.value = 'minecraft:' + o.value;\n    return o;\n});\n\nexport const CARVERS_OPTIONS = [\n    { value: 'air', label: 'Air' },\n    { value: 'liquid', label: 'Liquid' }\n];\n\nexport const DECORATOR_CARVING_MASK_DEFAULTS = {\n    step: \"liquid\",\n    probability: 0.1\n};\n\nexport const DECORATOR_EXTRA_COUNT_DEFAULTS = {\n    count: 10,\n    extra_chance: 0.1,\n    extra_count: 1\n};\n\nexport const DECORATOR_DECORATED_DEFAULTS = {\n    outer: {\n        config: {},\n        type: \"minecraft:square\"\n    },\n    inner: {\n        config: {},\n        type: \"minecraft:heightmap\"\n    }\n};\n\nexport const DECORATOR_RANGE_DEFAULTS = {\n    bottom_offset: 4,\n    top_offset: 0,\n    maximum: 64\n};\n","import React, { useCallback } from 'react';\nimport { NumberInput } from '../../ui/Input';\n\nexport const UniformInt = React.memo(function ({ children, id, minBase = 0, maxBase = 4, maxSpread = 4, upChange, value, defaultValue = 4 }) {\n    const handleChange = useCallback(function (val) {\n        upChange({ [id]: { ...value, ...val } })\n    }, [id, upChange, value]);\n\n    if (typeof value === 'number' || typeof value === 'undefined') {\n        return <NumberInput id={id} value={value} defaultValue={defaultValue} max={maxBase} upChange={upChange}>{children}</NumberInput>\n    }\n\n    if (typeof value !== 'object') {\n        value = { base: 4, spread: 1 };\n    }\n    return <>\n        <NumberInput id=\"base\" value={value.base} upChange={handleChange} min={minBase} max={maxBase}>{children} base</NumberInput>\n        <NumberInput id=\"spread\" value={value.spread} upChange={handleChange} max={maxSpread}>{children} spread</NumberInput>\n    </>\n});\n","import { CARVERS_OPTIONS, DECORATORS_OPTIONS, DECORATOR_CARVING_MASK_DEFAULTS, DECORATOR_DECORATED_DEFAULTS, DECORATOR_EXTRA_COUNT_DEFAULTS, DECORATOR_RANGE_DEFAULTS } from './DecoratorDefaults';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport { useCrudPreset, useJsonEffect } from '../../../hooks/form';\n\nimport { Button } from '../../../ui/Button';\nimport { INT_MIN_VALUE } from '../../../utils/math';\nimport { NumberInput } from '../../../ui/Input';\nimport Select from '../../../ui/Select';\nimport { UniformInt } from '../../utils/UniformInt';\n\nexport const DecoratorsList = React.memo(function({data, onChange}) {\n    const [decorators, handleAdd, handleChange, handleRemove] = useCrudPreset(onChange, data, function(decorators) {\n        // Get the first non taken decorator\n        return { type: (DECORATORS_OPTIONS.filter(o => !decorators.some(d => d.type === o.value))[0] || { value: 'minecraft:count' }).value };\n    });\n\n    const shouldCancelStart = useCallback(function(e) {\n        return !e.target.parentNode.classList.contains('sortable-item');\n    }, []);\n    \n    return <fieldset>\n        <legend>Decorators wrappers {DECORATORS_OPTIONS.length > decorators.length && <Button onClick={handleAdd}>Add decorator</Button>}</legend>\n        <SortableDecoratorsList decorators={decorators} handleChange={handleChange} handleRemove={handleRemove}\n            onSortEnd={handleChange} shouldCancelStart={shouldCancelStart} />\n    </fieldset>\n});\n\nconst SortableDecoratorsList = SortableContainer(function({decorators, handleChange, handleRemove}) {\n    return <ol className=\"sortable-container\">\n        {decorators.map((decorator, index) => {\n            const options = DECORATORS_OPTIONS.filter(o => decorator.type === o.value || !decorators.some(d => d.type === o.value));\n            return <Decorator key={decorator.type} data={decorator} index={index} onChange={handleChange} options={options}>\n                <Button cat=\"danger mlm\" onClick={(e) => handleRemove(e, index)}>Remove</Button>\n            </Decorator>\n        })}\n    </ol>\n});\n\nconst Decorator = React.memo(SortableElement(function({children, data = { type: 'minecraft:count' }, onChange, options}) {\n    const [decorator, setDecorator] = useState(data);\n\n    const handleSelectChange = useCallback(function(option) {\n        setDecorator({ type: option.value });\n    }, []);\n    const handleConfigChange = useCallback(function(config) {\n        setDecorator(decorator => ({ type: decorator.type, config: { ...decorator.config, ...config }}));\n    }, []);\n    useJsonEffect(decorator, data, onChange);\n\n    return <li className=\"sortable-item\">\n        <div className=\"form-group form-row\">\n            <div style={{ flexGrow: 1 }}><Select options={options} value={options.find(o => o.value === decorator.type)} onChange={handleSelectChange} /></div>\n            {children}\n        </div>\n        <div className=\"form-group form-row\">\n            {decorator.type === 'minecraft:carving_mask' && <CarvingMaskDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.type === 'minecraft:chance' || decorator.type === 'minecraft:lava_lake' || decorator.type === 'minecraft:water_lake') && <ChanceDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.type === 'minecraft:count' || decorator.type === 'minecraft:fire' || decorator.type === 'minecraft:count_multilayer') && <CountDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {decorator.type === 'minecraft:count_extra' && <ExtraCountDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {decorator.type === 'minecraft:count_noise' && <NoiseCountDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {decorator.type === 'minecraft:count_noise_biased' && <NoiseBiasedCountDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.type === 'minecraft:decorated' || decorator.type === 'minecraft:square') && <DecoratedDecorator config={decorator.config} onChange={handleConfigChange} />}\n            {(decorator.type === 'minecraft:range' || decorator.type === 'minecraft:range_biased' || decorator.type === 'minecraft:range_very_biased') && <RangeDecorator config={decorator.config} onChange={handleConfigChange} />}\n        </div>\n    </li>;\n}));\n\nconst CarvingMaskDecorator = React.memo(function({config, onChange}) {\n    config = useJsonEffect(config || DECORATOR_CARVING_MASK_DEFAULTS, config, onChange);\n\n    const handleStepChange = useCallback(function (option) {\n        onChange({ probability: config.probability, step: option.value });\n    }, [config.probability, onChange]);\n\n    return <>\n        <div className=\"inbl\"><Select options={CARVERS_OPTIONS} value={CARVERS_OPTIONS.find(o => o.value === config.step)} onChange={handleStepChange} /></div>\n        <NumberInput id=\"probability\" value={config.probability} upChange={onChange} step=\"0.05\">Probability</NumberInput>\n    </>\n});\n\nconst ChanceDecorator = React.memo(function({config = {}, onChange}) {\n    return <NumberInput id=\"chance\" value={config.chance} defaultValue={32} upChange={onChange}>Chance</NumberInput>\n});\n\nconst CountDecorator = React.memo(function({config = {}, onChange}) {\n    return <UniformInt id=\"count\" value={config.count} minBase={-10} maxBase={128} maxSpread={128} defaultValue={25} upChange={onChange}>Count</UniformInt>\n});\n\nconst ExtraCountDecorator = React.memo(function({config, onChange}) {\n    config = useJsonEffect(config || DECORATOR_EXTRA_COUNT_DEFAULTS, config, onChange);\n\n    return <>\n        <NumberInput id=\"count\" value={config.count} upChange={onChange}>Count</NumberInput>\n        <NumberInput id=\"extra_chance\" value={config.extra_chance} upChange={onChange} step=\"0.05\">Extra chance</NumberInput>\n        <NumberInput id=\"extra_count\" value={config.extra_count} upChange={onChange}>Extra count</NumberInput>\n    </>\n});\n\nconst NoiseCountDecorator = React.memo(function({config, onChange}) {\n    config = useJsonEffect(config || {\n        noise_level: -0.8,\n        below_noise: 15,\n        above_noise: 4\n    }, config, onChange);\n\n    return <>\n        <NumberInput id=\"noise_level\" value={config.noise_level} min={INT_MIN_VALUE} step={0.1} upChange={onChange}>Noise level</NumberInput>\n        <NumberInput id=\"below_noise\" value={config.below_noise} upChange={onChange}>Below noise</NumberInput>\n        <NumberInput id=\"above_noise\" value={config.above_noise} upChange={onChange}>Above noise</NumberInput>\n    </>\n});\n\nconst NoiseBiasedCountDecorator = React.memo(function({config, onChange}) {\n    config = useJsonEffect(config || {\n        noise_to_count_ratio: 160,\n        noise_factor: 80.0,\n        noise_offset: 0.3\n    }, config, onChange);\n\n    return <>\n        <NumberInput id=\"noise_to_count_ratio\" value={config.noise_to_count_ratio} upChange={onChange}>Noise to count ratio</NumberInput>\n        <NumberInput id=\"noise_factor\" value={config.noise_factor} upChange={onChange} step=\"0.05\">Noise factor</NumberInput>\n        <NumberInput id=\"noise_offset\" value={config.noise_offset} upChange={onChange} step=\"0.05\">Noise factor</NumberInput>\n    </>\n});\n\nconst DecoratedDecorator = React.memo(function({config, onChange}) {\n    useEffect(() => {\n        if (typeof config === 'undefined') {\n            onChange(DECORATOR_DECORATED_DEFAULTS);\n        }\n    }, [config, onChange]);\n    return <div></div>;\n});\n\nconst RangeDecorator = React.memo(function({config, onChange}) {\n    config = useJsonEffect(config || DECORATOR_RANGE_DEFAULTS, config, onChange);\n\n    return <>\n        <NumberInput id=\"bottom_offset\" value={config.bottom_offset} upChange={onChange}>Bottom offset</NumberInput>\n        <NumberInput id=\"top_offset\" value={config.top_offset} upChange={onChange}>Top offset</NumberInput>\n        <NumberInput id=\"maximum\" value={config.maximum} upChange={onChange}>Y maximum</NumberInput>\n    </>\n});","import { BlockState, BlocksList } from '../../state/BlockState';\nimport React, { useCallback } from 'react';\n\nimport { NumberInput } from '../../../ui/Input';\nimport { UniformInt } from '../../utils/UniformInt';\n\nexport function DiskFeature({ configuration, onChange }) {\n\n    const handleChange = useCallback(function (value) {\n        onChange({ ...configuration, ...value });\n    }, [configuration, onChange]);\n    const handleStateChange = useCallback(function (state) {\n        onChange({ ...configuration, state });\n    }, [configuration, onChange]);\n    const handleTargetsChange = useCallback(function (targets) {\n        onChange({ ...configuration, targets });\n    }, [configuration, onChange]);\n\n    return <fieldset>\n        <legend>Config</legend>\n        <BlockState block={configuration.state} onChange={handleStateChange} />\n        <div className=\"form-group form-row\">\n            <UniformInt id=\"radius\" value={configuration.radius} upChange={handleChange}>Radius</UniformInt>\n            <NumberInput id=\"half_height\" value={configuration.half_height} upChange={handleChange}>Half height</NumberInput>\n        </div>\n        <fieldset>\n            <legend>Targets</legend>\n            <BlocksList list={configuration.targets} onChange={handleTargetsChange} />\n        </fieldset>\n    </fieldset>\n}\n","import { NumberInput } from '../../../ui/Input';\nimport React from 'react';\n\nexport function ProbabilityFeature({ configuration, onChange }) {\n\n    return <fieldset>\n        <legend>Config</legend>\n        <div className=\"form-group\">\n            <NumberInput id=\"probability\" value={configuration.probability} max={1} step={0.01} upChange={onChange}>Probability</NumberInput>\n        </div>\n    </fieldset>\n}\n","import React, { useCallback } from 'react';\nimport { BlockState } from '../../state/BlockState';\n\nexport function SingleStateFeature({ configuration, onChange }) {\n\n    const handleChange = useCallback(function (state) {\n        onChange({ state });\n    }, [onChange]);\n\n    return <fieldset>\n        <legend>Block state</legend>\n        <BlockState block={configuration.state} onChange={handleChange} />\n    </fieldset>\n}\n","import React, { useCallback, useMemo } from 'react';\n\nimport { BlockStateProvider } from '../../state/BlockStateProvider';\nimport { Button } from '../../../ui/Button';\nimport { NumberInput } from '../../../ui/Input';\nimport Select from '../../../ui/Select';\nimport { TREE_DECORATORS_OPTIONS } from './FeatureConfigDefaults';\nimport { UniformInt } from '../../utils/UniformInt';\nimport { useCrudPreset } from '../../../hooks/form';\n\nexport function TreeFeature({configuration, onChange}) {\n\n    const handleTrunkProviderChange = useCallback(function(trunk_provider) {\n        onChange({ ...configuration, trunk_provider });\n    }, [configuration, onChange]);\n    const handleLeavesProviderChange = useCallback(function(leaves_provider) {\n        onChange({ ...configuration, leaves_provider });\n    }, [configuration, onChange]);\n    const handleFoliagePlacerChange = useCallback(function(foliage_placer) {\n        onChange({ ...configuration, foliage_placer });\n    }, [configuration, onChange]);\n    const handleTrunkPlacerChange = useCallback(function(trunk_placer) {\n        onChange({ ...configuration, trunk_placer: { ...configuration.trunk_placer, ...trunk_placer } });\n    }, [configuration, onChange]);\n    const handleDecoratorsChange = useCallback(function(decorators) {\n        onChange({ ...configuration, decorators });\n    }, [configuration, onChange]);\n\n    return <div>\n        <fieldset>\n            <legend>Trunk provider</legend>\n            <BlockStateProvider block={configuration.trunk_provider} onChange={handleTrunkProviderChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Leaves provider</legend>\n            <BlockStateProvider block={configuration.leaves_provider} onChange={handleLeavesProviderChange} />\n        </fieldset>\n        <FoliagePlacer placer={configuration.foliage_placer} onChange={handleFoliagePlacerChange} />\n        <TrunkPlacer placer={configuration.trunk_placer} onChange={handleTrunkPlacerChange} />\n        <TreeDecorators data={configuration.decorators} onChange={handleDecoratorsChange}></TreeDecorators>\n    </div>;\n}\n\nconst FoliagePlacer = React.memo(function({placer, onChange}) {\n    const options = useMemo(function() {\n        return [\n            { value: 'acacia_foliage_placer', label: 'Acacia foliage placer' },\n            { value: 'blob_foliage_placer', label: 'Blob foliage placer' },\n            { value: 'bush_foliage_placer', label: 'Bush foliage placer' },\n            { value: 'dark_oak_foliage_placer', label: 'Dark oak foliage placer' },\n            { value: 'fancy_foliage_placer', label: 'Fancy foliage placer' },\n            { value: 'jungle_foliage_placer', label: 'Jungle foliage placer' },\n            { value: 'mega_pine_foliage_placer', label: 'Mega pine foliage placer' },\n            { value: 'pine_foliage_placer', label: 'Pine foliage placer' },\n            { value: 'spruce_foliage_placer', label: 'Spruce foliage placer' }\n        ].map(o => {\n            o.value = 'minecraft:' + o.value;\n            return o;\n        });\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        const type = option.value;\n        if (type === 'minecraft:acacia_foliage_placer' || type === 'minecraft:mega_pine_foliage_placer') {\n            delete placer.height;\n        } else if (type !== 'minecraft:acacia_foliage_placer') {\n            delete placer.crown_height;\n        }\n        onChange({ ...placer, type });\n    }, [onChange, placer]);\n    const handleChange = useCallback(function(value) {\n        onChange({ ...placer, ...value })\n    }, [onChange, placer]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === placer.type) || options[0];\n    }, [options, placer.type]);\n\n    return <fieldset>\n        <legend>Foliage placer</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"foliage_placer_type\">Type</label>\n            <Select options={options} name=\"foliage_placer_type\" value={selected} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <UniformInt id=\"radius\" value={placer.radius} maxBase={8} maxSpread={8} upChange={handleChange}>Radius</UniformInt>\n            <UniformInt id=\"offset\" value={placer.offset} maxBase={8} maxSpread={8} upChange={handleChange}>Offset</UniformInt>\n            {(placer.type === 'minecraft:blob_foliage_placer' ||\n                placer.type === 'minecraft:bush_foliage_placer' ||\n                placer.type === 'minecraft:fancy_foliage_placer' ||\n                placer.type === 'minecraft:jungle_foliage_placer'\n            ) && <NumberInput id=\"height\" value={placer.height} upChange={handleChange} max={16} defaultValue={3}>Height</NumberInput>}\n            \n            {placer.type === 'minecraft:mega_pine_foliage_placer' && <UniformInt id=\"crown_height\" value={placer.crown_height} maxBase={16} maxSpread={8} upChange={handleChange}>Crown height</UniformInt>}\n            {placer.type === 'minecraft:pine_foliage_placer' && <UniformInt id=\"height\" value={placer.height} maxBase={16} maxSpread={8} upChange={handleChange}>Height</UniformInt>}\n            {placer.type === 'minecraft:spruce_foliage_placer' && <UniformInt id=\"trunk_height\" value={placer.trunk_height} maxBase={16} maxSpread={8} upChange={handleChange}>Trunk height</UniformInt>}\n        </div>\n    </fieldset>\n});\n\nconst TrunkPlacer = React.memo(function({placer, onChange}) {\n    const options = useMemo(function() {\n        return [\n            { value: 'straight_trunk_placer', label: 'Straight trunk placer' },\n            { value: 'forking_trunk_placer', label: 'Forking trunk placer' },\n            { value: 'giant_trunk_placer', label: 'Giant trunk placer' },\n            { value: 'mega_jungle_trunk_placer', label: 'Mega jungle trunk placer' },\n            { value: 'dark_oak_trunk_placer', label: 'Dark oak trunk placer' },\n            { value: 'fancy_trunk_placer', label: 'Fancy trunk placer' }\n        ].map(o => {\n            o.value = 'minecraft:' + o.value;\n            return o;\n        });\n    }, []);\n\n    const handleTypeChange = useCallback(function(option) {\n        onChange({ type: option.value });\n    }, [onChange]);\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === placer.type) || options[0];\n    }, [placer.type, options]);\n\n    return <fieldset>\n        <legend>Trunk placer</legend>\n        <div className=\"form-group\">\n            <label htmlFor=\"foliage_placer_type\">Type</label>\n            <Select options={options} name=\"foliage_placer_type\" defaultValue={selected} onChange={handleTypeChange} />\n        </div>\n        <div className=\"form-group form-row\">\n            <NumberInput id=\"base_height\" value={placer.base_height} upChange={onChange} max=\"32\">Base height</NumberInput>\n            <NumberInput id=\"height_rand_a\" value={placer.height_rand_a} upChange={onChange} max=\"24\">First height rand</NumberInput>\n            <NumberInput id=\"height_rand_b\" value={placer.height_rand_b} upChange={onChange} max=\"24\">Second height rand</NumberInput>\n        </div>\n    </fieldset>\n});\n\nconst TreeDecorators = React.memo(function({data, onChange}) {\n    const [decorators, handleAdd, handleChange, handleRemove] = useCrudPreset(onChange, data, function(decorators) {\n        // Get the first non taken decorator\n        return { type: (TREE_DECORATORS_OPTIONS.filter(o => !decorators.some(d => d.type === o.value))[0] || { value: 'minecraft:alter_ground' }).value };\n    });\n    \n    return <fieldset>\n        <legend>Tree decorators {decorators.length < 5 && <Button onClick={handleAdd}>Add decorator</Button>}</legend>\n        {decorators.map((decorator, i) => {\n            const options = TREE_DECORATORS_OPTIONS.filter(o => o.value === decorator.type || !decorators.some(d => d.type === o.value));\n            return <TreeDecorator data={decorator} key={decorator.type} onChange={handleChange} options={options}>\n                <Button cat=\"danger mlm\" onClick={e => handleRemove(e, i)}>Remove</Button>\n            </TreeDecorator>\n        })}\n    </fieldset>\n});\n\nconst TreeDecorator = React.memo(function({children, data, options, onChange}) {\n    const handleSelectChange = useCallback(function(option) {\n        onChange({ type: option.value, ...option.default }, data);\n    }, [data, onChange]);\n    const handleAlterGroundChange = useCallback(function(provider) {\n        onChange({ type: data.type, provider }, data);\n    }, [data, onChange]);\n    const handleProbabilityChange = useCallback(function(probability) {\n        onChange({ type: data.type, probability }, data);\n    }, [data, onChange]);\n\n    const CustomTag = ['minecraft:leave_vine', 'minecraft:trunk_vine'].indexOf(data.type) < 0 ? 'fieldset' : 'div';\n\n    const selected = useMemo(function() {\n        return options.find(o => o.value === data.type);\n    }, [data.type, options]);\n    return <CustomTag>\n        <legend style={{ fontWeight: 'normal', fontSize: 'inherit' }}>\n            <div style={{ width: '200px', display: 'inline-block' }}><Select options={options} value={selected} onChange={handleSelectChange} /></div>\n            {children}\n        </legend>\n        <div className=\"form-group\">\n            {data.type === 'minecraft:alter_ground' && <BlockStateProvider block={data.provider} onChange={handleAlterGroundChange} />}\n            {(data.type === 'minecraft:beehive' || data.type === 'minecraft:cocoa') && <NumberInput id=\"probability\" value={data.probability} onChange={handleProbabilityChange} max=\"1\" step=\"0.05\" defaultValue=\"0.05\">Probability</NumberInput>}\n        </div>\n    </CustomTag>\n});","import { DECORATED_BAMBOO_CONFIG, DECORATED_BLOCK_PILE_CONFIG, DECORATED_CHORUS_PLANT_CONFIG, DECORATED_DELTA_CONFIG, DECORATED_DESERT_WELL_CONFIG, DECORATED_DISK_CONFIG, DECORATED_FOREST_ROCK_CONFIG, DECORATED_FOSSIL_CONFIG, DECORATED_GLOWSTONE_BLOB_CONFIG, DECORATED_HUGE_FUNGUS_CONFIG, DECORATED_ICEBERG_CONFIG, DECORATED_ICE_PATCH_CONFIG, DECORATED_ICE_SPIKE_CONFIG, DECORATED_LAKE_CONFIG, DECORATED_NETHERRACK_REPLACE_BLOBS_CONFIG, DECORATED_ORE_FEATURE_CONFIG, DECORATED_RANDOM_PATCH_CONFIG, DECORATED_SEAGRASS_CONFIG, DECORATED_SIMPLE_BLOCK_CONFIG, DECORATED_SPRING_FEATURE_CONFIG, DECORATED_TREE_CONFIG, DECORATED_VOID_START_PLATFORM_CONFIG } from './DecoratedFeatureDefaults';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { buildDecorated, capitalize, findDecorators } from '../../utils/data';\n\nimport { BlockPileFeature } from './config/BlockPileFeature';\nimport { Button } from '../../ui/Button';\nimport { DecoratorsList } from './decorator/Decorator';\nimport { DeltaFeature } from './config/DeltaFeature';\nimport { DiskFeature } from './config/DiskFeature';\nimport { HugeFungusFeature } from './config/HugeFungusFeature';\nimport { JsonViewer } from '../../ui/JsonViewer';\nimport { NamespacedKey } from '../NamespacedKey';\nimport { NetherrackReplaceBlobsFeature } from './config/NetherrackReplaceBlobsFeature';\nimport { OreFeature } from './config/OreFeature';\nimport { ProbabilityFeature } from './config/ProbabilityFeature';\nimport { RandomPatchFeature } from './config/RandomPatchFeature';\nimport Select from '../../ui/Select';\nimport { SimpleBlockFeature } from './config/SimpleBlockFeature';\nimport { SingleStateFeature } from './config/SingleStateFeature';\nimport { SpringFeature } from './config/SpringFeature';\nimport { TreeFeature } from './config/TreeFeature';\n\nconst FEATURES = [\n    { type: 'bamboo', default: DECORATED_BAMBOO_CONFIG, config: ProbabilityFeature },\n    { type: 'block_pile', default: DECORATED_BLOCK_PILE_CONFIG, config: BlockPileFeature },\n    { type: 'chorus_plant', default: DECORATED_CHORUS_PLANT_CONFIG },\n    { type: 'delta_feature', default: DECORATED_DELTA_CONFIG, config: DeltaFeature },\n    { type: 'desert_well', default: DECORATED_DESERT_WELL_CONFIG },\n    { type: 'disk', default: DECORATED_DISK_CONFIG, config: DiskFeature },\n    { type: 'forest_rock', default: DECORATED_FOREST_ROCK_CONFIG, config: SingleStateFeature },\n    { type: 'fossil', default: DECORATED_FOSSIL_CONFIG },\n    { type: 'glowstone_blob', default: DECORATED_GLOWSTONE_BLOB_CONFIG },\n    { type: 'huge_fungus', default: DECORATED_HUGE_FUNGUS_CONFIG, config: HugeFungusFeature },\n    { type: 'iceberg', default: DECORATED_ICEBERG_CONFIG, config: SingleStateFeature },\n    { type: 'ice_patch', default: DECORATED_ICE_PATCH_CONFIG, config: DiskFeature },\n    { type: 'ice_spike', default: DECORATED_ICE_SPIKE_CONFIG },\n    { type: 'lake', default: DECORATED_LAKE_CONFIG, config: SingleStateFeature },\n    { type: 'netherrack_replace_blobs', default: DECORATED_NETHERRACK_REPLACE_BLOBS_CONFIG, config: NetherrackReplaceBlobsFeature },\n    { type: 'ore', default: DECORATED_ORE_FEATURE_CONFIG, config: OreFeature },\n    { type: 'simple_block', default: DECORATED_SIMPLE_BLOCK_CONFIG, config: SimpleBlockFeature },\n    { type: 'seagrass', default: DECORATED_SEAGRASS_CONFIG, config: ProbabilityFeature },\n    { type: 'spring_feature', default: DECORATED_SPRING_FEATURE_CONFIG, config: SpringFeature },\n    { type: 'random_patch', default: DECORATED_RANDOM_PATCH_CONFIG, config: RandomPatchFeature },\n    { type: 'tree', default: DECORATED_TREE_CONFIG, config: TreeFeature },\n    { type: 'void_start_platform', default: DECORATED_VOID_START_PLATFORM_CONFIG }\n].map(feature => {\n    feature.type = 'minecraft:' + feature.type;\n    return feature;\n});\n\nconst OPTIONS = FEATURES\n    .map(feature => ({ value: feature.type, label: capitalize(feature.type.substr(10).replace(/_/g, ' ')) }));\n\nexport function RawConfiguredFeature({ data = DECORATED_TREE_CONFIG, onSave }) {\n\n    const [decorators_, feature_] = useMemo(() => findDecorators(data), [data]);\n\n    const [feature, setFeature] = useState(feature_);\n    const [decorators, setDecorators] = useState(decorators_);\n\n    const handleSelectChange = useCallback(function (option) {\n        const [decorators, feature] = findDecorators(FEATURES.find(feature => option.value === feature.type).default);\n        setFeature(feature);\n        setDecorators(decorators);\n    }, []);\n\n    const handleFeatureChange = useCallback(function (config) {\n        setFeature(feature => ({ ...feature, config }));\n    }, []);\n\n    const handleDecoratorsChange = useCallback(function (decorators) {\n        setDecorators(decorators);\n    }, []);\n\n    const handleVanillaSelect = useCallback(function (configured_feature) {\n        const [decorators, feature] = findDecorators(configured_feature);\n        setFeature(feature);\n        setDecorators(decorators);\n    }, []);\n\n    const handleSubmit = useCallback(function (e) {\n        e.preventDefault();\n        const decorated = buildDecorated(feature, decorators, new FormData(e.target).get('key'));\n        onSave(decorated);\n    }, [decorators, feature, onSave]);\n\n    const FeatureConfig = (FEATURES.find(f => feature.type === f.type) || { config: 'p' }).config || (() => <p className=\"text-muted\">No config options</p>);\n\n    return <form onSubmit={handleSubmit}>\n        <NamespacedKey example=\"concrete_tree\" type=\"features\" value={data.key} expectBreakage={typeof data.key !== 'undefined'} onSelectLoad={handleVanillaSelect}>\n            configured feature\n            <JsonViewer data={() => buildDecorated(feature, decorators, data.key || 'feature')} />\n        </NamespacedKey>\n        <div className=\"form-group\">\n            <label htmlFor=\"type\">Type</label>\n            <Select options={OPTIONS} value={OPTIONS.find(o => o.value === feature.type)} onChange={handleSelectChange} inputId=\"type\" />\n        </div>\n        <hr />\n        <FeatureConfig configuration={feature.config} onChange={handleFeatureChange}>Currently not supported (<code>{feature.type}</code>).</FeatureConfig>\n        <DecoratorsList data={decorators} key={feature.type} onChange={handleDecoratorsChange} />\n        <Button type=\"submit\">Save</Button>\n    </form>\n}\n","import React, { useCallback } from 'react';\nimport { BLOCK_PILE_FEATURE_CONFIG } from './FeatureConfigDefaults';\nimport { BlockStateProvider } from '../../state/BlockStateProvider';\n\nexport function BlockPileFeature({ configuration = BLOCK_PILE_FEATURE_CONFIG, onChange }) {\n\n    const handleChange = useCallback(function (state_provider) {\n        onChange({ state_provider });\n    }, [onChange]);\n\n    return <fieldset>\n        <legend>Block state provider</legend>\n        <BlockStateProvider block={configuration.state_provider} onChange={handleChange} />\n    </fieldset>\n}\n","import React, { useCallback } from 'react';\nimport { BlockState } from '../../state/BlockState';\nimport { UniformInt } from '../../utils/UniformInt';\n\nexport function DeltaFeature({ configuration, onChange }) {\n\n    const handleChange = useCallback(function (value) {\n        onChange({ ...configuration, ...value });\n    }, [configuration, onChange]);\n    const handleContentsChange = useCallback(function (contents) {\n        onChange({ ...configuration, contents });\n    }, [configuration, onChange]);\n    const handleRimChange = useCallback(function (rim) {\n        onChange({ ...configuration, rim });\n    }, [configuration, onChange]);\n\n    return <fieldset>\n        <legend>Config</legend>\n        <BlockState block={configuration.contents} onChange={handleContentsChange} />\n        <BlockState block={configuration.rim} onChange={handleRimChange} />\n        <div className=\"form-group form-row\">\n            <UniformInt id=\"size\" value={configuration.size} maxBase={8} maxSpread={8} upChange={handleChange}>Size</UniformInt>\n            <UniformInt id=\"rim_size\" value={configuration.rim_size} maxBase={8} maxSpread={8} upChange={handleChange}>Rim size</UniformInt>\n        </div>\n    </fieldset>\n}\n","import React, { useCallback } from 'react';\nimport { BlockState } from '../../state/BlockState';\nimport { ConfInput } from '../../../ui/Input';\nimport { HUGE_FUNGUS_FEATURE_CONFIG } from './FeatureConfigDefaults';\nimport { useJsonEffect } from '../../../hooks/form';\n\nexport function HugeFungusFeature({ configuration = HUGE_FUNGUS_FEATURE_CONFIG, onChange }) {\n\n    const handleDecorStateChange = useCallback(function (decor_state) {\n        onChange({ ...configuration, decor_state });\n    }, [configuration, onChange]);\n    const handleHatStateChange = useCallback(function (hat_state) {\n        onChange({ ...configuration, hat_state });\n    }, [configuration, onChange]);\n    const handlePlantedChange = useCallback(function (e) {\n        const planted = e.target.checked;\n        onChange({ ...configuration, planted });\n    }, [configuration, onChange]);\n    const handleStemStateChange = useCallback(function (stem_state) {\n        onChange({ ...configuration, stem_state });\n    }, [configuration, onChange]);\n    const handleValidBaseBlockChange = useCallback(function (valid_base_block) {\n        onChange({ ...configuration, valid_base_block });\n    }, [configuration, onChange]);\n    useJsonEffect(configuration || HUGE_FUNGUS_FEATURE_CONFIG, configuration, onChange);\n\n    return <div>\n        <fieldset>\n            <legend>Composition</legend>\n            <label htmlFor=\"stem_state\">Stem</label>\n            <BlockState block={configuration.stem_state} className=\"\" inputId=\"stem_state\" onChange={handleStemStateChange} />\n            <label htmlFor=\"hat_state\">Hat</label>\n            <BlockState block={configuration.hat_state} className=\"\" inputId=\"hat_state\" onChange={handleHatStateChange} />\n            <label htmlFor=\"decor_state\">Decor</label>\n            <BlockState block={configuration.decor_state} className=\"\" inputId=\"decor_state\" onChange={handleDecorStateChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Configuration</legend>\n            <label htmlFor=\"valid_base_block\">Valid base block</label>\n            <BlockState block={configuration.valid_base_block} className=\"\" inputId=\"valid_base_block\" onChange={handleValidBaseBlockChange} />\n            <ConfInput id=\"planted\" checked={configuration.planted} onChange={handlePlantedChange}>Planted</ConfInput>\n        </fieldset>\n    </div>;\n}\n","import React, { useCallback } from 'react';\nimport { BlockState } from '../../state/BlockState';\nimport { INT_MAX_VALUE } from '../../../utils/math';\nimport { NumberInput } from '../../../ui/Input';\nimport { UniformInt } from '../../utils/UniformInt';\n\nexport function NetherrackReplaceBlobsFeature({ configuration, onChange }) {\n\n    const handleChange = useCallback(function (value) {\n        onChange({ ...configuration, ...value });\n    }, [configuration, onChange]);\n    const handleStateChange = useCallback(function (state) {\n        onChange({ ...configuration, state });\n    }, [configuration, onChange]);\n    const handleTargetChange = useCallback(function (target) {\n        onChange({ ...configuration, target });\n    }, [configuration, onChange]);\n\n    return <fieldset>\n        <legend>Config</legend>\n        <BlockState block={configuration.state} onChange={handleStateChange} />\n        <div className=\"form-group form-row\">\n            <UniformInt id=\"radius\" value={configuration.radius} maxBase={INT_MAX_VALUE} maxSpread={INT_MAX_VALUE} upChange={handleChange}>Radius</UniformInt>\n            <NumberInput id=\"half_height\" value={configuration.half_height} upChange={handleChange}>Half height</NumberInput>\n        </div>\n        <fieldset>\n            <legend>Target</legend>\n            <BlockState block={configuration.target} onChange={handleTargetChange} />\n        </fieldset>\n    </fieldset>\n}\n","import React, { useCallback } from 'react';\nimport { BlockPredicate } from '../../state/BlockPredicate';\nimport { BlockState } from '../../state/BlockState';\nimport { NumberInput } from '../../../ui/Input';\n\nexport function OreFeature({configuration, onChange}) {\n    const handlePredicateChange = useCallback(function(target) {\n        onChange({ ...configuration, target });\n    }, [configuration, onChange]);\n    const handleBlockChange = useCallback(function(state) {\n        onChange({ ...configuration, state });\n    }, [configuration, onChange]);\n    const handleValueChange = useCallback(function(value) {\n        onChange({ ...configuration, ...value });\n    }, [configuration, onChange]);\n\n    return <div>\n        <fieldset>\n            <legend>Target</legend>\n            <BlockPredicate target={configuration.target} onChange={handlePredicateChange} />\n        </fieldset>\n        <fieldset>\n            <legend>State</legend>\n            <BlockState block={configuration.state} onChange={handleBlockChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Settings</legend>\n            <NumberInput id=\"size\" value={configuration.size} upChange={handleValueChange}>Size</NumberInput>\n        </fieldset>\n    </div>;\n}","import { BlockState, BlocksList } from '../../state/BlockState';\nimport React, { useCallback } from 'react';\n\nexport function SimpleBlockFeature({ configuration, onChange }) {\n\n    const handleToPlaceChange = useCallback(function (to_place) {\n        onChange({ ...configuration, to_place });\n    }, [configuration, onChange]);\n    const handlePlaceOnChange = useCallback(function (place_on) {\n        onChange({ ...configuration, place_on });\n    }, [configuration, onChange]);\n    const handlePlaceInChange = useCallback(function (place_in) {\n        onChange({ ...configuration, place_in });\n    }, [configuration, onChange]);\n    const handlePlaceUnderChange = useCallback(function (place_under) {\n        onChange({ ...configuration, place_under });\n    }, [configuration, onChange]);\n\n    return <div>\n        <fieldset>\n            <legend>To place</legend>\n            <BlockState block={configuration.to_place} className=\"\" inputId=\"to_place\" onChange={handleToPlaceChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Placement</legend>\n            <fieldset>\n                <legend>Place on</legend>\n                <BlocksList list={configuration.place_on} className=\"\" inputId=\"place_on\" onChange={handlePlaceOnChange} />\n            </fieldset>\n            <fieldset>\n                <legend>Place in</legend>\n                <BlocksList list={configuration.place_in} className=\"\" inputId=\"place_in\" onChange={handlePlaceInChange} />\n            </fieldset>\n            <fieldset>\n                <legend>Place under</legend>\n                <BlocksList list={configuration.place_under} className=\"\" inputId=\"place_under\" onChange={handlePlaceUnderChange} />\n            </fieldset>\n        </fieldset>\n    </div>\n}\n","import { ConfInput, NumberInput } from '../../../ui/Input';\nimport React, { useCallback, useMemo } from 'react';\n\nimport { BlockSelect } from '../../state/BlockPredicate';\nimport { BlocksNamesList } from '../../state/BlockState';\nimport { HUGE_FUNGUS_FEATURE_CONFIG } from './FeatureConfigDefaults';\nimport { useBlocksOptions } from '../../../hooks/form';\n\nexport function SpringFeature({ configuration = HUGE_FUNGUS_FEATURE_CONFIG, onChange }) {\n\n    const handlRequiresBlockBelowChange = useCallback(function (e) {\n        const requires_block_below = e.target.checked;\n        onChange(({ ...configuration, requires_block_below }));\n    }, [configuration, onChange]);\n    const handleStateChange = useCallback(function (option) {\n        onChange({ ...configuration, state: { Name: option.value, Properties: { falling: 'true' } } });\n    }, [configuration, onChange]);\n    const handleValidBlocksChange = useCallback(function (valid_blocks) {\n        onChange({ ...configuration, valid_blocks });\n    }, [configuration, onChange]);\n    const handleValueChange = useCallback(function (value) {\n        onChange({ ...configuration, ...value });\n    }, [configuration, onChange]);\n\n    const blocks = useBlocksOptions(false);\n    const filteredBlocks = useMemo(function () {\n        return blocks.filter(b => b.name === 'lava' || b.name === 'water')\n            .map(block => ({ value: 'minecraft:' + block.name, label: block.displayName }));\n    }, [blocks]);\n\n    return <div>\n        <fieldset>\n            <legend>Fluid</legend>\n            <div className=\"form-group\"><BlockSelect block={configuration.state.Name} onChange={handleStateChange} options={filteredBlocks} /></div>\n        </fieldset>\n        <fieldset>\n            <legend>Valid blocks</legend>\n            <BlocksNamesList list={configuration.valid_blocks} onChange={handleValidBlocksChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Configuration</legend>\n            <div className=\"form-row\">\n                <NumberInput id=\"rock_count\" value={configuration.rock_count} upChange={handleValueChange}>Rock count</NumberInput>\n                <NumberInput id=\"hole_count\" value={configuration.hole_count} upChange={handleValueChange}>Hole count</NumberInput>\n                <ConfInput id=\"requires_block_below\" checked={configuration.requires_block_below} onChange={handlRequiresBlockBelowChange}>Requires block below</ConfInput>\n            </div>\n        </fieldset>\n    </div>\n}\n","import { ConfInput, NumberInput } from '../../../ui/Input';\nimport React, { useCallback } from 'react';\n\nimport { BlockStateProvider } from '../../state/BlockStateProvider';\nimport { BlocksList } from '../../state/BlockState';\nimport { RANDOM_PATCH_FEATURE_CONFIG } from './FeatureConfigDefaults';\nimport { useJsonEffect } from '../../../hooks/form';\n\nexport function RandomPatchFeature({ configuration, onChange }) {\n\n    const config = useJsonEffect(configuration || RANDOM_PATCH_FEATURE_CONFIG, configuration, onChange);\n    const handleStateProviderChange = useCallback(function (state_provider) {\n        onChange({ ...config, state_provider });\n    }, [config, onChange]);\n    const handleWhitelistChange = useCallback(function (whitelist) {\n        onChange({ ...config, whitelist });\n    }, [config, onChange]);\n    const handleBlacklistChange = useCallback(function (blacklist) {\n        onChange({ ...config, blacklist });\n    }, [config, onChange]);\n    const handleValueChange = useCallback(function (value) {\n        onChange({ ...config, ...value });\n    }, [config, onChange]);\n    const handleCheckboxChange = useCallback(function (e) {\n        onChange({ ...config, [e.target.dataset.name]: e.target.checked });\n    }, [config, onChange]);\n\n    return <div>\n        <fieldset>\n            <legend>State provider</legend>\n            <BlockStateProvider block={config.state_provider} onChange={handleStateProviderChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Whitelist</legend>\n            <BlocksList list={config.whitelist} onChange={handleWhitelistChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Blacklist</legend>\n            <BlocksList list={config.blacklist} onChange={handleBlacklistChange} />\n        </fieldset>\n        <fieldset>\n            <legend>Settings</legend>\n            <div className=\"form-group form-row\">\n                <NumberInput id=\"xspread\" value={config.xspread} upChange={handleValueChange}>X spread</NumberInput>\n                <NumberInput id=\"yspread\" value={config.yspread} upChange={handleValueChange}>Y spread</NumberInput>\n                <NumberInput id=\"zspread\" value={config.zspread} upChange={handleValueChange}>Z spread</NumberInput>\n                <NumberInput id=\"tries\" value={config.tries} upChange={handleValueChange}>Tries</NumberInput>\n            </div>\n            <div className=\"form-group form-row\">\n                <ConfInput id=\"need_water\" checked={config.need_water} onChange={handleCheckboxChange}>Need water</ConfInput>\n                <ConfInput id=\"project\" checked={config.project} onChange={handleCheckboxChange}>Project</ConfInput>\n                <ConfInput id=\"can_replace\" checked={config.can_replace} onChange={handleCheckboxChange}>Can replace</ConfInput>\n            </div>\n        </fieldset>\n    </div>;\n}","import React, { useCallback, useState } from 'react';\nimport { SURFACE_BUILDER, SURFACE_TYPES_OPTIONS } from './SurfaceBuilderDefaults';\n\nimport { BlockState } from '../state/BlockState';\nimport { Button } from '../../ui/Button';\nimport { JsonViewer } from '../../ui/JsonViewer';\nimport { NamespacedKey } from '../NamespacedKey';\nimport Select from '../../ui/Select';\n\nexport function SurfaceBuilder({data = SURFACE_BUILDER, onSave}) {\n    const [state, setState] = useState(data);\n\n    const handleTypeChange = useCallback(function(option) {\n        setState(state => ({ ...state, type: option.value }));\n    }, []);\n    const handleTopMaterialChange = useCallback(function(top_material) {\n        setState(state => ({ ...state, config: { ...state.config, top_material } }));\n    }, []);\n    const handleUnderMaterialChange = useCallback(function(under_material) {\n        setState(state => ({ ...state, config: { ...state.config, under_material } }));\n    }, []);\n    const handleUnderwaterMaterialChange = useCallback(function(underwater_material) {\n        setState(state => ({ ...state, config: { ...state.config, underwater_material } }));\n    }, []);\n\n    const handleSubmit = useCallback(function(e) {\n        e.preventDefault();\n        const formData = new FormData(e.target);\n        onSave({\n            ...state,\n            key: formData.get('key')\n        });\n    }, [onSave, state]);\n\n    return <form onSubmit={handleSubmit}>\n        <NamespacedKey example=\"blackstone\" type=\"surfaces\" value={state.key} expectBreakage={typeof data.key !== 'undefined'} onSelectLoad={setState}>\n            surface builder\n            <JsonViewer data={state} />\n        </NamespacedKey>\n        \n        <div className=\"form-group\">\n            <label htmlFor=\"type\">Type</label>\n            <Select options={SURFACE_TYPES_OPTIONS} value={SURFACE_TYPES_OPTIONS.find(o => o.value === state.type)} onChange={handleTypeChange} inputId=\"type\" />\n            <p className=\"help2\"><small className=\"text-muted\">The builder type defines the shape of the surface. For example, the <em>swamp</em> type will create puddles while the <em>badlands</em> types will create small rocky peaks; the <em>nether</em> types will add a mix of nether blocks and expose more of the underneath material.</small></p>\n        </div>\n        \n        <label htmlFor=\"top_material\">Top material</label>\n        <BlockState block={state.config.top_material} className=\"\" inputId=\"top_material\" onChange={handleTopMaterialChange} />\n        <label htmlFor=\"under_material\">Under material</label>\n        <BlockState block={state.config.under_material} className=\"\" inputId=\"under_material\" onChange={handleUnderMaterialChange} />\n        <label htmlFor=\"underwater_material\">Underwater material</label>\n        <BlockState block={state.config.underwater_material} className=\"\" inputId=\"underwater_material\" onChange={handleUnderwaterMaterialChange} />\n\n        <Button type=\"submit\">Save</Button>\n    </form>;\n}","import JSZip from \"jszip\";\nimport { PATHS } from \"../context/Paths\";\nimport { dataUpper } from \"./data\";\nimport { saveAs } from \"file-saver\";\n\nconst DIMENSIONS_PATH = /^data\\/([a-z0-9_.-]+)\\/(dimension|dimension_type)\\/([a-z0-9/._-]+).json$/;\nconst WORLDGEN_PATH = /^data\\/([a-z0-9_.-]+)\\/worldgen\\/(biome|configured_carver|configured_feature|configured_surface_builder|noise_settings|processor_list)\\/([a-z0-9/._-]+).json$/;\n\nconst LEGACY_DIMENSIONS_PATH = /^data\\/minecraft\\/(dimension|dimension_type)\\/([a-z0-9_.-]+)\\/([a-z0-9/._-]+).json$/;\nconst LEGACY_WORLDGEN_PATH = /^data\\/minecraft\\/worldgen\\/(biome|configured_carver|configured_feature|configured_surface_builder|noise_settings|processor_list)\\/([a-z0-9_.-]+)\\/([a-z0-9/._-]+).json$/;\n\n/**\n * Build zip in blob.\n * \n * @param {object} custom \n */\nexport function buildZip(custom) {\n    const zip = new JSZip();\n\n    let modified;\n    if (custom.dimensions.length > 0) {\n        modified = 'dimension';\n    } else if (custom.biomes.length > 0) {\n        modified = 'biome';\n    } else {\n        modified = (Object.entries(custom).find(([type, elements]) => typeof elements !== 'function' && elements.length > 0) || [''])[0];\n    }\n    \n    zip.file('pack.mcmeta', JSON.stringify({\n        pack: {\n            pack_format: 6,\n            description: 'Custom ' + modified\n        }\n    }, null, 4));\n    Object.entries(PATHS).forEach(([type, path]) => writeFile(zip, path, custom[type]));\n    zip.generateAsync({ type: 'blob' })\n        .then(function(content) {\n            saveAs(content, 'generated_datapack.zip');\n        });\n}\n\n/**\n * @param {File} file\n * @returns {Promise<[string, { biomes: object[], dimensions: object[], features: object[], surfaces: object[] }]>}\n */\nexport function readZip(file) {\n    return new Promise((resolve, reject) => {\n        if (!['application/zip', 'application/octet-stream', 'application/x-zip-compressed', 'multipart/x-zip'].includes(file.type)) {\n             reject(new Error(`File is not a .zip. Got: ${file.type}`));\n        }\n\n        JSZip.loadAsync(file).then((zip) => {\n            extractDatapack(zip)\n                .then(resolve)\n                .catch(reject);\n        }).catch(reject);\n    });\n}\n\n/**\n * @param {JSZip} zip \n * @returns {Promise<string, object>}\n */\nasync function extractDatapack(zip) {\n    let namespace = 'minecraft';\n    const data = {\n        biomes: [],\n        carvers: [],\n        dimensions: [],\n        dimension_types: [],\n        features: [],\n        noises: [],\n        processors: [],\n        surfaces: []\n    };\n\n    const pack = zip.file('pack.mcmeta');\n    if (pack === null) {\n        throw new Error('Invalid datapack: no pack.mcmeta');\n    }\n    let legacy = false;\n    try {\n        const mcmeta = JSON.parse(await pack.async('text'));\n        legacy = mcmeta.pack.pack_format < 6;\n    } catch (e) {\n        throw new Error(`Error reading pack.mcmeta file: ${e.message}`);\n    }\n    \n\n    return new Promise((resolve, reject) => {\n        const promises = [];\n        zip.forEach(function(path, entry) {\n            if (entry.dir) {\n                return;\n            }\n            const paths = legacy ? [LEGACY_DIMENSIONS_PATH, LEGACY_WORLDGEN_PATH] : [DIMENSIONS_PATH, WORLDGEN_PATH];\n            const regex = paths.find(path => entry.name.match(path)) || WORLDGEN_PATH;\n            promises.push(parseFile(legacy, regex, entry.name, zip.file(entry.name).async('text')));\n        });\n\n        Promise.all(promises).then(function(values) {\n            values.forEach(function(value) {\n                if (value === null) {\n                    return;\n                }\n\n                if (value.namespace !== 'minecraft') {\n                    namespace = value.namespace;\n                }\n                data[value.type].push(value.data);\n            });\n            resolve([namespace, data]);\n        }).catch(e => reject(e));\n    });\n}\n\nfunction getFolderType(folder) {\n    switch (folder) {\n        case 'configured_carver':\n            return 'carvers';\n        case 'configured_feature':\n            return 'features';\n        case 'configured_surface_builder':\n            return 'surfaces';\n        case 'noise_settings':\n            return 'noises';\n        case 'processor_list':\n            return 'processors';\n        default:\n            return folder + 's';\n    }\n}\n\n/**\n * Parse json file when it will be ready.\n * \n * @param {boolean} legacy\n * @param {RegExp} pathRegex \n * @param {string} filename \n * @param {Promise<string>} contentPromise \n * @returns {Promise<{namespace: string, data: object, type: string}>}\n */\nasync function parseFile(legacy, pathRegex, filename, contentPromise) {\n    const d = pathRegex.exec(filename);\n    if (d === null) {\n        return new Promise((success) => success(null)); // Skip file\n    }\n\n    return new Promise((resolve, reject) => {\n        contentPromise.then(content => {\n            const obj = JSON.parse(content);\n            const namespace = d[legacy ? 2 : 1];\n            const type = getFolderType(d[legacy ? 1 : 2]);\n            obj.key = namespace + ':' + d[3];\n            const data = dataUpper(type, obj);\n            resolve({ namespace, data, type });\n        }).catch(e => {\n            if (e.name !== 'SyntaxError') {\n                console.error(e);\n            }\n            reject(new Error(`Cannot read ${filename}:\\n${e.message}`));\n        });\n    });\n}\n\nfunction writeFile(zip, path, elements) {\n    if (elements.length < 1) {\n        return;\n    }\n\n    for (const el of elements) {\n        const w = {...el};\n        delete w.key;\n        delete w.index;\n\n        const [namespace, filename] = el.key.split(':');\n        zip.folder(path.replace('%namespace%', namespace))\n            .file(filename + '.json', JSON.stringify(w, null, 2));\n    }\n}\n","import { MenuItem, NavBar } from './../ui/Menu';\nimport React, { useContext, useEffect } from 'react';\n\nimport { Biome } from './biome/Biome';\nimport { Button } from './../ui/Button';\nimport { ConfiguredCarverForm } from './carver/ConfiguredCarver';\nimport { DataContext } from './../context/DataContext';\nimport { Dimension } from './dimension/Dimension';\nimport { DimensionTypeForm } from './dimension/DimensionType';\nimport Masonry from 'masonry-layout';\nimport { NoiseSettings } from './noise/NoiseSettings';\nimport { ProcessorList } from './processor/ProcessorList';\nimport { RawConfiguredFeature } from './feature/ConfiguredFeature';\nimport { SurfaceBuilder } from './surface/SurfaceBuilder';\nimport { buildZip } from '../utils/zip';\nimport { capitalize } from '../utils/data';\nimport { displayNamespacedKey } from '../utils/data';\nimport { useMenu } from '../hooks/ui';\n\nexport function Datapack() {\n    const context = useContext(DataContext);\n    const custom = context.custom;\n    const namespace = context.namespace;\n    const [page, index, setMenu] = useMenu();\n\n    const handleSave = function (type, data) {\n        const method = 'update' + function () {\n            switch (type) {\n                case 'surface':\n                    return 'SurfacesBuilders';\n                case 'dimension_type':\n                    return 'DimensionTypes';\n                default:\n                    return capitalize(type) + 's';\n            }\n        }();\n        custom[method](data, custom[type + 's'][index]);\n        setMenu(null);\n    }\n    const handleGenerateClick = function(e) {\n        e.preventDefault();\n        buildZip(custom);\n    }\n    window.scrollTo(0, 0);\n\n    const mayGenerate = Object.values(custom).some(content => {\n        if (Array.isArray(content)) {\n            return content.length;\n        }\n        return false;\n    });\n\n    return <div>\n        <NavBar>\n            <nav className=\"tabs\"><ul>\n                <MenuItem onClick={e => setMenu(e, 'main')} active={page === 'main'}>Main</MenuItem>\n                <MenuItem onClick={e => setMenu(e, 'biome')} active={page === 'biome'}>Biome</MenuItem>\n                <MenuItem onClick={e => setMenu(e, 'surface')} active={page === 'surface'}>Surface builder</MenuItem>\n                <MenuItem onClick={e => setMenu(e, 'feature')} active={page === 'feature'}>Feature</MenuItem>\n                <MenuItem onClick={e => setMenu(e, 'dimension')} active={page === 'dimension'}>Dimension</MenuItem>\n                <MenuItem onClick={e => setMenu(e, 'noise')} active={page === 'noise'}>Noise</MenuItem>\n                <MenuItem onClick={e => setMenu(e, 'processor')} active={page === 'processor'}>Processor</MenuItem>\n            </ul></nav>\n        </NavBar>\n        <div className=\"content\">\n            {page === 'biome' && <Biome onSave={biome => handleSave('biome', biome)} data={custom.biomes[index]} />}\n            {page === 'carver' && <ConfiguredCarverForm onSave={carver => handleSave('carver', carver)} data={custom.carvers[index]} />}\n            {page === 'surface' && <SurfaceBuilder onSave={surface => handleSave('surface', surface)} data={custom.surfaces[index]} />}\n            {page === 'feature' && <RawConfiguredFeature onSave={feature => handleSave('feature', feature)} data={custom.features[index]} />}\n            {page === 'noise' && <NoiseSettings onSave={noise => handleSave('noise', noise)} data={custom.noises[index]} />}\n            {page === 'processor' && <ProcessorList onSave={processor => handleSave('processor', processor)} data={custom.processors[index]} />}\n            {page === 'dimension' && <Dimension onSave={dimension => handleSave('dimension', dimension)} data={custom.dimensions[index]} />}\n            {page === 'dimension_type' && <DimensionTypeForm onSave={dimension => handleSave('dimension_type', dimension)} data={custom.dimension_types[index]} />}\n            {page === 'main' && <>\n                <h2>Datapack {namespace} <Button type=\"submit\" onClick={handleGenerateClick} disabled={!mayGenerate}>Generate</Button></h2>\n                <Main custom={custom} namespace={namespace} onSave={handleSave} setPage={setMenu} />\n            </>}\n        </div>\n    </div>\n}\n\nfunction Main({namespace, onSave, setPage}) {\n\n    useEffect(() => {\n        new Masonry( '.stats', {\n        itemSelector: '.card',\n        gutter: 15\n      });\n    }, []);\n\n    return <div className=\"stats\">\n        <StatsTitle type=\"feature\" namespace={namespace} onClick={setPage} onDelete={onSave}>configured feature</StatsTitle>\n        <StatsTitle type=\"biome\" namespace={namespace} onClick={setPage} onDelete={onSave}>custom biome</StatsTitle>\n        <StatsTitle type=\"surface\" namespace={namespace} onClick={setPage} onDelete={onSave}>configured surface builder</StatsTitle>\n        \n        <StatsTitle type=\"dimension\" namespace={namespace} onClick={setPage} onDelete={onSave}>custom dimension</StatsTitle>\n        <StatsTitle type=\"noise\" namespace={namespace} onClick={setPage} onDelete={onSave}>custom noise</StatsTitle>\n        <StatsTitle type=\"dimension_type\" namespace={namespace} onClick={setPage} onDelete={onSave} invisible={true}>custom dimension type</StatsTitle>\n        \n        <StatsTitle type=\"processor\" namespace={namespace} onClick={setPage} onDelete={onSave}>custom processor list</StatsTitle>\n        <StatsTitle type=\"carver\" namespace={namespace} onClick={setPage} onDelete={onSave} invisible={true}>custom carver</StatsTitle>\n        <div>\n        </div>\n    </div>\n}\n\nfunction StatsTitle({ children, type, invisible = false, namespace, onClick, onDelete }) {\n    const data = useContext(DataContext).custom[type + 's'];\n    if (invisible && data.length < 1) {\n        return <></>\n    }\n\n    const handleRemove = function (e, data) {\n        e.preventDefault();\n        if (window.confirm('Do you really want to remove this resource?')) {\n            delete data.key;\n            onDelete(type, data);\n        }\n    };\n\n    return <div className=\"card\">\n        <h5><strong>{data.length}</strong> {children}{data.length > 1 && 's'}</h5>\n        <ul>\n            {data.map((d, i) => {\n                const name = displayNamespacedKey(d.key, namespace);\n                return <li key={i}><a href=\"#remove\" onClick={e => handleRemove(e, d)}><i className=\"delete\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M6 2l2-2h4l2 2h4v2H2V2h4zM3 6h14l-1 14H4L3 6zm5 2v10h1V8H8zm3 0v10h1V8h-1z\"/></svg></i></a><a href=\"#edit\" onClick={e => onClick(e, type, i)}>{name}</a></li>\n            })}\n        </ul>\n    </div>\n}","import React, { useState } from 'react';\n\nimport { Button } from '../ui/Button';\nimport { NavBar } from '../ui/Menu';\nimport { readZip } from '../utils/zip';\n\nexport function DatapackForm({onCreate}) {\n\n    const [error, setError] = useState(null);\n\n    const handleCreate = function(e) {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        const namespace = data.get('namespace');\n        onCreate([namespace, undefined]);\n    };\n\n    const handleFile = function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const file = (e.dataTransfer || e.target).files[0];\n        readZip(file)\n            .then(onCreate)\n            .catch(error => {\n                console.error(error);\n                setError(error.message);\n            });\n    };\n    const handleDrag = function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n    };\n\n    window.scrollTo(0, 0);\n\n    return <div className=\"first-screen\" onDragStart={handleDrag} onDragEnter={handleDrag} onDragOver={handleDrag} onDrop={handleFile}>\n        <NavBar>\n            <h2>Dimension datapack generator</h2>\n        </NavBar>\n        <form className=\"content\" onSubmit={handleCreate}>\n            <div className=\"form-control\">\n                <div className=\"mbm\">\n                    <h3>What's this?</h3>\n                    <p className=\"mbm\" style={{ fontSize: '0.95rem' }}>\n                        This online generator under development allows you to create world generation datapacks for Minecraft 1.16.2. You'll be able to create your own biomes or edit existing ones, custom trees, change the amplitude of the terrain, mix generated blocks and more in the following menus. To continue, choose your datapack identifier.\n                    </p>\n                    <hr />\n                </div>\n                <label htmlFor=\"namespace\">Default namespace</label><br />\n                <input type=\"text\" name=\"namespace\" id=\"namespace\" required pattern=\"[a-z0-9._-]+\" autoCapitalize=\"none\" spellCheck=\"false\" autoComplete=\"off\" aria-describedby=\"namespaceHelp\" />\n                <p className=\"help2\"><small id=\"namespaceHelp\" className=\"form-text text-muted\">This differentiates the datapack from the vanilla functions. Namespaces and identifiers may only contain letters, numbers and <code>._-</code> characters. This namespace is not final, you can edit the vanilla dimensions in the following menus.</small></p>\n                <div className=\"actions\">\n                    <Button type=\"submit\">Create</Button>\n                    <input type=\"file\" name=\"load-existing-zip\" id=\"load-existing-zip\" accept=\".zip\" onChange={handleFile} tabIndex=\"0\" /><label htmlFor=\"load-existing-zip\" className=\"btn--info\">Use existing datapack</label>\n                </div>\n                <div className=\"mtm\">\n                    {error !== null && <div className=\"alert--danger\">{error}</div>}\n                    <p className=\"alert--warning\">\n                        This generator is currently built for 1.16.2. As it is a beta, you might expect a few bugs.\n                    </p>\n                </div>\n            </div>\n        </form>\n    </div>\n}\n","import './styles/App.scss';\nimport React, { useState } from 'react';\nimport { DataContextProvider } from './context/DataContext';\nimport { Datapack } from './components/Datapack';\nimport { DatapackForm } from './components/DatapackForm';\n\nfunction App() {\n    const [data, setData] = useState(null);\n\n    return <>\n        {data !== null ?\n            <DataContextProvider namespace={data[0]} initial={data[1]}>\n                <Datapack />\n            </DataContextProvider>\n            :\n            <DatapackForm onCreate={setData} />\n        }\n    </>\n}\n\nexport default App;\n","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nwindow.addEventListener('load', () => {\n    document.body.classList.remove('preload');\n});\n\nReactDOM.render(\n    <App />\n,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}